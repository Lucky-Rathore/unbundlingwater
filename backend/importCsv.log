Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Users'
Executing (default): CREATE TABLE IF NOT EXISTS "Users" ("id"   SERIAL , "name" VARCHAR(255), "userId" VARCHAR(255) NOT NULL, "country" VARCHAR(255), "state" VARCHAR(255), "district" VARCHAR(255), "city" VARCHAR(255), "phoneNumber" VARCHAR(255), "emailId" VARCHAR(255), "userRole" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'UserTrainers'
Executing (default): CREATE TABLE IF NOT EXISTS "UserTrainers" ("id"   SERIAL , "name" VARCHAR(255), "issueDate" TIMESTAMP WITH TIME ZONE, "userId" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'UserTrainers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'UserTopics'
Executing (default): CREATE TABLE IF NOT EXISTS "UserTopics" ("id"   SERIAL , "name" VARCHAR(255), "issuedAt" TIMESTAMP WITH TIME ZONE, "userId" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'UserTopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Topics'
Executing (default): CREATE TABLE IF NOT EXISTS "Topics" ("id"   SERIAL , "name" VARCHAR(255), "description" TEXT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'TopicFiles'
Executing (default): CREATE TABLE IF NOT EXISTS "TopicFiles" ("id"   SERIAL , "fileName" TEXT, "contentUrl" TEXT, "createdAt" TIMESTAMP WITH TIME ZONE, "size" FLOAT, "topicId" INTEGER, "type" VARCHAR(255), "contentId" INTEGER, "langCode" VARCHAR(255), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'TopicFiles' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (b3019bb7-62e0-471a-a6f4-524bfed14c7a): START TRANSACTION;
Executing (b3019bb7-62e0-471a-a6f4-524bfed14c7a): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '840282c7-4246-44db-a1f6-d753c1913547' LIMIT 1;
Executing (b3019bb7-62e0-471a-a6f4-524bfed14c7a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2454d09471df433b8584fc9e695a14ce$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Yj','840282c7-4246-44db-a1f6-d753c1913547','India','Karnataka','Bengaluru Urban District','Bengaluru','9717822298','','TRAINER TRAINEE','2024-08-31 20:47:09.540 +00:00','2024-08-31 20:47:09.540 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2454d09471df433b8584fc9e695a14ce$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
CSV file successfully processed
Executing (94c75321-d7ce-49e7-9845-3cc915ab8e63): START TRANSACTION;
Executing (b3019bb7-62e0-471a-a6f4-524bfed14c7a): COMMIT;
Executing (aed645ad-1178-405f-a5e5-372e86f2c372): START TRANSACTION;
Executing (94c75321-d7ce-49e7-9845-3cc915ab8e63): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '912a7c4d-2482-4a7a-a506-3cd7c3d8b886' LIMIT 1;
topicName Introduction to Learning Objectives 2022-02-22T07:24:47.000+0000
Executing (ac1e05ca-dfa4-4c01-91ee-d2956d1578c0): START TRANSACTION;
Executing (bc82c4c5-1849-4348-a9bf-03c6d43d630e): START TRANSACTION;
Executing (4a2616ff-da57-4021-a457-675fd5796f0f): START TRANSACTION;
Executing (94c75321-d7ce-49e7-9845-3cc915ab8e63): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f7712ed0322441b5aa4ddb3d0852cea0$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Patel mukeshbhai','912a7c4d-2482-4a7a-a506-3cd7c3d8b886','India','Gujarat','Mehsana District','Visnagar','7016250363','','TRAINEE ','2024-08-31 20:47:09.570 +00:00','2024-08-31 20:47:09.570 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f7712ed0322441b5aa4ddb3d0852cea0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ac1e05ca-dfa4-4c01-91ee-d2956d1578c0): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'ad439a79-65f3-4629-9523-27ae55fae348' LIMIT 1;
Executing (bc82c4c5-1849-4348-a9bf-03c6d43d630e): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'c7407356-dbe6-4e58-aada-90773bb4201c' LIMIT 1;
Executing (4a2616ff-da57-4021-a457-675fd5796f0f): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'eafa5769-776e-421f-bdce-03326a065f7e' LIMIT 1;
Executing (aed645ad-1178-405f-a5e5-372e86f2c372): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'c74c08a8-921e-433d-a1fd-917e9b1c4c34' LIMIT 1;
Executing (ac1e05ca-dfa4-4c01-91ee-d2956d1578c0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5a836080c0504a0c9d8380ba1b010df8$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Yalinikulendhran','ad439a79-65f3-4629-9523-27ae55fae348','India','Tamil Nadu','Pudukkottai District','Venkatakulam','6379076154','','TRAINEE ','2024-08-31 20:47:09.578 +00:00','2024-08-31 20:47:09.578 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5a836080c0504a0c9d8380ba1b010df8$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bc82c4c5-1849-4348-a9bf-03c6d43d630e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_595087aa2b0f43f194148e95f2015e85$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Kanaiyalal Vankar','c7407356-dbe6-4e58-aada-90773bb4201c','India','Gujarat','Sabarkatha District','Himatnagar','9687316393','','TRAINEE ','2024-08-31 20:47:09.580 +00:00','2024-08-31 20:47:09.580 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_595087aa2b0f43f194148e95f2015e85$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ac1e05ca-dfa4-4c01-91ee-d2956d1578c0): COMMIT;
Executing (4a2616ff-da57-4021-a457-675fd5796f0f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_48b6ad05a26c44bba64633afe20fffee$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Ashish Mehta','eafa5769-776e-421f-bdce-03326a065f7e','India','Gujarat','Kutch District','Gagodar','9825339841','ashish@samerth.org','TRAINEE ','2024-08-31 20:47:09.583 +00:00','2024-08-31 20:47:09.583 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_48b6ad05a26c44bba64633afe20fffee$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (94c75321-d7ce-49e7-9845-3cc915ab8e63): COMMIT;
Executing (aed645ad-1178-405f-a5e5-372e86f2c372): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2fe9e611dd6e41adafdf093a42e30d62$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Shiva','c74c08a8-921e-433d-a1fd-917e9b1c4c34','India','Telangana','Nalgonda District','Cherlapalle','9398057573','','TRAINEE ','2024-08-31 20:47:09.586 +00:00','2024-08-31 20:47:09.586 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2fe9e611dd6e41adafdf093a42e30d62$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName 3 Folds Concepts 2020-09-26T06:34:17.000+0000
Executing (41fe52b2-ad3e-48b9-bef1-52b40a49098a): START TRANSACTION;
topicName PDA Rollout Demo 2021-05-04T05:46:16.000+0000
Executing (abdc590d-2e1e-4e05-a811-072ae0f1c49e): START TRANSACTION;
Executing (bc82c4c5-1849-4348-a9bf-03c6d43d630e): COMMIT;
Executing (41fe52b2-ad3e-48b9-bef1-52b40a49098a): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '9b7cd3e3-5fdd-423f-8fb1-07790ab820fa' LIMIT 1;
Executing (abdc590d-2e1e-4e05-a811-072ae0f1c49e): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '90df11b4-79fd-41c0-8d83-b3ba0d76bbde' LIMIT 1;
Executing (4a2616ff-da57-4021-a457-675fd5796f0f): COMMIT;
Executing (41fe52b2-ad3e-48b9-bef1-52b40a49098a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d3c72e28069e47ec9a2270de548f2648$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Ashutosh','9b7cd3e3-5fdd-423f-8fb1-07790ab820fa','India','Odisha','Bargarh District','Bargarh','8895239527','','TRAINEE ','2024-08-31 20:47:09.596 +00:00','2024-08-31 20:47:09.596 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d3c72e28069e47ec9a2270de548f2648$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (abdc590d-2e1e-4e05-a811-072ae0f1c49e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_86b8f8ae1d194edbaa9c7a982b8824a1$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Shaileshbhai','90df11b4-79fd-41c0-8d83-b3ba0d76bbde','India','Gujarat','Mehsana District','Visnagar','9909600297','','TRAINEE ','2024-08-31 20:47:09.598 +00:00','2024-08-31 20:47:09.598 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_86b8f8ae1d194edbaa9c7a982b8824a1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T07:00:04.000+0000
Executing (627e0ddb-1dbb-4038-886c-b9581bae06d3): START TRANSACTION;
Executing (aed645ad-1178-405f-a5e5-372e86f2c372): COMMIT;
Executing (41fe52b2-ad3e-48b9-bef1-52b40a49098a): COMMIT;
Executing (abdc590d-2e1e-4e05-a811-072ae0f1c49e): COMMIT;
Executing (627e0ddb-1dbb-4038-886c-b9581bae06d3): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '2fce8054-838b-4511-9de4-85c828516405' LIMIT 1;
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-02-16T06:39:12.000+0000
Executing (380c92e9-3287-43eb-b171-3ac06a1c18f4): START TRANSACTION;
topicName CBP Orientation 2020-08-28T10:15:27.000+0000
Executing (f5424e52-c963-4df4-a21c-29cb134e15bc): START TRANSACTION;
topicName Post-Harvest Management and Value Addition in Spice Crops. 2021-02-24T08:43:31.000+0000
Executing (00fd1d6e-45f9-456d-9775-2f7d338a2b2a): START TRANSACTION;
Executing (627e0ddb-1dbb-4038-886c-b9581bae06d3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1217ca7a8aa54afea3b1ccd0059bbb97$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Meena parmar','2fce8054-838b-4511-9de4-85c828516405','India','Gujarat','Kachchh District','Nani Khakhar','7567143738','','TRAINEE ','2024-08-31 20:47:09.610 +00:00','2024-08-31 20:47:09.610 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1217ca7a8aa54afea3b1ccd0059bbb97$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Demonstration of PDA - ICDS Supervisors Training 2021-06-09T10:05:28.000+0000
Executing (fd5a6f46-46bc-459c-a031-fdb2694899a3): START TRANSACTION;
Executing (f5424e52-c963-4df4-a21c-29cb134e15bc): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'a53273d5-0418-4e44-9160-d2747f67d825' LIMIT 1;
Executing (00fd1d6e-45f9-456d-9775-2f7d338a2b2a): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'de5fa352-ea4d-4bb8-8d72-9ad3dce253f5' LIMIT 1;
Executing (627e0ddb-1dbb-4038-886c-b9581bae06d3): COMMIT;
Executing (fd5a6f46-46bc-459c-a031-fdb2694899a3): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'db52891b-977c-429d-ad2c-9258b81a7ba4' LIMIT 1;
Executing (380c92e9-3287-43eb-b171-3ac06a1c18f4): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '98427f84-0e6b-4c1e-9bc7-580049d9e3ad' LIMIT 1;
Executing (f5424e52-c963-4df4-a21c-29cb134e15bc): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_88bb39e9ce8b4b1cafc437593047e371$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Raj bharatbhai pandya','a53273d5-0418-4e44-9160-d2747f67d825','India','Gujarat','Kachchh District','Vondh','8980223638','','TRAINEE ','2024-08-31 20:47:09.622 +00:00','2024-08-31 20:47:09.622 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_88bb39e9ce8b4b1cafc437593047e371$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (00fd1d6e-45f9-456d-9775-2f7d338a2b2a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_00862f5c729448e3a87cd328a77f3402$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Manu Panjikaran','de5fa352-ea4d-4bb8-8d72-9ad3dce253f5','India','Kerala','Palakkad District','Muthalamada 1','7042733089','manupious@gmail.com','TRAINEE ','2024-08-31 20:47:09.624 +00:00','2024-08-31 20:47:09.624 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_00862f5c729448e3a87cd328a77f3402$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Orientation on Abhy and PGWM - II 2021-08-14T12:03:00.000+0000
Executing (fc2b6498-e6ef-452e-aff6-563e4106e6da): START TRANSACTION;
Executing (fd5a6f46-46bc-459c-a031-fdb2694899a3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_05bc686be33d4dfaafccf1959d4d0191$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Kishan ','db52891b-977c-429d-ad2c-9258b81a7ba4','India','Maharashtra','Nashik District','Harsule','9767346346','kishanchandore@yuvamitra.org','TRAINER TRAINEE','2024-08-31 20:47:09.627 +00:00','2024-08-31 20:47:09.627 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_05bc686be33d4dfaafccf1959d4d0191$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f5424e52-c963-4df4-a21c-29cb134e15bc): COMMIT;
Executing (00fd1d6e-45f9-456d-9775-2f7d338a2b2a): COMMIT;
Executing (fc2b6498-e6ef-452e-aff6-563e4106e6da): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '5bfd7f81-ec88-422a-9f71-fbc75f3ace63' LIMIT 1;
Executing (380c92e9-3287-43eb-b171-3ac06a1c18f4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2538b52ab13b46d6b9496f86e37a92d7$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Zala Anilsinh','98427f84-0e6b-4c1e-9bc7-580049d9e3ad','India','Gujarat','Bhavnagar District','Gadhada','7990260912','','TRAINEE ','2024-08-31 20:47:09.634 +00:00','2024-08-31 20:47:09.634 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2538b52ab13b46d6b9496f86e37a92d7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Orientation on Abhy and PGWM 2021-08-14T07:30:12.000+0000
Executing (8b5837ce-258d-4f15-8ff8-f1cf11dd72c7): START TRANSACTION;
topicName PDA - Program App 2021-04-05T10:41:01.000+0000
Executing (e9430f6e-c73b-4bc5-b78b-4dbf6c7a6252): START TRANSACTION;
Executing (fc2b6498-e6ef-452e-aff6-563e4106e6da): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cdb978cb09df4df7acdf9b47ad195408$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Ravi somani','5bfd7f81-ec88-422a-9f71-fbc75f3ace63','India','Gujarat','Kutch District','Kidiyanagar','6351514416','','TRAINEE ','2024-08-31 20:47:09.639 +00:00','2024-08-31 20:47:09.639 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cdb978cb09df4df7acdf9b47ad195408$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (fd5a6f46-46bc-459c-a031-fdb2694899a3): COMMIT;
Executing (8b5837ce-258d-4f15-8ff8-f1cf11dd72c7): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '94047112-9581-4ea9-a7b2-5532bd496584' LIMIT 1;
Executing (e9430f6e-c73b-4bc5-b78b-4dbf6c7a6252): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'a7c83a7f-e4bd-4fa8-9c2a-914c38352ec0' LIMIT 1;
Executing (fc2b6498-e6ef-452e-aff6-563e4106e6da): COMMIT;
Executing (380c92e9-3287-43eb-b171-3ac06a1c18f4): COMMIT;
Executing (8b5837ce-258d-4f15-8ff8-f1cf11dd72c7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9d4ebe8c0acf42d6a1aa8d605c94711c$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Prasanth','94047112-9581-4ea9-a7b2-5532bd496584','India','Tamil Nadu','Pudukkottai District','Pudukkottai','8344478178','','TRAINEE ','2024-08-31 20:47:09.647 +00:00','2024-08-31 20:47:09.647 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9d4ebe8c0acf42d6a1aa8d605c94711c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e9430f6e-c73b-4bc5-b78b-4dbf6c7a6252): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b7def06638584f5392bfac29f357362d$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Tejashree Sadhana Balaso','a7c83a7f-e4bd-4fa8-9c2a-914c38352ec0','India','Maharashtra','Nandurbar District','Nandurbar','9767196944','','TRAINEE ','2024-08-31 20:47:09.648 +00:00','2024-08-31 20:47:09.648 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b7def06638584f5392bfac29f357362d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-02-16T06:47:53.000+0000
Executing (0d0f5a1c-e128-4333-a0d6-97d75e0e1c71): START TRANSACTION;
topicName Midterm Measurement of Desilting(Jalsamruddhi) 2021-02-20T11:50:14.000+0000
Executing (002adbfd-9907-441f-89fe-13e14f5bb34a): START TRANSACTION;
Executing (8b5837ce-258d-4f15-8ff8-f1cf11dd72c7): COMMIT;
Executing (e9430f6e-c73b-4bc5-b78b-4dbf6c7a6252): COMMIT;
Executing (0d0f5a1c-e128-4333-a0d6-97d75e0e1c71): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '3c872b16-ee10-4de9-a28b-992b5a11ce01' LIMIT 1;
topicName PDA Rollout Demo 2021-05-04T05:46:20.000+0000
Executing (aa513931-2b76-49d5-8ced-c4ee7a956675): START TRANSACTION;
topicName 3 Folds Concepts 2020-09-26T06:32:45.000+0000
Executing (7d31b1bc-2d80-4b34-8ad0-5e1981ce074d): START TRANSACTION;
topicName Introduction to Learning Objectives 2022-02-22T07:23:48.000+0000
Executing (d5efeae2-e2e5-473b-aa31-b7bcd2f1c0e0): START TRANSACTION;
Executing (0d0f5a1c-e128-4333-a0d6-97d75e0e1c71): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_477e8f9adbce4c2cb7bd44d3aa269301$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Goswami nisha narendrabharathi','3c872b16-ee10-4de9-a28b-992b5a11ce01','India','Gujarat','Mehsana District','Visnagar','7984480125','','TRAINEE ','2024-08-31 20:47:09.661 +00:00','2024-08-31 20:47:09.661 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_477e8f9adbce4c2cb7bd44d3aa269301$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (aa513931-2b76-49d5-8ced-c4ee7a956675): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'd3988f95-3458-49bf-bc97-a81ab0108569' LIMIT 1;
Executing (002adbfd-9907-441f-89fe-13e14f5bb34a): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '85bce1bf-2a8b-4862-8a13-80758d68c6e0' LIMIT 1;
Executing (7d31b1bc-2d80-4b34-8ad0-5e1981ce074d): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '321375b5-ae91-4d01-8378-5eb311e2ff02' LIMIT 1;
Executing (d5efeae2-e2e5-473b-aa31-b7bcd2f1c0e0): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '44a1ef88-ba82-4c2e-bf2d-67d6f7b9e350' LIMIT 1;
Executing (0d0f5a1c-e128-4333-a0d6-97d75e0e1c71): COMMIT;
Executing (aa513931-2b76-49d5-8ced-c4ee7a956675): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bfd8954a280c4b93853e19a4115a39f3$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Subrata Singh','d3988f95-3458-49bf-bc97-a81ab0108569','India','Gujarat','Anand District','Anand','9879545013','subrat@fes.org.in','TRAINEE ','2024-08-31 20:47:09.671 +00:00','2024-08-31 20:47:09.671 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bfd8954a280c4b93853e19a4115a39f3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7d31b1bc-2d80-4b34-8ad0-5e1981ce074d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7ecdde480db04d0099b0c293413cdb87$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Paramita Roy','321375b5-ae91-4d01-8378-5eb311e2ff02','India','West Bengal','Jalpaiguri District','Chalsa','8906067022','','TRAINEE ','2024-08-31 20:47:09.673 +00:00','2024-08-31 20:47:09.673 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7ecdde480db04d0099b0c293413cdb87$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d5efeae2-e2e5-473b-aa31-b7bcd2f1c0e0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_88eea7861aa64daea14b34384f77fc32$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Nirmal Chandra Mohanty ','44a1ef88-ba82-4c2e-bf2d-67d6f7b9e350','India','Odisha','Khordha District','Bhubaneswar','7326027082','','TRAINEE ','2024-08-31 20:47:09.675 +00:00','2024-08-31 20:47:09.675 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_88eea7861aa64daea14b34384f77fc32$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Post-Harvest Management and Value Addition in Spice Crops. 2021-02-24T10:53:43.000+0000
Executing (48757fbd-c026-432b-b6f4-c47144ae9c5e): START TRANSACTION;
Executing (002adbfd-9907-441f-89fe-13e14f5bb34a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f662a76b6a974c1899ff75985de3887f$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Sahdev','85bce1bf-2a8b-4862-8a13-80758d68c6e0','India','Gujarat','Kutch District','Bidada','9429815725','','TRAINER TRAINEE','2024-08-31 20:47:09.679 +00:00','2024-08-31 20:47:09.679 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f662a76b6a974c1899ff75985de3887f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7d31b1bc-2d80-4b34-8ad0-5e1981ce074d): COMMIT;
Executing (d5efeae2-e2e5-473b-aa31-b7bcd2f1c0e0): COMMIT;
Executing (48757fbd-c026-432b-b6f4-c47144ae9c5e): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '267a7622-9c4b-4f7b-be36-c44170b402e7' LIMIT 1;
Executing (aa513931-2b76-49d5-8ced-c4ee7a956675): COMMIT;
topicName PDA - Participant App 2020-08-19T10:07:50.000+0000
Executing (d1b74289-70ae-4d5d-978e-7bbf7f5f9d90): START TRANSACTION;
topicName CBP Orientation 2020-08-28T10:17:17.000+0000
Executing (907d4dbc-76be-4649-b9f3-bd05d56eeda0): START TRANSACTION;
Executing (48757fbd-c026-432b-b6f4-c47144ae9c5e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8d625b590bd048de9777c5e486377740$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Jiten Malpahariya','267a7622-9c4b-4f7b-be36-c44170b402e7','India','Jharkhand','Jamtara District','Phara Kusum','9905199117','','TRAINEE ','2024-08-31 20:47:09.689 +00:00','2024-08-31 20:47:09.689 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8d625b590bd048de9777c5e486377740$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (002adbfd-9907-441f-89fe-13e14f5bb34a): COMMIT;
Executing (d1b74289-70ae-4d5d-978e-7bbf7f5f9d90): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'c9e258a0-5300-4461-b505-2ac5ff98636e' LIMIT 1;
Executing (907d4dbc-76be-4649-b9f3-bd05d56eeda0): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '6ded97db-dc70-49eb-8b39-bd50173538d6' LIMIT 1;
Executing (48757fbd-c026-432b-b6f4-c47144ae9c5e): COMMIT;
topicName PDA - Participant App 2020-04-07T09:20:52.000+0000
Executing (ec2136ce-f032-4035-8490-7dc049cfa1ed): START TRANSACTION;
Executing (d1b74289-70ae-4d5d-978e-7bbf7f5f9d90): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2101b1c232674fbcb74fa8ecc99f77d0$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Savan','c9e258a0-5300-4461-b505-2ac5ff98636e','India','Gujarat','Kutch District','Faradi','9586092569','','TRAINEE ','2024-08-31 20:47:09.698 +00:00','2024-08-31 20:47:09.698 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2101b1c232674fbcb74fa8ecc99f77d0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (907d4dbc-76be-4649-b9f3-bd05d56eeda0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_562bbe6a6fee4f44822ab6fd6e01cc74$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Farida supervisor','6ded97db-dc70-49eb-8b39-bd50173538d6','India','Telangana','Nalgonda District','Kalva Palle','9963439478','','TRAINEE ','2024-08-31 20:47:09.701 +00:00','2024-08-31 20:47:09.701 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_562bbe6a6fee4f44822ab6fd6e01cc74$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Hands-on 2021-03-16T08:05:43.000+0000
Executing (b6caa4e4-c21d-451f-b294-76a98da47e98): START TRANSACTION;
Executing (ec2136ce-f032-4035-8490-7dc049cfa1ed): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '8866902d-32f0-4d36-a6d3-eeef2072405c' LIMIT 1;
topicName PDA Demo and Deployment Training for Trainers | ACT 2020-12-11T12:41:39.000+0000
Executing (4e943da8-be5a-4e5b-bfb6-b82fdc4472b3): START TRANSACTION;
Executing (d1b74289-70ae-4d5d-978e-7bbf7f5f9d90): COMMIT;
Executing (907d4dbc-76be-4649-b9f3-bd05d56eeda0): COMMIT;
Executing (b6caa4e4-c21d-451f-b294-76a98da47e98): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '941579b3-5b8d-43eb-88b1-80e87fa6a840' LIMIT 1;
Executing (ec2136ce-f032-4035-8490-7dc049cfa1ed): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a7246cdc4f2644ce9a7f7b102cc28f3e$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Alpesh Patel ','8866902d-32f0-4d36-a6d3-eeef2072405c','India','Gujarat','Mehsana District','Visnagar','9909588414','','TRAINER TRAINEE','2024-08-31 20:47:09.711 +00:00','2024-08-31 20:47:09.711 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a7246cdc4f2644ce9a7f7b102cc28f3e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4e943da8-be5a-4e5b-bfb6-b82fdc4472b3): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '6b1255b3-c3cf-48bd-aa73-b0dcffaf6951' LIMIT 1;
topicName TOT of Bhujal Janakar 2021-02-05T07:24:09.000+0000
Executing (c98d43b1-379f-4f52-b5a1-e6c53a1b54de): START TRANSACTION;
topicName Demonstration of PDA - ICDS Supervisors Training 2021-06-09T10:05:34.000+0000
Executing (c9ae7dee-565c-4337-8323-84ac810af340): START TRANSACTION;
Executing (b6caa4e4-c21d-451f-b294-76a98da47e98): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_db48be7ed2d748de83c15d2bb7577882$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Pritam ghosh','941579b3-5b8d-43eb-88b1-80e87fa6a840','India','West Bengal','Darjeeling District','Kalimpong','6295447404','pritambiems@gmail.com','TRAINEE ','2024-08-31 20:47:09.718 +00:00','2024-08-31 20:47:09.718 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_db48be7ed2d748de83c15d2bb7577882$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ec2136ce-f032-4035-8490-7dc049cfa1ed): COMMIT;
Executing (c98d43b1-379f-4f52-b5a1-e6c53a1b54de): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '3b26d9ed-f52c-4a3d-960e-963c1225b9cc' LIMIT 1;
Executing (c9ae7dee-565c-4337-8323-84ac810af340): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '98d93e00-4864-48aa-9f6c-06068ffc4074' LIMIT 1;
Executing (4e943da8-be5a-4e5b-bfb6-b82fdc4472b3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_70e45113759b40738ae97c4f38af32e2$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Rani Reddy','6b1255b3-c3cf-48bd-aa73-b0dcffaf6951','India','Andhra Pradesh','Chittoor District','Madanapalle','7338849150','ranimpl@gmail.com','TRAINEE ','2024-08-31 20:47:09.725 +00:00','2024-08-31 20:47:09.725 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_70e45113759b40738ae97c4f38af32e2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c98d43b1-379f-4f52-b5a1-e6c53a1b54de): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ccda93956257461d9e1f6f5422cbea03$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Hiralal miting','3b26d9ed-f52c-4a3d-960e-963c1225b9cc','India','Gujarat','Kachchh District','Rayan Moti','9428080271','','TRAINEE ','2024-08-31 20:47:09.727 +00:00','2024-08-31 20:47:09.727 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ccda93956257461d9e1f6f5422cbea03$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c9ae7dee-565c-4337-8323-84ac810af340): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_834d23aad4574fc9946a85e245b07385$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Desai Haresh kumar Ramesh Bhai ','98d93e00-4864-48aa-9f6c-06068ffc4074','India','Gujarat','Mehsana District','Kharod','7575817775','','TRAINEE ','2024-08-31 20:47:09.729 +00:00','2024-08-31 20:47:09.729 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_834d23aad4574fc9946a85e245b07385$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Rollout Demo 2021-05-04T05:51:15.000+0000
Executing (a188b704-d39b-4e87-867f-b703e68441c5): START TRANSACTION;
Executing (b6caa4e4-c21d-451f-b294-76a98da47e98): COMMIT;
Executing (c98d43b1-379f-4f52-b5a1-e6c53a1b54de): COMMIT;
Executing (c9ae7dee-565c-4337-8323-84ac810af340): COMMIT;
Executing (a188b704-d39b-4e87-867f-b703e68441c5): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '384f86d2-2fa2-4b51-8527-506c4e191ee8' LIMIT 1;
Executing (4e943da8-be5a-4e5b-bfb6-b82fdc4472b3): COMMIT;
topicName Orientation on Abhy and PGWM 2021-08-14T07:27:22.000+0000
Executing (d7b717bc-af07-41a1-a40f-d6555a0e29fc): START TRANSACTION;
topicName PDA Rollout Demo 2021-05-04T05:46:06.000+0000
Executing (55239763-719d-433c-a4dc-d6dfa8c9b4b7): START TRANSACTION;
Executing (a188b704-d39b-4e87-867f-b703e68441c5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2301e56dac7b478eb125e33a57732738$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'T Radha KMpally ','384f86d2-2fa2-4b51-8527-506c4e191ee8','India','Telangana','Nalgonda District','Kolmunthal Pahad','9491661990','','TRAINEE ','2024-08-31 20:47:09.739 +00:00','2024-08-31 20:47:09.739 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2301e56dac7b478eb125e33a57732738$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Zoom for Hubs & Spokes 2020-12-10T06:26:04.000+0000
Executing (6e9dac26-4c97-434d-9390-7af37f48b6e7): START TRANSACTION;
Executing (d7b717bc-af07-41a1-a40f-d6555a0e29fc): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'c64dca7e-f9df-453c-a6f1-7a57c142b6ab' LIMIT 1;
Executing (55239763-719d-433c-a4dc-d6dfa8c9b4b7): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '7b00fe4a-0677-4735-8674-870d3b9bfe95' LIMIT 1;
Executing (6e9dac26-4c97-434d-9390-7af37f48b6e7): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'c919ec69-7f36-4a98-a6e7-a7733764d137' LIMIT 1;
topicName PDA - Participant App 2020-04-07T09:20:45.000+0000
Executing (295d961f-d299-4950-98d4-ccd6ecc0b467): START TRANSACTION;
Executing (d7b717bc-af07-41a1-a40f-d6555a0e29fc): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3b07577cc14e4233803a52019295d3d9$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Shaik Saida begum','c64dca7e-f9df-453c-a6f1-7a57c142b6ab','India','Telangana','Nalgonda District','Miryalaguda','9490690588','','TRAINEE ','2024-08-31 20:47:09.749 +00:00','2024-08-31 20:47:09.749 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3b07577cc14e4233803a52019295d3d9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (55239763-719d-433c-a4dc-d6dfa8c9b4b7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_eac6bae3819940de8c7ac3744003e64e$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Chitra','7b00fe4a-0677-4735-8674-870d3b9bfe95','India','Tamil Nadu','Pudukkottai District','Venkatakulam','9751654593','','TRAINEE ','2024-08-31 20:47:09.751 +00:00','2024-08-31 20:47:09.751 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_eac6bae3819940de8c7ac3744003e64e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6e9dac26-4c97-434d-9390-7af37f48b6e7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_61e33b33c85940f29133f45bf23a85d0$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Vaghela Ramesh B','c919ec69-7f36-4a98-a6e7-a7733764d137','India','Gujarat','Kutch District','Govindpar','9265368414','','TRAINEE ','2024-08-31 20:47:09.754 +00:00','2024-08-31 20:47:09.754 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_61e33b33c85940f29133f45bf23a85d0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (295d961f-d299-4950-98d4-ccd6ecc0b467): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '9c782be5-e423-49f9-8b28-613ccc87fc3a' LIMIT 1;
Executing (a188b704-d39b-4e87-867f-b703e68441c5): COMMIT;
Executing (d7b717bc-af07-41a1-a40f-d6555a0e29fc): COMMIT;
Executing (55239763-719d-433c-a4dc-d6dfa8c9b4b7): COMMIT;
Executing (6e9dac26-4c97-434d-9390-7af37f48b6e7): COMMIT;
Executing (295d961f-d299-4950-98d4-ccd6ecc0b467): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_393fc278747643969849681ce77d686a$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Jitendra Kumar ','9c782be5-e423-49f9-8b28-613ccc87fc3a','India','Bihar','Muzaffarpur District','Sujawalpur','9430836384','j.kumar@akdn.org','TRAINEE ','2024-08-31 20:47:09.761 +00:00','2024-08-31 20:47:09.761 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_393fc278747643969849681ce77d686a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Demonstration of PDA - ICDS Supervisors Training 2021-06-09T10:22:23.000+0000
Executing (059c06f2-6f4b-4a98-b93f-01eadd94b41a): START TRANSACTION;
topicName 3 Folds Concepts 2020-09-26T06:29:40.000+0000
Executing (91ffb444-bfde-44e0-b70a-86b3842c9d10): START TRANSACTION;
topicName Concepts and development of Base map,Landuse map and Geo-morphology maps 2021-03-06T10:30:48.000+0000
Executing (267be83d-3044-4497-aa20-d26d58f2ad59): START TRANSACTION;
topicName Demonstration of PDA - ICDS Supervisors Training 2021-06-09T10:05:27.000+0000
Executing (4f09aea4-1d08-4b89-bdd9-51b2f7862324): START TRANSACTION;
Executing (059c06f2-6f4b-4a98-b93f-01eadd94b41a): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '9ca87890-0726-4909-9ebd-92fab6ce4a20' LIMIT 1;
Executing (91ffb444-bfde-44e0-b70a-86b3842c9d10): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '5bdb6895-9c24-4df3-afc3-bb1924171fea' LIMIT 1;
Executing (267be83d-3044-4497-aa20-d26d58f2ad59): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '242a3167-2079-4477-a496-a5068c491541' LIMIT 1;
Executing (295d961f-d299-4950-98d4-ccd6ecc0b467): COMMIT;
Executing (059c06f2-6f4b-4a98-b93f-01eadd94b41a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8551f9063222410e857882077150d3af$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Izra Nawas','9ca87890-0726-4909-9ebd-92fab6ce4a20','India','Karnataka','Bangalore Urban District','Bengaluru','8111946177','','TRAINEE ','2024-08-31 20:47:09.774 +00:00','2024-08-31 20:47:09.774 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8551f9063222410e857882077150d3af$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (91ffb444-bfde-44e0-b70a-86b3842c9d10): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f70f0127d8bb4eb39e9f1ef80ef0b6b9$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Harish kumar','5bdb6895-9c24-4df3-afc3-bb1924171fea','India','Karnataka','Chikballapur District','Chikkaballapur','9964142814','dpmuckbp@gmail.com','TRAINEE ','2024-08-31 20:47:09.776 +00:00','2024-08-31 20:47:09.776 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f70f0127d8bb4eb39e9f1ef80ef0b6b9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (267be83d-3044-4497-aa20-d26d58f2ad59): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5bdfb05d3dca4b368f01d70062df6cf8$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Adavath parvathi','242a3167-2079-4477-a496-a5068c491541','India','Telangana','Nalgonda District','Nalgonda','7702962034','','TRAINEE ','2024-08-31 20:47:09.779 +00:00','2024-08-31 20:47:09.779 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5bdfb05d3dca4b368f01d70062df6cf8$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4f09aea4-1d08-4b89-bdd9-51b2f7862324): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '024316cc-7fe7-4f44-9ea8-c925726ed1bf' LIMIT 1;
Executing (059c06f2-6f4b-4a98-b93f-01eadd94b41a): COMMIT;
Executing (91ffb444-bfde-44e0-b70a-86b3842c9d10): COMMIT;
Executing (267be83d-3044-4497-aa20-d26d58f2ad59): COMMIT;
topicName Introduction to Learning Objectives 2022-02-22T07:25:53.000+0000
Executing (4a288953-c094-47b2-aafa-be3f256eba70): START TRANSACTION;
topicName Virtual Interactions - Best Practices - Smitha Murthy 2020-10-14T06:59:31.000+0000
Executing (f2d5eeba-acdb-4639-8c33-aee3e420d112): START TRANSACTION;
topicName ಅಟಲ್ ಭೂಜಲ್ ಯೋಜನೆಯ ಅವಲೋಕನ 2021-05-25T11:27:09.000+0000
Executing (99e555ff-7da7-4744-b966-e75eb09cd551): START TRANSACTION;
topicName Demonstration of PDA - ICDS Supervisors Training 2021-06-09T10:22:24.000+0000
Executing (a00b6a8b-53be-4c37-98e7-e13a3b4d480b): START TRANSACTION;
Executing (4a288953-c094-47b2-aafa-be3f256eba70): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '5a7898e7-5779-4b5b-b345-0e67cd8ea9c2' LIMIT 1;
Executing (4f09aea4-1d08-4b89-bdd9-51b2f7862324): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e15545670cf54126943d642294551dac$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Ranchhodji Ajamelji Thakor','024316cc-7fe7-4f44-9ea8-c925726ed1bf','India','Gujarat','Mehsana District','Vadnagar','8980409913','','TRAINEE ','2024-08-31 20:47:09.794 +00:00','2024-08-31 20:47:09.794 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e15545670cf54126943d642294551dac$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f2d5eeba-acdb-4639-8c33-aee3e420d112): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '5db4d93e-0440-4889-aede-7c3540cc5831' LIMIT 1;
Executing (99e555ff-7da7-4744-b966-e75eb09cd551): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'b47e89bd-a4e4-4809-972e-db2e7eae8843' LIMIT 1;
Executing (a00b6a8b-53be-4c37-98e7-e13a3b4d480b): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'b59d4a46-f33b-4b08-ac4d-374948839c8c' LIMIT 1;
Executing (4a288953-c094-47b2-aafa-be3f256eba70): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4fdb919cd3f248e784d7dfe2be733ea2$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Nrusingh Charan Sutar','5a7898e7-5779-4b5b-b345-0e67cd8ea9c2','India','Jharkhand','Ranchi District','Ranchi','9608309593','nrusinghsutar@pradan.net','TRAINEE ','2024-08-31 20:47:09.802 +00:00','2024-08-31 20:47:09.802 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4fdb919cd3f248e784d7dfe2be733ea2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f2d5eeba-acdb-4639-8c33-aee3e420d112): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d509bbcaf3dc4d36b808e88a9b561401$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Gordhan Kantariya','5db4d93e-0440-4889-aede-7c3540cc5831','India','Gujarat','Ahmedabad District','Ahmedabad','9601281137','','TRAINEE ','2024-08-31 20:47:09.805 +00:00','2024-08-31 20:47:09.805 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d509bbcaf3dc4d36b808e88a9b561401$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (99e555ff-7da7-4744-b966-e75eb09cd551): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f6178ddb798b484597a190a208a6bd88$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Kathi Vijayalaxmi','b47e89bd-a4e4-4809-972e-db2e7eae8843','India','Telangana','Nalgonda District','Rajavaram','9121450716','','TRAINEE ','2024-08-31 20:47:09.807 +00:00','2024-08-31 20:47:09.807 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f6178ddb798b484597a190a208a6bd88$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a00b6a8b-53be-4c37-98e7-e13a3b4d480b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7878e69054534bd789b30f07decc6b8f$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Raval Alpeshkumar laxmanbhai','b59d4a46-f33b-4b08-ac4d-374948839c8c','India','Gujarat','Gandhinagar District','Charada','9574516482','','TRAINEE ','2024-08-31 20:47:09.809 +00:00','2024-08-31 20:47:09.809 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7878e69054534bd789b30f07decc6b8f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4f09aea4-1d08-4b89-bdd9-51b2f7862324): COMMIT;
Executing (f2d5eeba-acdb-4639-8c33-aee3e420d112): COMMIT;
Executing (99e555ff-7da7-4744-b966-e75eb09cd551): COMMIT;
Executing (a00b6a8b-53be-4c37-98e7-e13a3b4d480b): COMMIT;
Executing (4a288953-c094-47b2-aafa-be3f256eba70): COMMIT;
topicName Post-Harvest Management and Value Addition in Spice Crops. 2021-02-24T10:19:39.000+0000
Executing (7d5bfb91-232c-4e10-9cc0-c0fca1ec76c9): START TRANSACTION;
topicName Demonstration of PDA - ICDS Supervisors Training 2021-06-09T10:05:32.000+0000
Executing (e864a14a-1099-4145-b8ae-afeddbe01aeb): START TRANSACTION;
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T06:57:13.000+0000
Executing (57b989b6-6411-4871-bc09-64d77a5c523f): START TRANSACTION;
topicName PDA Rollout Demo 2021-05-04T05:46:37.000+0000
Executing (820422f5-c8ce-4163-a852-9db46c5eb360): START TRANSACTION;
Executing (7d5bfb91-232c-4e10-9cc0-c0fca1ec76c9): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'cbec1c8c-7914-43b5-b7f6-a3e131c9fdff' LIMIT 1;
Executing (e864a14a-1099-4145-b8ae-afeddbe01aeb): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '4752ee9a-d3d1-496b-b101-7d5dbd3194d6' LIMIT 1;
Executing (57b989b6-6411-4871-bc09-64d77a5c523f): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'a1261bb9-8ef1-4b6b-94b6-1ae65102057f' LIMIT 1;
Executing (820422f5-c8ce-4163-a852-9db46c5eb360): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'fdb8b1d1-3822-42e2-8e57-7a95cb7297ee' LIMIT 1;
topicName Introduction to Learning Experience Framework 2022-01-18T07:44:46.000+0000
Executing (8a4e8f61-e2d5-4e76-8cbe-e61143a92407): START TRANSACTION;
Executing (7d5bfb91-232c-4e10-9cc0-c0fca1ec76c9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8da10475bde2497895a27bb043bc089b$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Elavazhagan','cbec1c8c-7914-43b5-b7f6-a3e131c9fdff','India','Tamil Nadu','Pudukkottai District','K Therkutheru','7868901558','','TRAINEE ','2024-08-31 20:47:09.830 +00:00','2024-08-31 20:47:09.830 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8da10475bde2497895a27bb043bc089b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e864a14a-1099-4145-b8ae-afeddbe01aeb): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c7e210f9d9a642f38e399f9bf6d0a755$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'MANJULA','4752ee9a-d3d1-496b-b101-7d5dbd3194d6','India','Telangana','Nalgonda District','Tenepalle','9949681858','','TRAINEE ','2024-08-31 20:47:09.832 +00:00','2024-08-31 20:47:09.832 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c7e210f9d9a642f38e399f9bf6d0a755$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (57b989b6-6411-4871-bc09-64d77a5c523f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d99a67236e644bafb9dcb071f7e215f4$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Bhati savan','a1261bb9-8ef1-4b6b-94b6-1ae65102057f','India','Gujarat','Kachchh District','Bidada','9825792569','','TRAINEE ','2024-08-31 20:47:09.834 +00:00','2024-08-31 20:47:09.834 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d99a67236e644bafb9dcb071f7e215f4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (820422f5-c8ce-4163-a852-9db46c5eb360): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d58b09b03a544683875a9b8071be8b61$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Rathod Nisha keshrsinh','fdb8b1d1-3822-42e2-8e57-7a95cb7297ee','India','Gujarat','Mehsana District','Visnagar','9726043883','','TRAINEE ','2024-08-31 20:47:09.837 +00:00','2024-08-31 20:47:09.837 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d58b09b03a544683875a9b8071be8b61$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8a4e8f61-e2d5-4e76-8cbe-e61143a92407): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '53ada3ff-a458-444f-8186-7be0fd8399e8' LIMIT 1;
Executing (7d5bfb91-232c-4e10-9cc0-c0fca1ec76c9): COMMIT;
Executing (e864a14a-1099-4145-b8ae-afeddbe01aeb): COMMIT;
Executing (57b989b6-6411-4871-bc09-64d77a5c523f): COMMIT;
Executing (820422f5-c8ce-4163-a852-9db46c5eb360): COMMIT;
Executing (8a4e8f61-e2d5-4e76-8cbe-e61143a92407): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9f0fefb10a0c46a6873dfe319e0b35a7$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Mritunjay Kumar Mahato','53ada3ff-a458-444f-8186-7be0fd8399e8','India','Jharkhand','Gumla District','Chainpur','9354334670','mritunjay.mahato@wotr.org.in','TRAINEE ','2024-08-31 20:47:09.844 +00:00','2024-08-31 20:47:09.844 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9f0fefb10a0c46a6873dfe319e0b35a7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName 3 Folds Concepts 2020-09-26T06:34:19.000+0000
Executing (f3015f8b-76ca-489f-a2ac-3ab9dba78260): START TRANSACTION;
topicName Demonstration of PDA - ICDS Supervisors Training 2021-06-09T10:05:31.000+0000
Executing (cbb30540-9ba6-47c6-a5fe-d82fcd80de80): START TRANSACTION;
topicName Orientation on Abhy and PGWM - II 2021-08-14T11:59:23.000+0000
Executing (a62c991b-642a-4a8d-84e8-b3ca583dcb73): START TRANSACTION;
topicName Post-Harvest Management and Value Addition in Spice Crops. 2021-02-24T11:04:06.000+0000
Executing (97563dd0-fc74-4cc3-8ab9-573735ea1ea0): START TRANSACTION;
Executing (f3015f8b-76ca-489f-a2ac-3ab9dba78260): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '2390c7a6-6347-41ef-be70-2eca8bd7e737' LIMIT 1;
Executing (cbb30540-9ba6-47c6-a5fe-d82fcd80de80): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '01f36c57-cf2f-42da-af8f-49576b08677c' LIMIT 1;
Executing (a62c991b-642a-4a8d-84e8-b3ca583dcb73): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '4c86587a-893e-4d75-9881-965d8fdab183' LIMIT 1;
Executing (8a4e8f61-e2d5-4e76-8cbe-e61143a92407): COMMIT;
Executing (f3015f8b-76ca-489f-a2ac-3ab9dba78260): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b3c99a78ddab4ea5aa6bc09fd091dcf1$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Rathod Ajaysinh Fatesinh ','2390c7a6-6347-41ef-be70-2eca8bd7e737','India','Gujarat','Gandhinagar District','Pundhara','8153975214','Rathodajaysinh108@gmail.Com','TRAINEE ','2024-08-31 20:47:09.853 +00:00','2024-08-31 20:47:09.853 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b3c99a78ddab4ea5aa6bc09fd091dcf1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cbb30540-9ba6-47c6-a5fe-d82fcd80de80): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_01151eb505f043b39a854a3f0ec2067e$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Murji Khimji Maheshwari','01f36c57-cf2f-42da-af8f-49576b08677c','India','Gujarat','Kachchh District','Nani Khakhar','8780354145','','TRAINEE ','2024-08-31 20:47:09.854 +00:00','2024-08-31 20:47:09.854 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_01151eb505f043b39a854a3f0ec2067e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a62c991b-642a-4a8d-84e8-b3ca583dcb73): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e559a7b5a9b945c58775f7fa57e18084$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Jayantilal Gorsiya','4c86587a-893e-4d75-9881-965d8fdab183','India','Gujarat','Kutch District','Bhuj','9879574931','jayantilalgorsiya@gmail.com','TRAINEE ','2024-08-31 20:47:09.856 +00:00','2024-08-31 20:47:09.856 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e559a7b5a9b945c58775f7fa57e18084$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (97563dd0-fc74-4cc3-8ab9-573735ea1ea0): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '93815ba1-bfba-437e-aee3-bf517173900e' LIMIT 1;
Executing (f3015f8b-76ca-489f-a2ac-3ab9dba78260): COMMIT;
Executing (cbb30540-9ba6-47c6-a5fe-d82fcd80de80): COMMIT;
topicName PDA Hands-on 2021-03-16T08:00:20.000+0000
Executing (437ff7db-2f7d-4f34-878f-ba9610e2ad70): START TRANSACTION;
topicName PDA Rollout Demo 2021-05-04T05:46:39.000+0000
Executing (0acc9781-033e-4abb-9da8-eac608f90f44): START TRANSACTION;
topicName Orientation on Abhy and PGWM - II 2021-08-14T12:05:56.000+0000
Executing (d74b8aa4-3fe4-4e7e-8fef-d7d57ac424bf): START TRANSACTION;
Executing (a62c991b-642a-4a8d-84e8-b3ca583dcb73): COMMIT;
Executing (97563dd0-fc74-4cc3-8ab9-573735ea1ea0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b08c43658b5444d0a776741ee759103d$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Sudam Bodake','93815ba1-bfba-437e-aee3-bf517173900e','India','Maharashtra','Nashik District','Mohu','9637971795','','TRAINEE ','2024-08-31 20:47:09.863 +00:00','2024-08-31 20:47:09.863 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b08c43658b5444d0a776741ee759103d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0acc9781-033e-4abb-9da8-eac608f90f44): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '4a91748d-c3d6-4cc2-8487-c54728c64902' LIMIT 1;
Executing (d74b8aa4-3fe4-4e7e-8fef-d7d57ac424bf): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '9afe6d06-fc0c-42c3-983e-e64a33935587' LIMIT 1;
topicName CBP Orientation 2020-08-17T10:20:48.000+0000
Executing (62f40e57-7980-48c9-a95f-a3e6c0583be6): START TRANSACTION;
Executing (437ff7db-2f7d-4f34-878f-ba9610e2ad70): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'c6d045d9-99bc-4758-a443-a224f20d2784' LIMIT 1;
Executing (0acc9781-033e-4abb-9da8-eac608f90f44): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_297a10974b144680bb41c511853e852f$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Narasimha Rao S','4a91748d-c3d6-4cc2-8487-c54728c64902','India','Andhra Pradesh','YSR District','Rajampet','9440605016','simham@wassan.org','TRAINEE ','2024-08-31 20:47:09.868 +00:00','2024-08-31 20:47:09.868 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_297a10974b144680bb41c511853e852f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d74b8aa4-3fe4-4e7e-8fef-d7d57ac424bf): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_85db5b5b3ddd492aa9b830141d536b67$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Rajput swarupsinh','9afe6d06-fc0c-42c3-983e-e64a33935587','India','Gujarat','Sabarkatha District','Himatnagar','9016991012','','TRAINEE ','2024-08-31 20:47:09.870 +00:00','2024-08-31 20:47:09.870 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_85db5b5b3ddd492aa9b830141d536b67$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (62f40e57-7980-48c9-a95f-a3e6c0583be6): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '3142c5e5-e6b4-467c-8bc7-37c4d62b0601' LIMIT 1;
Executing (97563dd0-fc74-4cc3-8ab9-573735ea1ea0): COMMIT;
Executing (0acc9781-033e-4abb-9da8-eac608f90f44): COMMIT;
Executing (d74b8aa4-3fe4-4e7e-8fef-d7d57ac424bf): COMMIT;
Executing (62f40e57-7980-48c9-a95f-a3e6c0583be6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9036410910b443788ba926ced0144001$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'K Nagamani Damarcherla project','3142c5e5-e6b4-467c-8bc7-37c4d62b0601','India','Telangana','Nalgonda District','Miryalaguda','7989045211','','TRAINEE ','2024-08-31 20:47:09.875 +00:00','2024-08-31 20:47:09.875 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9036410910b443788ba926ced0144001$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (437ff7db-2f7d-4f34-878f-ba9610e2ad70): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f3a5fd07eff643e69ebb3026a4122e9a$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Bhavnaben satishbhai oad','c6d045d9-99bc-4758-a443-a224f20d2784','India','Gujarat','Gandhinagar District','Mansa','9773204627','','TRAINEE ','2024-08-31 20:47:09.876 +00:00','2024-08-31 20:47:09.876 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f3a5fd07eff643e69ebb3026a4122e9a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PMT Functions & CBP Training Calendar 2020-10-13T10:35:44.000+0000
Executing (51e5dfa9-c95b-40e8-94a8-b2076e7518a6): START TRANSACTION;
topicName PDA Rollout Demo 2021-05-04T05:46:00.000+0000
Executing (ac230dae-bb09-4781-a098-e5dc66088a44): START TRANSACTION;
topicName Water Literacy Campaign 2021-01-20T06:31:23.000+0000
Executing (7e3b85b7-1379-4a98-a881-f0eccd8b7cc8): START TRANSACTION;
Executing (51e5dfa9-c95b-40e8-94a8-b2076e7518a6): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '8ed9ff54-4090-4a47-9bfb-443b3dafc139' LIMIT 1;
Executing (ac230dae-bb09-4781-a098-e5dc66088a44): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '6dbddad7-a9ef-472b-8e22-5652e4533b35' LIMIT 1;
Executing (7e3b85b7-1379-4a98-a881-f0eccd8b7cc8): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '6afb2b3b-3e1c-4e13-9bd9-b1e2e77810c9' LIMIT 1;
Executing (62f40e57-7980-48c9-a95f-a3e6c0583be6): COMMIT;
Executing (437ff7db-2f7d-4f34-878f-ba9610e2ad70): COMMIT;
Executing (51e5dfa9-c95b-40e8-94a8-b2076e7518a6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f722a0e4452e41ae87844db136227dcc$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Sankarsan Behera','8ed9ff54-4090-4a47-9bfb-443b3dafc139','India','Odisha','Khordha District','Alarpur','7008816875','','TRAINEE ','2024-08-31 20:47:09.888 +00:00','2024-08-31 20:47:09.888 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f722a0e4452e41ae87844db136227dcc$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ac230dae-bb09-4781-a098-e5dc66088a44): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7ed806f9aaad4ef494b6ea4e854925c3$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Kanubhai patel','6dbddad7-a9ef-472b-8e22-5652e4533b35','India','Gujarat','Mehsana District','Visnagar','8849615365','','TRAINEE ','2024-08-31 20:47:09.889 +00:00','2024-08-31 20:47:09.889 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7ed806f9aaad4ef494b6ea4e854925c3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7e3b85b7-1379-4a98-a881-f0eccd8b7cc8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fa3d5d58b8184122a0283eed5c399606$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Rajendra patel ','6afb2b3b-3e1c-4e13-9bd9-b1e2e77810c9','India','Gujarat','Mehsana District','Visnagar','9601281156','','TRAINEE ','2024-08-31 20:47:09.891 +00:00','2024-08-31 20:47:09.891 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fa3d5d58b8184122a0283eed5c399606$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Demonstration of PDA - ICDS Supervisors Training 2021-06-09T10:22:27.000+0000
Executing (f2a7ee15-8562-4395-befd-57c8165d01d0): START TRANSACTION;
Executing (51e5dfa9-c95b-40e8-94a8-b2076e7518a6): COMMIT;
Executing (ac230dae-bb09-4781-a098-e5dc66088a44): COMMIT;
topicName PDA Rollout Demo 2021-05-04T05:47:25.000+0000
Executing (78d9056a-0ea0-4a31-bb19-02f98a1b1b36): START TRANSACTION;
topicName Introduction to Learning Experience Framework 2022-01-18T07:45:27.000+0000
Executing (8dc26caf-3700-410e-9a3d-70ba8f198590): START TRANSACTION;
topicName Post-Harvest Management and Value Addition in Spice Crops. 2021-02-24T08:35:47.000+0000
Executing (fabebbda-3233-4ac9-82d7-8f0bcc3b989a): START TRANSACTION;
Executing (f2a7ee15-8562-4395-befd-57c8165d01d0): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '9bb07b4d-1f9a-46ff-abff-29ec483b7763' LIMIT 1;
Executing (7e3b85b7-1379-4a98-a881-f0eccd8b7cc8): COMMIT;
Executing (8dc26caf-3700-410e-9a3d-70ba8f198590): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'ff97766a-e506-49df-9522-8efa994ff324' LIMIT 1;
Executing (fabebbda-3233-4ac9-82d7-8f0bcc3b989a): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'b912e843-b03e-4f84-8133-82016c8dd2a8' LIMIT 1;
Executing (f2a7ee15-8562-4395-befd-57c8165d01d0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_55719721ec264ecc9d96a289fa9bda85$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Sheetal Joshi','9bb07b4d-1f9a-46ff-abff-29ec483b7763','India','West Bengal','North Twenty Four Parganas District','Bidhan Nagar','9903219434','sheetal@catalysts.org','TRAINER TRAINEE','2024-08-31 20:47:09.901 +00:00','2024-08-31 20:47:09.901 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_55719721ec264ecc9d96a289fa9bda85$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (78d9056a-0ea0-4a31-bb19-02f98a1b1b36): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '2e400362-1635-47e4-99c8-72b00dd38b19' LIMIT 1;
Executing (8dc26caf-3700-410e-9a3d-70ba8f198590): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5b5ed0b9c96346998c7aafdc8f035588$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Uzra Sultana','ff97766a-e506-49df-9522-8efa994ff324','India','Karnataka','Bangalore Urban District','Bengaluru','9986071430','','TRAINER TRAINEE','2024-08-31 20:47:09.903 +00:00','2024-08-31 20:47:09.903 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5b5ed0b9c96346998c7aafdc8f035588$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (fabebbda-3233-4ac9-82d7-8f0bcc3b989a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_92354cc7f6a94b959acaab0e364f67ff$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Sreekanth','b912e843-b03e-4f84-8133-82016c8dd2a8','India','Telangana','Ranga Reddy District','Hyderabad','9246281232','','TRAINER TRAINEE','2024-08-31 20:47:09.905 +00:00','2024-08-31 20:47:09.905 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_92354cc7f6a94b959acaab0e364f67ff$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Post-Harvest Management and Value Addition in Spice Crops. 2021-02-24T09:04:56.000+0000
Executing (6b2b0038-eca2-4896-acb3-c092556f08ae): START TRANSACTION;
Executing (8dc26caf-3700-410e-9a3d-70ba8f198590): COMMIT;
Executing (78d9056a-0ea0-4a31-bb19-02f98a1b1b36): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_70c16fac5449415faecdb4d9b0358ec4$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Abdul Latheef ','2e400362-1635-47e4-99c8-72b00dd38b19','India','Karnataka','Dakshina Kannada District','Perne','9379424674','','TRAINER TRAINEE','2024-08-31 20:47:09.908 +00:00','2024-08-31 20:47:09.908 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_70c16fac5449415faecdb4d9b0358ec4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f2a7ee15-8562-4395-befd-57c8165d01d0): COMMIT;
topicName PDA - Trainer App 2019-12-05T07:26:08+0000
Executing (82f21cb5-4f06-4556-b215-03fb77099092): START TRANSACTION;
Executing (78d9056a-0ea0-4a31-bb19-02f98a1b1b36): COMMIT;
Executing (6b2b0038-eca2-4896-acb3-c092556f08ae): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '88acf595-35dd-4ee8-87aa-924166be5859' LIMIT 1;
Executing (fabebbda-3233-4ac9-82d7-8f0bcc3b989a): COMMIT;
Executing (82f21cb5-4f06-4556-b215-03fb77099092): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'c7aaf34b-f478-4809-94b2-38e316f25acc' LIMIT 1;
topicName Data analysis techniques for VCF 2021-04-30T12:55:11.000+0000
Executing (8b24ff9b-fa44-48ef-b2fb-8ea922f51cc3): START TRANSACTION;
Executing (6b2b0038-eca2-4896-acb3-c092556f08ae): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a823a5a0dd77451aa031dac48b728cd1$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Pritam Lonare','88acf595-35dd-4ee8-87aa-924166be5859','India','Maharashtra','Nashik District','Harsule','9284505860','','TRAINER TRAINEE','2024-08-31 20:47:09.920 +00:00','2024-08-31 20:47:09.920 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a823a5a0dd77451aa031dac48b728cd1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Test topic in new UI 2022-03-10T09:18:25.000+0000
Executing (7a630ad1-6322-4378-9f4f-ba9b80500690): START TRANSACTION;
Executing (82f21cb5-4f06-4556-b215-03fb77099092): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_70d721dafb0a453192e956a54bb3d295$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Subhabrata Das','c7aaf34b-f478-4809-94b2-38e316f25acc','India','Jharkhand','Pakur District','Hiranpur','9635460238','','TRAINEE ','2024-08-31 20:47:09.924 +00:00','2024-08-31 20:47:09.924 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_70d721dafb0a453192e956a54bb3d295$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8b24ff9b-fa44-48ef-b2fb-8ea922f51cc3): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '025233ee-51b5-443f-af66-4aca4590614d' LIMIT 1;
Executing (7a630ad1-6322-4378-9f4f-ba9b80500690): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '7d16789c-684c-442c-b2a1-487b76c24875' LIMIT 1;
topicName Content Development | T1.01 | DG 2020-11-26T11:45:08.000+0000
Executing (dcc40d95-2680-4f59-8f16-d8259ef70da2): START TRANSACTION;
Executing (82f21cb5-4f06-4556-b215-03fb77099092): COMMIT;
Executing (8b24ff9b-fa44-48ef-b2fb-8ea922f51cc3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_52e1e16aba80477b92a94525a51aba16$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Subhash Ghosh','025233ee-51b5-443f-af66-4aca4590614d','India','West Bengal','Jalpaiguri District','Chalsa','7903458389','','TRAINEE ','2024-08-31 20:47:09.932 +00:00','2024-08-31 20:47:09.932 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_52e1e16aba80477b92a94525a51aba16$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7a630ad1-6322-4378-9f4f-ba9b80500690): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3d2e4dc5e02f4da78f51b57f2ee23b23$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Deepa','7d16789c-684c-442c-b2a1-487b76c24875','India','Tamil Nadu','Pudukkottai District','Vettanviduthi','7094733126','','TRAINEE ','2024-08-31 20:47:09.934 +00:00','2024-08-31 20:47:09.934 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3d2e4dc5e02f4da78f51b57f2ee23b23$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (dcc40d95-2680-4f59-8f16-d8259ef70da2): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'f07d7b79-7244-4b9d-92d5-ba1ddcbf4d6f' LIMIT 1;
Executing (6b2b0038-eca2-4896-acb3-c092556f08ae): COMMIT;
topicName PDA Hands-on 2021-03-16T08:02:49.000+0000
Executing (591868ec-d176-4ad8-9cbf-eccb5ff87595): START TRANSACTION;
Executing (8b24ff9b-fa44-48ef-b2fb-8ea922f51cc3): COMMIT;
Executing (7a630ad1-6322-4378-9f4f-ba9b80500690): COMMIT;
Executing (dcc40d95-2680-4f59-8f16-d8259ef70da2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_87d6165b31bf45e2b9412c3aa8c14bd9$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'SAJID RAUMA','f07d7b79-7244-4b9d-92d5-ba1ddcbf4d6f','India','Gujarat','Kutch District','Manaba','7984636785','','TRAINEE ','2024-08-31 20:47:09.943 +00:00','2024-08-31 20:47:09.943 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_87d6165b31bf45e2b9412c3aa8c14bd9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (591868ec-d176-4ad8-9cbf-eccb5ff87595): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '35218eb5-0116-4517-a902-d7b02fb15641' LIMIT 1;
topicName Virtual Interactions - Needs and Benefits 2020-11-04T10:06:14.000+0000
Executing (85a3e061-c712-42f1-97bd-e53d54eb8c48): START TRANSACTION;
topicName 3 Folds Concepts 2020-09-26T06:34:38.000+0000
Executing (250e596a-f360-4d96-b543-7b0c6eed7404): START TRANSACTION;
topicName Midterm Measurement of Desilting(Jalsamruddhi) 2021-02-20T11:42:46.000+0000
Executing (4510f966-f63d-4665-8820-5d5ec0800518): START TRANSACTION;
Executing (591868ec-d176-4ad8-9cbf-eccb5ff87595): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4f8e67983c5d4998b6a1c53e2344694a$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Divya Goswami','35218eb5-0116-4517-a902-d7b02fb15641','India','Gujarat','Mehsana District','Vijapur','9664727722','','TRAINEE ','2024-08-31 20:47:09.950 +00:00','2024-08-31 20:47:09.950 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4f8e67983c5d4998b6a1c53e2344694a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (85a3e061-c712-42f1-97bd-e53d54eb8c48): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '6e95d2e7-e874-4076-9412-17aeeb8ea5c3' LIMIT 1;
Executing (250e596a-f360-4d96-b543-7b0c6eed7404): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '25b9db1a-07dc-4c73-9ead-a9ab493821fb' LIMIT 1;
Executing (4510f966-f63d-4665-8820-5d5ec0800518): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '891f8b91-199c-4a29-bb5c-59c067279273' LIMIT 1;
Executing (dcc40d95-2680-4f59-8f16-d8259ef70da2): COMMIT;
Executing (591868ec-d176-4ad8-9cbf-eccb5ff87595): COMMIT;
Executing (85a3e061-c712-42f1-97bd-e53d54eb8c48): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1c8acd0935b84a5f9774e834cfd19c34$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Anand shah','6e95d2e7-e874-4076-9412-17aeeb8ea5c3','India','Madhya Pradesh','Ratlam District','Badyala Mata','9773168893','','TRAINEE ','2024-08-31 20:47:09.964 +00:00','2024-08-31 20:47:09.964 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1c8acd0935b84a5f9774e834cfd19c34$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (250e596a-f360-4d96-b543-7b0c6eed7404): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1d29f78e36a244968bb5941efcb59ff2$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'K K Trivedi','25b9db1a-07dc-4c73-9ead-a9ab493821fb','India','Madhya Pradesh','Bhopal District','Bhopal','8959591213','','TRAINEE','2024-08-31 20:47:09.967 +00:00','2024-08-31 20:47:09.967 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1d29f78e36a244968bb5941efcb59ff2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4510f966-f63d-4665-8820-5d5ec0800518): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_19fb41852c484c1fa15a0266628d960b$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Jigneshkumar pravinbhai patel','891f8b91-199c-4a29-bb5c-59c067279273','India','Gujarat','Mehsana District','Visnagar','9924059198','','TRAINEE','2024-08-31 20:47:09.969 +00:00','2024-08-31 20:47:09.969 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_19fb41852c484c1fa15a0266628d960b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Rollout Demo 2021-05-04T05:45:58.000+0000
Executing (b6e28321-857a-4919-b906-a4da86acdf78): START TRANSACTION;
Executing (85a3e061-c712-42f1-97bd-e53d54eb8c48): COMMIT;
Executing (250e596a-f360-4d96-b543-7b0c6eed7404): COMMIT;
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-02-16T06:55:03.000+0000
Executing (2de3f827-8455-4651-951f-0902e9b1b4f1): START TRANSACTION;
Executing (b6e28321-857a-4919-b906-a4da86acdf78): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '8a499587-62a8-4f73-a20d-23cd31ee58f2' LIMIT 1;
topicName Introduction to Learning Objectives 2022-02-22T07:22:12.000+0000
Executing (b696b209-3c95-4110-ae56-5de4f0394b3d): START TRANSACTION;
topicName Introduction to Learning Objectives 2022-02-22T07:22:13.000+0000
Executing (cafdc1af-b275-4ab8-ba74-1de40afcdf31): START TRANSACTION;
Executing (2de3f827-8455-4651-951f-0902e9b1b4f1): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'b57afa83-caa4-4505-aaba-517e4a20ad5c' LIMIT 1;
Executing (4510f966-f63d-4665-8820-5d5ec0800518): COMMIT;
Executing (b6e28321-857a-4919-b906-a4da86acdf78): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_681a41249b944951923910dcf0e9c51e$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Harsh Dave','8a499587-62a8-4f73-a20d-23cd31ee58f2','India','Gujarat','Anand District','Anand','9033430918','','TRAINER,TRAINEE','2024-08-31 20:47:09.983 +00:00','2024-08-31 20:47:09.983 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_681a41249b944951923910dcf0e9c51e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b696b209-3c95-4110-ae56-5de4f0394b3d): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '14b5f225-43c0-4a97-ac66-52433582208a' LIMIT 1;
Executing (cafdc1af-b275-4ab8-ba74-1de40afcdf31): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '83ea2f52-d539-4842-ad29-390a6c1a238e' LIMIT 1;
Executing (2de3f827-8455-4651-951f-0902e9b1b4f1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f73e7690efa34bbe9bac331bcbe75efb$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Tulasi Bhai bhanaji lakhani','b57afa83-caa4-4505-aaba-517e4a20ad5c','India','Gujarat','Kachchh District','Pantiya','9099990342','','TRAINEE','2024-08-31 20:47:09.986 +00:00','2024-08-31 20:47:09.986 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f73e7690efa34bbe9bac331bcbe75efb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b6e28321-857a-4919-b906-a4da86acdf78): COMMIT;
Executing (b696b209-3c95-4110-ae56-5de4f0394b3d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_57e12f9ae34b489095840ab63f2687e4$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Pooja Bhavesh sathwara','14b5f225-43c0-4a97-ac66-52433582208a','India','Gujarat','Kachchh District','Budharmora','9624373010','','TRAINEE','2024-08-31 20:47:09.988 +00:00','2024-08-31 20:47:09.988 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_57e12f9ae34b489095840ab63f2687e4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cafdc1af-b275-4ab8-ba74-1de40afcdf31): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_636bf1a2b778494bb0152e6837dd8386$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Rashida suparviasor','83ea2f52-d539-4842-ad29-390a6c1a238e','India','Telangana','Suryapet District','Pillala Marri Part','7095557253','','TRAINEE','2024-08-31 20:47:09.990 +00:00','2024-08-31 20:47:09.990 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_636bf1a2b778494bb0152e6837dd8386$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Rollout Demo 2021-05-04T05:45:56.000+0000
Executing (5c7f5027-6467-4ebb-92ff-09c40e290fd2): START TRANSACTION;
topicName PDA - Trainer App 2019-12-26T11:17:10+0000
Executing (6f81402a-95fe-4839-9f37-2a4e987d42d1): START TRANSACTION;
Executing (b696b209-3c95-4110-ae56-5de4f0394b3d): COMMIT;
Executing (cafdc1af-b275-4ab8-ba74-1de40afcdf31): COMMIT;
Executing (2de3f827-8455-4651-951f-0902e9b1b4f1): COMMIT;
Executing (6f81402a-95fe-4839-9f37-2a4e987d42d1): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '07c9dc3e-7f5b-44f2-9e77-db2626100a1f' LIMIT 1;
topicName Orientation on Abhy and PGWM 2021-08-14T07:14:48.000+0000
Executing (6a12d140-f632-4e69-9843-4d3316b16a41): START TRANSACTION;
topicName Demonstration of PDA - ICDS Supervisors Training 2021-06-09T10:22:25.000+0000
Executing (f39a0b73-bd50-4e62-a123-02ae807cce89): START TRANSACTION;
Executing (5c7f5027-6467-4ebb-92ff-09c40e290fd2): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '97464daa-7d25-48bf-8d76-21978dc26162' LIMIT 1;
Executing (6f81402a-95fe-4839-9f37-2a4e987d42d1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bb564b46476741dcb869691b2ba78408$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Dharmendrbhai hothi','07c9dc3e-7f5b-44f2-9e77-db2626100a1f','India','Gujarat','Kutch District','Nilpar','9979313440','','TRAINEE','2024-08-31 20:47:10.000 +00:00','2024-08-31 20:47:10.000 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bb564b46476741dcb869691b2ba78408$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6a12d140-f632-4e69-9843-4d3316b16a41): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '8c7435c7-ba84-42fa-bbd1-9938eabfdaeb' LIMIT 1;
Executing (f39a0b73-bd50-4e62-a123-02ae807cce89): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '103893bb-851c-4edb-9ed9-045654677f5d' LIMIT 1;
topicName Orientation on Abhy and PGWM - II 2021-08-14T12:06:58.000+0000
Executing (1d5f4652-1059-4c7a-bf03-69d9d9097fd1): START TRANSACTION;
Executing (6f81402a-95fe-4839-9f37-2a4e987d42d1): COMMIT;
Executing (6a12d140-f632-4e69-9843-4d3316b16a41): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bc492975ab1f4271812b59ed6a00010d$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Shubhoshree Banerjee','8c7435c7-ba84-42fa-bbd1-9938eabfdaeb','India','Gujarat','Anand District','Anand','7409633707','shubha.b264@gmail.com','TRAINEE','2024-08-31 20:47:10.005 +00:00','2024-08-31 20:47:10.005 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bc492975ab1f4271812b59ed6a00010d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f39a0b73-bd50-4e62-a123-02ae807cce89): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_dc24dd7fb1e6444abfb7dbb3036b6a13$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Rajesh','103893bb-851c-4edb-9ed9-045654677f5d','India','Tamil Nadu','Tiruchirappalli District','Tiruchirappalli','9500057216','rajesh@vrutti.org','TRAINER,TRAINEE','2024-08-31 20:47:10.007 +00:00','2024-08-31 20:47:10.007 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_dc24dd7fb1e6444abfb7dbb3036b6a13$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5c7f5027-6467-4ebb-92ff-09c40e290fd2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e702e186089043c196e3841254e6a73a$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Depa Venkatamma','97464daa-7d25-48bf-8d76-21978dc26162','India','Telangana','Rangareddy District','Hyderabad','9010099359','','TRAINEE','2024-08-31 20:47:10.008 +00:00','2024-08-31 20:47:10.008 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e702e186089043c196e3841254e6a73a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-02-16T06:42:19.000+0000
Executing (d53c3960-db5b-45a1-9ec9-da7458d87a0d): START TRANSACTION;
Executing (6a12d140-f632-4e69-9843-4d3316b16a41): COMMIT;
Executing (f39a0b73-bd50-4e62-a123-02ae807cce89): COMMIT;
Executing (1d5f4652-1059-4c7a-bf03-69d9d9097fd1): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '2b80d0a9-7767-4f05-9037-719583d95b5c' LIMIT 1;
Executing (d53c3960-db5b-45a1-9ec9-da7458d87a0d): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'd8e99826-8d1a-4abf-8ecf-2e9afb8dc01a' LIMIT 1;
topicName Image composition and layouts LL3 2022-03-29T07:35:16.000+0000
Executing (572c13bc-4c49-4e7a-a567-e038cacd2f39): START TRANSACTION;
topicName CBP Orientation 2020-08-25T06:11:18.000+0000
Executing (c4d72135-301d-4ac9-b88d-7d19815d10bf): START TRANSACTION;
Executing (5c7f5027-6467-4ebb-92ff-09c40e290fd2): COMMIT;
Executing (d53c3960-db5b-45a1-9ec9-da7458d87a0d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f83a035416454f069b82c1cfaf8a7e80$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Bulbuli','d8e99826-8d1a-4abf-8ecf-2e9afb8dc01a','India','Odisha','Khordha District','Bhubaneswar','8917229758','','TRAINEE ','2024-08-31 20:47:10.016 +00:00','2024-08-31 20:47:10.016 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f83a035416454f069b82c1cfaf8a7e80$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (572c13bc-4c49-4e7a-a567-e038cacd2f39): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '46c3bc6a-0790-4fd7-b467-1fb0a8a3c1a8' LIMIT 1;
Executing (c4d72135-301d-4ac9-b88d-7d19815d10bf): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '90ed086b-cf3f-4107-b55d-b893385c105f' LIMIT 1;
Executing (1d5f4652-1059-4c7a-bf03-69d9d9097fd1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_03a0d0cd3ed44c5c9bb3a7a62cda9be7$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Hemant Bothra','2b80d0a9-7767-4f05-9037-719583d95b5c','India','West Bengal','Kolkata District','Kolkata','9831121011','','TRAINEE ','2024-08-31 20:47:10.020 +00:00','2024-08-31 20:47:10.020 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_03a0d0cd3ed44c5c9bb3a7a62cda9be7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d53c3960-db5b-45a1-9ec9-da7458d87a0d): COMMIT;
Executing (572c13bc-4c49-4e7a-a567-e038cacd2f39): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_68e351289c27414faa66f32c9b5f66a6$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Om prakash singh','46c3bc6a-0790-4fd7-b467-1fb0a8a3c1a8','India','Jharkhand','West Singhbhum District','Kanaslapos','7004022171','omsinghagri@gmail.com','TRAINEE ','2024-08-31 20:47:10.023 +00:00','2024-08-31 20:47:10.023 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_68e351289c27414faa66f32c9b5f66a6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c4d72135-301d-4ac9-b88d-7d19815d10bf): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_68b093ccc31944b7905f94c57f30f273$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Hemant','90ed086b-cf3f-4107-b55d-b893385c105f','India','West Bengal','North 24 Parganas District','Kolkata','8335081010','','TRAINEE ','2024-08-31 20:47:10.025 +00:00','2024-08-31 20:47:10.025 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_68b093ccc31944b7905f94c57f30f273$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Demonstration of PDA - ICDS Supervisors Training 2021-06-09T10:05:29.000+0000
Executing (05c23c32-505d-47c3-a89c-9a48d19e906b): START TRANSACTION;
topicName PDA - Participant App 2020-03-18T06:48:36+0000
Executing (65d4b82b-7c86-4113-96c8-c2377cd0cedf): START TRANSACTION;
Executing (572c13bc-4c49-4e7a-a567-e038cacd2f39): COMMIT;
Executing (1d5f4652-1059-4c7a-bf03-69d9d9097fd1): COMMIT;
Executing (65d4b82b-7c86-4113-96c8-c2377cd0cedf): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'eae4b6b2-f9e0-4738-9d94-c9345173c4cd' LIMIT 1;
topicName PDA Hands-on 2021-03-16T08:04:26.000+0000
Executing (35c7af2f-d64a-4b4e-8a46-3a7218cfce59): START TRANSACTION;
Executing (05c23c32-505d-47c3-a89c-9a48d19e906b): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '15834b56-cfac-4d93-ba91-1dcf7785ad19' LIMIT 1;
Executing (c4d72135-301d-4ac9-b88d-7d19815d10bf): COMMIT;
Executing (65d4b82b-7c86-4113-96c8-c2377cd0cedf): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2daf8beeb0b8402dafc9ed81315db2db$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Poonam Kulshrestha','eae4b6b2-f9e0-4738-9d94-c9345173c4cd','India','Rajasthan','Jaipur District','Jaipur','9636378190','poonam25kulshrestha@gmail.com','TRAINEE ','2024-08-31 20:47:10.033 +00:00','2024-08-31 20:47:10.033 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2daf8beeb0b8402dafc9ed81315db2db$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (35c7af2f-d64a-4b4e-8a46-3a7218cfce59): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'efd178d2-ffe6-4fdf-90ac-0df881271fb4' LIMIT 1;
Executing (05c23c32-505d-47c3-a89c-9a48d19e906b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_02a13dfe89bd49fabf0fb82a35221600$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Aveek','15834b56-cfac-4d93-ba91-1dcf7785ad19','India','Karnataka','Bengaluru Urban District','Bengaluru','6361086839','','TRAINEE ','2024-08-31 20:47:10.037 +00:00','2024-08-31 20:47:10.037 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_02a13dfe89bd49fabf0fb82a35221600$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Demo 2021-06-15T05:15:54.000+0000
Executing (bb0ae9d3-71e6-4741-929c-bba48dca0d89): START TRANSACTION;
Executing (65d4b82b-7c86-4113-96c8-c2377cd0cedf): COMMIT;
Executing (35c7af2f-d64a-4b4e-8a46-3a7218cfce59): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_dffa1154c2354a7e8d68139a016deb02$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'JIVANBHAI B AHIR','efd178d2-ffe6-4fdf-90ac-0df881271fb4','India','Gujarat','Kutch District','Sukhpar','9913506765','','TRAINEE ','2024-08-31 20:47:10.041 +00:00','2024-08-31 20:47:10.041 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_dffa1154c2354a7e8d68139a016deb02$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (05c23c32-505d-47c3-a89c-9a48d19e906b): COMMIT;
topicName How to Scan QR code test 2021-02-16T01:30:32.000+0000
Executing (9d95e244-7ce3-4185-a0f0-79255e7dbaad): START TRANSACTION;
topicName Virtual Interactions - Needs and Benefits 2020-11-04T10:07:10.000+0000
Executing (89807332-980d-4cf4-845e-62a80d09bedc): START TRANSACTION;
Executing (35c7af2f-d64a-4b4e-8a46-3a7218cfce59): COMMIT;
topicName CBP Orientation 2020-08-25T06:11:13.000+0000
Executing (e6554784-8081-4998-83b5-dfaa99087288): START TRANSACTION;
Executing (9d95e244-7ce3-4185-a0f0-79255e7dbaad): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '0fcdf556-7144-4bdf-a6b6-005b50b00f14' LIMIT 1;
Executing (bb0ae9d3-71e6-4741-929c-bba48dca0d89): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'f571026c-dea6-4292-88a3-d71ffa3296d7' LIMIT 1;
Executing (89807332-980d-4cf4-845e-62a80d09bedc): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '9c70412d-ebdd-432a-a17a-6c493577ff7d' LIMIT 1;
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-02-16T06:43:50.000+0000
Executing (6122eb7f-69e0-43af-af94-5faebf85b098): START TRANSACTION;
Executing (e6554784-8081-4998-83b5-dfaa99087288): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '8ec3b98a-9b06-40e1-9029-f3541fe9a640' LIMIT 1;
Executing (9d95e244-7ce3-4185-a0f0-79255e7dbaad): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_de70939fa6da471fad5864ac0c71fb85$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Simran Sumbre','0fcdf556-7144-4bdf-a6b6-005b50b00f14','India','Maharashtra','Pune District','Pune','9619020330','','TRAINEE ','2024-08-31 20:47:10.050 +00:00','2024-08-31 20:47:10.050 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_de70939fa6da471fad5864ac0c71fb85$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (89807332-980d-4cf4-845e-62a80d09bedc): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b50d174701104c079f866c0a93e09373$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Chaudhari twinkle prabhudas ','9c70412d-ebdd-432a-a17a-6c493577ff7d','India','Gujarat','Mehsana District','Visnagar','7984391858','','TRAINEE ','2024-08-31 20:47:10.051 +00:00','2024-08-31 20:47:10.051 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b50d174701104c079f866c0a93e09373$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6122eb7f-69e0-43af-af94-5faebf85b098): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '86f32410-0d64-4345-9030-6d3533166fce' LIMIT 1;
Executing (e6554784-8081-4998-83b5-dfaa99087288): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_250dfbb474964303865a5c50f1198c30$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Prem vaghela','8ec3b98a-9b06-40e1-9029-f3541fe9a640','India','Gujarat','Kutch District','Kanmer','9537409154','','TRAINEE ','2024-08-31 20:47:10.054 +00:00','2024-08-31 20:47:10.054 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_250dfbb474964303865a5c50f1198c30$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bb0ae9d3-71e6-4741-929c-bba48dca0d89): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f6596293b13842029e088b41538cd775$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,' Sunitha Gunda ','f571026c-dea6-4292-88a3-d71ffa3296d7','India','Telangana','Suryapet District','Yerkaram','9603699379','','TRAINEE ','2024-08-31 20:47:10.055 +00:00','2024-08-31 20:47:10.055 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f6596293b13842029e088b41538cd775$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (89807332-980d-4cf4-845e-62a80d09bedc): COMMIT;
Executing (6122eb7f-69e0-43af-af94-5faebf85b098): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d8bc2775e3174f26ae12d137db5bedb0$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Nilamchaudhari','86f32410-0d64-4345-9030-6d3533166fce','India','Gujarat','Gandhinagar District','Mansa','7874375947','','TRAINEE ','2024-08-31 20:47:10.057 +00:00','2024-08-31 20:47:10.057 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d8bc2775e3174f26ae12d137db5bedb0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e6554784-8081-4998-83b5-dfaa99087288): COMMIT;
Executing (9d95e244-7ce3-4185-a0f0-79255e7dbaad): COMMIT;
topicName Post-Harvest Management and Value Addition in Spice Crops. 2021-02-24T10:53:59.000+0000
Executing (15ec7fea-fcd5-4a4f-aa22-44a41f9d38e8): START TRANSACTION;
Executing (6122eb7f-69e0-43af-af94-5faebf85b098): COMMIT;
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-02-16T06:40:15.000+0000
Executing (6490bfc5-3597-4f71-9d11-6fd07a8047be): START TRANSACTION;
Executing (bb0ae9d3-71e6-4741-929c-bba48dca0d89): COMMIT;
Executing (15ec7fea-fcd5-4a4f-aa22-44a41f9d38e8): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'e51170d0-7e0f-4b6d-b7de-e0aef621b2a5' LIMIT 1;
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T07:23:49.000+0000
Executing (fa5b634d-5380-4f52-a43d-07f88ca6d797): START TRANSACTION;
Executing (6490bfc5-3597-4f71-9d11-6fd07a8047be): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '805f8115-7fc6-481c-ae59-9a635ed92038' LIMIT 1;
topicName Image composition and layouts LL3 2022-03-29T07:34:59.000+0000
Executing (cf3c88b2-dc5d-4656-98a3-c37544d9ee12): START TRANSACTION;
Executing (15ec7fea-fcd5-4a4f-aa22-44a41f9d38e8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5568002db05c44d6a5ffc9cfc9d3195c$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Raj kumar Das','e51170d0-7e0f-4b6d-b7de-e0aef621b2a5','India','West Bengal','Jalpaiguri District','Chalsa','9064853385','','TRAINEE ','2024-08-31 20:47:10.066 +00:00','2024-08-31 20:47:10.066 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5568002db05c44d6a5ffc9cfc9d3195c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (fa5b634d-5380-4f52-a43d-07f88ca6d797): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '7d56f878-01cb-4e2d-8001-8d1308260ed2' LIMIT 1;
Executing (6490bfc5-3597-4f71-9d11-6fd07a8047be): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5af480c11e994ca99ac19b5896855ca1$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Shaurya Gupta','805f8115-7fc6-481c-ae59-9a635ed92038','India','Rajasthan','Udaipur District','Udaipur','8951272647','shaurya.gupta@sevamandir.org','TRAINEE ','2024-08-31 20:47:10.068 +00:00','2024-08-31 20:47:10.068 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5af480c11e994ca99ac19b5896855ca1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Demonstration of PDA - ICDS Supervisors Training 2021-06-09T10:14:35.000+0000
Executing (ea82b57e-6ed1-466c-82f7-99e7078c93ad): START TRANSACTION;
Executing (15ec7fea-fcd5-4a4f-aa22-44a41f9d38e8): COMMIT;
Executing (fa5b634d-5380-4f52-a43d-07f88ca6d797): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2ad1017dd6684497829b3c3426049460$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'RAVAL RUPESHKUMAR dilipbhai','7d56f878-01cb-4e2d-8001-8d1308260ed2','India','Gujarat','Sabarkatha District','Himatnagar','9023886325','','TRAINEE ','2024-08-31 20:47:10.071 +00:00','2024-08-31 20:47:10.071 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2ad1017dd6684497829b3c3426049460$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cf3c88b2-dc5d-4656-98a3-c37544d9ee12): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '2854f4ff-cf55-4f19-b9a6-f61947bbd907' LIMIT 1;
topicName PDA - Participant App 2020-08-19T09:39:58.000+0000
Executing (10bb2aa7-ae68-4778-9eaf-67955d8a562f): START TRANSACTION;
Executing (ea82b57e-6ed1-466c-82f7-99e7078c93ad): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '399e4133-e3e8-463c-b885-6fb0ca8f2257' LIMIT 1;
Executing (6490bfc5-3597-4f71-9d11-6fd07a8047be): COMMIT;
Executing (10bb2aa7-ae68-4778-9eaf-67955d8a562f): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'bd52bd24-d067-42c5-951d-7fbddef90410' LIMIT 1;
Executing (ea82b57e-6ed1-466c-82f7-99e7078c93ad): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_94b78040571d4afbb70b56b8bf3200a0$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Kirti gor','399e4133-e3e8-463c-b885-6fb0ca8f2257','India','Gujarat','Kachchh District','Maska','9825385585','','TRAINEE ','2024-08-31 20:47:10.076 +00:00','2024-08-31 20:47:10.076 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_94b78040571d4afbb70b56b8bf3200a0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cf3c88b2-dc5d-4656-98a3-c37544d9ee12): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_857e782e15da468c820a18390e793da3$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Tanisha chandra','2854f4ff-cf55-4f19-b9a6-f61947bbd907','India','Delhi','South District','New Delhi','8210483450','','TRAINEE ','2024-08-31 20:47:10.078 +00:00','2024-08-31 20:47:10.078 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_857e782e15da468c820a18390e793da3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (fa5b634d-5380-4f52-a43d-07f88ca6d797): COMMIT;
Executing (10bb2aa7-ae68-4778-9eaf-67955d8a562f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_99d271133ad0486091ffa08d7b27e989$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Patel mayur rohitabhai','bd52bd24-d067-42c5-951d-7fbddef90410','India','Gujarat','Mehsana District','Vadnagar','9664790907','','TRAINEE ','2024-08-31 20:47:10.080 +00:00','2024-08-31 20:47:10.080 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_99d271133ad0486091ffa08d7b27e989$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ea82b57e-6ed1-466c-82f7-99e7078c93ad): COMMIT;
topicName Introduction to Learning Objectives 2022-02-22T07:22:43.000+0000
Executing (163bea5b-6646-447a-871a-e130559f4610): START TRANSACTION;
topicName Orientation on Abhy and PGWM 2021-08-14T06:58:06.000+0000
Executing (93d80e79-bf1f-4497-a716-e0c7a635b89f): START TRANSACTION;
topicName PDA Rollout Demo 2021-05-04T05:46:12.000+0000
Executing (81d1f459-4321-45a3-92fe-065e4a7cdd24): START TRANSACTION;
Executing (cf3c88b2-dc5d-4656-98a3-c37544d9ee12): COMMIT;
Executing (93d80e79-bf1f-4497-a716-e0c7a635b89f): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '94409f12-5d4a-4efa-b825-2dc5a49051ef' LIMIT 1;
Executing (81d1f459-4321-45a3-92fe-065e4a7cdd24): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'b2af58c6-41d9-4a76-80c1-203456c861c2' LIMIT 1;
Executing (163bea5b-6646-447a-871a-e130559f4610): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '04d9d78f-9bbe-4cc9-85b2-d9381835154c' LIMIT 1;
Executing (10bb2aa7-ae68-4778-9eaf-67955d8a562f): COMMIT;
Executing (93d80e79-bf1f-4497-a716-e0c7a635b89f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_553e6c9bd00f4182a5f4c2a54afc1cdd$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'રાજપૂત કિશનસિંહ વિક્રમસિંહ','94409f12-5d4a-4efa-b825-2dc5a49051ef','India','Gujarat','Sabarkatha District','Idar','7874701446','','TRAINEE ','2024-08-31 20:47:10.090 +00:00','2024-08-31 20:47:10.090 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_553e6c9bd00f4182a5f4c2a54afc1cdd$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (81d1f459-4321-45a3-92fe-065e4a7cdd24): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_66cb7da0a4cc4f4ebfc09b72af896285$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Thakor sanjay k','b2af58c6-41d9-4a76-80c1-203456c861c2','India','Gujarat','Mehsana District','Visnagar','7698290878','','TRAINEE ','2024-08-31 20:47:10.091 +00:00','2024-08-31 20:47:10.091 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_66cb7da0a4cc4f4ebfc09b72af896285$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (163bea5b-6646-447a-871a-e130559f4610): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_488be7efe7244256810520c653667f39$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Patel Ankushkumar Dahyabhai','04d9d78f-9bbe-4cc9-85b2-d9381835154c','India','Gujarat','Mehsana District','Vadnagar','9727935646','','TRAINEE ','2024-08-31 20:47:10.093 +00:00','2024-08-31 20:47:10.093 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_488be7efe7244256810520c653667f39$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Introduction to Learning Objectives 2022-02-22T07:21:52.000+0000
Executing (1169c0d4-9caa-4fc8-bced-a0d2d3d72980): START TRANSACTION;
Executing (93d80e79-bf1f-4497-a716-e0c7a635b89f): COMMIT;
Executing (81d1f459-4321-45a3-92fe-065e4a7cdd24): COMMIT;
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T06:57:23.000+0000
Executing (7fcdf7a5-1c6c-4e64-aba0-06c21fce8401): START TRANSACTION;
topicName PDA Rollout Demo 2021-05-04T05:46:23.000+0000
Executing (af34310a-e3ef-48c3-9594-1a3e2de910d6): START TRANSACTION;
topicName PDA Rollout Demo 2021-05-04T05:46:45.000+0000
Executing (419727b7-e133-41a0-9640-1155b8808e36): START TRANSACTION;
Executing (1169c0d4-9caa-4fc8-bced-a0d2d3d72980): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '9028cbac-2720-4a86-a3c4-44b61cc48eb5' LIMIT 1;
Executing (163bea5b-6646-447a-871a-e130559f4610): COMMIT;
Executing (af34310a-e3ef-48c3-9594-1a3e2de910d6): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '97c83f6a-cc4b-4a2d-9749-2d6784f02c21' LIMIT 1;
Executing (419727b7-e133-41a0-9640-1155b8808e36): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '75e35cf1-3a59-4d8a-80de-f594a7b3c086' LIMIT 1;
Executing (1169c0d4-9caa-4fc8-bced-a0d2d3d72980): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_25009841aec947c6aa47cb01910c3050$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Rajdeep Sarkar ','9028cbac-2720-4a86-a3c4-44b61cc48eb5','India','West Bengal','Birbhum District','Suri','7679606635','','TRAINEE ','2024-08-31 20:47:10.103 +00:00','2024-08-31 20:47:10.103 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_25009841aec947c6aa47cb01910c3050$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7fcdf7a5-1c6c-4e64-aba0-06c21fce8401): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '7a99e279-a9dd-48ff-9424-a7c478b238b2' LIMIT 1;
Executing (af34310a-e3ef-48c3-9594-1a3e2de910d6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b76d201fa99a473882b8216bf767edae$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Gorabhai thkor ','97c83f6a-cc4b-4a2d-9749-2d6784f02c21','India','Gujarat','Kutch District','Anandpar','9023540270','','TRAINEE ','2024-08-31 20:47:10.106 +00:00','2024-08-31 20:47:10.106 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b76d201fa99a473882b8216bf767edae$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (419727b7-e133-41a0-9640-1155b8808e36): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ea9c195c6d6e42d7b23465b433b1846a$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Amit Wajpe','75e35cf1-3a59-4d8a-80de-f594a7b3c086','India','Maharashtra','Amravati District','Amravati','7359036664','','TRAINEE ','2024-08-31 20:47:10.107 +00:00','2024-08-31 20:47:10.107 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ea9c195c6d6e42d7b23465b433b1846a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Rollout Demo 2021-05-04T05:46:09.000+0000
Executing (bb50f270-aed8-4f7d-a877-52e133c12f58): START TRANSACTION;
Executing (af34310a-e3ef-48c3-9594-1a3e2de910d6): COMMIT;
Executing (7fcdf7a5-1c6c-4e64-aba0-06c21fce8401): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0aeaff1ac10b40bf9aff64e58ab4e228$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Umesh','7a99e279-a9dd-48ff-9424-a7c478b238b2','India','Rajasthan','Bhilwara District','Bhilwara','7014106443','paliwalu75@gmail.com','TRAINEE ','2024-08-31 20:47:10.111 +00:00','2024-08-31 20:47:10.111 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0aeaff1ac10b40bf9aff64e58ab4e228$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1169c0d4-9caa-4fc8-bced-a0d2d3d72980): COMMIT;
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-01-30T09:07:07.000+0000
Executing (9510cb9a-304b-4d27-80e4-e524b132ad5d): START TRANSACTION;
Executing (bb50f270-aed8-4f7d-a877-52e133c12f58): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '8d96ee1c-383e-4573-84c2-5c4c5cb73b82' LIMIT 1;
Executing (419727b7-e133-41a0-9640-1155b8808e36): COMMIT;
Executing (9510cb9a-304b-4d27-80e4-e524b132ad5d): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '1074bfd7-300d-4a92-82b8-d8f2d53d569d' LIMIT 1;
Executing (bb50f270-aed8-4f7d-a877-52e133c12f58): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e39cca706129487693d8d6f3bea84c5b$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Bhargav','8d96ee1c-383e-4573-84c2-5c4c5cb73b82','India','Telangana','Ranga Reddy District','Hyderabad','8686143500','bhargav@arghyam.org','TRAINER TRAINEE','2024-08-31 20:47:10.117 +00:00','2024-08-31 20:47:10.117 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e39cca706129487693d8d6f3bea84c5b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Demo for  Prasari and BRLF 2020-10-01T05:58:31.000+0000
Executing (1aca3d87-bd02-41aa-8fab-fd4419ad80bc): START TRANSACTION;
Executing (7fcdf7a5-1c6c-4e64-aba0-06c21fce8401): COMMIT;
Executing (9510cb9a-304b-4d27-80e4-e524b132ad5d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c1fb4f436d2a4217946147c5c5d3fccc$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'PAREPALLI DANALAXMI','1074bfd7-300d-4a92-82b8-d8f2d53d569d','India','Telangana','Nalgonda District','Miryalaguda','9391439781','','TRAINEE ','2024-08-31 20:47:10.120 +00:00','2024-08-31 20:47:10.120 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c1fb4f436d2a4217946147c5c5d3fccc$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bb50f270-aed8-4f7d-a877-52e133c12f58): COMMIT;
Executing (1aca3d87-bd02-41aa-8fab-fd4419ad80bc): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'b791b39b-25d7-4e24-a280-9cd6d4870c90' LIMIT 1;
topicName PDA Demo 2021-07-13T05:16:07.000+0000
Executing (1115df3a-c5d5-420a-b0b4-3ac39c172e57): START TRANSACTION;
Executing (9510cb9a-304b-4d27-80e4-e524b132ad5d): COMMIT;
topicName CBP Orientation 2020-10-15T06:19:57.000+0000
Executing (bd9b19e2-f227-4092-af1b-fe6e598a85e7): START TRANSACTION;
Executing (1aca3d87-bd02-41aa-8fab-fd4419ad80bc): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c45a452d1510495ea6b9ccab8f2ecb28$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Narshi Vibha koli','b791b39b-25d7-4e24-a280-9cd6d4870c90','India','Gujarat','Kutch District','Gagodar','7990696924','','TRAINEE ','2024-08-31 20:47:10.126 +00:00','2024-08-31 20:47:10.126 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c45a452d1510495ea6b9ccab8f2ecb28$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1115df3a-c5d5-420a-b0b4-3ac39c172e57): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'fe1b3f7e-975e-4751-9c35-c77fce2da98b' LIMIT 1;
topicName PDA - Participant App 2020-04-07T09:20:44.000+0000
Executing (77624390-e353-4385-87d8-e37396f0fa92): START TRANSACTION;
topicName Demonstration of PDA - ICDS Supervisors Training 2021-06-09T10:05:31.000+0000
Executing (db35c3b7-3455-4b32-81c1-6574de7ce8de): START TRANSACTION;
Executing (bd9b19e2-f227-4092-af1b-fe6e598a85e7): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '4d5ee2bb-8d8c-4e20-8c96-f0a6a0b41f29' LIMIT 1;
Executing (1aca3d87-bd02-41aa-8fab-fd4419ad80bc): COMMIT;
Executing (1115df3a-c5d5-420a-b0b4-3ac39c172e57): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0a2c6a00273648358a733193e3c19bcf$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Vijaysinh','fe1b3f7e-975e-4751-9c35-c77fce2da98b','India','Gujarat','Kachchh District','Maska','7984514905','','TRAINEE ','2024-08-31 20:47:10.133 +00:00','2024-08-31 20:47:10.133 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0a2c6a00273648358a733193e3c19bcf$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (db35c3b7-3455-4b32-81c1-6574de7ce8de): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '48cb496f-d8ea-4a2d-ad8f-394c45a57566' LIMIT 1;
Executing (bd9b19e2-f227-4092-af1b-fe6e598a85e7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_10b9d9af504b4ceca0412dde6bbd1ec8$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Hema Prasanna','4d5ee2bb-8d8c-4e20-8c96-f0a6a0b41f29','India','Karnataka','Bangalore Urban District','Bengaluru','9844370462','','TRAINEE ','2024-08-31 20:47:10.136 +00:00','2024-08-31 20:47:10.136 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_10b9d9af504b4ceca0412dde6bbd1ec8$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-02-16T06:40:32.000+0000
Executing (877db5f7-49b9-4ca0-81be-08c0af5c0197): START TRANSACTION;
Executing (77624390-e353-4385-87d8-e37396f0fa92): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '40a677ce-f0f1-424f-a63d-5cc7a42ce1d2' LIMIT 1;
Executing (db35c3b7-3455-4b32-81c1-6574de7ce8de): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1edc51f7692a4871b57c38004f19bd47$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Girdhari ','48cb496f-d8ea-4a2d-ad8f-394c45a57566','India','Rajasthan','Udaipur District','Udaipur','9664044546','glverma06@gmail.com','TRAINEE ','2024-08-31 20:47:10.141 +00:00','2024-08-31 20:47:10.141 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1edc51f7692a4871b57c38004f19bd47$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bd9b19e2-f227-4092-af1b-fe6e598a85e7): COMMIT;
Executing (877db5f7-49b9-4ca0-81be-08c0af5c0197): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '9ab90b6e-0934-4352-95de-1422b8c24f36' LIMIT 1;
Executing (1115df3a-c5d5-420a-b0b4-3ac39c172e57): COMMIT;
Executing (db35c3b7-3455-4b32-81c1-6574de7ce8de): COMMIT;
topicName ಅಟಲ್ ಭೂಜಲ್ ಯೋಜನೆಯ ಅವಲೋಕನ 2021-05-25T11:26:55.000+0000
Executing (db2c9e8d-8afc-4cc6-ae04-3c138fb0e904): START TRANSACTION;
Executing (877db5f7-49b9-4ca0-81be-08c0af5c0197): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fc89bbd3946b4da59a04ebe3a9cd8b1d$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Arvindsinh A','9ab90b6e-0934-4352-95de-1422b8c24f36','India','Gujarat','Mahesana District','Mahesana','9574474872','aravindathakor@gmail.com','TRAINEE ','2024-08-31 20:47:10.147 +00:00','2024-08-31 20:47:10.147 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fc89bbd3946b4da59a04ebe3a9cd8b1d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (77624390-e353-4385-87d8-e37396f0fa92): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1e1e4ec4c6f14b96a46529f86ebe4a3d$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Valji punsi gadhavi','40a677ce-f0f1-424f-a63d-5cc7a42ce1d2','India','Gujarat','Kachchh District','Mota Bhadiya','9586021083','','TRAINEE ','2024-08-31 20:47:10.149 +00:00','2024-08-31 20:47:10.149 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1e1e4ec4c6f14b96a46529f86ebe4a3d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA - Participant App 2020-04-07T09:24:52.000+0000
Executing (b287edc3-4799-46b3-b316-fece0e09bfeb): START TRANSACTION;
Executing (db2c9e8d-8afc-4cc6-ae04-3c138fb0e904): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '6beec966-3a66-4621-9ff6-6fd5c20e8787' LIMIT 1;
Executing (877db5f7-49b9-4ca0-81be-08c0af5c0197): COMMIT;
topicName Orientation on Abhy and PGWM 2021-08-14T06:57:44.000+0000
Executing (e8306ec9-a4cf-4a8f-9b25-2944866542ae): START TRANSACTION;
Executing (b287edc3-4799-46b3-b316-fece0e09bfeb): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '578969e2-f544-4c86-8856-accfead4ce68' LIMIT 1;
Executing (db2c9e8d-8afc-4cc6-ae04-3c138fb0e904): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6765e7db60f2418d949a200bea4c5dff$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Dimpal kumari','6beec966-3a66-4621-9ff6-6fd5c20e8787','India','Rajasthan','Bhilwara District','Bhilwara','9413093672','dimpal@fes.org.in','TRAINEE ','2024-08-31 20:47:10.155 +00:00','2024-08-31 20:47:10.155 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6765e7db60f2418d949a200bea4c5dff$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Rollout Demo 2021-05-04T05:48:14.000+0000
Executing (28edced2-8225-4682-ac03-f03e816668d7): START TRANSACTION;
Executing (77624390-e353-4385-87d8-e37396f0fa92): COMMIT;
Executing (b287edc3-4799-46b3-b316-fece0e09bfeb): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_502322199f234b15839edf717501f22a$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Dantani urmila giradhar bhai ','578969e2-f544-4c86-8856-accfead4ce68','India','Gujarat','Mehsana District','Visnagar','7096300295','','TRAINEE ','2024-08-31 20:47:10.159 +00:00','2024-08-31 20:47:10.159 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_502322199f234b15839edf717501f22a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (db2c9e8d-8afc-4cc6-ae04-3c138fb0e904): COMMIT;
Executing (28edced2-8225-4682-ac03-f03e816668d7): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'cc63685b-cf6c-467d-a178-e1ca40b8c0c8' LIMIT 1;
Executing (e8306ec9-a4cf-4a8f-9b25-2944866542ae): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'a592f325-0db2-4c28-a340-17a97748cc7f' LIMIT 1;
Executing (b287edc3-4799-46b3-b316-fece0e09bfeb): COMMIT;
topicName PDA - Participant App 2020-04-07T09:21:12.000+0000
Executing (98d19e9c-e9d7-48da-8fc0-8e83513c4508): START TRANSACTION;
Executing (28edced2-8225-4682-ac03-f03e816668d7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ecb962aefd4c4f319a2eebb31e49b028$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Patel Asu Shailesh kumar','cc63685b-cf6c-467d-a178-e1ca40b8c0c8','India','Gujarat','Mehsana District','Visnagar','6359699170','','TRAINEE ','2024-08-31 20:47:10.167 +00:00','2024-08-31 20:47:10.167 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ecb962aefd4c4f319a2eebb31e49b028$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e8306ec9-a4cf-4a8f-9b25-2944866542ae): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7f9da5efc2044088b3d992a80372e103$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Chandrapalsinh Rathod','a592f325-0db2-4c28-a340-17a97748cc7f','India','Gujarat','Sabarkatha District','Himatnagar','9870029301','','TRAINEE ','2024-08-31 20:47:10.168 +00:00','2024-08-31 20:47:10.168 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7f9da5efc2044088b3d992a80372e103$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Orientation on Abhy and PGWM - II 2021-08-14T11:58:30.000+0000
Executing (e4f3bfb5-03a2-49c6-9c7f-8fd8a8a3b2b5): START TRANSACTION;
topicName Post-Harvest Management and Value Addition in Spice Crops. 2021-02-24T10:53:59.000+0000
Executing (9a710b59-85a5-4c3e-aebc-b86934c6412f): START TRANSACTION;
Executing (98d19e9c-e9d7-48da-8fc0-8e83513c4508): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '2d88780e-c21b-45f2-a2c5-62e6e96784de' LIMIT 1;
Executing (28edced2-8225-4682-ac03-f03e816668d7): COMMIT;
Executing (9a710b59-85a5-4c3e-aebc-b86934c6412f): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'aafc15ca-107f-4826-90cf-1552e978fb55' LIMIT 1;
Executing (98d19e9c-e9d7-48da-8fc0-8e83513c4508): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_25508cbb367a4a3a8e87e3c7c35a290a$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Chaudhri grishma maheshbhai','2d88780e-c21b-45f2-a2c5-62e6e96784de','India','Gujarat','Mehsana District','Visnagar','9428004647','','TRAINEE ','2024-08-31 20:47:10.174 +00:00','2024-08-31 20:47:10.174 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_25508cbb367a4a3a8e87e3c7c35a290a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e4f3bfb5-03a2-49c6-9c7f-8fd8a8a3b2b5): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '94dbfffa-754e-4b5e-acf9-ba0ca73b4ea1' LIMIT 1;
Executing (e8306ec9-a4cf-4a8f-9b25-2944866542ae): COMMIT;
Executing (9a710b59-85a5-4c3e-aebc-b86934c6412f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_45065114c65946a19973304ed22f23cd$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'S Saritha','aafc15ca-107f-4826-90cf-1552e978fb55','India','Telangana','Nalgonda District','Nagarjuna Sagar','9848423672','','TRAINEE ','2024-08-31 20:47:10.178 +00:00','2024-08-31 20:47:10.178 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_45065114c65946a19973304ed22f23cd$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (98d19e9c-e9d7-48da-8fc0-8e83513c4508): COMMIT;
Executing (e4f3bfb5-03a2-49c6-9c7f-8fd8a8a3b2b5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e2037edd622e42a7ba17fa58f11064f4$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Nawab lakha','94dbfffa-754e-4b5e-acf9-ba0ca73b4ea1','India','Gujarat','Kachchh District','Bhuj','7043012799','','TRAINEE ','2024-08-31 20:47:10.180 +00:00','2024-08-31 20:47:10.180 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e2037edd622e42a7ba17fa58f11064f4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Post-Harvest Management and Value Addition in Spice Crops. 2021-02-24T10:53:59.000+0000
Executing (5b7e7a8f-ae70-461b-adad-0f12fc4b2e5f): START TRANSACTION;
Executing (9a710b59-85a5-4c3e-aebc-b86934c6412f): COMMIT;
topicName Post-Harvest Management and Value Addition in Spice Crops. 2021-02-24T10:56:00.000+0000
Executing (bed54fa2-2264-4469-8b55-32e9fb9f0450): START TRANSACTION;
topicName PDA Rollout Demo 2021-05-04T05:46:10.000+0000
Executing (65ef9c3c-5053-41c6-8c94-15218dd13fa8): START TRANSACTION;
topicName Demonstration of PDA - ICDS Supervisors Training 2021-06-09T10:22:24.000+0000
Executing (6b4d0913-f05d-4616-85f2-9ea90fd790e2): START TRANSACTION;
Executing (bed54fa2-2264-4469-8b55-32e9fb9f0450): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'ae945fe6-9a36-4989-8485-0684b9deddec' LIMIT 1;
Executing (5b7e7a8f-ae70-461b-adad-0f12fc4b2e5f): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'c10b2749-563d-4edd-807d-0f68a8e37231' LIMIT 1;
Executing (e4f3bfb5-03a2-49c6-9c7f-8fd8a8a3b2b5): COMMIT;
Executing (6b4d0913-f05d-4616-85f2-9ea90fd790e2): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'dac7dcec-ffe3-4d2a-84be-db90e490c32e' LIMIT 1;
Executing (bed54fa2-2264-4469-8b55-32e9fb9f0450): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_dc635a97c95749a79f7df2ed6b5db88b$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Saumya ','ae945fe6-9a36-4989-8485-0684b9deddec','India','Bihar','Nalanda District','Biharsharif','7903226963','Saumya@bjup.in','TRAINEE ','2024-08-31 20:47:10.191 +00:00','2024-08-31 20:47:10.191 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_dc635a97c95749a79f7df2ed6b5db88b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5b7e7a8f-ae70-461b-adad-0f12fc4b2e5f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d6fe817234804c61ad43cd7b6edeb2b3$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Jayeshkumar Premjiji Thakor','c10b2749-563d-4edd-807d-0f68a8e37231','India','Gujarat','Mehsana District','Sundhiya','8200019161','','TRAINEE ','2024-08-31 20:47:10.192 +00:00','2024-08-31 20:47:10.192 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d6fe817234804c61ad43cd7b6edeb2b3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (65ef9c3c-5053-41c6-8c94-15218dd13fa8): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'f2942501-3755-4fc6-bb7e-3ba77dc15ff4' LIMIT 1;
Executing (6b4d0913-f05d-4616-85f2-9ea90fd790e2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a29226c8722744e9be452b6b38ed07c5$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Arvind Parmar','dac7dcec-ffe3-4d2a-84be-db90e490c32e','India','Gujarat','Gandhinagar District','Gandhinagar','9727782966','arvind@cspc.org.in','TRAINEE ','2024-08-31 20:47:10.195 +00:00','2024-08-31 20:47:10.195 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a29226c8722744e9be452b6b38ed07c5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bed54fa2-2264-4469-8b55-32e9fb9f0450): COMMIT;
topicName Orientation on Abhy and PGWM - III 2021-08-18T11:27:36.000+0000
Executing (ed0ef5b1-c225-4d52-88f9-11573ed6c1ce): START TRANSACTION;
Executing (6b4d0913-f05d-4616-85f2-9ea90fd790e2): COMMIT;
topicName Introduction to Simplified Functional Grid Format 2022-01-11T07:21:22.000+0000
Executing (eb28f3cc-511b-47e1-9c2c-0d262263421e): START TRANSACTION;
Executing (65ef9c3c-5053-41c6-8c94-15218dd13fa8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b4e03177f7e64039bb26d133a8ce55b9$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Dhanu deshmukh','f2942501-3755-4fc6-bb7e-3ba77dc15ff4','India','Maharashtra','Nashik District','Harsule','9623530707','','TRAINEE ','2024-08-31 20:47:10.201 +00:00','2024-08-31 20:47:10.201 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b4e03177f7e64039bb26d133a8ce55b9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5b7e7a8f-ae70-461b-adad-0f12fc4b2e5f): COMMIT;
topicName PDA Demo 2021-07-13T05:18:27.000+0000
Executing (12bf814a-a8f9-42ee-9e45-b22232e06ab5): START TRANSACTION;
Executing (eb28f3cc-511b-47e1-9c2c-0d262263421e): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'bf4d2b2b-645e-464d-a4c2-3d3bf682a1d6' LIMIT 1;
Executing (ed0ef5b1-c225-4d52-88f9-11573ed6c1ce): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '6a172e25-60cf-4796-9b03-d93e27e85946' LIMIT 1;
Executing (12bf814a-a8f9-42ee-9e45-b22232e06ab5): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'beda4a08-6aa1-4acf-a210-bcaa529d520f' LIMIT 1;
Executing (eb28f3cc-511b-47e1-9c2c-0d262263421e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_64bdc66e12104d5a9dfae2946570d9d2$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Deviben Rabari','bf4d2b2b-645e-464d-a4c2-3d3bf682a1d6','India','Gujarat','Kutch District','Dhabda','8160830920','','TRAINEE ','2024-08-31 20:47:10.208 +00:00','2024-08-31 20:47:10.208 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_64bdc66e12104d5a9dfae2946570d9d2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (65ef9c3c-5053-41c6-8c94-15218dd13fa8): COMMIT;
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T06:56:37.000+0000
Executing (9c8f3d3e-f968-4329-b1dd-a791e28d82bb): START TRANSACTION;
Executing (12bf814a-a8f9-42ee-9e45-b22232e06ab5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0f846d0b57ee4a89b59ce25b82d0d481$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Santosh Rao ','beda4a08-6aa1-4acf-a210-bcaa529d520f','India','Karnataka','Bangalore Urban District','Bengaluru','8884503047','santoshrao@catalysts.org','TRAINEE ','2024-08-31 20:47:10.212 +00:00','2024-08-31 20:47:10.212 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0f846d0b57ee4a89b59ce25b82d0d481$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (eb28f3cc-511b-47e1-9c2c-0d262263421e): COMMIT;
topicName PDA Hands on 2021-01-02T06:57:27.000+0000
Executing (5d265c84-f7ef-42bd-8dc1-b54ae5485354): START TRANSACTION;
Executing (ed0ef5b1-c225-4d52-88f9-11573ed6c1ce): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2da08df158534ba2bfee45205735a346$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Harry','6a172e25-60cf-4796-9b03-d93e27e85946','India','Uttar Pradesh','Ghaziabad District','Ghaziabad','9986989229','','TRAINEE ','2024-08-31 20:47:10.215 +00:00','2024-08-31 20:47:10.215 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2da08df158534ba2bfee45205735a346$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (12bf814a-a8f9-42ee-9e45-b22232e06ab5): COMMIT;
topicName Concepts and development of Base map,Landuse map and Geo-morphology maps 2021-03-06T10:31:10.000+0000
Executing (03043267-1cf7-41c1-87f7-e16d8f2418d8): START TRANSACTION;
Executing (5d265c84-f7ef-42bd-8dc1-b54ae5485354): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '8e988141-44a5-4270-aef2-f61dcb0f9683' LIMIT 1;
Executing (9c8f3d3e-f968-4329-b1dd-a791e28d82bb): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '01c4e8b7-6cb2-4f02-9f80-c4240868e4d1' LIMIT 1;
topicName PDA Demo 2021-02-16T15:03:58.000+0000
Executing (15a57037-f329-44a8-9cb6-d5edceffa93f): START TRANSACTION;
Executing (03043267-1cf7-41c1-87f7-e16d8f2418d8): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '451170d0-83f8-4f99-9adf-db6380aa7c60' LIMIT 1;
Executing (5d265c84-f7ef-42bd-8dc1-b54ae5485354): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3c0bf382f2474920809b55a9f345c068$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Rahul vijay chavanke','8e988141-44a5-4270-aef2-f61dcb0f9683','India','Maharashtra','Nashik District','Kirtangali','8766940244','','TRAINEE ','2024-08-31 20:47:10.221 +00:00','2024-08-31 20:47:10.221 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3c0bf382f2474920809b55a9f345c068$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ed0ef5b1-c225-4d52-88f9-11573ed6c1ce): COMMIT;
Executing (15a57037-f329-44a8-9cb6-d5edceffa93f): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'c14ea2c7-bd90-4f00-bfe0-2290c07b9219' LIMIT 1;
Executing (03043267-1cf7-41c1-87f7-e16d8f2418d8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_dbea7c339e394986a69ade92b9fc2627$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Balaji Vharkat','451170d0-83f8-4f99-9adf-db6380aa7c60','India','Maharashtra','Pune District','Pune','9403343043','balajivharkat@gmail.com','TRAINER ','2024-08-31 20:47:10.224 +00:00','2024-08-31 20:47:10.224 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_dbea7c339e394986a69ade92b9fc2627$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9c8f3d3e-f968-4329-b1dd-a791e28d82bb): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3391ba19ae84488ab03e6e06241c2e4e$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Jadeja narpatsinh','01c4e8b7-6cb2-4f02-9f80-c4240868e4d1','India','Gujarat','Kachchh District','Makhiana','9638158627','','TRAINEE ','2024-08-31 20:47:10.226 +00:00','2024-08-31 20:47:10.226 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3391ba19ae84488ab03e6e06241c2e4e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (15a57037-f329-44a8-9cb6-d5edceffa93f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8f5bd47f28bf434fb9bf86508f49cc58$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Bhargov Romdung','c14ea2c7-bd90-4f00-bfe0-2290c07b9219','India','Meghalaya','North Garo Hills District','Resubelpara','7005224220','','TRAINEE ','2024-08-31 20:47:10.227 +00:00','2024-08-31 20:47:10.227 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8f5bd47f28bf434fb9bf86508f49cc58$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA - Participant App 2019-12-26T12:05:08+0000
Executing (685b41a6-1f21-4a8e-bc2c-7612119fe71b): START TRANSACTION;
Executing (5d265c84-f7ef-42bd-8dc1-b54ae5485354): COMMIT;
Executing (15a57037-f329-44a8-9cb6-d5edceffa93f): COMMIT;
Executing (685b41a6-1f21-4a8e-bc2c-7612119fe71b): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'd17cf6d3-6234-4440-a34a-dfff233b2fef' LIMIT 1;
Executing (03043267-1cf7-41c1-87f7-e16d8f2418d8): COMMIT;
Executing (9c8f3d3e-f968-4329-b1dd-a791e28d82bb): COMMIT;
topicName Test run for Assisted Scanning 2020-08-06T11:35:49.000+0000
Executing (edc9c14f-5427-4a9b-b79f-5269ad82685b): START TRANSACTION;
Executing (685b41a6-1f21-4a8e-bc2c-7612119fe71b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ebd77a76dec245e396ee30b917d1b0ab$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Patel kamleshbhai shankarbhai ','d17cf6d3-6234-4440-a34a-dfff233b2fef','India','Gujarat','Mehsana District','Visnagar','9316936240','','TRAINEE ','2024-08-31 20:47:10.234 +00:00','2024-08-31 20:47:10.234 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ebd77a76dec245e396ee30b917d1b0ab$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Thermodynamic treatment of Hard Water
Executing (c45665d3-036b-4837-9c4a-ef447433cd86): START TRANSACTION;
topicName Water Literacy Campaign 2021-01-13T05:38:17.000+0000
Executing (f3103481-eb12-42cf-8e6c-50bb90bd8d51): START TRANSACTION;
Executing (edc9c14f-5427-4a9b-b79f-5269ad82685b): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'b98b74e0-478d-4db1-805a-3e8daed1b58f' LIMIT 1;
Executing (c45665d3-036b-4837-9c4a-ef447433cd86): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '54904a4f-f5ce-42a4-84fb-19b44b7a6b04' LIMIT 1;
topicName Orientation on Abhy and PGWM - II 2021-08-14T11:58:32.000+0000
Executing (3b2fac1a-317a-4d74-86d5-0ed5b2396aee): START TRANSACTION;
Executing (edc9c14f-5427-4a9b-b79f-5269ad82685b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8d2bce4df4394c34b2dcbe2c91dec3f2$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Sharanya','b98b74e0-478d-4db1-805a-3e8daed1b58f','India','Karnataka','Bangalore Urban District','Bengaluru','9741498985','','TRAINEE ','2024-08-31 20:47:10.240 +00:00','2024-08-31 20:47:10.240 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8d2bce4df4394c34b2dcbe2c91dec3f2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c45665d3-036b-4837-9c4a-ef447433cd86): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6a64a51b2486426284229a4fdafc50e0$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Jagadish k s','54904a4f-f5ce-42a4-84fb-19b44b7a6b04','India','Karnataka','Bangalore Urban District','Bengaluru','9740790530','','TRAINEE ','2024-08-31 20:47:10.242 +00:00','2024-08-31 20:47:10.242 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6a64a51b2486426284229a4fdafc50e0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f3103481-eb12-42cf-8e6c-50bb90bd8d51): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'c3f8949d-3600-455d-bbd0-0806a7f16ab6' LIMIT 1;
Executing (685b41a6-1f21-4a8e-bc2c-7612119fe71b): COMMIT;
Executing (edc9c14f-5427-4a9b-b79f-5269ad82685b): COMMIT;
Executing (c45665d3-036b-4837-9c4a-ef447433cd86): COMMIT;
Executing (f3103481-eb12-42cf-8e6c-50bb90bd8d51): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_03770be813b14528b592f44e9012ce90$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Ramesh bhikhabhai','c3f8949d-3600-455d-bbd0-0806a7f16ab6','India','Gujarat','Kutch District','Adesar','9316251576','','TRAINEE ','2024-08-31 20:47:10.248 +00:00','2024-08-31 20:47:10.248 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_03770be813b14528b592f44e9012ce90$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3b2fac1a-317a-4d74-86d5-0ed5b2396aee): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'c5d35819-2105-4cef-8c0a-af367a875971' LIMIT 1;
topicName ಅಟಲ್ ಭೂಜಲ್ ಯೋಜನೆಯ ಅವಲೋಕನ 2021-05-25T11:29:11.000+0000
Executing (4c2406a7-970e-4b10-afeb-e635c92efda4): START TRANSACTION;
topicName ಅಂತರ್ಜಲ ಚೇತನ - ಮಾದರಿ ವಿಷಯ (Antarajala Chetana - Example Topic) 2021-09-02T11:05:54.000+0000
Executing (c09633dc-73e0-45b9-80b9-569e2f9faae3): START TRANSACTION;
Executing (f3103481-eb12-42cf-8e6c-50bb90bd8d51): COMMIT;
topicName Post-Harvest Management and Value Addition in Spice Crops. 2021-02-24T10:29:01.000+0000
Executing (b1363a75-f38b-498e-8630-246afbf284f1): START TRANSACTION;
Executing (4c2406a7-970e-4b10-afeb-e635c92efda4): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'ce251d08-52fe-4eee-a352-fb41a7503dc4' LIMIT 1;
Executing (c09633dc-73e0-45b9-80b9-569e2f9faae3): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '4dd30b8f-74fe-4c0a-a7aa-234f0a4cd6ac' LIMIT 1;
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-02-16T06:40:35.000+0000
Executing (aa80f524-248d-468e-8254-312c98e0c7c6): START TRANSACTION;
Executing (b1363a75-f38b-498e-8630-246afbf284f1): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '387aedcd-c84e-409b-8067-b1d0e5444975' LIMIT 1;
Executing (3b2fac1a-317a-4d74-86d5-0ed5b2396aee): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_69d7b41ab7fe46558c58a7394e7931a7$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Madhavi Purohit','c5d35819-2105-4cef-8c0a-af367a875971','India','Karnataka','Bangalore Urban District','Bengaluru','7829523566','','TRAINER TRAINEE','2024-08-31 20:47:10.260 +00:00','2024-08-31 20:47:10.260 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_69d7b41ab7fe46558c58a7394e7931a7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4c2406a7-970e-4b10-afeb-e635c92efda4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_399a6befd69b4deb8d9d4dc737298407$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Ravi Kumar Kasetty','ce251d08-52fe-4eee-a352-fb41a7503dc4','India','Karnataka','Bengaluru Urban District','Bengaluru','9739442900','ravikumar@arghyam.org','TRAINEE ','2024-08-31 20:47:10.262 +00:00','2024-08-31 20:47:10.262 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_399a6befd69b4deb8d9d4dc737298407$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c09633dc-73e0-45b9-80b9-569e2f9faae3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6a60799ce39b4e0488933d45dac14b8c$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Arun Aathreya','4dd30b8f-74fe-4c0a-a7aa-234f0a4cd6ac','India','Karnataka','Bengaluru Urban District','Bengaluru','9035325404','arunm@arghyam.org','TRAINEE ','2024-08-31 20:47:10.263 +00:00','2024-08-31 20:47:10.263 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6a60799ce39b4e0488933d45dac14b8c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (aa80f524-248d-468e-8254-312c98e0c7c6): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '950b76fc-6de2-4102-9af7-1df1b415726b' LIMIT 1;
Executing (b1363a75-f38b-498e-8630-246afbf284f1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_205539a8ae324b519be46d9e7f1ee0f4$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Rakhi mathai','387aedcd-c84e-409b-8067-b1d0e5444975','India','Karnataka','Bangalore Urban District','Bengaluru','9483548228','rakhi@arghyam.org','TRAINEE ','2024-08-31 20:47:10.265 +00:00','2024-08-31 20:47:10.265 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_205539a8ae324b519be46d9e7f1ee0f4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4c2406a7-970e-4b10-afeb-e635c92efda4): COMMIT;
Executing (c09633dc-73e0-45b9-80b9-569e2f9faae3): COMMIT;
Executing (aa80f524-248d-468e-8254-312c98e0c7c6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d4f9af3e55544ddeafdb972093b9111e$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Isha Dash ','950b76fc-6de2-4102-9af7-1df1b415726b','India','Haryana','Gurugram District','Gurugram','9979216559','','TRAINEE ','2024-08-31 20:47:10.268 +00:00','2024-08-31 20:47:10.268 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d4f9af3e55544ddeafdb972093b9111e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3b2fac1a-317a-4d74-86d5-0ed5b2396aee): COMMIT;
topicName Well Monitoring - Example 2022-06-16T09:26:24.000+0000
Executing (a7f01fdd-e539-4e9b-a0e5-d7e1a9d54ced): START TRANSACTION;
topicName Well Monitoring - Example 2022-06-16T09:26:13.000+0000
Executing (c28e001c-5e08-41ea-b989-1933bccdb721): START TRANSACTION;
Executing (b1363a75-f38b-498e-8630-246afbf284f1): COMMIT;
Executing (a7f01fdd-e539-4e9b-a0e5-d7e1a9d54ced): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '1b150e3f-f854-4a66-9e73-3e8d856706a1' LIMIT 1;
Executing (c28e001c-5e08-41ea-b989-1933bccdb721): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'c0a06ec3-5563-40f7-a987-aea8fe29f08b' LIMIT 1;
topicName CBP Orientation 2020-08-17T10:15:37.000+0000
Executing (b07be133-06fc-4284-8548-b61a7f6da4d1): START TRANSACTION;
Executing (aa80f524-248d-468e-8254-312c98e0c7c6): COMMIT;
Executing (a7f01fdd-e539-4e9b-a0e5-d7e1a9d54ced): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_46b9e97e6c994eb1a504ecc884155406$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Abhishek srivastava ','1b150e3f-f854-4a66-9e73-3e8d856706a1','India','Delhi','South East Delhi District','New Delhi','9999180790','','TRAINEE ','2024-08-31 20:47:10.277 +00:00','2024-08-31 20:47:10.277 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_46b9e97e6c994eb1a504ecc884155406$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c28e001c-5e08-41ea-b989-1933bccdb721): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cef0819e90594c35a5f2859a323fdd4a$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Nagji bhai','c0a06ec3-5563-40f7-a987-aea8fe29f08b','India','Gujarat','Kachchh District','Bhuj','9265044356','','TRAINEE ','2024-08-31 20:47:10.279 +00:00','2024-08-31 20:47:10.279 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cef0819e90594c35a5f2859a323fdd4a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b07be133-06fc-4284-8548-b61a7f6da4d1): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '60c6a9c3-268e-4b5c-9939-d0efdcaa04cb' LIMIT 1;
topicName PDA - Program App 2019-12-05T06:59:10+0000
Executing (00d9a47d-cc1f-49b7-a309-007f8361d315): START TRANSACTION;
Executing (a7f01fdd-e539-4e9b-a0e5-d7e1a9d54ced): COMMIT;
Executing (c28e001c-5e08-41ea-b989-1933bccdb721): COMMIT;
Executing (b07be133-06fc-4284-8548-b61a7f6da4d1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b610524dc66e4ff289c22a13531bb60d$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Raghuvirsinh Jadeja','60c6a9c3-268e-4b5c-9939-d0efdcaa04cb','India','Gujarat','Kachchh District','Bhuj','7990962283','rgjadeja777@gmail.com','TRAINEE ','2024-08-31 20:47:10.286 +00:00','2024-08-31 20:47:10.286 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b610524dc66e4ff289c22a13531bb60d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (00d9a47d-cc1f-49b7-a309-007f8361d315): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '971f2670-d929-4a00-a697-f5e19fa95fff' LIMIT 1;
topicName Well Monitoring - Example 2022-06-16T09:26:40.000+0000
Executing (15abdc44-564f-45bd-8aeb-c03b7c4a9526): START TRANSACTION;
topicName CBP Orientation 2020-12-10T05:33:03.000+0000
Executing (a5832ac4-a737-40e1-ae02-eaed9af3b9fa): START TRANSACTION;
topicName Orientation on Abhy and PGWM - III 2021-08-18T11:27:37.000+0000
Executing (2c9ec3db-5bfc-4233-acf2-548654111da0): START TRANSACTION;
Executing (b07be133-06fc-4284-8548-b61a7f6da4d1): COMMIT;
Executing (00d9a47d-cc1f-49b7-a309-007f8361d315): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a6c1681b3611474ca2f25ea304fa03ba$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Yogesh Jadeja','971f2670-d929-4a00-a697-f5e19fa95fff','India','Gujarat','Kutch District','Bhuj','9879580931','yogeshjadeja2129@gmail.com','TRAINER TRAINEE','2024-08-31 20:47:10.292 +00:00','2024-08-31 20:47:10.292 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a6c1681b3611474ca2f25ea304fa03ba$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (15abdc44-564f-45bd-8aeb-c03b7c4a9526): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'c3806dc6-ac06-488b-8e75-88e2cae9c1a6' LIMIT 1;
Executing (a5832ac4-a737-40e1-ae02-eaed9af3b9fa): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '64e5cd3d-c6f3-4cfa-9c0f-6116391e6b86' LIMIT 1;
Executing (2c9ec3db-5bfc-4233-acf2-548654111da0): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'f5c71709-8bfc-4fe9-a633-559aeff445e6' LIMIT 1;
topicName Orientation on Abhy and PGWM - III 2021-08-18T11:27:54.000+0000
Executing (faa519fa-fa9f-491b-aded-edc294ae8a35): START TRANSACTION;
Executing (a5832ac4-a737-40e1-ae02-eaed9af3b9fa): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_96f8cd7fef2e41088d81ec244cc9f25b$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Sahadevsinh','64e5cd3d-c6f3-4cfa-9c0f-6116391e6b86','India','Gujarat','Kachchh District','Bidada','9265649418','Jadejasahdev79@gmail.com','TRAINEE ','2024-08-31 20:47:10.297 +00:00','2024-08-31 20:47:10.297 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_96f8cd7fef2e41088d81ec244cc9f25b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2c9ec3db-5bfc-4233-acf2-548654111da0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_faa6548e81b1470aaa2dcef5dafaa311$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Nita Khubchandani ','f5c71709-8bfc-4fe9-a633-559aeff445e6','India','Gujarat','Kachchh District','Bhuj','8141477361','','TRAINER TRAINEE','2024-08-31 20:47:10.298 +00:00','2024-08-31 20:47:10.298 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_faa6548e81b1470aaa2dcef5dafaa311$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (15abdc44-564f-45bd-8aeb-c03b7c4a9526): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7b55cab81db3441d97e94c40b5c26017$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Rajesh harji sangar','c3806dc6-ac06-488b-8e75-88e2cae9c1a6','India','Gujarat','Kachchh District','Bidada','9537815266','','TRAINEE ','2024-08-31 20:47:10.300 +00:00','2024-08-31 20:47:10.300 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7b55cab81db3441d97e94c40b5c26017$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (00d9a47d-cc1f-49b7-a309-007f8361d315): COMMIT;
Executing (a5832ac4-a737-40e1-ae02-eaed9af3b9fa): COMMIT;
Executing (2c9ec3db-5bfc-4233-acf2-548654111da0): COMMIT;
Executing (faa519fa-fa9f-491b-aded-edc294ae8a35): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'b57134f1-23ce-48b9-bc6a-1e90a88d144f' LIMIT 1;
topicName Orientation on Abhy and PGWM - II 2021-08-14T11:56:52.000+0000
Executing (14175275-83a3-437d-bad1-86d29d1f6efe): START TRANSACTION;
topicName TOT of Bhujal Janakar 2021-02-05T07:24:14.000+0000
Executing (1f61d17b-c49d-49c8-97ad-e7e43ac0eb8e): START TRANSACTION;
topicName CBP Orientation 2020-08-17T10:15:12.000+0000
Executing (e18ff183-22aa-4eba-92e8-d57bbe4085e1): START TRANSACTION;
Executing (15abdc44-564f-45bd-8aeb-c03b7c4a9526): COMMIT;
Executing (14175275-83a3-437d-bad1-86d29d1f6efe): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '2adeac0d-3c9c-4429-9f7f-966c8169483d' LIMIT 1;
Executing (1f61d17b-c49d-49c8-97ad-e7e43ac0eb8e): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '95cc9688-64d4-4109-925d-47172ca52bbd' LIMIT 1;
Executing (e18ff183-22aa-4eba-92e8-d57bbe4085e1): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'd91fddd8-9b50-4dff-ac4e-1243c9c5b71f' LIMIT 1;
Executing (faa519fa-fa9f-491b-aded-edc294ae8a35): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1208c41be77f4ca88432e9a2be454ba3$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Goutam','b57134f1-23ce-48b9-bc6a-1e90a88d144f','India','Uttarakhand','Nainital District','Kokil Bana','9994483638','','TRAINEE ','2024-08-31 20:47:10.316 +00:00','2024-08-31 20:47:10.316 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1208c41be77f4ca88432e9a2be454ba3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (14175275-83a3-437d-bad1-86d29d1f6efe): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_222e4709d21c4944b7097ba194c1cacc$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Priyanka sarthi','2adeac0d-3c9c-4429-9f7f-966c8169483d','India','Rajasthan','Udaipur District','Udaipur','8103407062','','TRAINEE ','2024-08-31 20:47:10.318 +00:00','2024-08-31 20:47:10.318 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_222e4709d21c4944b7097ba194c1cacc$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1f61d17b-c49d-49c8-97ad-e7e43ac0eb8e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2946aad767f841e1b02263ce246e0e1c$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Pinu ashish Chaudhari ','95cc9688-64d4-4109-925d-47172ca52bbd','India','Gujarat','Mehsana District','Vijapur','8140909920','','TRAINEE ','2024-08-31 20:47:10.319 +00:00','2024-08-31 20:47:10.319 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2946aad767f841e1b02263ce246e0e1c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e18ff183-22aa-4eba-92e8-d57bbe4085e1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8b84552a16704f1aaac356a4cb8c65b1$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Amin bhoomi jayantibhai','d91fddd8-9b50-4dff-ac4e-1243c9c5b71f','India','Gujarat','Mehsana District','Visnagar','6356017065','','TRAINEE ','2024-08-31 20:47:10.321 +00:00','2024-08-31 20:47:10.321 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8b84552a16704f1aaac356a4cb8c65b1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Orientation on Abhy and PGWM 2021-08-14T07:24:27.000+0000
Executing (e5eda918-eefd-449d-aeb7-4690f24f4c6b): START TRANSACTION;
Executing (14175275-83a3-437d-bad1-86d29d1f6efe): COMMIT;
Executing (1f61d17b-c49d-49c8-97ad-e7e43ac0eb8e): COMMIT;
Executing (faa519fa-fa9f-491b-aded-edc294ae8a35): COMMIT;
topicName Introduction to mapping of content and learning needs requirements 2022-05-04T07:27:58.000+0000
Executing (d015085b-b82e-41cc-99ec-50d8c2e24fc3): START TRANSACTION;
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T06:57:16.000+0000
Executing (7d4082cf-6146-49ca-acf1-410b79438605): START TRANSACTION;
Executing (e5eda918-eefd-449d-aeb7-4690f24f4c6b): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '675d29ab-9a37-4bb1-9cf2-013077eef6bd' LIMIT 1;
Executing (e18ff183-22aa-4eba-92e8-d57bbe4085e1): COMMIT;
Executing (d015085b-b82e-41cc-99ec-50d8c2e24fc3): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'ffdb4a54-b6d8-4e82-8f3e-b9cce836b67e' LIMIT 1;
Executing (7d4082cf-6146-49ca-acf1-410b79438605): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '084fbd3e-1924-4484-a80f-f46e23e5c0df' LIMIT 1;
Executing (e5eda918-eefd-449d-aeb7-4690f24f4c6b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b3896bd0dd7448b3b436a57df3954951$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Vijit','675d29ab-9a37-4bb1-9cf2-013077eef6bd','India','Karnataka','Bangalore Urban District','Bengaluru','9999452004','','TRAINEE ','2024-08-31 20:47:10.334 +00:00','2024-08-31 20:47:10.334 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b3896bd0dd7448b3b436a57df3954951$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Understanding the Functional Grid 2022-04-26T07:03:11.000+0000
Executing (7c79ac87-73d7-4bb1-97ac-5d034ec0d5ef): START TRANSACTION;
Executing (d015085b-b82e-41cc-99ec-50d8c2e24fc3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_95d1d821b19e40d6b97bf16ec7f619b3$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Krushna mohan Mishra','ffdb4a54-b6d8-4e82-8f3e-b9cce836b67e','India','Odisha','Khordha District','Bhubaneswar','9437368326','krushnaindev@gmail.com','TRAINEE ','2024-08-31 20:47:10.337 +00:00','2024-08-31 20:47:10.337 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_95d1d821b19e40d6b97bf16ec7f619b3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7d4082cf-6146-49ca-acf1-410b79438605): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ca4045fa33714f4c855d2a51aed0def3$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Pabu Baha''i gadhavi','084fbd3e-1924-4484-a80f-f46e23e5c0df','India','Gujarat','Kachchh District','Mota Bhadiya','9904821501','','TRAINEE ','2024-08-31 20:47:10.338 +00:00','2024-08-31 20:47:10.338 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ca4045fa33714f4c855d2a51aed0def3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e5eda918-eefd-449d-aeb7-4690f24f4c6b): COMMIT;
Executing (7c79ac87-73d7-4bb1-97ac-5d034ec0d5ef): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'd654a1c1-ac64-408b-91a1-54d57c883590' LIMIT 1;
topicName Post-Harvest Management and Value Addition in Spice Crops. 2021-02-24T10:53:27.000+0000
Executing (93ce111c-a2c7-4529-9e74-8dc880646146): START TRANSACTION;
Executing (d015085b-b82e-41cc-99ec-50d8c2e24fc3): COMMIT;
Executing (7d4082cf-6146-49ca-acf1-410b79438605): COMMIT;
topicName Content and PDA - Capacity Building Package 2020-12-21T11:18:58.000+0000
Executing (f6253e13-100a-4e7a-a278-728e706a2d0e): START TRANSACTION;
Executing (7c79ac87-73d7-4bb1-97ac-5d034ec0d5ef): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_28a06417c07745c6a9706d05be4881b1$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Basipaka kamalabai','d654a1c1-ac64-408b-91a1-54d57c883590','India','Telangana','Nalgonda District','Alwala','9505870239','','TRAINEE ','2024-08-31 20:47:10.347 +00:00','2024-08-31 20:47:10.347 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_28a06417c07745c6a9706d05be4881b1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (93ce111c-a2c7-4529-9e74-8dc880646146): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'aa8b852d-d69b-4341-a0fa-b8926901b4e9' LIMIT 1;
topicName PDA - Participant App 2020-03-18T06:48:25+0000
Executing (84713efa-e64b-4e46-a3c5-977722ce0df8): START TRANSACTION;
topicName Orientation on Abhy and PGWM - II 2021-08-14T11:59:01.000+0000
Executing (b9d5055b-3e02-4c3e-8157-a2aaef0e67ae): START TRANSACTION;
Executing (f6253e13-100a-4e7a-a278-728e706a2d0e): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '441fc2a7-b992-46e0-951f-2a58ae3bdf32' LIMIT 1;
Executing (84713efa-e64b-4e46-a3c5-977722ce0df8): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'f3c005ad-b9e2-4a45-9900-60bdcced16b3' LIMIT 1;
Executing (b9d5055b-3e02-4c3e-8157-a2aaef0e67ae): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '0b54ff54-02a9-4863-a5a2-c7e9ecf75dfb' LIMIT 1;
Executing (93ce111c-a2c7-4529-9e74-8dc880646146): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f0bf5b2c972e4777b47c033e4b96ce30$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Arvind Agarwal','aa8b852d-d69b-4341-a0fa-b8926901b4e9','India','Rajasthan','Jodhpur District','Basni Silawatan','9214665925','arvindfes@gmail.com','TRAINEE ','2024-08-31 20:47:10.356 +00:00','2024-08-31 20:47:10.356 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f0bf5b2c972e4777b47c033e4b96ce30$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7c79ac87-73d7-4bb1-97ac-5d034ec0d5ef): COMMIT;
Executing (84713efa-e64b-4e46-a3c5-977722ce0df8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a4fc6a7607904fddabe9dbdfb08fa835$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Johnson Thangaraj ','f3c005ad-b9e2-4a45-9900-60bdcced16b3','India','Tamil Nadu','Virudhunagar District','Aruppukkottai','9344410890','johnson@vrutti.org','TRAINEE ','2024-08-31 20:47:10.359 +00:00','2024-08-31 20:47:10.359 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a4fc6a7607904fddabe9dbdfb08fa835$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b9d5055b-3e02-4c3e-8157-a2aaef0e67ae): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_66984ab3069f49a48990748d12ef3aa4$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Jigarji Rameshji Chauhan ','0b54ff54-02a9-4863-a5a2-c7e9ecf75dfb','India','Gujarat','Mehsana District','Sardarpur','9979496318','','TRAINEE ','2024-08-31 20:47:10.361 +00:00','2024-08-31 20:47:10.361 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_66984ab3069f49a48990748d12ef3aa4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f6253e13-100a-4e7a-a278-728e706a2d0e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_da785e0339d74f99b35f53fc2b0092f2$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Pawan Atkari','441fc2a7-b992-46e0-951f-2a58ae3bdf32','India','Gujarat','Kutch District','Gagodar','9595924476','','TRAINEE ','2024-08-31 20:47:10.363 +00:00','2024-08-31 20:47:10.363 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_da785e0339d74f99b35f53fc2b0092f2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (84713efa-e64b-4e46-a3c5-977722ce0df8): COMMIT;
Executing (b9d5055b-3e02-4c3e-8157-a2aaef0e67ae): COMMIT;
topicName Demonstration of PDA - ICDS Supervisors Training 2021-06-09T10:22:25.000+0000
Executing (7a619bfe-3f5c-4e0e-821e-083848a14dd9): START TRANSACTION;
Executing (93ce111c-a2c7-4529-9e74-8dc880646146): COMMIT;
topicName CBP Orientation 2020-08-25T06:11:13.000+0000
Executing (b189c479-242e-440e-bebe-ad4904edc27f): START TRANSACTION;
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T09:36:35.000+0000
Executing (fc3d1c46-4645-427d-82d9-315c7d273bc4): START TRANSACTION;
Executing (7a619bfe-3f5c-4e0e-821e-083848a14dd9): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '3d5cbfd9-a017-48c1-9ba0-a5e40b0ad188' LIMIT 1;
Executing (f6253e13-100a-4e7a-a278-728e706a2d0e): COMMIT;
Executing (b189c479-242e-440e-bebe-ad4904edc27f): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'e4fc5fe0-87c6-4077-99be-ed1070f50b56' LIMIT 1;
Executing (fc3d1c46-4645-427d-82d9-315c7d273bc4): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '3a089d0b-0cea-42c8-a60a-dd9fb54e25d4' LIMIT 1;
Executing (7a619bfe-3f5c-4e0e-821e-083848a14dd9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_75df36d7ae594b94be97bb7bf8524653$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Chauhan Arati vishnusinh','3d5cbfd9-a017-48c1-9ba0-a5e40b0ad188','India','Gujarat','Mehsana District','Visnagar','8140337798','','TRAINEE ','2024-08-31 20:47:10.376 +00:00','2024-08-31 20:47:10.376 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_75df36d7ae594b94be97bb7bf8524653$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA - Participant App 2020-04-07T09:21:17.000+0000
Executing (29278b87-eb74-4c0d-8960-ccdf97669cba): START TRANSACTION;
Executing (b189c479-242e-440e-bebe-ad4904edc27f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5593b86e0cd241a391f66f66217ce132$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Umesh Desai ','e4fc5fe0-87c6-4077-99be-ed1070f50b56','India','Gujarat','Ahmedabad District','Ahmedabad','9925239319','umesh.desai@akdn.org','TRAINEE ','2024-08-31 20:47:10.379 +00:00','2024-08-31 20:47:10.379 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5593b86e0cd241a391f66f66217ce132$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (fc3d1c46-4645-427d-82d9-315c7d273bc4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7780a18e7dd74c188a639de11e84bf53$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Dungarbhai Dodiya','3a089d0b-0cea-42c8-a60a-dd9fb54e25d4','India','Gujarat','Kutch District','Gagodar','9979915781','','TRAINEE ','2024-08-31 20:47:10.381 +00:00','2024-08-31 20:47:10.381 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7780a18e7dd74c188a639de11e84bf53$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (29278b87-eb74-4c0d-8960-ccdf97669cba): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'f8ac18cb-5476-4655-b1b7-6459e8047e4d' LIMIT 1;
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-02-16T06:39:44.000+0000
Executing (a0bafe28-a85e-43fa-ab66-fd260af95dee): START TRANSACTION;
Executing (b189c479-242e-440e-bebe-ad4904edc27f): COMMIT;
Executing (fc3d1c46-4645-427d-82d9-315c7d273bc4): COMMIT;
Executing (29278b87-eb74-4c0d-8960-ccdf97669cba): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4978b6fe88d04597a13ff93a09f20cf4$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Ramesh Gela','f8ac18cb-5476-4655-b1b7-6459e8047e4d','India','Gujarat','Junagadh District','Badalpar','9327803738','','TRAINEE ','2024-08-31 20:47:10.388 +00:00','2024-08-31 20:47:10.388 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4978b6fe88d04597a13ff93a09f20cf4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a0bafe28-a85e-43fa-ab66-fd260af95dee): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'd2724a98-724b-452f-8abe-d9a4492b3f21' LIMIT 1;
Executing (7a619bfe-3f5c-4e0e-821e-083848a14dd9): COMMIT;
topicName Capacity Building @ Scale - Experiences from FES in Odisha 2021-06-04T12:08:15.000+0000
Executing (0e5d3a63-baf5-4965-b78f-a1e015bb8f69): START TRANSACTION;
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-02-16T06:37:19.000+0000
Executing (5a382a20-c59c-4533-ba54-8a2aa0c4c345): START TRANSACTION;
Executing (29278b87-eb74-4c0d-8960-ccdf97669cba): COMMIT;
Executing (a0bafe28-a85e-43fa-ab66-fd260af95dee): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_57bc86985df84dc0a00cd3f6a27586fd$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Aditya Kumar','d2724a98-724b-452f-8abe-d9a4492b3f21','India','Delhi','West District','New Delhi','7587429075','aditya@srijanindia.org','TRAINEE ','2024-08-31 20:47:10.396 +00:00','2024-08-31 20:47:10.396 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_57bc86985df84dc0a00cd3f6a27586fd$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0e5d3a63-baf5-4965-b78f-a1e015bb8f69): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'cf25e048-3020-4503-a358-dd9be7c7c117' LIMIT 1;
Executing (5a382a20-c59c-4533-ba54-8a2aa0c4c345): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '3834ed59-d53b-4c72-8c36-9b8c146bd2d4' LIMIT 1;
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-02-16T06:41:32.000+0000
Executing (cc1a3260-10a7-4523-a7a6-95dea41acebd): START TRANSACTION;
topicName Post-Harvest Management and Value Addition in Spice Crops. 2021-02-24T10:54:14.000+0000
Executing (f7bea5ad-c7f2-46c7-ad45-2e0869f14ba9): START TRANSACTION;
Executing (0e5d3a63-baf5-4965-b78f-a1e015bb8f69): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ff4d4a1ad30847b5bc06a6f12a820565$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Thakor gandaji','cf25e048-3020-4503-a358-dd9be7c7c117','India','Gujarat','Mehsana District','Visnagar','9313731155','','TRAINEE ','2024-08-31 20:47:10.402 +00:00','2024-08-31 20:47:10.402 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ff4d4a1ad30847b5bc06a6f12a820565$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5a382a20-c59c-4533-ba54-8a2aa0c4c345): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_aaad698b9e184a78970e328b54f7acca$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Ravubha jadeja','3834ed59-d53b-4c72-8c36-9b8c146bd2d4','India','Gujarat','Chandiya','Kachchh District','9978735955','','TRAINEE','2024-08-31 20:47:10.404 +00:00','2024-08-31 20:47:10.404 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_aaad698b9e184a78970e328b54f7acca$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cc1a3260-10a7-4523-a7a6-95dea41acebd): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'c37080b4-1d4c-4a2c-98fd-8c7d6b78e36a' LIMIT 1;
Executing (f7bea5ad-c7f2-46c7-ad45-2e0869f14ba9): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '85238df0-66a9-4a1c-bd4e-05f408801f95' LIMIT 1;
Executing (a0bafe28-a85e-43fa-ab66-fd260af95dee): COMMIT;
Executing (0e5d3a63-baf5-4965-b78f-a1e015bb8f69): COMMIT;
Executing (5a382a20-c59c-4533-ba54-8a2aa0c4c345): COMMIT;
Executing (cc1a3260-10a7-4523-a7a6-95dea41acebd): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_59df22b5a0b2415cb9f7a34cd5fb7e67$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Dinesh Oza','c37080b4-1d4c-4a2c-98fd-8c7d6b78e36a','India','Gujarat','Gagodar','Kutch District','9687382010','','TRAINER','2024-08-31 20:47:10.411 +00:00','2024-08-31 20:47:10.411 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_59df22b5a0b2415cb9f7a34cd5fb7e67$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f7bea5ad-c7f2-46c7-ad45-2e0869f14ba9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7155a905e19c4815ba271a87f03d0aa0$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'R Vani supervisor Icds Damarcherla ','85238df0-66a9-4a1c-bd4e-05f408801f95','India','Telangana','Miryalaguda','Nalgonda District','8179076652','','TRAINEE','2024-08-31 20:47:10.414 +00:00','2024-08-31 20:47:10.414 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7155a905e19c4815ba271a87f03d0aa0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Post-Harvest Management and Value Addition in Spice Crops. 2021-02-24T10:00:28.000+0000
Executing (003e300f-0fda-4112-8ae8-53e353e88f11): START TRANSACTION;
topicName Orientation on Abhy and PGWM - II 2021-08-14T11:57:45.000+0000
Executing (5bf4f9d0-f512-4130-80bc-bf8488e27936): START TRANSACTION;
Executing (cc1a3260-10a7-4523-a7a6-95dea41acebd): COMMIT;
topicName Introduction to Learning Objectives 2022-02-22T07:22:01.000+0000
Executing (bd5351af-2b0b-41b4-81f9-404833b8d444): START TRANSACTION;
Executing (003e300f-0fda-4112-8ae8-53e353e88f11): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '32d0595c-a70f-45b4-b100-fa671df6566a' LIMIT 1;
Executing (5bf4f9d0-f512-4130-80bc-bf8488e27936): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '8100d8fe-7ff4-4706-8fa7-144707e7d3ce' LIMIT 1;
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-02-16T06:41:39.000+0000
Executing (df027d3b-6637-48f0-b619-67a807f835c3): START TRANSACTION;
Executing (bd5351af-2b0b-41b4-81f9-404833b8d444): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'f15c3598-11e2-4c1f-8cda-d714a5c36867' LIMIT 1;
Executing (f7bea5ad-c7f2-46c7-ad45-2e0869f14ba9): COMMIT;
Executing (003e300f-0fda-4112-8ae8-53e353e88f11): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_580625f3b2614048a7b29963c1257f83$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Rakesh singh','32d0595c-a70f-45b4-b100-fa671df6566a','India','Odisha','Bhubaneswar','Khordha District','9963195903','','TRAINEE','2024-08-31 20:47:10.426 +00:00','2024-08-31 20:47:10.426 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_580625f3b2614048a7b29963c1257f83$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5bf4f9d0-f512-4130-80bc-bf8488e27936): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_25ce557e80694fa7ba7045c0ba9fe58d$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Rhishikesh Dange','8100d8fe-7ff4-4706-8fa7-144707e7d3ce','India','Maharashtra','Harsule','Nashik District','9975805011','','TRAINEE','2024-08-31 20:47:10.428 +00:00','2024-08-31 20:47:10.428 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_25ce557e80694fa7ba7045c0ba9fe58d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (df027d3b-6637-48f0-b619-67a807f835c3): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '80e5cc2d-48a2-4561-a840-c88ef88bf6ba' LIMIT 1;
Executing (bd5351af-2b0b-41b4-81f9-404833b8d444): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_72159a72d15e40f4bb61b0ca1101e55e$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Jay prakash singh','f15c3598-11e2-4c1f-8cda-d714a5c36867','India','Bihar','Muzaffarpur','Muzaffarpur District','9771476639','','TRAINEE','2024-08-31 20:47:10.431 +00:00','2024-08-31 20:47:10.431 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_72159a72d15e40f4bb61b0ca1101e55e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (003e300f-0fda-4112-8ae8-53e353e88f11): COMMIT;
Executing (5bf4f9d0-f512-4130-80bc-bf8488e27936): COMMIT;
Executing (df027d3b-6637-48f0-b619-67a807f835c3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ffc2e7a07e4742b28022e3e4fe071d5e$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Dhiraj manji sathawara','80e5cc2d-48a2-4561-a840-c88ef88bf6ba','India','Gujarat','Budharmora','Kachchh District','9925744720','','TRAINEE','2024-08-31 20:47:10.434 +00:00','2024-08-31 20:47:10.434 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ffc2e7a07e4742b28022e3e4fe071d5e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Demonstration of PDA - ICDS Supervisors Training 2021-06-10T11:17:13.000+0000
Executing (4c31e56f-2494-4bab-917b-bc2978fcdd54): START TRANSACTION;
topicName PDA - Participant App 2020-04-07T09:21:28.000+0000
Executing (c5a7da63-3245-4b41-9b0c-fe7a1b759c85): START TRANSACTION;
topicName Midterm Measurement of Desilting(Jalsamruddhi) 2021-02-20T11:38:17.000+0000
Executing (af4155ad-d897-4373-9296-2533e7542764): START TRANSACTION;
Executing (df027d3b-6637-48f0-b619-67a807f835c3): COMMIT;
Executing (4c31e56f-2494-4bab-917b-bc2978fcdd54): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '2307df28-88c9-4a61-a906-3a8448379edf' LIMIT 1;
Executing (bd5351af-2b0b-41b4-81f9-404833b8d444): COMMIT;
Executing (c5a7da63-3245-4b41-9b0c-fe7a1b759c85): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '6db52b87-7d08-4b7a-98da-0ab423f15330' LIMIT 1;
Executing (af4155ad-d897-4373-9296-2533e7542764): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'a9dd0338-e5a1-4617-b94d-06b3b66f93d6' LIMIT 1;
topicName Orientation on Abhy and PGWM 2021-08-14T07:15:57.000+0000
Executing (fe22d318-bd61-482f-bb81-049e50e48866): START TRANSACTION;
Executing (4c31e56f-2494-4bab-917b-bc2978fcdd54): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_23b6f8dcd7184ac38d379d0f2cbde034$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Rajdipsinh jitubha jadeja','2307df28-88c9-4a61-a906-3a8448379edf','India','Gujarat','Makhiana','Kachchh District','9712188358','','TRAINEE','2024-08-31 20:47:10.446 +00:00','2024-08-31 20:47:10.446 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_23b6f8dcd7184ac38d379d0f2cbde034$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c5a7da63-3245-4b41-9b0c-fe7a1b759c85): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1dd5906e62204cc7ae129c0f9da311a0$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Rabari rama soma','6db52b87-7d08-4b7a-98da-0ab423f15330','ભારત','Gujarat','Kidiyanagar','Kutch','9574188466','','TRAINEE','2024-08-31 20:47:10.448 +00:00','2024-08-31 20:47:10.448 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1dd5906e62204cc7ae129c0f9da311a0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (af4155ad-d897-4373-9296-2533e7542764): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6a2c1561a6ff4fe1a7394d75291040d0$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Jairaj Rajguru','a9dd0338-e5a1-4617-b94d-06b3b66f93d6','India','Maharashtra','Pimpri Chinchwad','Pune District','9960950766','','TRAINEE','2024-08-31 20:47:10.449 +00:00','2024-08-31 20:47:10.449 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6a2c1561a6ff4fe1a7394d75291040d0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (fe22d318-bd61-482f-bb81-049e50e48866): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '65d158bb-b5e6-47d1-9fcb-fe4c9584b8de' LIMIT 1;
topicName Introduction to Learning Objectives 2022-02-22T07:24:09.000+0000
Executing (aca3f7fc-1de6-4893-98d8-d06e847a03de): START TRANSACTION;
Executing (c5a7da63-3245-4b41-9b0c-fe7a1b759c85): COMMIT;
Executing (af4155ad-d897-4373-9296-2533e7542764): COMMIT;
Executing (fe22d318-bd61-482f-bb81-049e50e48866): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8314bf82cb7b4de7a5e79efc7520f3ed$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Ashish','65d158bb-b5e6-47d1-9fcb-fe4c9584b8de','India','Uttar Pradesh','Greater Noida','Gautam Buddha Nagar District','9711730205','','TRAINEE','2024-08-31 20:47:10.455 +00:00','2024-08-31 20:47:10.455 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8314bf82cb7b4de7a5e79efc7520f3ed$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (aca3f7fc-1de6-4893-98d8-d06e847a03de): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '8015b555-310f-4896-be19-6801c9d16a40' LIMIT 1;
Executing (4c31e56f-2494-4bab-917b-bc2978fcdd54): COMMIT;
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-02-16T06:53:53.000+0000
Executing (4d4dc4d7-b132-41f4-9208-14e63bcdcc40): START TRANSACTION;
topicName PDA Demo 2021-08-27T06:50:19.000+0000
Executing (6a139e4b-a9ba-47f1-9430-45cc156c14e6): START TRANSACTION;
Executing (fe22d318-bd61-482f-bb81-049e50e48866): COMMIT;
Executing (aca3f7fc-1de6-4893-98d8-d06e847a03de): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_70cc460c5c2b4933873632bdc9cc6577$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Balavantbhai','8015b555-310f-4896-be19-6801c9d16a40','India','Gujarat','Gagodar','Kutch District','9879882298','','TRAINEE','2024-08-31 20:47:10.460 +00:00','2024-08-31 20:47:10.460 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_70cc460c5c2b4933873632bdc9cc6577$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4d4dc4d7-b132-41f4-9208-14e63bcdcc40): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '561f2614-a9a4-4fea-8f74-fd79e0a2854a' LIMIT 1;
Executing (6a139e4b-a9ba-47f1-9430-45cc156c14e6): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '3ae84d02-8c12-4a0e-bd85-d287c286b91d' LIMIT 1;
topicName PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra. 2021-06-02T10:03:37.000+0000
Executing (dfb00301-6aaf-48e6-b13c-1b501904a4b2): START TRANSACTION;
topicName Orientation on Abhy and PGWM - II 2021-08-14T12:31:42.000+0000
Executing (7fc65bf1-e1de-45eb-a56e-96837ac8d13a): START TRANSACTION;
Executing (4d4dc4d7-b132-41f4-9208-14e63bcdcc40): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6c4f1ef3b7e740b4bc1e4f0be62a702a$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Umed Makwana ','561f2614-a9a4-4fea-8f74-fd79e0a2854a','India','Gujarat','Davri','Kutch District','9978731131','','TRAINEE','2024-08-31 20:47:10.465 +00:00','2024-08-31 20:47:10.465 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6c4f1ef3b7e740b4bc1e4f0be62a702a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6a139e4b-a9ba-47f1-9430-45cc156c14e6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_11db132e0bab4b53a64af676b4f387cb$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Bansara Marbaniang','3ae84d02-8c12-4a0e-bd85-d287c286b91d','India','Meghalaya','Shillong','East Khasi Hills District','8794319930','','TRAINER','2024-08-31 20:47:10.467 +00:00','2024-08-31 20:47:10.467 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_11db132e0bab4b53a64af676b4f387cb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (dfb00301-6aaf-48e6-b13c-1b501904a4b2): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '1e7b369b-6485-42d8-b46f-4d93173de143' LIMIT 1;
Executing (7fc65bf1-e1de-45eb-a56e-96837ac8d13a): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '04d19f6e-f331-4630-a51a-5aa2ea55bdcc' LIMIT 1;
Executing (aca3f7fc-1de6-4893-98d8-d06e847a03de): COMMIT;
Executing (4d4dc4d7-b132-41f4-9208-14e63bcdcc40): COMMIT;
Executing (6a139e4b-a9ba-47f1-9430-45cc156c14e6): COMMIT;
Executing (dfb00301-6aaf-48e6-b13c-1b501904a4b2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c75bffe88704402e90dfe6b335e52884$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Pooja Prajapati ','1e7b369b-6485-42d8-b46f-4d93173de143','India','Gujarat','Vadnagar','Mehsana District','9924168627','','TRAINEE','2024-08-31 20:47:10.472 +00:00','2024-08-31 20:47:10.472 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c75bffe88704402e90dfe6b335e52884$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7fc65bf1-e1de-45eb-a56e-96837ac8d13a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_dae91f974f404c12bbff00bcfe11f007$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Prajapati Vishal Baldevbhai','04d19f6e-f331-4630-a51a-5aa2ea55bdcc','India','Gujarat','Mehsana District','Vadnagar','8140107303','','TRAINEE ','2024-08-31 20:47:10.473 +00:00','2024-08-31 20:47:10.473 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_dae91f974f404c12bbff00bcfe11f007$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-02-16T06:47:53.000+0000
Executing (d19fb739-9e38-4ab4-971d-3f3d40a8fd04): START TRANSACTION;
Processed user: Bansara Marbaniang
Executing (ba5d5c34-7b82-40cb-a3dc-9f5ece4b24a9): START TRANSACTION;
topicName Concepts and development of Base map,Landuse map and Geo-morphology maps 2021-03-06T10:34:49.000+0000
Executing (78b05a40-a051-49c2-ac9c-34627647f164): START TRANSACTION;
Executing (d19fb739-9e38-4ab4-971d-3f3d40a8fd04): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '7047e907-28a3-4cb1-9797-30c04e005740' LIMIT 1;
Executing (ba5d5c34-7b82-40cb-a3dc-9f5ece4b24a9): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'ab701420-82f6-492b-bc21-e0ac11333177' LIMIT 1;
Executing (dfb00301-6aaf-48e6-b13c-1b501904a4b2): COMMIT;
Executing (7fc65bf1-e1de-45eb-a56e-96837ac8d13a): COMMIT;
Executing (d19fb739-9e38-4ab4-971d-3f3d40a8fd04): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2e7c8ece1d3244a4a06e2e708ec1f94e$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Vidyanshu Kumar','7047e907-28a3-4cb1-9797-30c04e005740','India','Bihar','Gaya District','Bodh Gaya','9304716453','','TRAINEE ','2024-08-31 20:47:10.480 +00:00','2024-08-31 20:47:10.480 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2e7c8ece1d3244a4a06e2e708ec1f94e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ba5d5c34-7b82-40cb-a3dc-9f5ece4b24a9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ef0caf58d56442b7b7c16563918ba08f$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Kiran Keri','ab701420-82f6-492b-bc21-e0ac11333177','India','Karnataka','Bangalore Urban District','Bengaluru','9886087494','nitishkeri@gmail.com','TRAINEE ','2024-08-31 20:47:10.481 +00:00','2024-08-31 20:47:10.481 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ef0caf58d56442b7b7c16563918ba08f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Rollout Demo 2021-05-04T05:47:58.000+0000
Executing (1b80fe71-fb8a-40cb-90fd-23877b976182): START TRANSACTION;
Executing (78b05a40-a051-49c2-ac9c-34627647f164): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '4f4578dd-db88-4474-8d4a-cb9f922009a9' LIMIT 1;
Executing (d19fb739-9e38-4ab4-971d-3f3d40a8fd04): COMMIT;
Executing (ba5d5c34-7b82-40cb-a3dc-9f5ece4b24a9): COMMIT;
Executing (1b80fe71-fb8a-40cb-90fd-23877b976182): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '534ec60b-0deb-41a6-97f8-2b5477f9c3a3' LIMIT 1;
topicName PDA Rollout Demo 2021-05-04T05:46:16.000+0000
Executing (0d00694f-f4b0-4ef8-bc32-7ed9cfce1637): START TRANSACTION;
topicName Capacity Building @ Scale - Experiences from FES in Odisha 2021-06-04T11:23:54.000+0000
Executing (1941ad07-5e61-407f-ba52-0e68327183ce): START TRANSACTION;
topicName ಅಟಲ್ ಭೂಜಲ್ ಯೋಜನೆಯ ಅವಲೋಕನ 2021-05-25T11:26:54.000+0000
Executing (0e3da86a-586d-4f82-92c6-a0dbae92d0bf): START TRANSACTION;
Executing (1b80fe71-fb8a-40cb-90fd-23877b976182): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9ad80e0481824f4baa916e68d12f5a81$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Manisha Shah','534ec60b-0deb-41a6-97f8-2b5477f9c3a3','India','Karnataka','Bangalore Urban District','Bengaluru','7406646122','','TRAINER TRAINEE','2024-08-31 20:47:10.488 +00:00','2024-08-31 20:47:10.488 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9ad80e0481824f4baa916e68d12f5a81$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (78b05a40-a051-49c2-ac9c-34627647f164): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a8bae1707e284074bdc5846dd78055a3$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Nabamita Guha','4f4578dd-db88-4474-8d4a-cb9f922009a9','India','West Bengal','Jalpaiguri District','Chalsa','NA','NA','TRAINEE ','2024-08-31 20:47:10.490 +00:00','2024-08-31 20:47:10.490 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a8bae1707e284074bdc5846dd78055a3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1941ad07-5e61-407f-ba52-0e68327183ce): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '827d361a-0594-4274-9856-374c4c2d09ca' LIMIT 1;
Executing (0e3da86a-586d-4f82-92c6-a0dbae92d0bf): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '978c03c9-6857-455f-b955-129c9f5d70e9' LIMIT 1;
Executing (0d00694f-f4b0-4ef8-bc32-7ed9cfce1637): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '1945733f-b5d8-4581-bb93-677e47af2892' LIMIT 1;
Executing (1941ad07-5e61-407f-ba52-0e68327183ce): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_469ec05037074313ab3aa3dbed4b167e$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Kamlesh ','827d361a-0594-4274-9856-374c4c2d09ca','India','Gujarat','Mahesana District','Mahesana','7069655266','kamlesh@cspc.org.in','TRAINEE ','2024-08-31 20:47:10.495 +00:00','2024-08-31 20:47:10.495 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_469ec05037074313ab3aa3dbed4b167e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0e3da86a-586d-4f82-92c6-a0dbae92d0bf): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5bfa8af210fe4f6ab2f20238b860a1ab$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Nitesh Kumar','978c03c9-6857-455f-b955-129c9f5d70e9','India','Rajasthan','Sawai Madhopur District','Sawai Madhopur','7073449862','niteshkumar@srijanindia.org','TRAINEE ','2024-08-31 20:47:10.497 +00:00','2024-08-31 20:47:10.497 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5bfa8af210fe4f6ab2f20238b860a1ab$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1b80fe71-fb8a-40cb-90fd-23877b976182): COMMIT;
Executing (78b05a40-a051-49c2-ac9c-34627647f164): COMMIT;
Executing (1941ad07-5e61-407f-ba52-0e68327183ce): COMMIT;
Executing (0e3da86a-586d-4f82-92c6-a0dbae92d0bf): COMMIT;
topicName CBP Orientation 2020-08-28T10:15:31.000+0000
Executing (32aaea50-51ed-4c62-803a-bdbe832c66bc): START TRANSACTION;
Executing (0d00694f-f4b0-4ef8-bc32-7ed9cfce1637): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ba0c32c5d11a4dafa36537fe32a60fca$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Arvindbhai','1945733f-b5d8-4581-bb93-677e47af2892','India','Gujarat','Sabarkatha District','Katwad','9974827946','','TRAINEE ','2024-08-31 20:47:10.504 +00:00','2024-08-31 20:47:10.504 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ba0c32c5d11a4dafa36537fe32a60fca$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Demo 2021-07-13T05:15:58.000+0000
Executing (a5ccd2b6-3be5-479b-afb1-5892edafa84e): START TRANSACTION;
topicName Introduction to Learning Experience Framework 2022-01-18T07:45:30.000+0000
Executing (d97c3156-ebc0-402a-b91e-d8adcc9c38f2): START TRANSACTION;
Executing (32aaea50-51ed-4c62-803a-bdbe832c66bc): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '45147e6f-3094-4afd-8fc9-57575771296a' LIMIT 1;
topicName PDA - Participant App 2020-08-19T10:41:37.000+0000
Executing (a589397f-648d-4731-a17c-4a29513b2367): START TRANSACTION;
Executing (a5ccd2b6-3be5-479b-afb1-5892edafa84e): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '672fb9f9-8ea1-4cc8-b905-a35e69ce645c' LIMIT 1;
Executing (d97c3156-ebc0-402a-b91e-d8adcc9c38f2): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '49762a84-722e-4ae9-be16-ba5123bd74fa' LIMIT 1;
Executing (32aaea50-51ed-4c62-803a-bdbe832c66bc): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7e13e52ddb6f46a9977626e9117736ee$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Baranda Anupa','45147e6f-3094-4afd-8fc9-57575771296a','India','Gujarat','Sabarkatha District','Himatnagar','7984766891','','TRAINEE ','2024-08-31 20:47:10.510 +00:00','2024-08-31 20:47:10.510 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7e13e52ddb6f46a9977626e9117736ee$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0d00694f-f4b0-4ef8-bc32-7ed9cfce1637): COMMIT;
Executing (a5ccd2b6-3be5-479b-afb1-5892edafa84e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7381cf725e5d4e238ac3821478bf3964$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Anupama patel','672fb9f9-8ea1-4cc8-b905-a35e69ce645c','India','Gujarat','Mehsana District','Visnagar','9723539024','','TRAINEE ','2024-08-31 20:47:10.513 +00:00','2024-08-31 20:47:10.513 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7381cf725e5d4e238ac3821478bf3964$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d97c3156-ebc0-402a-b91e-d8adcc9c38f2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e5a6cc9724ec49c3ad30b22ad3b42de8$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Dashrathsinh Rathod','49762a84-722e-4ae9-be16-ba5123bd74fa','India','Gujarat','Mehsana District','Vijapur','7984813229','','TRAINEE ','2024-08-31 20:47:10.514 +00:00','2024-08-31 20:47:10.514 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e5a6cc9724ec49c3ad30b22ad3b42de8$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a589397f-648d-4731-a17c-4a29513b2367): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'c4dd62bb-64be-451a-a6b8-128879daf705' LIMIT 1;
Executing (a5ccd2b6-3be5-479b-afb1-5892edafa84e): COMMIT;
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T06:59:12.000+0000
Executing (ccc64f88-3c23-4235-896f-46b057e7b4cc): START TRANSACTION;
Executing (32aaea50-51ed-4c62-803a-bdbe832c66bc): COMMIT;
topicName Wheat Crop Training 2020-12-31T10:12:06.000+0000
Executing (f7071212-f7ca-4bab-804a-caddb1f4ce60): START TRANSACTION;
Executing (ccc64f88-3c23-4235-896f-46b057e7b4cc): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '24fd8100-05dc-4818-ac5f-ae56daae290f' LIMIT 1;
Executing (d97c3156-ebc0-402a-b91e-d8adcc9c38f2): COMMIT;
Executing (a589397f-648d-4731-a17c-4a29513b2367): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_621b76c06e744ea189ad9385fa249e3f$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Biranchi Paikaray ','c4dd62bb-64be-451a-a6b8-128879daf705','India','Odisha','Khordha District','Bhubaneswar','7008781105','','TRAINEE ','2024-08-31 20:47:10.522 +00:00','2024-08-31 20:47:10.522 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_621b76c06e744ea189ad9385fa249e3f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f7071212-f7ca-4bab-804a-caddb1f4ce60): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '68d36af3-395e-424e-9f89-2bc8dcec7b40' LIMIT 1;
Executing (ccc64f88-3c23-4235-896f-46b057e7b4cc): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_373bcf69b4d049488f332cbbc08e6cd2$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Gona venkatamma','24fd8100-05dc-4818-ac5f-ae56daae290f','India','Andhra Pradesh','Anantapur District','Kalyandurg','7658930865','','TRAINEE ','2024-08-31 20:47:10.524 +00:00','2024-08-31 20:47:10.524 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_373bcf69b4d049488f332cbbc08e6cd2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Rollout Demo 2021-05-04T05:46:58.000+0000
Executing (1dba48e4-a533-4a96-9606-bab42536a576): START TRANSACTION;
topicName PDA Rollout Demo 2021-05-04T05:46:31.000+0000
Executing (a06a3d83-2104-4020-bc65-e6dad2b23537): START TRANSACTION;
Executing (f7071212-f7ca-4bab-804a-caddb1f4ce60): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8fdf01e419764fd3b79e9c1e15e473d5$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Sunita Suresh Ghegadmal','68d36af3-395e-424e-9f89-2bc8dcec7b40','India','Maharashtra','Nashik District','Jamgaon','8850443566','','TRAINEE ','2024-08-31 20:47:10.526 +00:00','2024-08-31 20:47:10.526 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8fdf01e419764fd3b79e9c1e15e473d5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ccc64f88-3c23-4235-896f-46b057e7b4cc): COMMIT;
Executing (1dba48e4-a533-4a96-9606-bab42536a576): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'e07661b3-b906-4829-aa72-c5c2d4b6cff5' LIMIT 1;
Executing (a589397f-648d-4731-a17c-4a29513b2367): COMMIT;
Executing (f7071212-f7ca-4bab-804a-caddb1f4ce60): COMMIT;
topicName Demonstration of PDA - ICDS Supervisors Training 2021-06-09T10:05:34.000+0000
Executing (1f1dda51-c078-47f6-97f9-4efa03c32126): START TRANSACTION;
Executing (1dba48e4-a533-4a96-9606-bab42536a576): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b15c3a911b744b2f98ce8d40fd25481b$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'PARMAR mahipa ','e07661b3-b906-4829-aa72-c5c2d4b6cff5','India','Gujarat','Sabarkatha District','Himatnagar','6354925222','','TRAINEE ','2024-08-31 20:47:10.531 +00:00','2024-08-31 20:47:10.531 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b15c3a911b744b2f98ce8d40fd25481b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a06a3d83-2104-4020-bc65-e6dad2b23537): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '623772f6-e951-4704-ad07-d8e1b852bee3' LIMIT 1;
topicName Water User Association Training 2021-04-07T06:27:56.000+0000
Executing (90ab92cf-3fff-415d-9c96-66569d0670d2): START TRANSACTION;
Executing (1f1dda51-c078-47f6-97f9-4efa03c32126): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'e91cf5ba-cf27-4a89-8cec-dc7423a1fac5' LIMIT 1;
topicName PDA - Participant App 2020-03-18T06:49:01+0000
Executing (fe55030f-9b03-49fb-91e3-c7e8598b3e6d): START TRANSACTION;
Executing (90ab92cf-3fff-415d-9c96-66569d0670d2): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'b5796159-916b-4366-8cda-b3bc91f214ec' LIMIT 1;
Executing (1f1dda51-c078-47f6-97f9-4efa03c32126): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5d81617edd594478b58a2009bef8593c$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Ramesh gor','e91cf5ba-cf27-4a89-8cec-dc7423a1fac5','India','Gujarat','Kachchh District','Gundiyali','7069868878','','TRAINEE ','2024-08-31 20:47:10.535 +00:00','2024-08-31 20:47:10.535 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5d81617edd594478b58a2009bef8593c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (fe55030f-9b03-49fb-91e3-c7e8598b3e6d): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'f64f98b3-8680-4e4f-8978-a94781c6fb94' LIMIT 1;
Executing (a06a3d83-2104-4020-bc65-e6dad2b23537): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9db4700dc8814d7ab47539793a46cdd3$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Ajay Satish Mahatme ','623772f6-e951-4704-ad07-d8e1b852bee3','India','Maharashtra','Nashik District','Pimparkhed','9209240447','','TRAINER TRAINEE','2024-08-31 20:47:10.537 +00:00','2024-08-31 20:47:10.537 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9db4700dc8814d7ab47539793a46cdd3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1dba48e4-a533-4a96-9606-bab42536a576): COMMIT;
Executing (90ab92cf-3fff-415d-9c96-66569d0670d2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_200d927860f64f2b835d666a451c7d2b$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Vasim Matadar','b5796159-916b-4366-8cda-b3bc91f214ec','India','Gujarat','Mehsana District','Visnagar','8000501598','','TRAINEE ','2024-08-31 20:47:10.539 +00:00','2024-08-31 20:47:10.539 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_200d927860f64f2b835d666a451c7d2b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1f1dda51-c078-47f6-97f9-4efa03c32126): COMMIT;
Executing (fe55030f-9b03-49fb-91e3-c7e8598b3e6d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7bf656b0d5464b609277fa8073e1ad0c$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Rinkal manubhai patel','f64f98b3-8680-4e4f-8978-a94781c6fb94','India','Gujarat','Mehsana District','Vadnagar','7201023370','','TRAINEE ','2024-08-31 20:47:10.541 +00:00','2024-08-31 20:47:10.541 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7bf656b0d5464b609277fa8073e1ad0c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (90ab92cf-3fff-415d-9c96-66569d0670d2): COMMIT;
topicName TOT of Bhujal Janakar 2021-02-05T07:24:10.000+0000
Executing (b2557f96-033e-42b2-ae85-b1a97f0f88b5): START TRANSACTION;
Executing (a06a3d83-2104-4020-bc65-e6dad2b23537): COMMIT;
topicName PDA Rollout Demo 2021-05-04T05:47:39.000+0000
Executing (e7311a48-9d95-4322-a2e4-9dea98de5bab): START TRANSACTION;
topicName Post-Harvest Management and Value Addition in Spice Crops. 2021-02-24T09:04:54.000+0000
Executing (a9016499-1cf7-4dfd-b1a9-1d6d154938cf): START TRANSACTION;
Executing (b2557f96-033e-42b2-ae85-b1a97f0f88b5): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '8a6f88f1-1dd9-48c3-8e9c-7c2ccc1096d9' LIMIT 1;
topicName Midterm Measurement of Desilting(Jalsamruddhi) 2021-02-20T11:14:05.000+0000
Executing (f28229fa-4b54-408e-8cf2-4bfd267221b6): START TRANSACTION;
Executing (fe55030f-9b03-49fb-91e3-c7e8598b3e6d): COMMIT;
Executing (a9016499-1cf7-4dfd-b1a9-1d6d154938cf): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '2c4e0071-bcce-448d-b363-6dcb75f84c57' LIMIT 1;
Executing (b2557f96-033e-42b2-ae85-b1a97f0f88b5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_dee8983935ce41d1a0c49f065d4be094$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Parmar pinakin','8a6f88f1-1dd9-48c3-8e9c-7c2ccc1096d9','India','Gujarat','Sabarkatha District','Himatnagar','9016764513','','TRAINEE ','2024-08-31 20:47:10.548 +00:00','2024-08-31 20:47:10.548 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_dee8983935ce41d1a0c49f065d4be094$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f28229fa-4b54-408e-8cf2-4bfd267221b6): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '249f141b-3fd0-4d6b-8fdb-c68de7aca819' LIMIT 1;
Executing (e7311a48-9d95-4322-a2e4-9dea98de5bab): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '95a04b38-85ea-4d1a-a65f-cbcd05be181e' LIMIT 1;
Executing (a9016499-1cf7-4dfd-b1a9-1d6d154938cf): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bcd7c972a245437e95418ded5def506e$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Nakarekanti suneetha','2c4e0071-bcce-448d-b363-6dcb75f84c57','India','Telangana','Nalgonda District','Nalgonda','7095557939','','TRAINEE ','2024-08-31 20:47:10.550 +00:00','2024-08-31 20:47:10.550 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bcd7c972a245437e95418ded5def506e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f28229fa-4b54-408e-8cf2-4bfd267221b6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9a86aacea9bf4cf7b1d03bbfadaa5d41$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Sazina','249f141b-3fd0-4d6b-8fdb-c68de7aca819','India','Gujarat','Kachchh District','Bhuj','9979856931','geoscience.service@gmail.com','TRAINER TRAINEE','2024-08-31 20:47:10.552 +00:00','2024-08-31 20:47:10.552 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9a86aacea9bf4cf7b1d03bbfadaa5d41$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Rollout Demo 2021-05-04T05:46:08.000+0000
Executing (d606a2f5-db09-479a-b595-59d1a5b53893): START TRANSACTION;
Executing (a9016499-1cf7-4dfd-b1a9-1d6d154938cf): COMMIT;
Executing (e7311a48-9d95-4322-a2e4-9dea98de5bab): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7aabca388abd4593ab7f2bf040806676$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Uma','95a04b38-85ea-4d1a-a65f-cbcd05be181e','India','Maharashtra','Pune District','Pune','9822861802','','TRAINEE ','2024-08-31 20:47:10.554 +00:00','2024-08-31 20:47:10.554 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7aabca388abd4593ab7f2bf040806676$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b2557f96-033e-42b2-ae85-b1a97f0f88b5): COMMIT;
topicName Demonstration of PDA - ICDS Supervisors Training 2021-06-10T05:25:32.000+0000
Executing (e3975f9c-d2d9-45f3-ab91-b67dff3586c9): START TRANSACTION;
Executing (d606a2f5-db09-479a-b595-59d1a5b53893): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '7819afc7-9754-4b53-976c-722417249f0f' LIMIT 1;
Executing (f28229fa-4b54-408e-8cf2-4bfd267221b6): COMMIT;
Executing (e3975f9c-d2d9-45f3-ab91-b67dff3586c9): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '7108b369-0740-47e3-a6c6-ff551de5b1a7' LIMIT 1;
Executing (d606a2f5-db09-479a-b595-59d1a5b53893): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_de82234a0fcc4db182663e22219ecf1c$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Anupriya Banerjee','7819afc7-9754-4b53-976c-722417249f0f','India','West Bengal','Kolkata District','Kolkata','8897311538','','TRAINER TRAINEE','2024-08-31 20:47:10.559 +00:00','2024-08-31 20:47:10.559 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_de82234a0fcc4db182663e22219ecf1c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Rollout Demo 2021-05-04T05:46:04.000+0000
Executing (e1ba1e56-0ef1-4ae5-a161-df600652a64f): START TRANSACTION;
Executing (e7311a48-9d95-4322-a2e4-9dea98de5bab): COMMIT;
Executing (e3975f9c-d2d9-45f3-ab91-b67dff3586c9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fbbbb5367d6f4771bcf6abdf5d04aafd$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Debarati Mondal','7108b369-0740-47e3-a6c6-ff551de5b1a7','India','West Bengal','Birbhum District','Rajnagar','9073497618','','TRAINEE ','2024-08-31 20:47:10.562 +00:00','2024-08-31 20:47:10.562 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fbbbb5367d6f4771bcf6abdf5d04aafd$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e1ba1e56-0ef1-4ae5-a161-df600652a64f): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '1e094070-9b95-4034-92b4-559a6aff57fc' LIMIT 1;
topicName Content Development | T1.01 | DG 2020-11-26T11:45:10.000+0000
Executing (36fa748b-4eee-49ab-b523-86acc0beec38): START TRANSACTION;
Executing (e1ba1e56-0ef1-4ae5-a161-df600652a64f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6eba1a647e3d42cb83d93733829644ab$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Lalji japare','1e094070-9b95-4034-92b4-559a6aff57fc','India','Gujarat','Kachchh District','Gundiyali','9898225460','','TRAINEE ','2024-08-31 20:47:10.564 +00:00','2024-08-31 20:47:10.564 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6eba1a647e3d42cb83d93733829644ab$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d606a2f5-db09-479a-b595-59d1a5b53893): COMMIT;
topicName PDA Demo 2021-08-27T06:49:04.000+0000
Executing (3620c742-6447-4ed8-b634-7d229fc9a05d): START TRANSACTION;
Executing (e1ba1e56-0ef1-4ae5-a161-df600652a64f): COMMIT;
topicName CBP Orientation 2020-08-28T10:16:08.000+0000
Executing (55e92b86-cdbb-474c-8c1c-be56b4185b5b): START TRANSACTION;
Executing (36fa748b-4eee-49ab-b523-86acc0beec38): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '4084a65c-8c7b-4f94-bf3f-cb5c6f9d7947' LIMIT 1;
Executing (e3975f9c-d2d9-45f3-ab91-b67dff3586c9): COMMIT;
topicName Orientation on Abhy and PGWM - II 2021-08-14T11:23:02.000+0000
Executing (36c4599f-ec14-41f4-8988-a3a1a6ef389d): START TRANSACTION;
Executing (55e92b86-cdbb-474c-8c1c-be56b4185b5b): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '8443fea0-a160-4b2e-be83-604f9184622f' LIMIT 1;
Executing (36fa748b-4eee-49ab-b523-86acc0beec38): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fc4685327d544eb09d28038966c38909$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Arpita Das PRASARI','4084a65c-8c7b-4f94-bf3f-cb5c6f9d7947','India','West Bengal','Jalpaiguri District','Mangalbari','9083757679','','TRAINEE ','2024-08-31 20:47:10.570 +00:00','2024-08-31 20:47:10.570 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fc4685327d544eb09d28038966c38909$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3620c742-6447-4ed8-b634-7d229fc9a05d): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'eabded96-d1c0-4ec9-a932-4b57b466a34c' LIMIT 1;
Executing (36c4599f-ec14-41f4-8988-a3a1a6ef389d): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'b9c083ae-1a2d-41ec-ace2-2459410042a9' LIMIT 1;
Executing (55e92b86-cdbb-474c-8c1c-be56b4185b5b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_500f23d4e3f5416b95866fb10269d534$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Sudeep','8443fea0-a160-4b2e-be83-604f9184622f','India','Karnataka','Bengaluru Urban District','Bengaluru','9739173639','','TRAINEE ','2024-08-31 20:47:10.573 +00:00','2024-08-31 20:47:10.573 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_500f23d4e3f5416b95866fb10269d534$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA - Participant App 2020-08-19T09:37:25.000+0000
Executing (cb0e814a-c650-461d-ad5c-0c00e7bd69aa): START TRANSACTION;
Executing (36c4599f-ec14-41f4-8988-a3a1a6ef389d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b00f15d978c848419d1f1a6b622e5c6c$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Shakti soni','b9c083ae-1a2d-41ec-ace2-2459410042a9','India','Rajasthan','Churu District','Sujangarh','8107025671','','TRAINEE ','2024-08-31 20:47:10.576 +00:00','2024-08-31 20:47:10.576 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b00f15d978c848419d1f1a6b622e5c6c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3620c742-6447-4ed8-b634-7d229fc9a05d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_403a82f33bd345a2a11502c9aed8aabe$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Sunil Kumar Pandey','eabded96-d1c0-4ec9-a932-4b57b466a34c','India','Bihar','Muzaffarpur District','Muzaffarpur','9451224882','','TRAINEE ','2024-08-31 20:47:10.578 +00:00','2024-08-31 20:47:10.578 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_403a82f33bd345a2a11502c9aed8aabe$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (36fa748b-4eee-49ab-b523-86acc0beec38): COMMIT;
Executing (36c4599f-ec14-41f4-8988-a3a1a6ef389d): COMMIT;
Executing (cb0e814a-c650-461d-ad5c-0c00e7bd69aa): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'da44a0db-c91c-4437-8604-8bd05e2703dc' LIMIT 1;
Executing (55e92b86-cdbb-474c-8c1c-be56b4185b5b): COMMIT;
topicName PDA mock session - Churu 2020-12-16T06:46:21.000+0000
Executing (f2feb1f4-4091-4c32-b096-bba2b686c04e): START TRANSACTION;
Executing (cb0e814a-c650-461d-ad5c-0c00e7bd69aa): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2f56663c630f41e1930df50336fc2fca$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Kanika Pokhariya','da44a0db-c91c-4437-8604-8bd05e2703dc','India','Gujarat','Kachchh District','Bhuj','7202016474','','TRAINEE ','2024-08-31 20:47:10.584 +00:00','2024-08-31 20:47:10.584 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2f56663c630f41e1930df50336fc2fca$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA - Participant App 2020-08-19T09:46:14.000+0000
Executing (18454f14-a94a-439b-86c3-b370ade1bce8): START TRANSACTION;
Executing (3620c742-6447-4ed8-b634-7d229fc9a05d): COMMIT;
Executing (f2feb1f4-4091-4c32-b096-bba2b686c04e): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'fd95ee30-3ab4-4c79-a54d-225162900383' LIMIT 1;
Executing (cb0e814a-c650-461d-ad5c-0c00e7bd69aa): COMMIT;
Executing (18454f14-a94a-439b-86c3-b370ade1bce8): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '8534ca90-db07-4871-9011-4d41455f192c' LIMIT 1;
topicName PDA Demo 2021-04-28T06:23:25.000+0000
Executing (c99a413d-9425-46a8-907a-c6d6e51fb3e0): START TRANSACTION;
Executing (f2feb1f4-4091-4c32-b096-bba2b686c04e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2d452095c2e0459ab0a8d7f8cea03173$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Dinesh tarsi ','fd95ee30-3ab4-4c79-a54d-225162900383','India','Gujarat','Kutch District','Bhimdevka','9510430747','','TRAINEE ','2024-08-31 20:47:10.592 +00:00','2024-08-31 20:47:10.592 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2d452095c2e0459ab0a8d7f8cea03173$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Orientation on Abhy and PGWM - II 2021-08-14T11:58:24.000+0000
Executing (29e66c8c-4d0e-467b-8adb-fc26b615636a): START TRANSACTION;
Executing (18454f14-a94a-439b-86c3-b370ade1bce8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1ce3db449e964897a64ee5bbb71bbe47$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Vashram desai','8534ca90-db07-4871-9011-4d41455f192c','India','Gujarat','Kutch District','Taga','9687163518','','TRAINEE ','2024-08-31 20:47:10.595 +00:00','2024-08-31 20:47:10.595 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1ce3db449e964897a64ee5bbb71bbe47$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c99a413d-9425-46a8-907a-c6d6e51fb3e0): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'e84e38c5-38bc-47e9-b5f1-a6c47d653c1e' LIMIT 1;
topicName Introduction to atomised content 2022-02-15T08:39:52.000+0000
Executing (369d0c6d-c68d-4236-949a-afe9b8c0acaa): START TRANSACTION;
Executing (f2feb1f4-4091-4c32-b096-bba2b686c04e): COMMIT;
Executing (29e66c8c-4d0e-467b-8adb-fc26b615636a): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '04512cf0-6175-4c6f-a757-a792934cc3ae' LIMIT 1;
Executing (18454f14-a94a-439b-86c3-b370ade1bce8): COMMIT;
Executing (c99a413d-9425-46a8-907a-c6d6e51fb3e0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8fdd179255f9405eab5e7291c820fe65$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Navghan bharvad','e84e38c5-38bc-47e9-b5f1-a6c47d653c1e','India','Gujarat','Kutch District','Thoriari','9925961471','','TRAINEE ','2024-08-31 20:47:10.602 +00:00','2024-08-31 20:47:10.602 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8fdd179255f9405eab5e7291c820fe65$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (369d0c6d-c68d-4236-949a-afe9b8c0acaa): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'bf0950c4-678f-41ec-a679-f64208fd1dd2' LIMIT 1;
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-02-16T06:50:35.000+0000
Executing (a1e3e0ae-20cc-44c9-a519-10aacf9c06c4): START TRANSACTION;
Executing (29e66c8c-4d0e-467b-8adb-fc26b615636a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_dd65ad7aad064ffd8cc334630bab517c$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Pintu Kumar Gupta','04512cf0-6175-4c6f-a757-a792934cc3ae','India','Uttar Pradesh','Chitrakoot District','Mau Mustkil','8826020622','pintukumargupta@srijanindia.org','TRAINEE ','2024-08-31 20:47:10.605 +00:00','2024-08-31 20:47:10.605 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_dd65ad7aad064ffd8cc334630bab517c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-02-16T06:34:57.000+0000
Executing (dd20a786-b777-4d8c-a238-d82afd03b07d): START TRANSACTION;
Executing (a1e3e0ae-20cc-44c9-a519-10aacf9c06c4): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '0ab69b7d-9e8e-4127-aa10-ed2172d2ce5e' LIMIT 1;
Executing (369d0c6d-c68d-4236-949a-afe9b8c0acaa): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b2d60b46dd9d41a4ad9aed60d4453a15$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Shakti','bf0950c4-678f-41ec-a679-f64208fd1dd2','India','Gujarat','Dahod District','Dahod','8141774872','','TRAINEE ','2024-08-31 20:47:10.608 +00:00','2024-08-31 20:47:10.608 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b2d60b46dd9d41a4ad9aed60d4453a15$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c99a413d-9425-46a8-907a-c6d6e51fb3e0): COMMIT;
Executing (a1e3e0ae-20cc-44c9-a519-10aacf9c06c4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4de4a65ff35c443f84e8963e1b9b932e$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Gaurav Parmar','0ab69b7d-9e8e-4127-aa10-ed2172d2ce5e','India','Gujarat','Kachchh District','Bhuj','9825367374','g_hp@rediffmail.com','TRAINEE ','2024-08-31 20:47:10.609 +00:00','2024-08-31 20:47:10.609 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4de4a65ff35c443f84e8963e1b9b932e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (dd20a786-b777-4d8c-a238-d82afd03b07d): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '9c993b60-1289-4c9c-a4cc-5b34e3a4c330' LIMIT 1;
Executing (29e66c8c-4d0e-467b-8adb-fc26b615636a): COMMIT;
Executing (a1e3e0ae-20cc-44c9-a519-10aacf9c06c4): COMMIT;
Executing (dd20a786-b777-4d8c-a238-d82afd03b07d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_94e9ec9d09ea4e848aab719437ed15be$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Rucha Deshmukh','9c993b60-1289-4c9c-a4cc-5b34e3a4c330','India','Maharashtra','Pune District','Pune','8087877515','','TRAINER TRAINEE','2024-08-31 20:47:10.612 +00:00','2024-08-31 20:47:10.612 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_94e9ec9d09ea4e848aab719437ed15be$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (369d0c6d-c68d-4236-949a-afe9b8c0acaa): COMMIT;
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-02-16T06:45:34.000+0000
Executing (74f84c22-0601-49bd-9900-d51930f412ab): START TRANSACTION;
topicName Crop Water Budgeting Overview 2020-12-16T07:15:55.000+0000
Executing (a750d823-5f14-41c7-9d52-3dc7a3433165): START TRANSACTION;
topicName PDA Demo 2021-07-13T05:16:25.000+0000
Executing (e7fe58b6-30f5-4a01-9695-57c13303c97f): START TRANSACTION;
topicName Introduction to Learning Experience Framework 2022-01-18T07:44:35.000+0000
Executing (f1cfc0f9-4ff8-4bcd-9c64-e60185097c41): START TRANSACTION;
Executing (a750d823-5f14-41c7-9d52-3dc7a3433165): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '48567399-eb17-4b8f-89b9-98d3f82e745a' LIMIT 1;
Executing (e7fe58b6-30f5-4a01-9695-57c13303c97f): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'e97fd0ba-3afc-46e6-a51a-d46194af9fe2' LIMIT 1;
Executing (74f84c22-0601-49bd-9900-d51930f412ab): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '77f89c51-9282-4033-9a94-daebbc0b515f' LIMIT 1;
Executing (dd20a786-b777-4d8c-a238-d82afd03b07d): COMMIT;
Executing (a750d823-5f14-41c7-9d52-3dc7a3433165): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a6b7557d43414817b47705b2a306aad2$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'lavanya','48567399-eb17-4b8f-89b9-98d3f82e745a','India','Telangana','Rangareddy District','Hyderabad','9440814571','','TRAINEE ','2024-08-31 20:47:10.619 +00:00','2024-08-31 20:47:10.619 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a6b7557d43414817b47705b2a306aad2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e7fe58b6-30f5-4a01-9695-57c13303c97f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_25a345c353bb4bc8b96b170f79062681$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Snenesh','e97fd0ba-3afc-46e6-a51a-d46194af9fe2','India','Andhra Pradesh','Chittoor District','Madanapalle','9963807438','','TRAINEE ','2024-08-31 20:47:10.620 +00:00','2024-08-31 20:47:10.620 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_25a345c353bb4bc8b96b170f79062681$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (74f84c22-0601-49bd-9900-d51930f412ab): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_697df8fb5a244306976d82cae606e5a3$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Chaudhary Puriben kanjibhai','77f89c51-9282-4033-9a94-daebbc0b515f','India','Gujarat','Mehsana District','Khatoda','9638899295','','TRAINEE ','2024-08-31 20:47:10.621 +00:00','2024-08-31 20:47:10.621 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_697df8fb5a244306976d82cae606e5a3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f1cfc0f9-4ff8-4bcd-9c64-e60185097c41): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '9f743472-2191-48cd-81c8-40eee1d96e31' LIMIT 1;
Executing (a750d823-5f14-41c7-9d52-3dc7a3433165): COMMIT;
Executing (e7fe58b6-30f5-4a01-9695-57c13303c97f): COMMIT;
topicName PDA Demo 2021-08-27T06:49:18.000+0000
Executing (33bc568d-8067-491f-8299-7a0d4dfef26e): START TRANSACTION;
topicName Demonstration of PDA - ICDS Supervisors Training 2021-06-09T10:07:01.000+0000
Executing (7a2bf184-ff80-4004-982c-a424224d1852): START TRANSACTION;
topicName PDA - Participant App 2020-04-07T09:20:44.000+0000
Executing (c62cb56d-a8b1-4203-b396-dd3273f20d00): START TRANSACTION;
Executing (33bc568d-8067-491f-8299-7a0d4dfef26e): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'd02b6311-6074-4fa1-898d-d9e60793c1a5' LIMIT 1;
Executing (f1cfc0f9-4ff8-4bcd-9c64-e60185097c41): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d80895d5ee3f417bafcaeee9595ce095$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Hrushikesh Mahapatra ','9f743472-2191-48cd-81c8-40eee1d96e31','India','Odisha','Khordha District','Bhubaneswar','9437229894','','TRAINEE ','2024-08-31 20:47:10.630 +00:00','2024-08-31 20:47:10.630 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d80895d5ee3f417bafcaeee9595ce095$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (74f84c22-0601-49bd-9900-d51930f412ab): COMMIT;
Executing (7a2bf184-ff80-4004-982c-a424224d1852): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'e6afff30-727b-4d6a-9a0f-a21ce2ac628c' LIMIT 1;
Executing (c62cb56d-a8b1-4203-b396-dd3273f20d00): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '3da1ae03-ee8f-4739-b245-d477b387772d' LIMIT 1;
Executing (33bc568d-8067-491f-8299-7a0d4dfef26e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_618bd780455e46b198d8d25949910a19$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Dhirenbhai','d02b6311-6074-4fa1-898d-d9e60793c1a5','India','Gujarat','Kachchh District','Budharmora','9879935114','','TRAINEE ','2024-08-31 20:47:10.635 +00:00','2024-08-31 20:47:10.635 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_618bd780455e46b198d8d25949910a19$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7a2bf184-ff80-4004-982c-a424224d1852): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9709e23eaa024207ab24fea6614cad3c$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Deepa','e6afff30-727b-4d6a-9a0f-a21ce2ac628c','India','Uttarakhand','Nainital District','Simyal Gaon','7500249383','','TRAINEE ','2024-08-31 20:47:10.637 +00:00','2024-08-31 20:47:10.637 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9709e23eaa024207ab24fea6614cad3c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c62cb56d-a8b1-4203-b396-dd3273f20d00): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_79e23f5301384e7d80d6282b6441b089$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Thakor mukeshkumar','3da1ae03-ee8f-4739-b245-d477b387772d','India','Gujarat','Mehsana District','Sundhia','9662898172','','TRAINEE ','2024-08-31 20:47:10.638 +00:00','2024-08-31 20:47:10.638 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_79e23f5301384e7d80d6282b6441b089$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Rollout Demo 2021-05-04T07:10:38.000+0000
Executing (ae20516d-b998-45e9-ba7b-7d0f8da33d62): START TRANSACTION;
Executing (f1cfc0f9-4ff8-4bcd-9c64-e60185097c41): COMMIT;
Executing (7a2bf184-ff80-4004-982c-a424224d1852): COMMIT;
Executing (c62cb56d-a8b1-4203-b396-dd3273f20d00): COMMIT;
Executing (ae20516d-b998-45e9-ba7b-7d0f8da33d62): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '01f6c773-65a6-4875-a9e1-3c649ba6c333' LIMIT 1;
Executing (33bc568d-8067-491f-8299-7a0d4dfef26e): COMMIT;
topicName Introduction to Learning Objectives 2022-02-22T07:40:02.000+0000
Executing (144d73fb-8f89-44ac-9f62-5922ef1c37a9): START TRANSACTION;
topicName PDA Rollout Demo 2021-05-04T06:20:59.000+0000
Executing (aaea8828-5900-47f5-a731-d031a98b172f): START TRANSACTION;
Executing (ae20516d-b998-45e9-ba7b-7d0f8da33d62): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e08bd9ba3ed74132ac970c973a467c44$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Ratansinh jagusinh chauhan','01f6c773-65a6-4875-a9e1-3c649ba6c333','India','Gujarat','Mehsana District','Vadnagar','8140102466','','TRAINEE ','2024-08-31 20:47:10.648 +00:00','2024-08-31 20:47:10.648 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e08bd9ba3ed74132ac970c973a467c44$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA - Participant App 2020-03-18T06:48:47+0000
Executing (7f696b1c-d908-4d79-afee-2bce5cccc602): START TRANSACTION;
Executing (144d73fb-8f89-44ac-9f62-5922ef1c37a9): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '84b658c9-cb9b-4984-8f29-7186c1fa81bb' LIMIT 1;
Executing (aaea8828-5900-47f5-a731-d031a98b172f): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'ead391a6-2c6e-4389-9bf3-f949dcc4b97d' LIMIT 1;
Executing (7f696b1c-d908-4d79-afee-2bce5cccc602): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'd3ad7842-a5a6-462c-8a5d-b693bfd2cf89' LIMIT 1;
topicName Orientation on Abhy and PGWM 2021-08-14T07:27:29.000+0000
Executing (374b59ea-571d-46c6-863c-a7fcdb9ac437): START TRANSACTION;
Executing (144d73fb-8f89-44ac-9f62-5922ef1c37a9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0fb737bbdd1e4a7084a6db2cc032d500$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Gads b patel','84b658c9-cb9b-4984-8f29-7186c1fa81bb','India','Gujarat','Mehsana District','Visnagar','9974181497','','TRAINEE ','2024-08-31 20:47:10.655 +00:00','2024-08-31 20:47:10.655 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0fb737bbdd1e4a7084a6db2cc032d500$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (aaea8828-5900-47f5-a731-d031a98b172f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fbb8173bea264c18908be3d8bab64452$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Gazala ','ead391a6-2c6e-4389-9bf3-f949dcc4b97d','India','Gujarat','Ahmedabad District','Ahmedabad','9099019370','','TRAINEE ','2024-08-31 20:47:10.657 +00:00','2024-08-31 20:47:10.657 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fbb8173bea264c18908be3d8bab64452$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7f696b1c-d908-4d79-afee-2bce5cccc602): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8b691c7c8075469eb1218d13c491e09f$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Manoj Bhagwat','d3ad7842-a5a6-462c-8a5d-b693bfd2cf89','India','Maharashtra','Pune District','Pune','9689942642','bmanojbhagwat@gmail.com','TRAINEE ','2024-08-31 20:47:10.658 +00:00','2024-08-31 20:47:10.658 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8b691c7c8075469eb1218d13c491e09f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ae20516d-b998-45e9-ba7b-7d0f8da33d62): COMMIT;
Executing (144d73fb-8f89-44ac-9f62-5922ef1c37a9): COMMIT;
Executing (aaea8828-5900-47f5-a731-d031a98b172f): COMMIT;
Executing (374b59ea-571d-46c6-863c-a7fcdb9ac437): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '518c58b9-1081-495d-8c06-520a0f127641' LIMIT 1;
topicName Post-Harvest Management and Value Addition in Spice Crops. 2021-02-24T08:42:13.000+0000
Executing (231e986d-a4fb-4566-804d-9ccd70e01835): START TRANSACTION;
topicName CBP Orientation 2020-08-17T10:15:40.000+0000
Executing (cc07bc90-af24-479d-a979-7ab45038bd06): START TRANSACTION;
topicName PDA Rollout Demo 2021-05-04T05:46:06.000+0000
Executing (8ad7358e-8b56-418d-84e5-14fb488ee6d4): START TRANSACTION;
Executing (7f696b1c-d908-4d79-afee-2bce5cccc602): COMMIT;
Executing (231e986d-a4fb-4566-804d-9ccd70e01835): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'e7ca78b7-9578-4795-ae25-a860c3976649' LIMIT 1;
Executing (cc07bc90-af24-479d-a979-7ab45038bd06): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '84eef6b9-3acb-40f3-a8b3-f9ad7a2fb257' LIMIT 1;
Executing (8ad7358e-8b56-418d-84e5-14fb488ee6d4): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'e96e2ffe-dcae-4be3-b2b9-6066b9969f8b' LIMIT 1;
Executing (374b59ea-571d-46c6-863c-a7fcdb9ac437): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2b7c78bea2e04d608627f2c5567f1a7f$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Rathod  Gajendrasinh javansinh ','518c58b9-1081-495d-8c06-520a0f127641','India','Gujarat','Sabarkatha District','Vajapur','7698820367','','TRAINEE ','2024-08-31 20:47:10.669 +00:00','2024-08-31 20:47:10.669 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2b7c78bea2e04d608627f2c5567f1a7f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (231e986d-a4fb-4566-804d-9ccd70e01835): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_35111c40b979427184e3af5da96187c0$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Jagrutiben Thakor','e7ca78b7-9578-4795-ae25-a860c3976649','India','Gujarat','Mehsana District','Vadnagar','8487802127','','TRAINEE ','2024-08-31 20:47:10.671 +00:00','2024-08-31 20:47:10.671 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_35111c40b979427184e3af5da96187c0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cc07bc90-af24-479d-a979-7ab45038bd06): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9ec5c9bc8ac7478da09f58d4ab9d4dec$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Ashvinkumar Prajapati ','84eef6b9-3acb-40f3-a8b3-f9ad7a2fb257','India','Gujarat','Mehsana District','Vadnagar','8141079997','','TRAINEE','2024-08-31 20:47:10.673 +00:00','2024-08-31 20:47:10.673 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9ec5c9bc8ac7478da09f58d4ab9d4dec$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8ad7358e-8b56-418d-84e5-14fb488ee6d4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e34af182e78d47329a47eca9184c42fa$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Kaniphnath Anna Madhawai','e96e2ffe-dcae-4be3-b2b9-6066b9969f8b','India','Maharashtra','Nashik District','Erandgaon Kh.','7588615905','','TRAINEE ','2024-08-31 20:47:10.674 +00:00','2024-08-31 20:47:10.674 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e34af182e78d47329a47eca9184c42fa$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Demo 2021-08-27T06:48:52.000+0000
Executing (3cd9918e-6654-439b-bf1a-01ecd6ea0b0c): START TRANSACTION;
Executing (231e986d-a4fb-4566-804d-9ccd70e01835): COMMIT;
Executing (cc07bc90-af24-479d-a979-7ab45038bd06): COMMIT;
Executing (374b59ea-571d-46c6-863c-a7fcdb9ac437): COMMIT;
topicName PDA Rollout Demo 2021-05-04T05:47:09.000+0000
Executing (4647bd2d-ce73-4167-97ab-f9de615885c0): START TRANSACTION;
topicName PDA Rollout Demo 2021-05-04T05:46:58.000+0000
Executing (ff6044e8-5d36-4d18-a9a5-4439cf0908d5): START TRANSACTION;
Executing (3cd9918e-6654-439b-bf1a-01ecd6ea0b0c): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'a342759f-5fbb-42dd-804b-f8875e53362f' LIMIT 1;
Executing (8ad7358e-8b56-418d-84e5-14fb488ee6d4): COMMIT;
Executing (4647bd2d-ce73-4167-97ab-f9de615885c0): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'f1708eec-aa7b-484e-8e5d-9e066c140cec' LIMIT 1;
Executing (ff6044e8-5d36-4d18-a9a5-4439cf0908d5): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '1da12f92-cab3-4f8b-b8c7-4c9baf5a32f9' LIMIT 1;
Executing (3cd9918e-6654-439b-bf1a-01ecd6ea0b0c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ff8d644c93b84048b19f9b8b1b1f1988$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Bhatta Ram','a342759f-5fbb-42dd-804b-f8875e53362f','India','Rajasthan','Dungarpur District','Dungarpur','9929762999','bhattaramtapra@gmail.com','TRAINER TRAINEE','2024-08-31 20:47:10.681 +00:00','2024-08-31 20:47:10.681 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ff8d644c93b84048b19f9b8b1b1f1988$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Rollout Demo 2021-05-04T05:46:34.000+0000
Executing (0afe2fd2-b9a2-4627-adc3-18a9de6664b1): START TRANSACTION;
Executing (4647bd2d-ce73-4167-97ab-f9de615885c0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_001b963381bb407ba031c9a073fb73ad$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'AR Ahirwal','f1708eec-aa7b-484e-8e5d-9e066c140cec','India','Madhya Pradesh','Bhopal District','Bhopal','9993635623','','TRAINEE ','2024-08-31 20:47:10.687 +00:00','2024-08-31 20:47:10.687 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_001b963381bb407ba031c9a073fb73ad$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ff6044e8-5d36-4d18-a9a5-4439cf0908d5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_93dd8a0948a94543a3ddd85e31d409fa$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'DHARAMSHI GOHIL','1da12f92-cab3-4f8b-b8c7-4c9baf5a32f9','India','Gujarat','Kutch District','Adesar','9409858994','','TRAINEE ','2024-08-31 20:47:10.689 +00:00','2024-08-31 20:47:10.689 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_93dd8a0948a94543a3ddd85e31d409fa$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3cd9918e-6654-439b-bf1a-01ecd6ea0b0c): COMMIT;
topicName Water User Association Training 2021-04-03T09:20:15.000+0000
Executing (79a1fc48-f8be-4786-9938-a712ae6fb195): START TRANSACTION;
Executing (4647bd2d-ce73-4167-97ab-f9de615885c0): COMMIT;
topicName Virtual Interactions - Needs and Benefits 2020-11-19T10:13:51.000+0000
Executing (5e15a642-59ce-491a-ab82-95da0187afd1): START TRANSACTION;
Executing (79a1fc48-f8be-4786-9938-a712ae6fb195): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'aa0791ae-e282-4470-9c63-a4e4c898bf3e' LIMIT 1;
Executing (0afe2fd2-b9a2-4627-adc3-18a9de6664b1): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'c8656f2b-d154-4578-935a-bd44c29e35d0' LIMIT 1;
topicName Test 1 2021-04-05T07:55:36.000+0000
Executing (b65750c7-92f4-4685-829a-5db222dd77a9): START TRANSACTION;
Executing (5e15a642-59ce-491a-ab82-95da0187afd1): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '985b18b2-845a-4900-8463-1a8832f9b8a3' LIMIT 1;
Executing (79a1fc48-f8be-4786-9938-a712ae6fb195): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3d74d4792f24475cae593a036fe48fa7$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Dhanjirathod','aa0791ae-e282-4470-9c63-a4e4c898bf3e','India','Gujarat','Kachchh District','','9265816060','','TRAINEE ','2024-08-31 20:47:10.698 +00:00','2024-08-31 20:47:10.698 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3d74d4792f24475cae593a036fe48fa7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ff6044e8-5d36-4d18-a9a5-4439cf0908d5): COMMIT;
Executing (b65750c7-92f4-4685-829a-5db222dd77a9): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'd71b934c-81c3-47d1-8a1b-bfa821e53873' LIMIT 1;
Executing (5e15a642-59ce-491a-ab82-95da0187afd1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_94f540e818a14d019cefdf1727db810a$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Patel kiran kumar bardevbhai','985b18b2-845a-4900-8463-1a8832f9b8a3','India','Gujarat','Mehsana District','Mehsana','9998529640','','TRAINEE ','2024-08-31 20:47:10.701 +00:00','2024-08-31 20:47:10.701 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_94f540e818a14d019cefdf1727db810a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0afe2fd2-b9a2-4627-adc3-18a9de6664b1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f056e62e6c534adbb172eba12f17b0d4$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Miryala  padma','c8656f2b-d154-4578-935a-bd44c29e35d0','India','Telangana','Nalgonda District','Ghattuppal','8096161599','','TRAINEE ','2024-08-31 20:47:10.703 +00:00','2024-08-31 20:47:10.703 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f056e62e6c534adbb172eba12f17b0d4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b65750c7-92f4-4685-829a-5db222dd77a9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4adfef411ac24fba9a3ddf68f99d6f60$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'sandip','d71b934c-81c3-47d1-8a1b-bfa821e53873','India','Maharashtra','Nandurbar District','Nandurbar','9970105642','','TRAINEE ','2024-08-31 20:47:10.705 +00:00','2024-08-31 20:47:10.705 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4adfef411ac24fba9a3ddf68f99d6f60$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5e15a642-59ce-491a-ab82-95da0187afd1): COMMIT;
Executing (79a1fc48-f8be-4786-9938-a712ae6fb195): COMMIT;
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-02-16T06:50:59.000+0000
Executing (bc27359c-f32a-4694-a77c-35bd52e065c9): START TRANSACTION;
Executing (b65750c7-92f4-4685-829a-5db222dd77a9): COMMIT;
topicName Post-Harvest Management and Value Addition in Spice Crops. 2021-02-24T08:46:28.000+0000
Executing (14f19e23-cb34-4ad5-85d0-7a88167d9a75): START TRANSACTION;
topicName Orientation on Abhy and PGWM - II 2021-08-14T11:57:50.000+0000
Executing (9addb1e1-d389-423f-983d-f0bdac7e3f4b): START TRANSACTION;
Executing (0afe2fd2-b9a2-4627-adc3-18a9de6664b1): COMMIT;
topicName Introduction to Learning Objectives 2022-02-22T07:23:32.000+0000
Executing (1af4f3e0-36e4-476b-a580-760dd856e44f): START TRANSACTION;
Executing (14f19e23-cb34-4ad5-85d0-7a88167d9a75): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'e6a08c80-8a53-4490-a3b4-bd407bfb5558' LIMIT 1;
Executing (9addb1e1-d389-423f-983d-f0bdac7e3f4b): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '0f021e0f-b508-4fbf-91a2-e256ffde7de3' LIMIT 1;
Executing (bc27359c-f32a-4694-a77c-35bd52e065c9): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '24116eb6-0d95-472a-befc-206e7e1f787c' LIMIT 1;
Executing (1af4f3e0-36e4-476b-a580-760dd856e44f): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'b16b7c59-7de2-41e9-9a24-d63e33c0a825' LIMIT 1;
Executing (14f19e23-cb34-4ad5-85d0-7a88167d9a75): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f839f569cdb44d22b6e3e5aef69615bc$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Rajeshbgai mohanvgai sathvara','e6a08c80-8a53-4490-a3b4-bd407bfb5558','India','Gujarat','Kachchh District','Budharmora','9879338746','','TRAINEE ','2024-08-31 20:47:10.717 +00:00','2024-08-31 20:47:10.717 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f839f569cdb44d22b6e3e5aef69615bc$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9addb1e1-d389-423f-983d-f0bdac7e3f4b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b90d8f51909f4a4682dc2387084dc482$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Patel vipul','0f021e0f-b508-4fbf-91a2-e256ffde7de3','India','Gujarat','Mehsana District','Kuvasana','7698751455','','TRAINEE ','2024-08-31 20:47:10.718 +00:00','2024-08-31 20:47:10.718 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b90d8f51909f4a4682dc2387084dc482$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Demonstration of PDA - ICDS Supervisors Training 2021-06-09T10:22:52.000+0000
Executing (65fd65c1-3336-4f0a-9bde-626cdd3c3f43): START TRANSACTION;
Executing (1af4f3e0-36e4-476b-a580-760dd856e44f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c728855166c14ec38facd3d43e36dcaa$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Jitendra Sonawane','b16b7c59-7de2-41e9-9a24-d63e33c0a825','India','Maharashtra','Nandurbar District','Nandurbar','7720045808','','TRAINEE ','2024-08-31 20:47:10.720 +00:00','2024-08-31 20:47:10.720 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c728855166c14ec38facd3d43e36dcaa$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bc27359c-f32a-4694-a77c-35bd52e065c9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ce3bde3ff05d40e1b16defa274fab664$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Binita Chowdhury','24116eb6-0d95-472a-befc-206e7e1f787c','India','West Bengal','Jalpaiguri District','Chalsa','9474891634','','TRAINEE ','2024-08-31 20:47:10.721 +00:00','2024-08-31 20:47:10.721 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ce3bde3ff05d40e1b16defa274fab664$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (65fd65c1-3336-4f0a-9bde-626cdd3c3f43): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'f838dac6-0aca-4a3c-a686-f4e012303539' LIMIT 1;
Executing (14f19e23-cb34-4ad5-85d0-7a88167d9a75): COMMIT;
Executing (9addb1e1-d389-423f-983d-f0bdac7e3f4b): COMMIT;
Executing (65fd65c1-3336-4f0a-9bde-626cdd3c3f43): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5fc48014fcc94776b7948c146a72ee8c$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Amrtha Kasturi Rangan','f838dac6-0aca-4a3c-a686-f4e012303539','India','Odisha','Sambalpur District','Sambalpur','9820204164','','TRAINER TRAINEE','2024-08-31 20:47:10.724 +00:00','2024-08-31 20:47:10.724 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5fc48014fcc94776b7948c146a72ee8c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Orientation on Abhy and PGWM 2021-08-14T07:23:42.000+0000
Executing (f919a6fe-d3fe-42cc-8baf-3981531b7649): START TRANSACTION;
Executing (1af4f3e0-36e4-476b-a580-760dd856e44f): COMMIT;
Executing (bc27359c-f32a-4694-a77c-35bd52e065c9): COMMIT;
Executing (65fd65c1-3336-4f0a-9bde-626cdd3c3f43): COMMIT;
Executing (f919a6fe-d3fe-42cc-8baf-3981531b7649): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '5b560155-18f6-4430-9b9c-e4c45333628e' LIMIT 1;
topicName Introduction to Learning Objectives 2022-02-22T07:22:55.000+0000
Executing (8cb3eea2-825f-4345-aa8c-09b65e6a511b): START TRANSACTION;
topicName PDA Rollout Demo 2021-05-04T05:36:55.000+0000
Executing (e6780ee0-9935-442e-90b0-d9b1c5e85d7a): START TRANSACTION;
topicName Codes instead of Scans 2021-02-04T06:06:22.000+0000
Executing (9f19e988-2fc3-40fc-a0da-3a39faefac9c): START TRANSACTION;
Executing (f919a6fe-d3fe-42cc-8baf-3981531b7649): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3e2e5a70e61646ce8531622740f34945$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Naveen L ','5b560155-18f6-4430-9b9c-e4c45333628e','India','Karnataka','Chikkaballapura District','Bagepalli','7483858898','','TRAINEE ','2024-08-31 20:47:10.730 +00:00','2024-08-31 20:47:10.730 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3e2e5a70e61646ce8531622740f34945$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8cb3eea2-825f-4345-aa8c-09b65e6a511b): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'b93fb22c-4617-4d60-a38e-8718ad7b228f' LIMIT 1;
topicName Zoom for Hubs & Spokes 2020-12-10T06:24:56.000+0000
Executing (151fdd48-c837-43fb-acfe-6833be4e63e4): START TRANSACTION;
Executing (9f19e988-2fc3-40fc-a0da-3a39faefac9c): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'e88b61f8-77ab-4db5-8925-dd7986aedef2' LIMIT 1;
Executing (8cb3eea2-825f-4345-aa8c-09b65e6a511b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8ee6a4521bca4e349ce49935a2b2ff6c$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Charmi modi','b93fb22c-4617-4d60-a38e-8718ad7b228f','India','Gujarat','Mehsana District','Visnagar','9427234408','','TRAINEE ','2024-08-31 20:47:10.733 +00:00','2024-08-31 20:47:10.733 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8ee6a4521bca4e349ce49935a2b2ff6c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e6780ee0-9935-442e-90b0-d9b1c5e85d7a): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'ffb16e31-3fd8-4fc3-94e1-63c6b68c451e' LIMIT 1;
Executing (9f19e988-2fc3-40fc-a0da-3a39faefac9c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3747039fcdf148d081c172718a64e1a2$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Balakrishnan ','e88b61f8-77ab-4db5-8925-dd7986aedef2','India','Karnataka','Bangalore Urban District','Bengaluru','9480990870','','TRAINEE ','2024-08-31 20:47:10.735 +00:00','2024-08-31 20:47:10.735 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3747039fcdf148d081c172718a64e1a2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (151fdd48-c837-43fb-acfe-6833be4e63e4): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '32669155-14ca-462e-b187-55304716c91a' LIMIT 1;
Executing (f919a6fe-d3fe-42cc-8baf-3981531b7649): COMMIT;
Executing (151fdd48-c837-43fb-acfe-6833be4e63e4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7df5b8fe03e7482984f91a416967969e$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Twinkle Mukherjee ','32669155-14ca-462e-b187-55304716c91a','India','West Bengal','Jalpaiguri District','Chalsa Mahabari','7003313423','','TRAINEE ','2024-08-31 20:47:10.737 +00:00','2024-08-31 20:47:10.737 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7df5b8fe03e7482984f91a416967969e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e6780ee0-9935-442e-90b0-d9b1c5e85d7a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_64775ec1c5bd4f418136a1cc179fe4cd$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Nilay Wankhade','ffb16e31-3fd8-4fc3-94e1-63c6b68c451e','India','Maharashtra','Osmanabad District','Osmanabad','7276462408','nilay.wankhade@sattva.co.in','TRAINEE ','2024-08-31 20:47:10.738 +00:00','2024-08-31 20:47:10.738 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_64775ec1c5bd4f418136a1cc179fe4cd$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8cb3eea2-825f-4345-aa8c-09b65e6a511b): COMMIT;
Executing (151fdd48-c837-43fb-acfe-6833be4e63e4): COMMIT;
Executing (9f19e988-2fc3-40fc-a0da-3a39faefac9c): COMMIT;
topicName Demonstration of PDA - ICDS Supervisors Training 2021-06-09T10:09:36.000+0000
Executing (d8a5bdce-2fda-4489-ab47-26e3759435eb): START TRANSACTION;
topicName Virtual Interactions - Needs and Benefits 2020-11-04T10:07:17.000+0000
Executing (03021172-f462-4953-8bc0-09c9594af4ac): START TRANSACTION;
topicName CBP Orientation 2020-08-25T06:11:13.000+0000
Executing (b6eac8a6-c1dc-4d44-a45a-9c1556747bf6): START TRANSACTION;
Executing (e6780ee0-9935-442e-90b0-d9b1c5e85d7a): COMMIT;
topicName PDA Rollout Demo 2021-05-04T05:46:03.000+0000
Executing (58f4bad9-e68e-4fe2-ab34-e3a3a61ef4e8): START TRANSACTION;
Executing (03021172-f462-4953-8bc0-09c9594af4ac): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'c1f975e4-9644-4b1f-afc4-b7dc270bf848' LIMIT 1;
Executing (b6eac8a6-c1dc-4d44-a45a-9c1556747bf6): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '743c12ee-242e-452d-88b0-9744cfd55eaa' LIMIT 1;
topicName CBP Orientation 2020-08-28T10:16:05.000+0000
Executing (12d982f7-bd1d-4b0c-8717-9d4b3c657cab): START TRANSACTION;
Executing (d8a5bdce-2fda-4489-ab47-26e3759435eb): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '16e92e92-b29d-433b-8cff-121f6a631419' LIMIT 1;
Executing (03021172-f462-4953-8bc0-09c9594af4ac): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3f9065ed17d14ddd884e2396af33a57e$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Parimi Rajini','c1f975e4-9644-4b1f-afc4-b7dc270bf848','India','Telangana','Nalgonda District','Perur','9948472492','','TRAINEE ','2024-08-31 20:47:10.746 +00:00','2024-08-31 20:47:10.746 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3f9065ed17d14ddd884e2396af33a57e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b6eac8a6-c1dc-4d44-a45a-9c1556747bf6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6eeae072b3c7481089d96190fa0401a6$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Tushar Jethwa','743c12ee-242e-452d-88b0-9744cfd55eaa','India','Gujarat','Kachchh District','Nagalpar Moti','9726650108','','TRAINEE ','2024-08-31 20:47:10.747 +00:00','2024-08-31 20:47:10.747 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6eeae072b3c7481089d96190fa0401a6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (12d982f7-bd1d-4b0c-8717-9d4b3c657cab): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'c55bd79b-042e-46bf-9e18-f4dd8e383e5d' LIMIT 1;
Executing (58f4bad9-e68e-4fe2-ab34-e3a3a61ef4e8): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '88826799-8409-4769-bbfc-4885256b9ec8' LIMIT 1;
Executing (03021172-f462-4953-8bc0-09c9594af4ac): COMMIT;
Executing (12d982f7-bd1d-4b0c-8717-9d4b3c657cab): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fc613c9591254329a0b3320d179eb056$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Sarad nakar','c55bd79b-042e-46bf-9e18-f4dd8e383e5d','India','Gujarat','Kachchh District','','8758745068','nakarsharad@gmail.com','TRAINEE ','2024-08-31 20:47:10.750 +00:00','2024-08-31 20:47:10.750 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fc613c9591254329a0b3320d179eb056$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d8a5bdce-2fda-4489-ab47-26e3759435eb): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_94cffd3ce5fd4ee68e904bad94ec7270$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Sonal sachin sathawara','16e92e92-b29d-433b-8cff-121f6a631419','India','Gujarat','Kachchh District','Budharmora','9819164449','','TRAINEE ','2024-08-31 20:47:10.751 +00:00','2024-08-31 20:47:10.751 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_94cffd3ce5fd4ee68e904bad94ec7270$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Demonstration of PDA - ICDS Supervisors Training 2021-06-09T10:51:06.000+0000
Executing (10b197b0-ff38-40e7-b06d-dee08d69f52e): START TRANSACTION;
Executing (b6eac8a6-c1dc-4d44-a45a-9c1556747bf6): COMMIT;
Executing (58f4bad9-e68e-4fe2-ab34-e3a3a61ef4e8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ea421a29cedf40a7bf79092241974512$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Kadiya vidhi kirtibhai','88826799-8409-4769-bbfc-4885256b9ec8','India','Gujarat','Mehsana District','Visnagar','9624171806','','TRAINEE ','2024-08-31 20:47:10.753 +00:00','2024-08-31 20:47:10.753 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ea421a29cedf40a7bf79092241974512$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (10b197b0-ff38-40e7-b06d-dee08d69f52e): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '452450c8-d384-4c61-83f8-4faf11a6d8ef' LIMIT 1;
topicName Orientation on Abhy and PGWM 2021-08-14T07:31:36.000+0000
Executing (4c82c7b6-e5b3-4ee4-948a-dafe6d163bea): START TRANSACTION;
Executing (12d982f7-bd1d-4b0c-8717-9d4b3c657cab): COMMIT;
Executing (d8a5bdce-2fda-4489-ab47-26e3759435eb): COMMIT;
Executing (10b197b0-ff38-40e7-b06d-dee08d69f52e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1798c618b8e445cdbd579b44791aa063$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Sunderrajan','452450c8-d384-4c61-83f8-4faf11a6d8ef','India','Gujarat','Anand District','Anand','9925756469','','TRAINER TRAINEE','2024-08-31 20:47:10.756 +00:00','2024-08-31 20:47:10.756 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1798c618b8e445cdbd579b44791aa063$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4c82c7b6-e5b3-4ee4-948a-dafe6d163bea): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '2cbe0329-07a4-481a-bf7a-22b814a464e5' LIMIT 1;
topicName Orientation on Abhy and PGWM - III 2021-08-18T11:51:07.000+0000
Executing (ecc52329-17ee-4ae4-ae96-3308c2fff591): START TRANSACTION;
Executing (58f4bad9-e68e-4fe2-ab34-e3a3a61ef4e8): COMMIT;
Executing (10b197b0-ff38-40e7-b06d-dee08d69f52e): COMMIT;
Executing (4c82c7b6-e5b3-4ee4-948a-dafe6d163bea): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b8f5fa4870504788bc54fd455704b07b$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Vahidsaiyad','2cbe0329-07a4-481a-bf7a-22b814a464e5','India','Gujarat','Anand District','Anand','9898946884','','TRAINER TRAINEE','2024-08-31 20:47:10.760 +00:00','2024-08-31 20:47:10.760 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b8f5fa4870504788bc54fd455704b07b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ecc52329-17ee-4ae4-ae96-3308c2fff591): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '0c28fe58-1af0-44b9-8d42-d25138965205' LIMIT 1;
topicName Orientation on Abhy and PGWM 2021-08-14T07:14:40.000+0000
Executing (641cdf6d-2284-45dd-8105-b62120420562): START TRANSACTION;
topicName PDA - Trainer App 2019-12-26T11:16:36+0000
Executing (a62c8528-a7e7-412f-b6ce-7381f04952ae): START TRANSACTION;
Executing (ecc52329-17ee-4ae4-ae96-3308c2fff591): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_409c4fbc3e8744f48a4efcf4b070c6af$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Rashika Pullam Chetti','0c28fe58-1af0-44b9-8d42-d25138965205','India','Rajasthan','Jaipur District','Jaipur','8800895261','rashikapullamchetti@gmail.com','TRAINEE ','2024-08-31 20:47:10.762 +00:00','2024-08-31 20:47:10.762 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_409c4fbc3e8744f48a4efcf4b070c6af$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Post-Harvest Management and Value Addition in Spice Crops. 2021-02-24T10:53:25.000+0000
Executing (26b6bd89-aac3-4b9c-a5d5-311b808d0b68): START TRANSACTION;
Executing (a62c8528-a7e7-412f-b6ce-7381f04952ae): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '94c0c622-52e4-4601-8589-a1abcf398672' LIMIT 1;
Executing (641cdf6d-2284-45dd-8105-b62120420562): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '4f3f5e8e-de1b-411a-9454-9038cca34335' LIMIT 1;
Executing (4c82c7b6-e5b3-4ee4-948a-dafe6d163bea): COMMIT;
Executing (a62c8528-a7e7-412f-b6ce-7381f04952ae): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a61a5dc8b38f47988b5b6810db5c2830$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Akash Chine','94c0c622-52e4-4601-8589-a1abcf398672','India','Maharashtra','Nashik District','Harsule','7767873465','','TRAINEE ','2024-08-31 20:47:10.766 +00:00','2024-08-31 20:47:10.766 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a61a5dc8b38f47988b5b6810db5c2830$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (641cdf6d-2284-45dd-8105-b62120420562): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_be2f4eb65cf5404aa956ea167773b729$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Bharat Dodiya','4f3f5e8e-de1b-411a-9454-9038cca34335','India','Gujarat','Kutch District','Gagodar','8758924404','','TRAINEE ','2024-08-31 20:47:10.767 +00:00','2024-08-31 20:47:10.767 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_be2f4eb65cf5404aa956ea167773b729$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (26b6bd89-aac3-4b9c-a5d5-311b808d0b68): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '305c306d-64cc-45eb-b51c-6bcb69c00291' LIMIT 1;
Executing (ecc52329-17ee-4ae4-ae96-3308c2fff591): COMMIT;
Executing (a62c8528-a7e7-412f-b6ce-7381f04952ae): COMMIT;
Executing (26b6bd89-aac3-4b9c-a5d5-311b808d0b68): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c1f75f4f62a4471abf2f50bcdab9c034$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Ramachandra Bhat','305c306d-64cc-45eb-b51c-6bcb69c00291','India','Karnataka','Yadgiri District','Yadgir','9380072886','rbhat@tatatrusts.org','TRAINEE ','2024-08-31 20:47:10.770 +00:00','2024-08-31 20:47:10.770 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c1f75f4f62a4471abf2f50bcdab9c034$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA - Trainer App 2019-12-26T11:16:40+0000
Executing (abc72f3d-4631-46ac-b2ba-0e13e3c9d117): START TRANSACTION;
topicName Midterm Measurement of Desilting(Jalsamruddhi) 2021-02-20T12:04:09.000+0000
Executing (54cd3a09-69ae-4bbc-b1b3-c5c16ee38cf0): START TRANSACTION;
Executing (abc72f3d-4631-46ac-b2ba-0e13e3c9d117): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'a6241a20-9982-4041-a67d-7e2a2e43f6b9' LIMIT 1;
Executing (641cdf6d-2284-45dd-8105-b62120420562): COMMIT;
topicName Taking good photos and making posters 2022-04-05T07:35:16.000+0000
Executing (9924a579-d6a6-4aee-bcd0-03e76bcd073a): START TRANSACTION;
Executing (54cd3a09-69ae-4bbc-b1b3-c5c16ee38cf0): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'e6f9c8f7-019e-4d38-b18a-5acf5900c008' LIMIT 1;
Executing (abc72f3d-4631-46ac-b2ba-0e13e3c9d117): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d30626a995074f0188fb0425f81be96e$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Suchee','a6241a20-9982-4041-a67d-7e2a2e43f6b9','India','Karnataka','Bengaluru Urban District','Bengaluru','9845815091','','TRAINER ','2024-08-31 20:47:10.775 +00:00','2024-08-31 20:47:10.775 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d30626a995074f0188fb0425f81be96e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-02-16T06:48:09.000+0000
Executing (da28525b-5038-448f-970f-373290a579a1): START TRANSACTION;
Executing (26b6bd89-aac3-4b9c-a5d5-311b808d0b68): COMMIT;
Executing (54cd3a09-69ae-4bbc-b1b3-c5c16ee38cf0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e0a3b2235a1a4937bb9192929bac2b94$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Saurav','e6f9c8f7-019e-4d38-b18a-5acf5900c008','India','Gujarat','Ahmedabad District','Ahmedabad','9327110002','','TRAINER ','2024-08-31 20:47:10.778 +00:00','2024-08-31 20:47:10.778 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e0a3b2235a1a4937bb9192929bac2b94$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (da28525b-5038-448f-970f-373290a579a1): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '22920d14-8b63-47ab-aebc-5e2b69deacb3' LIMIT 1;
Executing (9924a579-d6a6-4aee-bcd0-03e76bcd073a): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '192c494b-39ec-4cdc-b0b0-e4322d336e69' LIMIT 1;
Executing (da28525b-5038-448f-970f-373290a579a1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_127036e203ca43e9a4daaa0e3851f697$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Arvind  Singh','22920d14-8b63-47ab-aebc-5e2b69deacb3','India','Rajasthan','Banswara District','Katiyor','9928215200','','TRAINEE ','2024-08-31 20:47:10.780 +00:00','2024-08-31 20:47:10.780 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_127036e203ca43e9a4daaa0e3851f697$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Introduction to Learning Objectives 2022-02-22T07:23:47.000+0000
Executing (24699ac6-9b2a-4046-9265-018c2cfc3310): START TRANSACTION;
Executing (abc72f3d-4631-46ac-b2ba-0e13e3c9d117): COMMIT;
Executing (24699ac6-9b2a-4046-9265-018c2cfc3310): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '59921a3a-49f8-482e-9cab-dd64ad59a839' LIMIT 1;
Executing (54cd3a09-69ae-4bbc-b1b3-c5c16ee38cf0): COMMIT;
Executing (9924a579-d6a6-4aee-bcd0-03e76bcd073a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_426f0d31fe5b4ba8a5195e29828b33e3$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Navneet','192c494b-39ec-4cdc-b0b0-e4322d336e69','India','Rajasthan','Jaipur District','Jaipur','9793510101','','TRAINER TRAINEE','2024-08-31 20:47:10.784 +00:00','2024-08-31 20:47:10.784 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_426f0d31fe5b4ba8a5195e29828b33e3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (24699ac6-9b2a-4046-9265-018c2cfc3310): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8c850cd211a14a4a923eb894c48056b7$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Priya Sankar','59921a3a-49f8-482e-9cab-dd64ad59a839','India','Karnataka','Bangalore Urban District','Bengaluru','7045591091','','TRAINEE ','2024-08-31 20:47:10.786 +00:00','2024-08-31 20:47:10.786 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8c850cd211a14a4a923eb894c48056b7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Introduction to Learning Objectives
Executing (0816a28b-82d6-45b9-9680-6e1904d42f39): START TRANSACTION;
Executing (da28525b-5038-448f-970f-373290a579a1): COMMIT;
trainertopicname Introduction to Learning Objectives
Executing (4f3a4a40-a67f-42d0-bdb9-69f0b1a96014): START TRANSACTION;
Executing (24699ac6-9b2a-4046-9265-018c2cfc3310): COMMIT;
Executing (0816a28b-82d6-45b9-9680-6e1904d42f39): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '945619e0-0d9c-435a-ad20-c4d392b263bd' LIMIT 1;
topicName Virtual Interactions - Needs and Benefits 2020-11-19T10:13:05.000+0000
Executing (1098ee84-000f-400c-99fc-5fc6649d2911): START TRANSACTION;
Executing (4f3a4a40-a67f-42d0-bdb9-69f0b1a96014): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'ffe886cb-1150-4c72-8899-fe2c0927826d' LIMIT 1;
Executing (9924a579-d6a6-4aee-bcd0-03e76bcd073a): COMMIT;
topicName Well Monitoring - Example 2022-06-16T09:26:11.000+0000
Executing (3f99f775-7dea-4d02-87d0-6040ea9cc7c8): START TRANSACTION;
Executing (0816a28b-82d6-45b9-9680-6e1904d42f39): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_42dacd3414a7480291ee1b87cd8326de$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Kerai harish','945619e0-0d9c-435a-ad20-c4d392b263bd','India','Gujarat','Kachchh District','','9712744033','Harishkerai181@gmail.com','TRAINEE ','2024-08-31 20:47:10.797 +00:00','2024-08-31 20:47:10.797 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_42dacd3414a7480291ee1b87cd8326de$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1098ee84-000f-400c-99fc-5fc6649d2911): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '4e526a75-c8d4-436b-8245-b7f7dd485186' LIMIT 1;
Executing (4f3a4a40-a67f-42d0-bdb9-69f0b1a96014): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f3d7fa79879d4ee19e06a62b61ec60bf$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Hardi Sukhadiya','ffe886cb-1150-4c72-8899-fe2c0927826d','India','Gujarat','Mahesana District','Vadnagar','7818970494','hardi.sukhadia96@gmail.com','TRAINEE ','2024-08-31 20:47:10.800 +00:00','2024-08-31 20:47:10.800 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f3d7fa79879d4ee19e06a62b61ec60bf$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3f99f775-7dea-4d02-87d0-6040ea9cc7c8): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'fb03a265-7824-49ee-a49d-fbe0c9e82564' LIMIT 1;
Executing (0816a28b-82d6-45b9-9680-6e1904d42f39): COMMIT;
Executing (1098ee84-000f-400c-99fc-5fc6649d2911): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_03aaa1004db548989abf96c23e31d2da$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Karathiya Girishkumar Rameshbhai','4e526a75-c8d4-436b-8245-b7f7dd485186','India','Gujarat','Kachchh District','Bhuj','8780909522','girishk97222@gmail.com','TRAINER TRAINEE','2024-08-31 20:47:10.803 +00:00','2024-08-31 20:47:10.803 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_03aaa1004db548989abf96c23e31d2da$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Churu Fluorosis PDA demo 2020-10-21T10:48:22.000+0000
Executing (f026fb1b-4f1f-40ed-a50c-1123f258f3b6): START TRANSACTION;
Executing (3f99f775-7dea-4d02-87d0-6040ea9cc7c8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_492d98f522a347bf89671087f8d9011d$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Amrut garva','fb03a265-7824-49ee-a49d-fbe0c9e82564','India','Gujarat','Kachchh District','Bidada','9638404623','','TRAINER TRAINEE','2024-08-31 20:47:10.806 +00:00','2024-08-31 20:47:10.806 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_492d98f522a347bf89671087f8d9011d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName TOT of Bhujal Janakar 2021-02-05T07:25:46.000+0000
Executing (05f01a75-b201-4af6-8287-9178cf7d8ec2): START TRANSACTION;
Executing (f026fb1b-4f1f-40ed-a50c-1123f258f3b6): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '4c9c2ac4-1b68-49f8-811d-2f555eda7f69' LIMIT 1;
Executing (4f3a4a40-a67f-42d0-bdb9-69f0b1a96014): COMMIT;
Executing (3f99f775-7dea-4d02-87d0-6040ea9cc7c8): COMMIT;
Executing (05f01a75-b201-4af6-8287-9178cf7d8ec2): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '6df4face-5699-4fa1-bd64-0c565ee7440d' LIMIT 1;
Executing (f026fb1b-4f1f-40ed-a50c-1123f258f3b6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_df5b2dce89b44b168d5359f38ae9a438$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Chandan Chawla','4c9c2ac4-1b68-49f8-811d-2f555eda7f69','India','Gujarat','Kachchh District','Chandiya','9913997107','','TRAINEE ','2024-08-31 20:47:10.813 +00:00','2024-08-31 20:47:10.813 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_df5b2dce89b44b168d5359f38ae9a438$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1098ee84-000f-400c-99fc-5fc6649d2911): COMMIT;
topicName PDA Demo and Deployment Training for Trainers | ACT 2020-12-11T12:41:37.000+0000
Executing (1e69e3d4-e48d-4acb-9711-89393c802ef0): START TRANSACTION;
Executing (05f01a75-b201-4af6-8287-9178cf7d8ec2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3d771ad4acc34b228fbbf1bdc1090fd2$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Bharat Gadhavi','6df4face-5699-4fa1-bd64-0c565ee7440d','India','Gujarat','Kachchh District','Khakhar Moti','9737799734','','TRAINEE ','2024-08-31 20:47:10.817 +00:00','2024-08-31 20:47:10.817 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3d771ad4acc34b228fbbf1bdc1090fd2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Refresher Training for ACT and DSC 2021-10-07T11:59:39.000+0000
Executing (073cc834-392f-4f16-92e0-ea91d908a03b): START TRANSACTION;
Executing (1e69e3d4-e48d-4acb-9711-89393c802ef0): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'd848a85a-5f98-4df7-81a3-118fa56f1780' LIMIT 1;
Executing (f026fb1b-4f1f-40ed-a50c-1123f258f3b6): COMMIT;
topicName CBP Orientation 2020-08-17T10:15:25.000+0000
Executing (b15d627a-fbf5-402c-80f6-c884a2951206): START TRANSACTION;
Executing (1e69e3d4-e48d-4acb-9711-89393c802ef0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e682236a09cd451a9d6fbe6be4044391$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Patel SURESHBHAI SADUTHALA ','d848a85a-5f98-4df7-81a3-118fa56f1780','India','Gujarat','Mehsana District','Visnagar','9712933245','','TRAINEE ','2024-08-31 20:47:10.823 +00:00','2024-08-31 20:47:10.823 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e682236a09cd451a9d6fbe6be4044391$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Orientation on Abhy and PGWM - II 2021-08-14T11:59:37.000+0000
Executing (b2a79761-fd30-4a41-ad8c-89d34624afc5): START TRANSACTION;
Executing (073cc834-392f-4f16-92e0-ea91d908a03b): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '5264b284-4789-4883-81a1-0f7233e0c848' LIMIT 1;
Executing (05f01a75-b201-4af6-8287-9178cf7d8ec2): COMMIT;
Executing (1e69e3d4-e48d-4acb-9711-89393c802ef0): COMMIT;
Executing (b2a79761-fd30-4a41-ad8c-89d34624afc5): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '78fb6721-9eb2-4099-98f7-75340a08c883' LIMIT 1;
Executing (073cc834-392f-4f16-92e0-ea91d908a03b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a74bea913ba3442f9159640149ef6a72$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Hamir Rana Bhai koli','5264b284-4789-4883-81a1-0f7233e0c848','India','Gujarat','Kutch District','Pratap Gadh','9925328969','','TRAINEE ','2024-08-31 20:47:10.829 +00:00','2024-08-31 20:47:10.829 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a74bea913ba3442f9159640149ef6a72$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b15d627a-fbf5-402c-80f6-c884a2951206): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '9731fb01-dfad-4a22-b1f3-b9185873d4ae' LIMIT 1;
topicName Post-Harvest Management and Value Addition in Spice Crops. 2021-02-24T08:42:44.000+0000
Executing (a125233c-e776-4284-8c58-248de8ebceab): START TRANSACTION;
Executing (b2a79761-fd30-4a41-ad8c-89d34624afc5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5a65d63102d64ad4803205a8f538d3fe$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Narendra Chavda ','78fb6721-9eb2-4099-98f7-75340a08c883','India','Gujarat','Kutch District','Balasar','9879933704','','TRAINEE ','2024-08-31 20:47:10.833 +00:00','2024-08-31 20:47:10.833 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5a65d63102d64ad4803205a8f538d3fe$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Orientation on Abhy and PGWM - III 2021-08-18T12:01:31.000+0000
Executing (f7541b42-70f7-4706-862d-ff7d0c0e4b73): START TRANSACTION;
Executing (a125233c-e776-4284-8c58-248de8ebceab): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'fe2cf7fe-c2da-42ff-bc9b-0bd9169b1f37' LIMIT 1;
Executing (073cc834-392f-4f16-92e0-ea91d908a03b): COMMIT;
Executing (b15d627a-fbf5-402c-80f6-c884a2951206): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_76341cb05881454e9b40426069e59910$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Dharavath sunitha','9731fb01-dfad-4a22-b1f3-b9185873d4ae','India','Telangana','Suryapet District','Kesaram Part','9701536689','','TRAINEE ','2024-08-31 20:47:10.838 +00:00','2024-08-31 20:47:10.838 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_76341cb05881454e9b40426069e59910$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a125233c-e776-4284-8c58-248de8ebceab): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_db67faf2e99046b2ac9dd61afbfa544a$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'ParulSk','fe2cf7fe-c2da-42ff-bc9b-0bd9169b1f37','India','Meghalaya','East Khasi Hills District','Shillong','9205950802','parul.saklani@sattva.co.in','TRAINER ','2024-08-31 20:47:10.839 +00:00','2024-08-31 20:47:10.839 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_db67faf2e99046b2ac9dd61afbfa544a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-02-16T06:43:55.000+0000
Executing (df71c6ec-a1fa-4920-a4ab-cc4f56e55827): START TRANSACTION;
Executing (f7541b42-70f7-4706-862d-ff7d0c0e4b73): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'c4f487d3-f35f-4aaa-9e17-e8486db834c2' LIMIT 1;
Executing (b2a79761-fd30-4a41-ad8c-89d34624afc5): COMMIT;
Executing (a125233c-e776-4284-8c58-248de8ebceab): COMMIT;
Executing (df71c6ec-a1fa-4920-a4ab-cc4f56e55827): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'a7756c59-d51a-4cff-af34-75b0403432f1' LIMIT 1;
Executing (f7541b42-70f7-4706-862d-ff7d0c0e4b73): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ae844f41ab0f4a74b415ad824eba1ba5$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Partik Kumar','c4f487d3-f35f-4aaa-9e17-e8486db834c2','India','Karnataka','Bengaluru Urban District','Bengaluru','9967563707','pkunj5512@gmail.com','TRAINEE ','2024-08-31 20:47:10.846 +00:00','2024-08-31 20:47:10.846 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ae844f41ab0f4a74b415ad824eba1ba5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b15d627a-fbf5-402c-80f6-c884a2951206): COMMIT;
trainertopicname Test run for Assisted Scanning
Executing (a7489cc4-3c90-42a3-8812-42306bedd855): START TRANSACTION;
Executing (df71c6ec-a1fa-4920-a4ab-cc4f56e55827): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_86fcc9c77b4c48278927ca1a9fba0194$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Bishwadeep Ghose','a7756c59-d51a-4cff-af34-75b0403432f1','India','Delhi','South East Delhi District','New Delhi','9845891295','bghose@waterforpeople.org','TRAINER TRAINEE','2024-08-31 20:47:10.848 +00:00','2024-08-31 20:47:10.848 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_86fcc9c77b4c48278927ca1a9fba0194$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-02-16T06:41:03.000+0000
Executing (7c1c8fe1-5016-444d-8758-b6888c8d4ae3): START TRANSACTION;
Executing (a7489cc4-3c90-42a3-8812-42306bedd855): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '9b6cd454-3a3c-49bf-b0d7-e7d797f03585' LIMIT 1;
topicName Demonstration of PDA - ICDS Supervisors Training 2021-06-09T10:05:46.000+0000
Executing (7aaa1c92-7ca6-4dfa-8eef-08069756951a): START TRANSACTION;
Executing (f7541b42-70f7-4706-862d-ff7d0c0e4b73): COMMIT;
Executing (a7489cc4-3c90-42a3-8812-42306bedd855): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_83394ef6b82d4639a72e04ec88ec5811$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Pooja','9b6cd454-3a3c-49bf-b0d7-e7d797f03585','India','Karnataka','Bangalore Urban District','Bengaluru','9742542513','','TRAINEE ','2024-08-31 20:47:10.853 +00:00','2024-08-31 20:47:10.853 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_83394ef6b82d4639a72e04ec88ec5811$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7aaa1c92-7ca6-4dfa-8eef-08069756951a): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '04c32002-e577-43b2-901f-aca2a6004b1e' LIMIT 1;
Executing (7c1c8fe1-5016-444d-8758-b6888c8d4ae3): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'fe52cdee-ac18-4e1b-adbf-746fcbca24a1' LIMIT 1;
Executing (df71c6ec-a1fa-4920-a4ab-cc4f56e55827): COMMIT;
Executing (a7489cc4-3c90-42a3-8812-42306bedd855): COMMIT;
Executing (7aaa1c92-7ca6-4dfa-8eef-08069756951a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bc48c16119d24aafa592f701a8054160$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Adarsh ','04c32002-e577-43b2-901f-aca2a6004b1e','India','Karnataka','Bengaluru Urban District','Bengaluru','7259190321','','TRAINEE ','2024-08-31 20:47:10.857 +00:00','2024-08-31 20:47:10.857 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bc48c16119d24aafa592f701a8054160$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7c1c8fe1-5016-444d-8758-b6888c8d4ae3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6bc32032a7404dea921af1fad2c36148$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Vinayak ','fe52cdee-ac18-4e1b-adbf-746fcbca24a1','India','Karnataka','Bengaluru Urban District','Bengaluru','9986185828','','TRAINEE ','2024-08-31 20:47:10.858 +00:00','2024-08-31 20:47:10.858 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6bc32032a7404dea921af1fad2c36148$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName CBP Orientation 2020-08-28T10:16:10.000+0000
Executing (b268ecd2-aae5-409b-928c-4a816830ddef): START TRANSACTION;
topicName ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs 2023-01-02T11:35:10.000+0000
Executing (c43a1cef-2cd2-4c1c-8e60-2bf5c20617ae): START TRANSACTION;
Executing (7aaa1c92-7ca6-4dfa-8eef-08069756951a): COMMIT;
topicName PDA - Program App 2019-12-05T07:00:28+0000
Executing (4f574248-ec43-4396-809a-432d93b2260b): START TRANSACTION;
Executing (c43a1cef-2cd2-4c1c-8e60-2bf5c20617ae): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '2c7ec408-8187-4669-96c5-6aa13608a15d' LIMIT 1;
Executing (b268ecd2-aae5-409b-928c-4a816830ddef): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'b2104b7e-50fb-4455-9a78-7e764a56ea9e' LIMIT 1;
Executing (7c1c8fe1-5016-444d-8758-b6888c8d4ae3): COMMIT;
Executing (c43a1cef-2cd2-4c1c-8e60-2bf5c20617ae): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e994410bc7da4433b104384f875501c0$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Pritesh Kumar Lal','2c7ec408-8187-4669-96c5-6aa13608a15d','India','Bihar','Muzaffarpur District','Muzaffarpur','9801706166','priteshkumar.lal@akdn.org','TRAINEE ','2024-08-31 20:47:10.864 +00:00','2024-08-31 20:47:10.864 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e994410bc7da4433b104384f875501c0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b268ecd2-aae5-409b-928c-4a816830ddef): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7bb9e7e5d9b2421abfd0de429d97b153$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Vivek Sharan','b2104b7e-50fb-4455-9a78-7e764a56ea9e','India','Bihar','Patna District','Patna','9934314254','vsharan@waterforpeople.org','TRAINEE ','2024-08-31 20:47:10.866 +00:00','2024-08-31 20:47:10.866 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7bb9e7e5d9b2421abfd0de429d97b153$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs         s 2023-01-02T11:35:23.000+0000
Executing (0d4bc5f4-f56a-4f3e-a7c3-332a504e284e): START TRANSACTION;
Executing (4f574248-ec43-4396-809a-432d93b2260b): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '140e088a-dfb0-4385-8522-3ae556c510c0' LIMIT 1;
Executing (c43a1cef-2cd2-4c1c-8e60-2bf5c20617ae): COMMIT;
Executing (b268ecd2-aae5-409b-928c-4a816830ddef): COMMIT;
Executing (0d4bc5f4-f56a-4f3e-a7c3-332a504e284e): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '6b9b9f7d-8411-44e8-ac46-817c80c15bc9' LIMIT 1;
topicName ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs         s 2023-01-02T11:36:14.000+0000
Executing (473d8302-b8da-43f6-9e98-a0a0e7f5986a): START TRANSACTION;
topicName Capacity Building @ Scale - Experiences from FES in Odisha 2021-06-04T11:24:27.000+0000
Executing (8ad78ccf-cc18-4b50-a3b6-5b03d6b9b70e): START TRANSACTION;
topicName Capacity Building @ Scale - Experiences from FES in Odisha 2021-06-04T11:23:51.000+0000
Executing (6a84be76-1d4e-4d48-bc3f-90644dc693b1): START TRANSACTION;
Executing (0d4bc5f4-f56a-4f3e-a7c3-332a504e284e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_92a2484da56045d7aa4e3f48fcd3e154$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Prasanna kumar ','6b9b9f7d-8411-44e8-ac46-817c80c15bc9','India','Karnataka','Chikkaballapur District','Chikkaballapur','9743016879','','TRAINEE ','2024-08-31 20:47:10.874 +00:00','2024-08-31 20:47:10.874 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_92a2484da56045d7aa4e3f48fcd3e154$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4f574248-ec43-4396-809a-432d93b2260b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_54d67a79993b4c06a54a5c69a5f7836d$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Safdar Ali','140e088a-dfb0-4385-8522-3ae556c510c0','India','Bihar','Patna District','Patna','9905040033','sali@waterforpeople.org','TRAINEE ','2024-08-31 20:47:10.875 +00:00','2024-08-31 20:47:10.875 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_54d67a79993b4c06a54a5c69a5f7836d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8ad78ccf-cc18-4b50-a3b6-5b03d6b9b70e): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '7050b19c-3082-434e-bef5-6e41056549af' LIMIT 1;
Executing (6a84be76-1d4e-4d48-bc3f-90644dc693b1): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '1952f99c-0f23-41fb-9093-9005c5449d98' LIMIT 1;
Executing (473d8302-b8da-43f6-9e98-a0a0e7f5986a): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '07e64d90-36df-4114-bc07-d68fc28b716a' LIMIT 1;
Executing (8ad78ccf-cc18-4b50-a3b6-5b03d6b9b70e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a0d24a455409479dafa4664f3d04eb34$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Vasudeva murthy','7050b19c-3082-434e-bef5-6e41056549af','India','Karnataka','Koppal District','','8970646819','vasudev.murthyfes21@gmail.com','TRAINEE ','2024-08-31 20:47:10.878 +00:00','2024-08-31 20:47:10.878 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a0d24a455409479dafa4664f3d04eb34$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6a84be76-1d4e-4d48-bc3f-90644dc693b1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0e54363b47984667a38525daff506b5b$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Soma Kumara K  DC','1952f99c-0f23-41fb-9093-9005c5449d98','India','Karnataka','Tumkur District','Tumakuru','9742574801','soma.ecological@gmail.com','TRAINEE ','2024-08-31 20:47:10.879 +00:00','2024-08-31 20:47:10.879 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0e54363b47984667a38525daff506b5b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0d4bc5f4-f56a-4f3e-a7c3-332a504e284e): COMMIT;
Executing (4f574248-ec43-4396-809a-432d93b2260b): COMMIT;
Executing (8ad78ccf-cc18-4b50-a3b6-5b03d6b9b70e): COMMIT;
topicName ವಿವಿಧ ಗು ುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs 2022-12-21T10:00:26.000+0000
Executing (e2bf9c18-e6d4-49c5-b2ec-2a3ce9d750e5): START TRANSACTION;
Executing (473d8302-b8da-43f6-9e98-a0a0e7f5986a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5ea60798ecb34d718274b83d8306bea9$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Shankaragoud C','07e64d90-36df-4114-bc07-d68fc28b716a','India','Karnataka','Raichur District','','9482961357','shankarfes@gmail.com','TRAINEE ','2024-08-31 20:47:10.882 +00:00','2024-08-31 20:47:10.882 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5ea60798ecb34d718274b83d8306bea9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs 2022-12-21T10:00:25.000+0000
Executing (a351c3e0-0c0e-4f66-976e-2bf917364bf2): START TRANSACTION;
Executing (e2bf9c18-e6d4-49c5-b2ec-2a3ce9d750e5): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '46032e3f-cc37-4289-aaa5-5c3af326130f' LIMIT 1;
topicName Capacity Building @ Scale - Experiences from FES in Odisha 2021-06-04T11:23:47.000+0000
Executing (a4a64ee4-7438-4f69-a96d-2e92338dcd02): START TRANSACTION;
Executing (6a84be76-1d4e-4d48-bc3f-90644dc693b1): COMMIT;
Executing (a351c3e0-0c0e-4f66-976e-2bf917364bf2): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '6a23ff23-5a53-4947-a47f-8ea3a8f374c1' LIMIT 1;
Executing (e2bf9c18-e6d4-49c5-b2ec-2a3ce9d750e5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e55395e7925d4881bb35ca46b62bdd19$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'BYLAPPA','46032e3f-cc37-4289-aaa5-5c3af326130f','India','Karnataka','Chitradurga District','Chitradurga','9481690664','','TRAINEE ','2024-08-31 20:47:10.886 +00:00','2024-08-31 20:47:10.886 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e55395e7925d4881bb35ca46b62bdd19$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a4a64ee4-7438-4f69-a96d-2e92338dcd02): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'd2a695e3-5d1c-49ba-adab-671dab6d81fa' LIMIT 1;
Executing (473d8302-b8da-43f6-9e98-a0a0e7f5986a): COMMIT;
Executing (a351c3e0-0c0e-4f66-976e-2bf917364bf2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_61f398592b4842a8a4030afff43577d4$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'BHEEMANAIKA B R','6a23ff23-5a53-4947-a47f-8ea3a8f374c1','India','Karnataka','Mandya District','Mandya','8105725789','bheemanaika@yahoo.com','TRAINEE ','2024-08-31 20:47:10.888 +00:00','2024-08-31 20:47:10.888 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_61f398592b4842a8a4030afff43577d4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a4a64ee4-7438-4f69-a96d-2e92338dcd02): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e761a099a69544b59b046ecc77fdb5c2$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Suresh D R','d2a695e3-5d1c-49ba-adab-671dab6d81fa','India','Karnataka','Tumakuru District','','9591477177','sureshdr.fes@gmail.com','TRAINER TRAINEE','2024-08-31 20:47:10.889 +00:00','2024-08-31 20:47:10.889 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e761a099a69544b59b046ecc77fdb5c2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs 2022-12-21T10:00:30.000+0000
Executing (ef5fab38-a999-43c9-9f70-71140b0e54d3): START TRANSACTION;
topicName ವಿವವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs 2022-12-21T10:01:05.000+0000
Executing (0bb37aa7-01f7-4e1c-92cc-3716bfa1cc2f): START TRANSACTION;
Executing (e2bf9c18-e6d4-49c5-b2ec-2a3ce9d750e5): COMMIT;
Executing (0bb37aa7-01f7-4e1c-92cc-3716bfa1cc2f): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '67f6ffd9-0d75-4c92-8909-7c0f78daf8b7' LIMIT 1;
Executing (ef5fab38-a999-43c9-9f70-71140b0e54d3): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '4290b0eb-020e-4137-8e54-f8de292d1782' LIMIT 1;
Executing (a351c3e0-0c0e-4f66-976e-2bf917364bf2): COMMIT;
Executing (0bb37aa7-01f7-4e1c-92cc-3716bfa1cc2f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c3d0dba9ea6f4a638ff12da25c233618$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Manu','67f6ffd9-0d75-4c92-8909-7c0f78daf8b7','India','Karnataka','Bengaluru Urban District','Bengaluru','9886496040','','TRAINER TRAINEE','2024-08-31 20:47:10.894 +00:00','2024-08-31 20:47:10.894 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c3d0dba9ea6f4a638ff12da25c233618$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ef5fab38-a999-43c9-9f70-71140b0e54d3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3548c1d80e8e492aaf252a9873036aad$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Akash Gaikwad','4290b0eb-020e-4137-8e54-f8de292d1782','India','Maharashtra','Pune District','Pune','7066270243','',' TRAINEE','2024-08-31 20:47:10.895 +00:00','2024-08-31 20:47:10.895 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3548c1d80e8e492aaf252a9873036aad$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a4a64ee4-7438-4f69-a96d-2e92338dcd02): COMMIT;
topicName ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ    ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs 2022-12-21T10:00:26.000+0000
Executing (c6455720-6a32-4eb5-8051-d7b4a4846a9b): START TRANSACTION;
Executing (0bb37aa7-01f7-4e1c-92cc-3716bfa1cc2f): COMMIT;
topicName PDA - Participant App 2020-04-07T09:22:06.000+0000
Executing (07b6ee84-84b2-4b37-9972-567b2a599522): START TRANSACTION;
topicName ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs 2022-12-21T10:17:38.000+0000
Executing (7deb7c35-0f81-4dc8-9286-1828d997874c): START TRANSACTION;
topicName Community Mobilization 2020-08-07T07:17:45.000+0000
Executing (9a04cc4d-3eb8-4f35-b822-cf787ba228ff): START TRANSACTION;
Executing (07b6ee84-84b2-4b37-9972-567b2a599522): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'fe428fb5-8dbb-463f-af7a-c37857745007' LIMIT 1;
Executing (c6455720-6a32-4eb5-8051-d7b4a4846a9b): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'f10b75e8-8d1c-4591-be30-7ba8a9e0de33' LIMIT 1;
Executing (ef5fab38-a999-43c9-9f70-71140b0e54d3): COMMIT;
Executing (9a04cc4d-3eb8-4f35-b822-cf787ba228ff): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '00191047-642a-4678-aff6-22162d924cf5' LIMIT 1;
Executing (07b6ee84-84b2-4b37-9972-567b2a599522): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_528a7f2dd85a4b2481f4daec1a4223b9$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'sowmya lg','fe428fb5-8dbb-463f-af7a-c37857745007','India','Karnataka','Bengaluru Urban District','Bengaluru','9481216292','sowmyaganesh92@gmail.com','TRAINEE ','2024-08-31 20:47:10.901 +00:00','2024-08-31 20:47:10.901 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_528a7f2dd85a4b2481f4daec1a4223b9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c6455720-6a32-4eb5-8051-d7b4a4846a9b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_68efad0fc84c456784e5d34ebe0d3899$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Roopa Anand Rao','f10b75e8-8d1c-4591-be30-7ba8a9e0de33','India','Karnataka','Bengaluru Urban District','Bengaluru','9845465324','',' TRAINEE','2024-08-31 20:47:10.902 +00:00','2024-08-31 20:47:10.902 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_68efad0fc84c456784e5d34ebe0d3899$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7deb7c35-0f81-4dc8-9286-1828d997874c): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'e931ea86-989b-4188-aa8b-8052253f14ce' LIMIT 1;
Executing (9a04cc4d-3eb8-4f35-b822-cf787ba228ff): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0b7965010c764bd894674922e5f5bbd3$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Gangamani.HR, tumkur District coordinator ,FES.','00191047-642a-4678-aff6-22162d924cf5','India','Karnataka','Tumakuru District','','8884008788','','TRAINEE ','2024-08-31 20:47:10.904 +00:00','2024-08-31 20:47:10.904 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0b7965010c764bd894674922e5f5bbd3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (07b6ee84-84b2-4b37-9972-567b2a599522): COMMIT;
topicName Well Monitoring - Example 2022-11-29T10:10:23.000+0000
Executing (deef4bb1-7c41-4bde-b017-079ccb861f1f): START TRANSACTION;
Executing (9a04cc4d-3eb8-4f35-b822-cf787ba228ff): COMMIT;
topicName ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for d         different groups_BFTs_GKMs 2023-01-02T11:34:58.000+0000
Executing (2bb5825a-c657-4323-b2e8-8dccb603175b): START TRANSACTION;
Executing (deef4bb1-7c41-4bde-b017-079ccb861f1f): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'e1fe48c5-1f99-4815-9720-ef0f32dbcaab' LIMIT 1;
Executing (7deb7c35-0f81-4dc8-9286-1828d997874c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5bffdf76ba814305aead0e243480d207$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Lokesh C','e931ea86-989b-4188-aa8b-8052253f14ce','India','Karnataka','Chikkaballapur District','','9980023070','lokeshtrainer@outlook.in','TRAINER TRAINEE','2024-08-31 20:47:10.910 +00:00','2024-08-31 20:47:10.910 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5bffdf76ba814305aead0e243480d207$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c6455720-6a32-4eb5-8051-d7b4a4846a9b): COMMIT;
topicName ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini f         for different groups_BFTs_GKMs 2022-12-21T10:00:26.000+0000
Executing (00f21888-d2c6-4837-b596-bb2d775496d2): START TRANSACTION;
Executing (2bb5825a-c657-4323-b2e8-8dccb603175b): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '919b177f-2a3d-4883-8060-149bf84012b4' LIMIT 1;
Executing (deef4bb1-7c41-4bde-b017-079ccb861f1f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_eaf132bfa22d48e995851d3eaf42ac95$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Venugopal','e1fe48c5-1f99-4815-9720-ef0f32dbcaab','India','Karnataka','Bengaluru Urban District','Bengaluru','9448738869','','TRAINEE ','2024-08-31 20:47:10.913 +00:00','2024-08-31 20:47:10.913 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_eaf132bfa22d48e995851d3eaf42ac95$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (00f21888-d2c6-4837-b596-bb2d775496d2): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '91b3214a-3f2c-4424-8112-1b73d35e8e74' LIMIT 1;
Executing (2bb5825a-c657-4323-b2e8-8dccb603175b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e309dc86c44349f4996f532e4557a957$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Atikur','919b177f-2a3d-4883-8060-149bf84012b4','India','Assam','Nalbari District','Niz-Bahjani','6000415919','',' TRAINEE','2024-08-31 20:47:10.916 +00:00','2024-08-31 20:47:10.916 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e309dc86c44349f4996f532e4557a957$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Orientation on Jala Sanjeevini /ಓರಿಯೆಂಟೇಷನ್ ಓನ್ ಜಲ ಸಂಜೀವಿನೀ/Elected members/ಚುನಾಯಿತ ಸದಸ್ಯರು 2022-12-02T07:011:15.000+0000
Executing (839214fc-f172-46a1-8ac8-7bc888e53fb5): START TRANSACTION;
Executing (7deb7c35-0f81-4dc8-9286-1828d997874c): COMMIT;
Executing (00f21888-d2c6-4837-b596-bb2d775496d2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2983f9910335478a83484fe457f45d55$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Jenifer Yasmin ','91b3214a-3f2c-4424-8112-1b73d35e8e74','India','Assam','Kamrup Metropolitan District','Guwahati','9864363630','','TRAINEE ','2024-08-31 20:47:10.918 +00:00','2024-08-31 20:47:10.918 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2983f9910335478a83484fe457f45d55$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (839214fc-f172-46a1-8ac8-7bc888e53fb5): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'b8901b46-902f-4142-bec0-09b4d326dc9f' LIMIT 1;
Executing (deef4bb1-7c41-4bde-b017-079ccb861f1f): COMMIT;
Executing (839214fc-f172-46a1-8ac8-7bc888e53fb5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_99d2b2120b2c48379ea32ba3a0f4b2b5$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Arnab Bharali','b8901b46-902f-4142-bec0-09b4d326dc9f','India','Assam','Kamrup Metropolitan District','Guwahati','9864080467','','TRAINEE ','2024-08-31 20:47:10.920 +00:00','2024-08-31 20:47:10.920 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_99d2b2120b2c48379ea32ba3a0f4b2b5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2bb5825a-c657-4323-b2e8-8dccb603175b): COMMIT;
topicName ಅಂತರ್ಜಲ ಚೇತನ - ಮಾದರಿ ವಿಷಯ (Antarajala Chetana - Example Topic) 2021-09-02T11:06:05.000+0000
Executing (1122656b-5de5-4097-99e3-4bddacda9129): START TRANSACTION;
topicName JD test - Assam 2022-12-12T12:33:21.000+0000
Executing (a561d63d-6b05-49ce-a3cf-b8a25610772f): START TRANSACTION;
Executing (00f21888-d2c6-4837-b596-bb2d775496d2): COMMIT;
topicName ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GK         KMs 2023-01-02T11:35:18.000+0000
Executing (aacf4db7-f07b-4fc5-8c1a-b524ecba403a): START TRANSACTION;
Executing (a561d63d-6b05-49ce-a3cf-b8a25610772f): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'd7e2fcef-65df-409c-9bb2-5d08080aa9d3' LIMIT 1;
Executing (1122656b-5de5-4097-99e3-4bddacda9129): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '74852ff7-d5bb-4ceb-bf41-a7e8b9dede53' LIMIT 1;
Executing (839214fc-f172-46a1-8ac8-7bc888e53fb5): COMMIT;
Executing (a561d63d-6b05-49ce-a3cf-b8a25610772f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9ee720038f3c4a3db7714838657d1700$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Ramesh M District Coordinator','d7e2fcef-65df-409c-9bb2-5d08080aa9d3','India','Karnataka','Chitradurga District','Chitradurga','9449128416','rameshmchitradurga@gmail.com','TRAINEE ','2024-08-31 20:47:10.926 +00:00','2024-08-31 20:47:10.926 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9ee720038f3c4a3db7714838657d1700$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1122656b-5de5-4097-99e3-4bddacda9129): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e70bcaf9feb249e0abddababeab4016d$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Tejas Mahajan','74852ff7-d5bb-4ceb-bf41-a7e8b9dede53','India','Karnataka','Bengaluru Urban District','Bengaluru','9686077046','','TRAINEE ','2024-08-31 20:47:10.928 +00:00','2024-08-31 20:47:10.928 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e70bcaf9feb249e0abddababeab4016d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName JD - Making the District Plan 2023-03-09T11:16:25.000+0000
Executing (eea99380-4372-446d-b6fa-b74a314043bb): START TRANSACTION;
Executing (aacf4db7-f07b-4fc5-8c1a-b524ecba403a): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '0c193e5f-d189-464b-82cf-443317306d87' LIMIT 1;
Executing (a561d63d-6b05-49ce-a3cf-b8a25610772f): COMMIT;
Executing (1122656b-5de5-4097-99e3-4bddacda9129): COMMIT;
Executing (eea99380-4372-446d-b6fa-b74a314043bb): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'f7e93313-2909-4493-9a53-fadfd033201b' LIMIT 1;
topicName JD - Making the District Plan 2023-03-18T12:18:16.000+0000
Executing (34256d58-0e97-4528-b31d-859e391a8b2a): START TRANSACTION;
topicName ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್         _BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs 2022-12-21T10:00:30.000+0000
Executing (7dd036a0-bcb9-414b-bf34-1a8b9710af28): START TRANSACTION;
topicName JD - Facilitate two practical JalShalas for training of Block trainers - 1 2023-03-20T09:55:55.000+0000
Executing (eb78ad37-4ab3-49df-9c49-106ae8b27a30): START TRANSACTION;
Executing (eea99380-4372-446d-b6fa-b74a314043bb): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6332ef5efd96482490632edf5a602a61$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'RK kalluri','f7e93313-2909-4493-9a53-fadfd033201b','India','Karnataka','Bengaluru Urban District','Bengaluru','9663369033','RK.kalluri@gmail.com','TRAINER TRAINEE','2024-08-31 20:47:10.934 +00:00','2024-08-31 20:47:10.934 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6332ef5efd96482490632edf5a602a61$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (aacf4db7-f07b-4fc5-8c1a-b524ecba403a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_68d89ed661e34bf2a59adc29b3f6c052$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Gurudutt Ramachandra ','0c193e5f-d189-464b-82cf-443317306d87','India','Karnataka','Bengaluru Urban District','Bengaluru','9008722271','Gurudutt@arghyam.org','TRAINER TRAINEE','2024-08-31 20:47:10.935 +00:00','2024-08-31 20:47:10.935 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_68d89ed661e34bf2a59adc29b3f6c052$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7dd036a0-bcb9-414b-bf34-1a8b9710af28): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'bf9b2448-f718-4224-96d4-06bdb59034a3' LIMIT 1;
Executing (eb78ad37-4ab3-49df-9c49-106ae8b27a30): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '5a9679fe-6c56-4e22-aa0a-14adb9703410' LIMIT 1;
Executing (34256d58-0e97-4528-b31d-859e391a8b2a): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '7dd8cae2-8102-44ca-b042-6a1d51b97504' LIMIT 1;
Executing (7dd036a0-bcb9-414b-bf34-1a8b9710af28): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_57b40a761a0e4bb9ab93e7c1b7544ffd$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Arnav Kr Baruah','bf9b2448-f718-4224-96d4-06bdb59034a3','India','Assam','Kamrup Metropolitan District','Guwahati','8011009466','','TRAINER TRAINEE','2024-08-31 20:47:10.938 +00:00','2024-08-31 20:47:10.938 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_57b40a761a0e4bb9ab93e7c1b7544ffd$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (eb78ad37-4ab3-49df-9c49-106ae8b27a30): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a203834bdfc94b4c9178458654423316$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Kiran Kumar Sen','5a9679fe-6c56-4e22-aa0a-14adb9703410','India','Karnataka','Bangalore Urban','Bengaluru','7718023736','','TRAINER TRAINEE','2024-08-31 20:47:10.939 +00:00','2024-08-31 20:47:10.939 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a203834bdfc94b4c9178458654423316$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (eea99380-4372-446d-b6fa-b74a314043bb): COMMIT;
Executing (aacf4db7-f07b-4fc5-8c1a-b524ecba403a): COMMIT;
Executing (7dd036a0-bcb9-414b-bf34-1a8b9710af28): COMMIT;
topicName PDA - Program App 2021-04-05T10:40:58.000+0000
Executing (42fe2c04-a121-44d8-89fe-d280422508df): START TRANSACTION;
Executing (34256d58-0e97-4528-b31d-859e391a8b2a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8dddd92fd9294491a18247379eb485ca$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Sumanjita Barman','7dd8cae2-8102-44ca-b042-6a1d51b97504','India','Assam','Nalbari District','Joy Mangla','8404001059','','TRAINER TRAINEE','2024-08-31 20:47:10.943 +00:00','2024-08-31 20:47:10.943 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8dddd92fd9294491a18247379eb485ca$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName JD - Facilitate two practical JalShalas for training of Block trainers - 1 2023-03-18T12:23:39.000+0000
Executing (de7b31bd-0219-4699-8260-6e0bb0c14561): START TRANSACTION;
Executing (42fe2c04-a121-44d8-89fe-d280422508df): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'f5bda8c8-9b5d-4f02-aefc-e2ecf01d710c' LIMIT 1;
topicName Introduction to Springs | MTs 2021-02-10T08:46:47.000+0000
Executing (273345ab-ecb2-4500-a24d-b1b4d7380394): START TRANSACTION;
Executing (eb78ad37-4ab3-49df-9c49-106ae8b27a30): COMMIT;
Executing (de7b31bd-0219-4699-8260-6e0bb0c14561): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'b7031ba5-8d50-43d4-82db-b63e173db13c' LIMIT 1;
Executing (42fe2c04-a121-44d8-89fe-d280422508df): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d49f938f77be45848604d992c785945d$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Sarmila Kakoti','f5bda8c8-9b5d-4f02-aefc-e2ecf01d710c','India','Assam','Kamrup District','Guwahati','7662020007','','TRAINER TRAINEE','2024-08-31 20:47:10.950 +00:00','2024-08-31 20:47:10.950 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d49f938f77be45848604d992c785945d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (273345ab-ecb2-4500-a24d-b1b4d7380394): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '281eb629-9078-40cf-a6f3-57ee6d3322ea' LIMIT 1;
Executing (34256d58-0e97-4528-b31d-859e391a8b2a): COMMIT;
Executing (de7b31bd-0219-4699-8260-6e0bb0c14561): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_55de6cfa83bf4658a863078932d4bdcb$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Sujata Gautam','b7031ba5-8d50-43d4-82db-b63e173db13c','India','Assam','Kamrup Metropolitan District','Guwahati','9706373567','','TRAINER TRAINEE','2024-08-31 20:47:10.954 +00:00','2024-08-31 20:47:10.954 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_55de6cfa83bf4658a863078932d4bdcb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (42fe2c04-a121-44d8-89fe-d280422508df): COMMIT;
Executing (273345ab-ecb2-4500-a24d-b1b4d7380394): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7b7fb88582a442d8971746499b8e5194$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Hemanta pegu','281eb629-9078-40cf-a6f3-57ee6d3322ea','India','Assam','Dhemaji District','No 3 Murkong Selek Part 2','6001155042','','TRAINEE ','2024-08-31 20:47:10.956 +00:00','2024-08-31 20:47:10.956 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7b7fb88582a442d8971746499b8e5194$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA - Participant App 2019-12-26T10:42:03+0000
Executing (728a39fb-b59e-4cd5-ace9-02d10d209a69): START TRANSACTION;
Executing (de7b31bd-0219-4699-8260-6e0bb0c14561): COMMIT;
topicName JD test - Assam 2022-12-12T12:37:26.000+0000
Executing (e3c9473d-0c6c-48b0-a651-fc8608f4bf7f): START TRANSACTION;
topicName Image composition and layouts LL3 2022-03-29T07:37:51.000+0000
Executing (2f5ca210-e98b-4808-bf1d-b500a989dad2): START TRANSACTION;
topicName JD test - Assist for Jal Doot Journey 2023-01-19T07:12:54.000+0000
Executing (418a9889-08a9-4c6f-985d-d8176dced022): START TRANSACTION;
Executing (e3c9473d-0c6c-48b0-a651-fc8608f4bf7f): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '13fc614f-fced-4a20-88d4-13da63c5f701' LIMIT 1;
Executing (2f5ca210-e98b-4808-bf1d-b500a989dad2): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'b9d075fd-535e-4931-a9ec-07211bfe43e2' LIMIT 1;
Executing (728a39fb-b59e-4cd5-ace9-02d10d209a69): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '42740f34-6ea7-41e2-be0e-7ea2a846b001' LIMIT 1;
Executing (273345ab-ecb2-4500-a24d-b1b4d7380394): COMMIT;
Executing (418a9889-08a9-4c6f-985d-d8176dced022): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '6bf65efc-f264-43c2-a0be-860d7a2c1ba4' LIMIT 1;
Executing (e3c9473d-0c6c-48b0-a651-fc8608f4bf7f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7c96e003ca2949edb0907e1a9392154c$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Rajdeep','13fc614f-fced-4a20-88d4-13da63c5f701','India','Assam','Kamrup Metropolitan District','Guwahati','8474806720','','TRAINEE ','2024-08-31 20:47:10.968 +00:00','2024-08-31 20:47:10.968 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7c96e003ca2949edb0907e1a9392154c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2f5ca210-e98b-4808-bf1d-b500a989dad2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a42e33269bec466ab3aeab8acf4e4c7f$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'WKA','b9d075fd-535e-4931-a9ec-07211bfe43e2','India','Assam','Kamrup Metropolitan District','Guwahati','8448271790','','TRAINEE ','2024-08-31 20:47:10.969 +00:00','2024-08-31 20:47:10.969 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a42e33269bec466ab3aeab8acf4e4c7f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (728a39fb-b59e-4cd5-ace9-02d10d209a69): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bd567d485c7a4c69a92d24c7b16344fb$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Neha Pawar','42740f34-6ea7-41e2-be0e-7ea2a846b001','India','Maharashtra','Thane District','Navi Mumbai','9653190930','nehapawar@arghyam.org','TRAINEE ','2024-08-31 20:47:10.971 +00:00','2024-08-31 20:47:10.971 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bd567d485c7a4c69a92d24c7b16344fb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (418a9889-08a9-4c6f-985d-d8176dced022): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4f1d241a79264a9dba00d8c1c166e07b$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Dulal Adhikary ','6bf65efc-f264-43c2-a0be-860d7a2c1ba4','India','Assam','Dhubri District','Dhubri','9954791470','adhikarydulalrte@gmail.com','TRAINEE ','2024-08-31 20:47:10.972 +00:00','2024-08-31 20:47:10.972 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4f1d241a79264a9dba00d8c1c166e07b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e3c9473d-0c6c-48b0-a651-fc8608f4bf7f): COMMIT;
Executing (2f5ca210-e98b-4808-bf1d-b500a989dad2): COMMIT;
topicName Execution of the JalShala 2023-06-30T07:24:18.000+0000
Executing (caa920d1-f6e8-40d8-9b89-e7650c17631e): START TRANSACTION;
Executing (418a9889-08a9-4c6f-985d-d8176dced022): COMMIT;
topicName Execution of the JalShala 2023-06-15T06:08:12.000+0000
Executing (e40509c7-2df7-4a65-97a8-f6483125b8ba): START TRANSACTION;
topicName Execution of the JalShala 2023-06-15T06:08:16.000+0000
Executing (564d5ab7-9565-4e7a-8f1a-f8bf65dcba85): START TRANSACTION;
Executing (728a39fb-b59e-4cd5-ace9-02d10d209a69): COMMIT;
topicName Execution of the JalShala 2023-06-16T09:27:58.000+0000
Executing (10b8478d-f690-4483-985a-48fe1d739f83): START TRANSACTION;
Executing (e40509c7-2df7-4a65-97a8-f6483125b8ba): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '29165e83-2d36-44a0-abeb-29671c4c1ed9' LIMIT 1;
Executing (564d5ab7-9565-4e7a-8f1a-f8bf65dcba85): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '9ed66187-2ab1-4850-a46e-6b643d6152c3' LIMIT 1;
Executing (caa920d1-f6e8-40d8-9b89-e7650c17631e): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '9fc9a526-f8f1-41a0-9315-90ab1034c015' LIMIT 1;
Executing (10b8478d-f690-4483-985a-48fe1d739f83): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '1893c0a9-e5b6-4d84-81e9-fdccb4099495' LIMIT 1;
Executing (e40509c7-2df7-4a65-97a8-f6483125b8ba): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_97186745e2b54f96a2ce0d726b4a1fcb$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Nilmoni Sutradhar','29165e83-2d36-44a0-abeb-29671c4c1ed9','India','Assam','Dhubri District','Dhubri','8638143546','','TRAINEE ','2024-08-31 20:47:10.985 +00:00','2024-08-31 20:47:10.985 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_97186745e2b54f96a2ce0d726b4a1fcb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (564d5ab7-9565-4e7a-8f1a-f8bf65dcba85): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_77864074054642f4b3e8d1604f1f38ff$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Sofior Rahman ','9ed66187-2ab1-4850-a46e-6b643d6152c3','India','Assam','Dhubri District','Dhubri','9101644900','','TRAINEE ','2024-08-31 20:47:10.987 +00:00','2024-08-31 20:47:10.987 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_77864074054642f4b3e8d1604f1f38ff$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName CBP Orientation 2020-08-28T10:16:16.000+0000
Executing (007d7e4d-67ce-4185-bb5c-b8a14c00e28c): START TRANSACTION;
Executing (10b8478d-f690-4483-985a-48fe1d739f83): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_250d925bece246798cdb45da430fd997$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Md Amir Hossain','1893c0a9-e5b6-4d84-81e9-fdccb4099495','India','Assam','Dhubri District','Dhubri','7896386632','','TRAINEE ','2024-08-31 20:47:10.990 +00:00','2024-08-31 20:47:10.990 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_250d925bece246798cdb45da430fd997$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e40509c7-2df7-4a65-97a8-f6483125b8ba): COMMIT;
Executing (caa920d1-f6e8-40d8-9b89-e7650c17631e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_517ec7dfe71b47df834101597a9fad1d$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Parmeswar Ray','9fc9a526-f8f1-41a0-9315-90ab1034c015','India','Assam','Dhubri District','Dhubri','9706016463','','TRAINEE ','2024-08-31 20:47:10.992 +00:00','2024-08-31 20:47:10.992 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_517ec7dfe71b47df834101597a9fad1d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (10b8478d-f690-4483-985a-48fe1d739f83): COMMIT;
topicName Execution of the JalShala 2023-06-16T09:16:16.000+0000
Executing (8ea5d752-d57b-4416-b323-4df9328b5d0b): START TRANSACTION;
Executing (007d7e4d-67ce-4185-bb5c-b8a14c00e28c): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '110ef2a1-b7ef-4492-837a-610b52065d14' LIMIT 1;
Executing (564d5ab7-9565-4e7a-8f1a-f8bf65dcba85): COMMIT;
topicName Execution of the JalShala 2023-06-16T09:28:55.000+0000
Executing (d95d38de-161d-4941-b9b1-2a089f37b51c): START TRANSACTION;
Executing (8ea5d752-d57b-4416-b323-4df9328b5d0b): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'ca50e610-790e-4e87-88ae-de258d6f0984' LIMIT 1;
Executing (007d7e4d-67ce-4185-bb5c-b8a14c00e28c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5b1e4700edc247e8aefd868b2695117c$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Arun Chandra nath ','110ef2a1-b7ef-4492-837a-610b52065d14','India','Assam','Dhubri District','Dhubri','','arunchnath86@gmail.com','TRAINEE ','2024-08-31 20:47:11.000 +00:00','2024-08-31 20:47:11.000 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5b1e4700edc247e8aefd868b2695117c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (caa920d1-f6e8-40d8-9b89-e7650c17631e): COMMIT;
Executing (d95d38de-161d-4941-b9b1-2a089f37b51c): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '940bad7d-ebab-40dd-8b9c-d03951723ce1' LIMIT 1;
Executing (8ea5d752-d57b-4416-b323-4df9328b5d0b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f50335f621ca46a1880662f22140949c$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Kushal Nath','ca50e610-790e-4e87-88ae-de258d6f0984','India','Assam','Dhubri District','Dhubri','8876499838','nkushal474@gmail.com','TRAINEE ','2024-08-31 20:47:11.004 +00:00','2024-08-31 20:47:11.004 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f50335f621ca46a1880662f22140949c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Execution of the JalShala 2023-06-16T09:16:21.000+0000
Executing (c8c46265-dd99-4ba3-bae7-e7371806de9b): START TRANSACTION;
Executing (d95d38de-161d-4941-b9b1-2a089f37b51c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_91e9f71fd991468db4b1f35da932a97c$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Mandira Prodhani','940bad7d-ebab-40dd-8b9c-d03951723ce1','India','Assam','Dhubri District','Dhubri','9707415874','','TRAINEE ','2024-08-31 20:47:11.007 +00:00','2024-08-31 20:47:11.007 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_91e9f71fd991468db4b1f35da932a97c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (007d7e4d-67ce-4185-bb5c-b8a14c00e28c): COMMIT;
topicName Execution of the JalShala 2023-06-16T09:38:15.000+0000
Executing (43273bea-64d7-41c5-977c-fcf235159408): START TRANSACTION;
Executing (d95d38de-161d-4941-b9b1-2a089f37b51c): COMMIT;
topicName Execution of the JalShala 2023-06-16T09:33:17.000+0000
Executing (5ee78d18-a1ad-4a4b-b731-393b432858de): START TRANSACTION;
Executing (c8c46265-dd99-4ba3-bae7-e7371806de9b): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'd7ff3cb7-f173-4971-a433-471f0aab2add' LIMIT 1;
Executing (8ea5d752-d57b-4416-b323-4df9328b5d0b): COMMIT;
topicName Execution of the JalShala 2023-06-16T09:30:00.000+0000
Executing (b5cb6a41-c943-4b9d-95d3-83778af7e3a3): START TRANSACTION;
Executing (5ee78d18-a1ad-4a4b-b731-393b432858de): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'c3efa9f7-b055-40bf-a1fd-6abfb6dd248f' LIMIT 1;
Executing (c8c46265-dd99-4ba3-bae7-e7371806de9b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_55e82520e1f745ce8dda0f45e5734d40$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Sanjit kumar das','d7ff3cb7-f173-4971-a433-471f0aab2add','India','Assam','Dhubri District','Dhubri','9101382542','','TRAINEE ','2024-08-31 20:47:11.020 +00:00','2024-08-31 20:47:11.020 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_55e82520e1f745ce8dda0f45e5734d40$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (43273bea-64d7-41c5-977c-fcf235159408): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'b6ef39c8-f38b-40df-9383-69e0d5eeeb19' LIMIT 1;
Executing (b5cb6a41-c943-4b9d-95d3-83778af7e3a3): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '42549872-9eea-474a-a594-621890e222e7' LIMIT 1;
Executing (5ee78d18-a1ad-4a4b-b731-393b432858de): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ae815f14720043c6950a069cf04474dc$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Heman Hazarika','c3efa9f7-b055-40bf-a1fd-6abfb6dd248f','India','Assam','Tinsukia District','Tinsukia','9706563396','','TRAINEE ','2024-08-31 20:47:11.024 +00:00','2024-08-31 20:47:11.024 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ae815f14720043c6950a069cf04474dc$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Execution of the JalShala 2023-06-16T09:28:06.000+0000
Executing (1b399e25-77a2-4fda-84af-73c19f0a45be): START TRANSACTION;
Executing (b5cb6a41-c943-4b9d-95d3-83778af7e3a3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e67ed05e1502491a8d834b3031d99b4c$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Robin kurmi','42549872-9eea-474a-a594-621890e222e7','India','Assam','Tinsukia District','Tinsukia','8638770499','','TRAINEE ','2024-08-31 20:47:11.027 +00:00','2024-08-31 20:47:11.027 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e67ed05e1502491a8d834b3031d99b4c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c8c46265-dd99-4ba3-bae7-e7371806de9b): COMMIT;
Executing (43273bea-64d7-41c5-977c-fcf235159408): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_959edafa60694275b2e2b932d06bee3a$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Sankor Jyoti Boruah','b6ef39c8-f38b-40df-9383-69e0d5eeeb19','India','Assam','Tinsukia District','Tinsukia','9577746751','','TRAINEE ','2024-08-31 20:47:11.030 +00:00','2024-08-31 20:47:11.030 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_959edafa60694275b2e2b932d06bee3a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b5cb6a41-c943-4b9d-95d3-83778af7e3a3): COMMIT;
topicName Execution of the JalShala 2023-06-16T10:17:48.000+0000
Executing (4ffac46a-7403-4f94-955b-e679be3fc049): START TRANSACTION;
Executing (1b399e25-77a2-4fda-84af-73c19f0a45be): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'e1ccedd7-f57c-459b-9821-edb85017a0a4' LIMIT 1;
Executing (5ee78d18-a1ad-4a4b-b731-393b432858de): COMMIT;
topicName Execution of the JalShala 2023-06-23T07:43:56.000+0000
Executing (8e23ee1b-2afc-4507-aa47-7e8d2284dfc0): START TRANSACTION;
Executing (4ffac46a-7403-4f94-955b-e679be3fc049): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '0b55fce6-afbd-4528-84fd-33bf04fda5d6' LIMIT 1;
Executing (1b399e25-77a2-4fda-84af-73c19f0a45be): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_359184a52822416593fe19c69c0d4356$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Simanta Changmai','e1ccedd7-f57c-459b-9821-edb85017a0a4','India','Assam','Tinsukia District','Tinsukia','7002238902','','TRAINEE ','2024-08-31 20:47:11.035 +00:00','2024-08-31 20:47:11.035 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_359184a52822416593fe19c69c0d4356$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (43273bea-64d7-41c5-977c-fcf235159408): COMMIT;
Executing (8e23ee1b-2afc-4507-aa47-7e8d2284dfc0): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '8d3b7c58-4a3d-400a-bff6-b8dc2bffa831' LIMIT 1;
Executing (4ffac46a-7403-4f94-955b-e679be3fc049): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_92909b9809d34a598faaad5ec77ac433$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'BIPUL UPADHYAY ','0b55fce6-afbd-4528-84fd-33bf04fda5d6','India','Assam','Tinsukia District','Tinsukia','7896061996','bipul.sadiya@gmail.com','TRAINEE ','2024-08-31 20:47:11.038 +00:00','2024-08-31 20:47:11.038 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_92909b9809d34a598faaad5ec77ac433$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Execution of the JalShala 2023-06-23T07:41:39.000+0000
Executing (05d383ad-86f7-47b0-a6a5-bdd45ade73cb): START TRANSACTION;
Executing (8e23ee1b-2afc-4507-aa47-7e8d2284dfc0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d93d0590f5b44771be86a848a66bb6a2$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Bhugil Neog','8d3b7c58-4a3d-400a-bff6-b8dc2bffa831','India','Assam','Tinsukia District','Tinsukia','9435426136','','TRAINEE ','2024-08-31 20:47:11.040 +00:00','2024-08-31 20:47:11.040 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d93d0590f5b44771be86a848a66bb6a2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Execution of the JalShala 2023-06-23T07:41:44.000+0000
Executing (fedba9ce-1d13-4512-8e47-869fe8b120d2): START TRANSACTION;
Executing (1b399e25-77a2-4fda-84af-73c19f0a45be): COMMIT;
Executing (fedba9ce-1d13-4512-8e47-869fe8b120d2): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '00a4275f-77c9-4549-a1aa-03f02627ce8e' LIMIT 1;
Executing (05d383ad-86f7-47b0-a6a5-bdd45ade73cb): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'a8b89bfc-e3f3-466a-9336-9b1bff1b3ec0' LIMIT 1;
Executing (4ffac46a-7403-4f94-955b-e679be3fc049): COMMIT;
Executing (fedba9ce-1d13-4512-8e47-869fe8b120d2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_21661d1b5337401ebb509ae47cc16bbf$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Rupjyoti Gogoi','00a4275f-77c9-4549-a1aa-03f02627ce8e','India','Assam','Tinsukia District','Tinsukia','7896649139','','TRAINEE ','2024-08-31 20:47:11.044 +00:00','2024-08-31 20:47:11.044 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_21661d1b5337401ebb509ae47cc16bbf$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (05d383ad-86f7-47b0-a6a5-bdd45ade73cb): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e9c333ae44524226ba0e908aa5bf9911$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'DIGANTA BHAJANI','a8b89bfc-e3f3-466a-9336-9b1bff1b3ec0','India','Assam','Tinsukia District','Tinsukia','9706778801','','TRAINEE ','2024-08-31 20:47:11.045 +00:00','2024-08-31 20:47:11.045 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e9c333ae44524226ba0e908aa5bf9911$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Execution of the JalShala 2023-06-23T07:42:59.000+0000
Executing (d8f8f5bb-d30e-4d68-9f65-8b9435912139): START TRANSACTION;
Executing (8e23ee1b-2afc-4507-aa47-7e8d2284dfc0): COMMIT;
Executing (fedba9ce-1d13-4512-8e47-869fe8b120d2): COMMIT;
Executing (05d383ad-86f7-47b0-a6a5-bdd45ade73cb): COMMIT;
Executing (d8f8f5bb-d30e-4d68-9f65-8b9435912139): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '18ae1d53-99c6-4838-a0b5-22c2b83b2b35' LIMIT 1;
topicName Execution of the JalShala 2023-06-23T07:45:50.000+0000
Executing (8803ded6-df76-48b6-a32c-626b68ddf371): START TRANSACTION;
topicName Execution of the JalShala 2023-06-23T07:38:06.000+0000
Executing (0b15bb69-85b6-445b-a4ad-5ac752644613): START TRANSACTION;
topicName Execution of the JalShala 2023-06-23T07:37:45.000+0000
Executing (ec29283d-0009-4316-82e5-dde1b9c5691a): START TRANSACTION;
topicName Execution of the JalShala 2023-06-23T07:45:26.000+0000
Executing (2cd55084-c694-4b4c-bdd1-e5b005825f59): START TRANSACTION;
Executing (0b15bb69-85b6-445b-a4ad-5ac752644613): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '0fa6f373-8a59-43ce-86b4-46d2a5924bb8' LIMIT 1;
Executing (ec29283d-0009-4316-82e5-dde1b9c5691a): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '01cf5f0d-2ddc-4cff-9168-78a5ef6a0390' LIMIT 1;
Executing (d8f8f5bb-d30e-4d68-9f65-8b9435912139): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3aeda6ce8920469e9f88ea413c53d1f3$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Sagar Panika','18ae1d53-99c6-4838-a0b5-22c2b83b2b35','India','Assam','Tinsukia District','Tinsukia','9101328359','','TRAINEE ','2024-08-31 20:47:11.053 +00:00','2024-08-31 20:47:11.053 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3aeda6ce8920469e9f88ea413c53d1f3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8803ded6-df76-48b6-a32c-626b68ddf371): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '43cbd0c4-ab9e-4f97-b943-d29673283717' LIMIT 1;
Executing (0b15bb69-85b6-445b-a4ad-5ac752644613): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_864fcc340243409bbaa7d142babc0c81$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Asraf Ali ','0fa6f373-8a59-43ce-86b4-46d2a5924bb8','India','Assam','Udalguri District','Dhip Bisara','6002009842','','TRAINEE ','2024-08-31 20:47:11.055 +00:00','2024-08-31 20:47:11.055 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_864fcc340243409bbaa7d142babc0c81$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ec29283d-0009-4316-82e5-dde1b9c5691a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_25f165bc21634a06b770571bdaed7d59$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Susanta ','01cf5f0d-2ddc-4cff-9168-78a5ef6a0390','India','Assam','Charaideo District','Sonari','7896109500','','TRAINEE ','2024-08-31 20:47:11.056 +00:00','2024-08-31 20:47:11.056 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_25f165bc21634a06b770571bdaed7d59$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2cd55084-c694-4b4c-bdd1-e5b005825f59): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '9484cabc-789c-490a-abc0-50cc74dbd4b7' LIMIT 1;
Executing (0b15bb69-85b6-445b-a4ad-5ac752644613): COMMIT;
Executing (8803ded6-df76-48b6-a32c-626b68ddf371): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_82bfbab628bf42ac96b020d250a561ea$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Kamal Borah ','43cbd0c4-ab9e-4f97-b943-d29673283717','India','Assam','Tinsukia District','Tinsukia','8876618682','kamalborah179@gmail.com','TRAINEE ','2024-08-31 20:47:11.059 +00:00','2024-08-31 20:47:11.059 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_82bfbab628bf42ac96b020d250a561ea$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d8f8f5bb-d30e-4d68-9f65-8b9435912139): COMMIT;
topicName Execution of the JalShala 2023-06-06T12:13:02.000+0000
Executing (fa0308c0-0ec9-4701-99e0-acbec4372cfe): START TRANSACTION;
Executing (2cd55084-c694-4b4c-bdd1-e5b005825f59): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_204e2420fef743e1bdcdf951d5906575$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'DELETED BY USER','9484cabc-789c-490a-abc0-50cc74dbd4b7','India','Assam','Cachar District','Silchar','DELETED BY USER','DELETED BY USER','TRAINEE ','2024-08-31 20:47:11.062 +00:00','2024-08-31 20:47:11.062 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_204e2420fef743e1bdcdf951d5906575$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ec29283d-0009-4316-82e5-dde1b9c5691a): COMMIT;
Executing (fa0308c0-0ec9-4701-99e0-acbec4372cfe): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '3dde8fd3-646c-429d-9a62-388274eb125a' LIMIT 1;
topicName Execution of the JalShala 2023-06-23T07:43:47.000+0000
Executing (b8531f5c-0706-4fe4-a1a2-f4b04e3a1a69): START TRANSACTION;
Executing (8803ded6-df76-48b6-a32c-626b68ddf371): COMMIT;
Executing (fa0308c0-0ec9-4701-99e0-acbec4372cfe): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a73c7591ff2941f8921b9586ee61cfbc$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Krishna Kanta Das','3dde8fd3-646c-429d-9a62-388274eb125a','India','Assam','Cachar District','Silchar','8638450046','krishnakanta.in@gmail.com','TRAINEE ','2024-08-31 20:47:11.065 +00:00','2024-08-31 20:47:11.065 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a73c7591ff2941f8921b9586ee61cfbc$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b8531f5c-0706-4fe4-a1a2-f4b04e3a1a69): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '704248ea-bdd5-4300-a69e-54264c035207' LIMIT 1;
topicName Execution of the JalShala 2023-06-06T11:18:57.000+0000
Executing (9ee88325-4ba5-48b1-b727-dfe626ed0963): START TRANSACTION;
Executing (2cd55084-c694-4b4c-bdd1-e5b005825f59): COMMIT;
Executing (b8531f5c-0706-4fe4-a1a2-f4b04e3a1a69): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a736c61399d340df8ef6b39fc658ffd8$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'SATYAJIT DAS','704248ea-bdd5-4300-a69e-54264c035207','India','Assam','Cachar District','Silchar','9435182615','','TRAINEE ','2024-08-31 20:47:11.068 +00:00','2024-08-31 20:47:11.068 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a736c61399d340df8ef6b39fc658ffd8$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9ee88325-4ba5-48b1-b727-dfe626ed0963): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '2d5d097f-c694-4188-bf09-1859357b1515' LIMIT 1;
topicName Execution of the JalShala 2023-06-23T07:44:49.000+0000
Executing (baa70458-95be-4d0b-ad0e-d07c9aad69cd): START TRANSACTION;
Executing (fa0308c0-0ec9-4701-99e0-acbec4372cfe): COMMIT;
topicName Execution of the JalShala 2023-06-06T16:55:25.000+0000
Executing (37460c7d-de6c-4b1b-b180-ff794c95b3ac): START TRANSACTION;
Executing (9ee88325-4ba5-48b1-b727-dfe626ed0963): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_25ab5e1f42bf49f38569f3c59668f4a1$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'L Darendrojit Singha','2d5d097f-c694-4188-bf09-1859357b1515','India','Assam','Cachar District','Silchar','9435600845','darendrojit@gmail.com','TRAINEE ','2024-08-31 20:47:11.071 +00:00','2024-08-31 20:47:11.071 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_25ab5e1f42bf49f38569f3c59668f4a1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b8531f5c-0706-4fe4-a1a2-f4b04e3a1a69): COMMIT;
Executing (baa70458-95be-4d0b-ad0e-d07c9aad69cd): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '3028ee3f-39b2-4f0f-89db-7672e037ef63' LIMIT 1;
topicName Execution of the JalShala 2023-06-08T09:16:10.000+0000
Executing (2dfb1903-6e22-465c-a590-c4a0cf7a3ef4): START TRANSACTION;
topicName Execution of the JalShala 2023-06-08T09:29:57.000+0000
Executing (d120a486-1025-40b2-af50-3977f75987c8): START TRANSACTION;
Executing (37460c7d-de6c-4b1b-b180-ff794c95b3ac): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '4033ed96-355e-45b1-91ce-9f1fd8532b47' LIMIT 1;
Executing (2dfb1903-6e22-465c-a590-c4a0cf7a3ef4): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'e5e059eb-5d83-4fe2-93d7-04ef49a1b047' LIMIT 1;
Executing (d120a486-1025-40b2-af50-3977f75987c8): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '78ed1d0e-5194-4376-8b3f-f69c1391d3a3' LIMIT 1;
Executing (9ee88325-4ba5-48b1-b727-dfe626ed0963): COMMIT;
Executing (baa70458-95be-4d0b-ad0e-d07c9aad69cd): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_82208a5f3d9046c683477a45fe3d4cc5$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Dipankar Ghosh ','3028ee3f-39b2-4f0f-89db-7672e037ef63','India','Assam','Cachar District','Silchar','7002463091','dipankarghosh777@gmail.com','TRAINEE ','2024-08-31 20:47:11.077 +00:00','2024-08-31 20:47:11.077 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_82208a5f3d9046c683477a45fe3d4cc5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2dfb1903-6e22-465c-a590-c4a0cf7a3ef4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1c65c396cc754624ad7d5dbddd43ec10$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Niranjan Borah ','e5e059eb-5d83-4fe2-93d7-04ef49a1b047','India','Assam','Dibrugarh District','Dibrugarh','7002574958','','TRAINEE ','2024-08-31 20:47:11.078 +00:00','2024-08-31 20:47:11.078 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1c65c396cc754624ad7d5dbddd43ec10$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d120a486-1025-40b2-af50-3977f75987c8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_526e4dc814014dbd96dedcf464d8a877$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Golap Hussain','78ed1d0e-5194-4376-8b3f-f69c1391d3a3','India','Assam','South Salmara Mankachar District','Hatsingimari','9954740422','','TRAINEE ','2024-08-31 20:47:11.079 +00:00','2024-08-31 20:47:11.079 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_526e4dc814014dbd96dedcf464d8a877$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Execution of the JalShala 2023-06-08T09:22:04.000+0000
Executing (0e969c5f-76da-4f01-808c-08b27d5afc18): START TRANSACTION;
Executing (37460c7d-de6c-4b1b-b180-ff794c95b3ac): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_aa32a2114a9b4ec7bd147acdeb2c3142$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Manna Kishore Das','4033ed96-355e-45b1-91ce-9f1fd8532b47','India','Assam','Cachar District','Silchar','9954101470','mannadas412@gmail.com','TRAINEE ','2024-08-31 20:47:11.081 +00:00','2024-08-31 20:47:11.081 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_aa32a2114a9b4ec7bd147acdeb2c3142$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2dfb1903-6e22-465c-a590-c4a0cf7a3ef4): COMMIT;
Executing (d120a486-1025-40b2-af50-3977f75987c8): COMMIT;
Executing (0e969c5f-76da-4f01-808c-08b27d5afc18): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '6ddf90c1-9c9b-4ca1-a369-45db7c480042' LIMIT 1;
Executing (baa70458-95be-4d0b-ad0e-d07c9aad69cd): COMMIT;
topicName Execution of the JalShala 2023-05-29T11:04:44.000+0000
Executing (99d09c18-74e3-4373-bd13-99a0bf83229c): START TRANSACTION;
topicName Execution of the JalShala 2023-06-11T09:28:34.000+0000
Executing (54edcd32-4c07-4f13-a136-1aa8b3b5f7d8): START TRANSACTION;
Executing (0e969c5f-76da-4f01-808c-08b27d5afc18): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_29661b9415d74a2c93b746a49dfa3327$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Rezaul Alom ','6ddf90c1-9c9b-4ca1-a369-45db7c480042','India','Assam','South Salmara Mankachar District','Hatsingimari','9957489515','','TRAINEE ','2024-08-31 20:47:11.086 +00:00','2024-08-31 20:47:11.086 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_29661b9415d74a2c93b746a49dfa3327$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (37460c7d-de6c-4b1b-b180-ff794c95b3ac): COMMIT;
Executing (99d09c18-74e3-4373-bd13-99a0bf83229c): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '59652d89-4354-40d8-be71-8b5d15ca4d7d' LIMIT 1;
Executing (54edcd32-4c07-4f13-a136-1aa8b3b5f7d8): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'eaea65ad-ae30-4949-9fcb-2933a042e796' LIMIT 1;
topicName Execution of the JalShala 2023-06-08T09:27:47.000+0000
Executing (ebf7b5ec-205e-481c-a804-7da152e7a6f6): START TRANSACTION;
Executing (99d09c18-74e3-4373-bd13-99a0bf83229c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5bb2178548ed4cafafda2ca81cf0fb65$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Debjit Ghosh','59652d89-4354-40d8-be71-8b5d15ca4d7d','India','Assam','South Salmara Mankachar District','Hatsingimari','9957524622','','TRAINEE ','2024-08-31 20:47:11.090 +00:00','2024-08-31 20:47:11.090 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5bb2178548ed4cafafda2ca81cf0fb65$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Execution of the JalShala 2023-06-08T09:30:13.000+0000
Executing (d7169fb5-1abb-476c-ae7e-f79f7c285799): START TRANSACTION;
Executing (0e969c5f-76da-4f01-808c-08b27d5afc18): COMMIT;
Executing (d7169fb5-1abb-476c-ae7e-f79f7c285799): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '68d802d6-0ce4-45cb-86d2-2ca69cf9d2a0' LIMIT 1;
Executing (54edcd32-4c07-4f13-a136-1aa8b3b5f7d8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4305bc1313554984bee53bb223cc1a92$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Chhandami Rongpipi','eaea65ad-ae30-4949-9fcb-2933a042e796','India','Assam','Kokrajhar District','Bajugaon No 1','8638774385','','TRAINEE ','2024-08-31 20:47:11.093 +00:00','2024-08-31 20:47:11.093 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4305bc1313554984bee53bb223cc1a92$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ebf7b5ec-205e-481c-a804-7da152e7a6f6): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'b7934ad1-ac0f-4bc5-836e-46944134194a' LIMIT 1;
Executing (d7169fb5-1abb-476c-ae7e-f79f7c285799): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1544500b1ff447f4853f8901fa9abf02$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'D Wary','68d802d6-0ce4-45cb-86d2-2ca69cf9d2a0','India','Assam','Kamrup Metropolitan District','Guwahati','8812914262','','TRAINEE ','2024-08-31 20:47:11.094 +00:00','2024-08-31 20:47:11.094 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1544500b1ff447f4853f8901fa9abf02$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (99d09c18-74e3-4373-bd13-99a0bf83229c): COMMIT;
topicName Execution of the JalShala 2023-06-11T09:35:14.000+0000
Executing (2b5839fe-0f84-4da0-982a-355f4aa71ece): START TRANSACTION;
topicName Execution of the JalShala 2023-06-11T09:33:40.000+0000
Executing (8e140cc8-8cb8-4cd1-913e-50e788809f18): START TRANSACTION;
Executing (ebf7b5ec-205e-481c-a804-7da152e7a6f6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6d4676e52c0845c9b5f8eb1587f94eae$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Abdur Rahman Mazumder ','b7934ad1-ac0f-4bc5-836e-46944134194a','India','Assam','Cachar District','Silchar','9435191487','mazumderabdurrahman@gmail.com','TRAINEE ','2024-08-31 20:47:11.097 +00:00','2024-08-31 20:47:11.097 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6d4676e52c0845c9b5f8eb1587f94eae$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (54edcd32-4c07-4f13-a136-1aa8b3b5f7d8): COMMIT;
Executing (8e140cc8-8cb8-4cd1-913e-50e788809f18): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'ed78b801-9229-4182-b609-470f1ca00fa6' LIMIT 1;
Executing (2b5839fe-0f84-4da0-982a-355f4aa71ece): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '8784c9b7-1298-4c5b-aaad-082095062d5c' LIMIT 1;
Executing (d7169fb5-1abb-476c-ae7e-f79f7c285799): COMMIT;
Executing (8e140cc8-8cb8-4cd1-913e-50e788809f18): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3dd9025c45f14b55a487278dced41a18$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Ariful Hoque Khandokar','ed78b801-9229-4182-b609-470f1ca00fa6','India','Assam','South Salmara Mankachar District','Hatsingimari','9678355072','','TRAINEE ','2024-08-31 20:47:11.101 +00:00','2024-08-31 20:47:11.101 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3dd9025c45f14b55a487278dced41a18$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2b5839fe-0f84-4da0-982a-355f4aa71ece): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_37f105e40b86453787618301420b3d02$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'NUR ALOM HOQUE','8784c9b7-1298-4c5b-aaad-082095062d5c','India','Assam','South Salmara Mankachar District','Hatsingimari','8011970280','nahoque0@gmail.com','TRAINEE ','2024-08-31 20:47:11.102 +00:00','2024-08-31 20:47:11.102 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_37f105e40b86453787618301420b3d02$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Execution of the JalShala 2023-06-12T03:30:22.000+0000
Executing (4bbb2c86-e79b-4708-bc36-cda68f45790a): START TRANSACTION;
Executing (ebf7b5ec-205e-481c-a804-7da152e7a6f6): COMMIT;
Executing (8e140cc8-8cb8-4cd1-913e-50e788809f18): COMMIT;
Executing (4bbb2c86-e79b-4708-bc36-cda68f45790a): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '67544f1b-f881-498b-9bd5-b4044eee7e76' LIMIT 1;
topicName Execution of the JalShala 2023-06-11T03:52:29.000+0000
Executing (0886f343-59c9-44e0-8b34-6a88f3123c05): START TRANSACTION;
topicName Execution of the JalShala 2023-06-11T09:30:18.000+0000
Executing (65f86394-ac08-4684-b4ba-2989aa16ec38): START TRANSACTION;
Executing (4bbb2c86-e79b-4708-bc36-cda68f45790a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c9d43d96939948b798f2d9754430f81a$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Abdul Awal Khan','67544f1b-f881-498b-9bd5-b4044eee7e76','India','Assam','South Salmara Mankachar District','Hatsingimari','9954173394','','TRAINEE ','2024-08-31 20:47:11.107 +00:00','2024-08-31 20:47:11.107 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c9d43d96939948b798f2d9754430f81a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Execution of the JalShala 2023-06-08T09:27:55.000+0000
Executing (5cf5d4cb-c213-4083-b30d-beed0d940ab8): START TRANSACTION;
Executing (2b5839fe-0f84-4da0-982a-355f4aa71ece): COMMIT;
Executing (65f86394-ac08-4684-b4ba-2989aa16ec38): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'a7db7bf8-9af9-440d-aab9-ced9b308ead4' LIMIT 1;
Executing (5cf5d4cb-c213-4083-b30d-beed0d940ab8): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '5b3ecf7c-0070-489b-be1d-995dc1829f0a' LIMIT 1;
Executing (0886f343-59c9-44e0-8b34-6a88f3123c05): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '533b6923-355b-4a2d-b88a-802edf884268' LIMIT 1;
Executing (65f86394-ac08-4684-b4ba-2989aa16ec38): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_14fcdae7f03540599d224f02db88d52e$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Jolly Changmai Kalita ','a7db7bf8-9af9-440d-aab9-ced9b308ead4','India','Assam','Kamrup Metropolitan District','Guwahati','9435551220','','TRAINEE ','2024-08-31 20:47:11.112 +00:00','2024-08-31 20:47:11.112 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_14fcdae7f03540599d224f02db88d52e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5cf5d4cb-c213-4083-b30d-beed0d940ab8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_36f11acc328a404dae7bd0d0485500f6$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'BHRIGURAJ KASHYAP ','5b3ecf7c-0070-489b-be1d-995dc1829f0a','India','Assam','Kamrup Metropolitan District','Guwahati','8486626888','','TRAINEE ','2024-08-31 20:47:11.113 +00:00','2024-08-31 20:47:11.113 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_36f11acc328a404dae7bd0d0485500f6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Execution of the JalShala 2023-06-11T09:28:46.000+0000
Executing (4b158439-0aae-4041-8620-471669cfafdc): START TRANSACTION;
Executing (4bbb2c86-e79b-4708-bc36-cda68f45790a): COMMIT;
Executing (65f86394-ac08-4684-b4ba-2989aa16ec38): COMMIT;
Executing (4b158439-0aae-4041-8620-471669cfafdc): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '62c01ea6-4c0b-4564-9a72-d7b0c608554d' LIMIT 1;
Executing (0886f343-59c9-44e0-8b34-6a88f3123c05): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3f1cdc88962f455ab32f29375520a623$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Nazrul Islam ','533b6923-355b-4a2d-b88a-802edf884268','India','Assam','Dhubri District','Gauripur','9435849132','nazrulluban@gmail.com','TRAINEE ','2024-08-31 20:47:11.117 +00:00','2024-08-31 20:47:11.117 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3f1cdc88962f455ab32f29375520a623$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Planning of the JalShala 2023-05-15T09:59:58.000+0000
Executing (c1986b84-6c8d-47d1-ab98-1aa454abde08): START TRANSACTION;
Executing (4b158439-0aae-4041-8620-471669cfafdc): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6c2921b6576f47e3906be86ba62890bb$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Dr. Mukut Kalita','62c01ea6-4c0b-4564-9a72-d7b0c608554d','India','Assam','Kamrup Metropolitan District','Guwahati','9365924417','','TRAINEE ','2024-08-31 20:47:11.119 +00:00','2024-08-31 20:47:11.119 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6c2921b6576f47e3906be86ba62890bb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5cf5d4cb-c213-4083-b30d-beed0d940ab8): COMMIT;
topicName Execution of the JalShala 2023-06-11T09:30:40.000+0000
Executing (0487d977-3323-4e32-9591-9bd17376f611): START TRANSACTION;
Executing (c1986b84-6c8d-47d1-ab98-1aa454abde08): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '5cdc1a8a-cb15-43f3-b601-8e5709a7332d' LIMIT 1;
topicName Execution of the JalShala 2023-05-15T10:17:34.000+0000
Executing (bf3940c6-bfbb-4ec4-b764-7df15de64cf7): START TRANSACTION;
Executing (0886f343-59c9-44e0-8b34-6a88f3123c05): COMMIT;
Executing (c1986b84-6c8d-47d1-ab98-1aa454abde08): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_64547583ae4d4538b7b0d3aa92eedff7$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Janardon Buragohain','5cdc1a8a-cb15-43f3-b601-8e5709a7332d','India','Assam','Kamrup Metropolitan District','Guwahati','9954936715','janardonburagohain97321@gmail.com','TRAINEE ','2024-08-31 20:47:11.123 +00:00','2024-08-31 20:47:11.123 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_64547583ae4d4538b7b0d3aa92eedff7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bf3940c6-bfbb-4ec4-b764-7df15de64cf7): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '5362a9d7-d18a-4cd0-9094-b499e05d2c13' LIMIT 1;
Executing (0487d977-3323-4e32-9591-9bd17376f611): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '1d26bd1f-53f9-4a4f-872d-75baa4d966a6' LIMIT 1;
Executing (4b158439-0aae-4041-8620-471669cfafdc): COMMIT;
Executing (c1986b84-6c8d-47d1-ab98-1aa454abde08): COMMIT;
Executing (bf3940c6-bfbb-4ec4-b764-7df15de64cf7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_367fbf2c253b4300a008d1f2972cd303$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Bikash Jyoti Hazarika ','5362a9d7-d18a-4cd0-9094-b499e05d2c13','India','Assam','Kamrup Metropolitan District','Guwahati','7002016583','','TRAINEE ','2024-08-31 20:47:11.127 +00:00','2024-08-31 20:47:11.127 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_367fbf2c253b4300a008d1f2972cd303$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0487d977-3323-4e32-9591-9bd17376f611): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5f2c8df2c3ab491c8cad6c3cb2a82d08$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Dr. Dima Rani Borgohain','1d26bd1f-53f9-4a4f-872d-75baa4d966a6','India','Assam','Dhemaji District','No 2 Lakhi Pathar','7002243824','diminlp@gmail.com','TRAINEE ','2024-08-31 20:47:11.128 +00:00','2024-08-31 20:47:11.128 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5f2c8df2c3ab491c8cad6c3cb2a82d08$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Execution of the JalShala 2023-05-29T13:47:01.000+0000
Executing (8cb273a8-c801-44dd-a71d-016e73c72a38): START TRANSACTION;
topicName Execution of the JalShala 2023-05-26T11:28:11.000+0000
Executing (4bac71e9-0543-4cb9-ae81-2fc4210b3cdf): START TRANSACTION;
topicName Execution of the JalShala 2023-05-15T10:12:05.000+0000
Executing (ae816b2c-0825-422d-837f-14a33a995ad0): START TRANSACTION;
Executing (4bac71e9-0543-4cb9-ae81-2fc4210b3cdf): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '909970da-ceda-452d-a554-3253549b7c34' LIMIT 1;
Executing (8cb273a8-c801-44dd-a71d-016e73c72a38): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '39577de1-cc39-4e94-9663-8b1479d62ee3' LIMIT 1;
Executing (bf3940c6-bfbb-4ec4-b764-7df15de64cf7): COMMIT;
Executing (4bac71e9-0543-4cb9-ae81-2fc4210b3cdf): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_47fa98fe4d94439ab3e5418784bb48f2$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Trinayan Das','909970da-ceda-452d-a554-3253549b7c34','India','Assam','Kamrup Metropolitan District','Guwahati','8486016771','','TRAINEE ','2024-08-31 20:47:11.133 +00:00','2024-08-31 20:47:11.133 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_47fa98fe4d94439ab3e5418784bb48f2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8cb273a8-c801-44dd-a71d-016e73c72a38): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c01ce8f9d8ba44dbabd471b59a62f500$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Dr. Arunabha Bhattacharjee ','39577de1-cc39-4e94-9663-8b1479d62ee3','India','Assam','Kamrup Metropolitan District','Guwahati','9435074040','arunabharaja@gmail.com','TRAINEE ','2024-08-31 20:47:11.134 +00:00','2024-08-31 20:47:11.134 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c01ce8f9d8ba44dbabd471b59a62f500$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0487d977-3323-4e32-9591-9bd17376f611): COMMIT;
Executing (ae816b2c-0825-422d-837f-14a33a995ad0): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '33f2bc0a-4818-4cfd-b1a7-dc96eca03a20' LIMIT 1;
Executing (4bac71e9-0543-4cb9-ae81-2fc4210b3cdf): COMMIT;
topicName Execution of the JalShala 2023-05-29T10:57:03.000+0000
Executing (3950316e-bff8-44a3-8c46-f7a9d044c172): START TRANSACTION;
topicName Execution of the JalShala 2023-05-29T10:57:07.000+0000
Executing (f3027a90-c4a7-411f-b7b8-5e35dacc3b41): START TRANSACTION;
topicName Execution of the JalShala 2023-05-29T10:57:03.000+0000
Executing (e3915a54-59d3-4179-a113-1fe813f83f89): START TRANSACTION;
Executing (3950316e-bff8-44a3-8c46-f7a9d044c172): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '1a587d8f-ab0f-41a4-8734-4eb5299de541' LIMIT 1;
Executing (8cb273a8-c801-44dd-a71d-016e73c72a38): COMMIT;
Executing (ae816b2c-0825-422d-837f-14a33a995ad0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f13c0c0526454b5c839180c5f71a8c97$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'KSHIROD MOHAN Boruah','33f2bc0a-4818-4cfd-b1a7-dc96eca03a20','India','Assam','Kamrup Metropolitan District','Guwahati','9954889806','mohankshirod@gmail.com','TRAINEE ','2024-08-31 20:47:11.140 +00:00','2024-08-31 20:47:11.140 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f13c0c0526454b5c839180c5f71a8c97$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e3915a54-59d3-4179-a113-1fe813f83f89): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '220027ad-44ca-4456-bce1-b7bc320100ca' LIMIT 1;
Executing (3950316e-bff8-44a3-8c46-f7a9d044c172): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c7d32358b1274bd29dc7709d629f68a9$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Debajit Chakrabarty','1a587d8f-ab0f-41a4-8734-4eb5299de541','India','Assam','Kamrup Metropolitan District','Guwahati','7086718679','debajit.golaghat@gmail.com','TRAINEE ','2024-08-31 20:47:11.142 +00:00','2024-08-31 20:47:11.142 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c7d32358b1274bd29dc7709d629f68a9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Execution of the JalShala 2023-05-29T10:57:13.000+0000
Executing (01800f95-09d0-4c7b-a2a0-a51f2c621f34): START TRANSACTION;
Executing (f3027a90-c4a7-411f-b7b8-5e35dacc3b41): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '008bf78d-3278-40df-ac0b-f61aaad7df00' LIMIT 1;
Executing (e3915a54-59d3-4179-a113-1fe813f83f89): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7739fecc941d42ce906fe1ddf0479f0f$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Subir Adhikari','220027ad-44ca-4456-bce1-b7bc320100ca','India','Assam','Kamrup Metropolitan District','Guwahati','9435566318','subiradhikari72@gmail.com','TRAINEE ','2024-08-31 20:47:11.145 +00:00','2024-08-31 20:47:11.145 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7739fecc941d42ce906fe1ddf0479f0f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (01800f95-09d0-4c7b-a2a0-a51f2c621f34): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '984a0a77-1089-4069-b1b7-31d6653cf39f' LIMIT 1;
Executing (ae816b2c-0825-422d-837f-14a33a995ad0): COMMIT;
Executing (3950316e-bff8-44a3-8c46-f7a9d044c172): COMMIT;
Executing (f3027a90-c4a7-411f-b7b8-5e35dacc3b41): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9ea6f4e401944852acfc7fe9b7238ef7$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'RANA RANJAN NATH ','008bf78d-3278-40df-ac0b-f61aaad7df00','India','Assam','Kamrup Metropolitan District','Guwahati','7035678575','ranaranjan17@gmail.com','TRAINEE ','2024-08-31 20:47:11.148 +00:00','2024-08-31 20:47:11.148 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9ea6f4e401944852acfc7fe9b7238ef7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Execution of the JalShala 2023-05-29T11:08:08.000+0000
Executing (07fb7f07-ecc6-4542-b457-782efc54097f): START TRANSACTION;
Executing (01800f95-09d0-4c7b-a2a0-a51f2c621f34): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_769464e9d41543a888dc353a32d9cadc$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Saikat dey','984a0a77-1089-4069-b1b7-31d6653cf39f','India','Assam','Kamrup Metropolitan District','Guwahati','7002196294','saikatdey1177@gmail.com','TRAINEE ','2024-08-31 20:47:11.150 +00:00','2024-08-31 20:47:11.150 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_769464e9d41543a888dc353a32d9cadc$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Execution of the JalShala 2023-05-29T10:57:02.000+0000
Executing (2ecb9f53-8010-4d11-bcd6-96fb95772508): START TRANSACTION;
Executing (e3915a54-59d3-4179-a113-1fe813f83f89): COMMIT;
Executing (07fb7f07-ecc6-4542-b457-782efc54097f): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '47dfaaee-20e7-470d-a578-be5efdb6fcbc' LIMIT 1;
Executing (2ecb9f53-8010-4d11-bcd6-96fb95772508): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '65b9d878-fa4a-4ffd-bb97-f830475c6b7b' LIMIT 1;
Executing (f3027a90-c4a7-411f-b7b8-5e35dacc3b41): COMMIT;
Executing (07fb7f07-ecc6-4542-b457-782efc54097f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3ba32c98748f4158af35b45d46ad83b2$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Arnab Saikia','47dfaaee-20e7-470d-a578-be5efdb6fcbc','India','Assam','Biswanath District','Biswanath Chariali','8473018612','arnabsaikia420@gmail.com','TRAINEE ','2024-08-31 20:47:11.154 +00:00','2024-08-31 20:47:11.154 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3ba32c98748f4158af35b45d46ad83b2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2ecb9f53-8010-4d11-bcd6-96fb95772508): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_efc6eda44bff44e5b7b45be74529a7a5$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Trisiddha Nath ','65b9d878-fa4a-4ffd-bb97-f830475c6b7b','India','Assam','Kamrup Metropolitan District','Guwahati','6002569175','','TRAINEE ','2024-08-31 20:47:11.155 +00:00','2024-08-31 20:47:11.155 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_efc6eda44bff44e5b7b45be74529a7a5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Execution of the JalShala 2023-05-29T10:57:14.000+0000
Executing (0bacf998-b2a3-43ba-a291-0b1a280db473): START TRANSACTION;
Executing (01800f95-09d0-4c7b-a2a0-a51f2c621f34): COMMIT;
Executing (07fb7f07-ecc6-4542-b457-782efc54097f): COMMIT;
Executing (0bacf998-b2a3-43ba-a291-0b1a280db473): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'f33cb0b3-7f13-48d7-b67d-bf42767fcf32' LIMIT 1;
topicName Execution of the JalShala 2023-05-29T10:57:31.000+0000
Executing (42f4eaa9-b0a1-4b0d-8842-9970ec6f1c03): START TRANSACTION;
topicName Execution of the JalShala 2023-05-30T11:04:30.000+0000
Executing (4c87367e-bff3-4952-af58-1a5516436f23): START TRANSACTION;
Executing (0bacf998-b2a3-43ba-a291-0b1a280db473): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f56efb50d9bf446bbfa03a4dec9368fa$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Arnab Jyoti Arya','f33cb0b3-7f13-48d7-b67d-bf42767fcf32','','','','','NA','NA','TRAINEE ','2024-08-31 20:47:11.160 +00:00','2024-08-31 20:47:11.160 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f56efb50d9bf446bbfa03a4dec9368fa$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2ecb9f53-8010-4d11-bcd6-96fb95772508): COMMIT;
topicName Execution of the JalShala 2023-05-29T10:57:25.000+0000
Executing (4264d484-474b-44b7-9e07-8948c237b593): START TRANSACTION;
Executing (4c87367e-bff3-4952-af58-1a5516436f23): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '0fd2789c-d2c1-48de-8e48-0e3b9d3c234c' LIMIT 1;
topicName Execution of the JalShala 2023-05-30T11:00:00.000+0000
Executing (d4179e66-0129-483b-97d9-4d2453d54bb9): START TRANSACTION;
Executing (42f4eaa9-b0a1-4b0d-8842-9970ec6f1c03): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '2fd74557-b0c1-4d60-8f7d-47eabf8e6f62' LIMIT 1;
Executing (4c87367e-bff3-4952-af58-1a5516436f23): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3c27c2f364df4730a1caf5c2ea04816e$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Shashabindu Dey','0fd2789c-d2c1-48de-8e48-0e3b9d3c234c','India','Assam','Karimganj District','Karimganj','7636006459','shashabindudey73.sd@gmail.com','TRAINEE ','2024-08-31 20:47:11.164 +00:00','2024-08-31 20:47:11.164 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3c27c2f364df4730a1caf5c2ea04816e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d4179e66-0129-483b-97d9-4d2453d54bb9): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '814ff81f-1482-41fa-b34a-97ae266fb085' LIMIT 1;
Executing (4264d484-474b-44b7-9e07-8948c237b593): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '35914b29-c7ff-41c7-9b2c-28c4128d66fa' LIMIT 1;
Executing (0bacf998-b2a3-43ba-a291-0b1a280db473): COMMIT;
Executing (4c87367e-bff3-4952-af58-1a5516436f23): COMMIT;
Executing (d4179e66-0129-483b-97d9-4d2453d54bb9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8c96534e4a514793b0471fd5caf37542$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Bhaskaryya Deka','814ff81f-1482-41fa-b34a-97ae266fb085','India','Assam','Kamrup Metropolitan District','Guwahati','6001248216','','TRAINEE ','2024-08-31 20:47:11.168 +00:00','2024-08-31 20:47:11.168 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8c96534e4a514793b0471fd5caf37542$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4264d484-474b-44b7-9e07-8948c237b593): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cb958d5d9d754708a4ebf73de2f54d17$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Kiyekashyap Pathak','35914b29-c7ff-41c7-9b2c-28c4128d66fa','India','Assam','Kamrup Metropolitan District','Guwahati','8486610915','','TRAINEE ','2024-08-31 20:47:11.169 +00:00','2024-08-31 20:47:11.169 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cb958d5d9d754708a4ebf73de2f54d17$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (42f4eaa9-b0a1-4b0d-8842-9970ec6f1c03): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a917c7da543140c1861281637dbe238f$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Shahinur Islam','2fd74557-b0c1-4d60-8f7d-47eabf8e6f62','India','Assam','Kamrup Metropolitan District','Guwahati','9101127455','shahin.ivision@gmail.com','TRAINEE ','2024-08-31 20:47:11.170 +00:00','2024-08-31 20:47:11.170 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a917c7da543140c1861281637dbe238f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Execution of the JalShala 2023-05-30T11:02:22.000+0000
Executing (dede92b3-b14f-49ca-ba50-5602bedbdf00): START TRANSACTION;
Executing (d4179e66-0129-483b-97d9-4d2453d54bb9): COMMIT;
topicName Execution of the JalShala 2023-05-30T11:02:15.000+0000
Executing (12d91b89-51df-4980-b63d-949ce6798d37): START TRANSACTION;
Executing (dede92b3-b14f-49ca-ba50-5602bedbdf00): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '7c236bf0-be29-4c30-8651-f8e88fb6dde9' LIMIT 1;
topicName Execution of the JalShala 2023-05-30T11:02:16.000+0000
Executing (9ab9fab3-d17b-4827-a3ed-0f977a8ff9ea): START TRANSACTION;
Executing (4264d484-474b-44b7-9e07-8948c237b593): COMMIT;
Executing (42f4eaa9-b0a1-4b0d-8842-9970ec6f1c03): COMMIT;
Executing (dede92b3-b14f-49ca-ba50-5602bedbdf00): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6a80bc6679e34f7787b23e65be39fc5b$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Roton Ramdey ','7c236bf0-be29-4c30-8651-f8e88fb6dde9','India','Assam','Kamrup Metropolitan District','Guwahati','9678462164','','TRAINEE ','2024-08-31 20:47:11.177 +00:00','2024-08-31 20:47:11.177 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6a80bc6679e34f7787b23e65be39fc5b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9ab9fab3-d17b-4827-a3ed-0f977a8ff9ea): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'e87a3059-a5a4-48ae-aef2-601658bd0e18' LIMIT 1;
topicName Execution of the JalShala 2023-05-30T11:02:24.000+0000
Executing (1adf7018-73a1-463a-82f0-e69169570965): START TRANSACTION;
Executing (12d91b89-51df-4980-b63d-949ce6798d37): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'a6a3144d-7891-4ea9-ba34-72737cbfdb8c' LIMIT 1;
Executing (dede92b3-b14f-49ca-ba50-5602bedbdf00): COMMIT;
Executing (9ab9fab3-d17b-4827-a3ed-0f977a8ff9ea): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1e244facacdd47e4bb9b08955c60d1a2$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Pradip kumar Gogoi','e87a3059-a5a4-48ae-aef2-601658bd0e18','India','Assam','Dhemaji District','Dhemaji','7002219545','','TRAINEE ','2024-08-31 20:47:11.180 +00:00','2024-08-31 20:47:11.180 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1e244facacdd47e4bb9b08955c60d1a2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1adf7018-73a1-463a-82f0-e69169570965): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '91b483c7-6378-4355-be57-3a69f6e10ba5' LIMIT 1;
topicName Execution of the JalShala 2023-05-30T11:02:19.000+0000
Executing (622c7c9a-b3cb-450a-ba4b-cf20187acbda): START TRANSACTION;
topicName Execution of the JalShala 2023-05-30T11:02:27.000+0000
Executing (831896df-8d73-41ef-9fe4-a793ce6f7ff4): START TRANSACTION;
Executing (12d91b89-51df-4980-b63d-949ce6798d37): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_84d2e5d4a1bb4bef830225202b9c061f$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Akhya Raj Muchahary','a6a3144d-7891-4ea9-ba34-72737cbfdb8c','India','Assam','Kamrup Metropolitan District','Guwahati','9365291558','akhyamuchahary@gmail.com','TRAINEE ','2024-08-31 20:47:11.183 +00:00','2024-08-31 20:47:11.183 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_84d2e5d4a1bb4bef830225202b9c061f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (831896df-8d73-41ef-9fe4-a793ce6f7ff4): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '6bbbe571-d71f-4e95-88b7-0483cd3f0555' LIMIT 1;
Executing (1adf7018-73a1-463a-82f0-e69169570965): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5ff0ce1924c947a0a877e66d9682cb4d$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Dulu Saikia','91b483c7-6378-4355-be57-3a69f6e10ba5','India','Assam','Dhemaji District','Dhemaji','7896203488','','TRAINEE ','2024-08-31 20:47:11.185 +00:00','2024-08-31 20:47:11.185 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5ff0ce1924c947a0a877e66d9682cb4d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (622c7c9a-b3cb-450a-ba4b-cf20187acbda): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'e91e616e-06fa-4748-a1ab-75a15a4cf3c2' LIMIT 1;
Executing (9ab9fab3-d17b-4827-a3ed-0f977a8ff9ea): COMMIT;
Executing (831896df-8d73-41ef-9fe4-a793ce6f7ff4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f0b3154606bb494bb70c30b0b79594eb$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Riju moni Saikia','6bbbe571-d71f-4e95-88b7-0483cd3f0555','India','Assam','Dhemaji District','Dhemaji','7002014605','','TRAINEE ','2024-08-31 20:47:11.187 +00:00','2024-08-31 20:47:11.187 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f0b3154606bb494bb70c30b0b79594eb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (622c7c9a-b3cb-450a-ba4b-cf20187acbda): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3b6e439880e84586b2016306d5893252$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Amit Yadav','e91e616e-06fa-4748-a1ab-75a15a4cf3c2','India','Assam','Dhemaji District','Dhemaji','8876110609','amitky115@gmail.com','TRAINEE ','2024-08-31 20:47:11.188 +00:00','2024-08-31 20:47:11.188 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3b6e439880e84586b2016306d5893252$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (12d91b89-51df-4980-b63d-949ce6798d37): COMMIT;
Executing (831896df-8d73-41ef-9fe4-a793ce6f7ff4): COMMIT;
Executing (1adf7018-73a1-463a-82f0-e69169570965): COMMIT;
topicName Execution of the JalShala 2023-06-30T07:04:24.000+0000
Executing (bc44a852-6f57-4f9f-bdfb-bba5e3df3e91): START TRANSACTION;
topicName Execution of the JalShala 2023-06-30T07:26:19.000+0000
Executing (f46d0e66-1816-493d-8981-c8c1b081152e): START TRANSACTION;
topicName Execution of the JalShala 2023-06-30T07:20:08.000+0000
Executing (0d339eff-a2aa-4ef7-8f83-9fc4c0a33801): START TRANSACTION;
topicName Execution of the JalShala 2023-05-31T02:16:40.000+0000
Executing (404db8c3-65de-413c-a204-8e267103112e): START TRANSACTION;
Executing (622c7c9a-b3cb-450a-ba4b-cf20187acbda): COMMIT;
Executing (f46d0e66-1816-493d-8981-c8c1b081152e): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '025224e5-00f8-4dbf-adb9-d2a96416a391' LIMIT 1;
Executing (0d339eff-a2aa-4ef7-8f83-9fc4c0a33801): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '8a45579a-7412-48d0-a7fa-41d9cd88398b' LIMIT 1;
Executing (404db8c3-65de-413c-a204-8e267103112e): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '1ce1078b-d061-4943-a69d-0179aca0cb67' LIMIT 1;
Executing (bc44a852-6f57-4f9f-bdfb-bba5e3df3e91): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'd4afef28-d322-4097-960f-358bdc25343f' LIMIT 1;
Executing (f46d0e66-1816-493d-8981-c8c1b081152e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6827701cbf0c49b18e9b30cb5a67ead0$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Mainu Handique','025224e5-00f8-4dbf-adb9-d2a96416a391','India','Assam','Dhemaji District','Kula Pathar','7002623842','','TRAINEE ','2024-08-31 20:47:11.196 +00:00','2024-08-31 20:47:11.196 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6827701cbf0c49b18e9b30cb5a67ead0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0d339eff-a2aa-4ef7-8f83-9fc4c0a33801): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_873229f4e750438ea19d100fa03896b6$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Nabin chandra Boruah','8a45579a-7412-48d0-a7fa-41d9cd88398b','India','Assam','Dhemaji District','Dhemaji','9954955511','','TRAINEE ','2024-08-31 20:47:11.197 +00:00','2024-08-31 20:47:11.197 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_873229f4e750438ea19d100fa03896b6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (404db8c3-65de-413c-a204-8e267103112e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0c1ee30aef3644c3ad409934b03c44c7$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Dipen Gogoi','1ce1078b-d061-4943-a69d-0179aca0cb67','India','Assam','Dhemaji District','Dhemaji','9957738304','','TRAINEE ','2024-08-31 20:47:11.199 +00:00','2024-08-31 20:47:11.199 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0c1ee30aef3644c3ad409934b03c44c7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Execution of the JalShala 2023-06-30T07:19:55.000+0000
Executing (dce5f244-6306-47e7-8a35-18e5cc6d83a7): START TRANSACTION;
Executing (f46d0e66-1816-493d-8981-c8c1b081152e): COMMIT;
Executing (bc44a852-6f57-4f9f-bdfb-bba5e3df3e91): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b3e7fc2099654ca48fd8470ff6a8e7f0$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Tanu Sonowal','d4afef28-d322-4097-960f-358bdc25343f','India','Assam','Dhemaji District','Dhemaji','7002409278','','TRAINEE ','2024-08-31 20:47:11.201 +00:00','2024-08-31 20:47:11.201 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b3e7fc2099654ca48fd8470ff6a8e7f0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Execution of the JalShala 2023-06-30T07:27:09.000+0000
Executing (82035050-87ce-45b8-b02b-ca3bafdf4ea5): START TRANSACTION;
Executing (0d339eff-a2aa-4ef7-8f83-9fc4c0a33801): COMMIT;
Executing (dce5f244-6306-47e7-8a35-18e5cc6d83a7): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '0631b942-dc35-4461-bb0e-6970e84682cd' LIMIT 1;
Executing (404db8c3-65de-413c-a204-8e267103112e): COMMIT;
Executing (82035050-87ce-45b8-b02b-ca3bafdf4ea5): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '6e6aea1b-4ebc-4ca7-b684-bd44941bf28f' LIMIT 1;
topicName Execution of the JalShala 2023-06-30T07:19:03.000+0000
Executing (8c6c6b61-b4d7-4cf6-8c1f-015ccc45393a): START TRANSACTION;
Executing (dce5f244-6306-47e7-8a35-18e5cc6d83a7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_41163e3e34c849458a96b4e84d640dc3$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Monunyoti Regon','0631b942-dc35-4461-bb0e-6970e84682cd','India','Assam','Majuli District','Granta Satra','9101132675','','TRAINEE ','2024-08-31 20:47:11.208 +00:00','2024-08-31 20:47:11.208 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_41163e3e34c849458a96b4e84d640dc3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bc44a852-6f57-4f9f-bdfb-bba5e3df3e91): COMMIT;
Executing (82035050-87ce-45b8-b02b-ca3bafdf4ea5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8bf2e405a0164ed2a715b8b8b4a9b878$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Dulal Chandra Bhuyan ','6e6aea1b-4ebc-4ca7-b684-bd44941bf28f','India','Assam','Dhemaji District','Dhemaji','7002477054','dulalchbhuyan@gmail.com','TRAINEE ','2024-08-31 20:47:11.211 +00:00','2024-08-31 20:47:11.211 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8bf2e405a0164ed2a715b8b8b4a9b878$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8c6c6b61-b4d7-4cf6-8c1f-015ccc45393a): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'b2d4299c-604e-4dba-943c-737573b163d2' LIMIT 1;
topicName Execution of the JalShala 2023-06-30T07:19:15.000+0000
Executing (ff84432e-2021-4144-b150-ef2cec96995d): START TRANSACTION;
Executing (82035050-87ce-45b8-b02b-ca3bafdf4ea5): COMMIT;
Executing (8c6c6b61-b4d7-4cf6-8c1f-015ccc45393a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a5013e1d3a0e49f284e5083870147a3d$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Monuj kr Deori','b2d4299c-604e-4dba-943c-737573b163d2','India','Assam','Dhemaji District','Nawparia Gohain','NA','NA','TRAINEE ','2024-08-31 20:47:11.216 +00:00','2024-08-31 20:47:11.216 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a5013e1d3a0e49f284e5083870147a3d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Execution of the JalShala 2023-06-30T07:21:35.000+0000
Executing (965e26a1-3952-431e-aa18-fc90c4ab945b): START TRANSACTION;
Executing (dce5f244-6306-47e7-8a35-18e5cc6d83a7): COMMIT;
topicName Execution of the JalShala 2023-06-30T07:23:39.000+0000
Executing (29bd8405-5e28-4f16-b36a-5b21a4aca828): START TRANSACTION;
Executing (965e26a1-3952-431e-aa18-fc90c4ab945b): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '29787f29-d741-464e-a655-5cbce52de684' LIMIT 1;
Executing (ff84432e-2021-4144-b150-ef2cec96995d): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'f6165fcf-2289-4399-841d-bc30a889e7f7' LIMIT 1;
Executing (29bd8405-5e28-4f16-b36a-5b21a4aca828): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '72717c70-603e-49a7-97bb-97365ea9be52' LIMIT 1;
Executing (965e26a1-3952-431e-aa18-fc90c4ab945b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d2dcb48d7d624da88afd15d548c202b9$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Manuj Mipun','29787f29-d741-464e-a655-5cbce52de684','India','Assam','Dhemaji District','Dhemaji','8473058971','','TRAINEE ','2024-08-31 20:47:11.221 +00:00','2024-08-31 20:47:11.221 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d2dcb48d7d624da88afd15d548c202b9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Execution of the JalShala 2023-05-29T10:57:10.000+0000
Executing (fbfa261e-5e84-4c78-8a04-e348032ac82d): START TRANSACTION;
Executing (8c6c6b61-b4d7-4cf6-8c1f-015ccc45393a): COMMIT;
Executing (29bd8405-5e28-4f16-b36a-5b21a4aca828): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_05c80fa768294dfba0afcd9b83af2021$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Raju Deori','72717c70-603e-49a7-97bb-97365ea9be52','India','Assam','Dhemaji District','Dhemaji','6003198145','','TRAINEE ','2024-08-31 20:47:11.223 +00:00','2024-08-31 20:47:11.223 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_05c80fa768294dfba0afcd9b83af2021$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (fbfa261e-5e84-4c78-8a04-e348032ac82d): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '4e8f38a1-5e19-4f08-957a-d40414a0d205' LIMIT 1;
Executing (ff84432e-2021-4144-b150-ef2cec96995d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_16fe092a375248ccacbb31daa7171a98$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'UPEN PEGU','f6165fcf-2289-4399-841d-bc30a889e7f7','India','Assam','Dhemaji District','Dhemaji','9954738831','','TRAINEE ','2024-08-31 20:47:11.224 +00:00','2024-08-31 20:47:11.224 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_16fe092a375248ccacbb31daa7171a98$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (fbfa261e-5e84-4c78-8a04-e348032ac82d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ebb1fd4b09144467813d9596f1fe2763$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Joyprakash Deori','4e8f38a1-5e19-4f08-957a-d40414a0d205','India','Assam','Dhemaji District','Dhemaji','9864898772','joy.deori@gmail.com','TRAINEE ','2024-08-31 20:47:11.225 +00:00','2024-08-31 20:47:11.225 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ebb1fd4b09144467813d9596f1fe2763$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Execution of the JalShala 2023-06-30T07:08:38.000+0000
Executing (0c149bc7-719c-470b-9eb5-d3a2b7820061): START TRANSACTION;
Executing (965e26a1-3952-431e-aa18-fc90c4ab945b): COMMIT;
Executing (0c149bc7-719c-470b-9eb5-d3a2b7820061): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '86e7cb28-edb6-4c4f-85d2-97e0f46f1446' LIMIT 1;
Executing (29bd8405-5e28-4f16-b36a-5b21a4aca828): COMMIT;
Executing (ff84432e-2021-4144-b150-ef2cec96995d): COMMIT;
Executing (0c149bc7-719c-470b-9eb5-d3a2b7820061): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3c8595e25e83497ea60cfd6985c7f7d8$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Kuheswar Deori','86e7cb28-edb6-4c4f-85d2-97e0f46f1446','India','Assam','Dhemaji District','Silikhaguri No 2','7002246993','','TRAINEE ','2024-08-31 20:47:11.229 +00:00','2024-08-31 20:47:11.229 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3c8595e25e83497ea60cfd6985c7f7d8$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Execution of the JalShala 2023-06-30T07:33:15.000+0000
Executing (2b6d8ef4-6243-4429-822e-a95806e5494e): START TRANSACTION;
Executing (fbfa261e-5e84-4c78-8a04-e348032ac82d): COMMIT;
Executing (2b6d8ef4-6243-4429-822e-a95806e5494e): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'cf3b2a06-a181-4a5d-a11d-fe78e5b66d3c' LIMIT 1;
topicName Execution of the JalShala 2023-06-30T07:09:11.000+0000
Executing (a5880db0-f366-4a37-ad4c-9233f4aa1e22): START TRANSACTION;
topicName Execution of the JalShala 2023-06-30T07:03:57.000+0000
Executing (c98ec35a-4d6c-4873-ac88-e726d7ea2862): START TRANSACTION;
Executing (2b6d8ef4-6243-4429-822e-a95806e5494e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5f394e9b740946cca165f4baad293234$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Suman Das','cf3b2a06-a181-4a5d-a11d-fe78e5b66d3c','India','Assam','Dhemaji District','Geruamukh','9101481639','','TRAINEE ','2024-08-31 20:47:11.233 +00:00','2024-08-31 20:47:11.233 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5f394e9b740946cca165f4baad293234$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a5880db0-f366-4a37-ad4c-9233f4aa1e22): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'ad866673-aec4-46ff-bc8c-33b59e8d4b80' LIMIT 1;
topicName Execution of the JalShala 2023-06-30T07:07:33.000+0000
Executing (de695963-74ac-4f3a-b663-c55441019fc3): START TRANSACTION;
Executing (0c149bc7-719c-470b-9eb5-d3a2b7820061): COMMIT;
Executing (2b6d8ef4-6243-4429-822e-a95806e5494e): COMMIT;
Executing (a5880db0-f366-4a37-ad4c-9233f4aa1e22): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cd6dc0a8dde54a05af66761fcbf1ee14$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Labanya Lahan','ad866673-aec4-46ff-bc8c-33b59e8d4b80','India','Assam','Dhemaji District','Dhemaji','9864192517','labanyalahan69@gmail.com','TRAINEE ','2024-08-31 20:47:11.236 +00:00','2024-08-31 20:47:11.236 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cd6dc0a8dde54a05af66761fcbf1ee14$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (de695963-74ac-4f3a-b663-c55441019fc3): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '78ffaf20-36b3-4dbe-954e-8bc62734f726' LIMIT 1;
Executing (c98ec35a-4d6c-4873-ac88-e726d7ea2862): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '57864e70-faed-419b-bda1-14b54d0fd4f1' LIMIT 1;
topicName Execution of the JalShala 2023-06-30T07:32:15.000+0000
Executing (cdea659f-6448-4205-b80f-f21cbadcbed8): START TRANSACTION;
Executing (de695963-74ac-4f3a-b663-c55441019fc3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b5e9a9bc29be47f7a4a7f9ea6ed59a0e$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Pinku Pegu','78ffaf20-36b3-4dbe-954e-8bc62734f726','India','Assam','Dhemaji District','Dhemaji','8011970065','','TRAINEE ','2024-08-31 20:47:11.239 +00:00','2024-08-31 20:47:11.239 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b5e9a9bc29be47f7a4a7f9ea6ed59a0e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Execution of the JalShala 2023-06-30T07:25:46.000+0000
Executing (e356682f-11f3-4146-9eb6-0271b9f2e0e6): START TRANSACTION;
Executing (cdea659f-6448-4205-b80f-f21cbadcbed8): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '2c0b2117-d29a-4466-bbce-8f9f09c77486' LIMIT 1;
Executing (a5880db0-f366-4a37-ad4c-9233f4aa1e22): COMMIT;
Executing (c98ec35a-4d6c-4873-ac88-e726d7ea2862): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5e2d79d378154d0ea117391b1d190fda$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Tapti gogoi mahanta','57864e70-faed-419b-bda1-14b54d0fd4f1','India','Assam','Dhemaji District','Dhemaji','7002482090','','TRAINEE ','2024-08-31 20:47:11.242 +00:00','2024-08-31 20:47:11.242 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5e2d79d378154d0ea117391b1d190fda$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cdea659f-6448-4205-b80f-f21cbadcbed8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b930a6736a22497e9066c3b96cceb9fd$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Tullya Gogoi','2c0b2117-d29a-4466-bbce-8f9f09c77486','India','Assam','Dhemaji District','Dhemaji','9954489564','tullyagogoi99544t@gmail.com','TRAINEE ','2024-08-31 20:47:11.243 +00:00','2024-08-31 20:47:11.243 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b930a6736a22497e9066c3b96cceb9fd$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Execution of the JalShala 2023-06-30T07:26:24.000+0000
Executing (79bc58c1-23d8-44af-8cfc-9f87f7af45a8): START TRANSACTION;
Executing (e356682f-11f3-4146-9eb6-0271b9f2e0e6): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '5a4310d0-06b8-4b03-aefd-a36d29cc94b4' LIMIT 1;
Executing (de695963-74ac-4f3a-b663-c55441019fc3): COMMIT;
Executing (cdea659f-6448-4205-b80f-f21cbadcbed8): COMMIT;
Executing (79bc58c1-23d8-44af-8cfc-9f87f7af45a8): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '867b20fb-b6bd-418d-91c6-aa5ef686e629' LIMIT 1;
Executing (e356682f-11f3-4146-9eb6-0271b9f2e0e6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_36a75f59f1cb4b8688e959d5bb439bd6$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Satyam Parida','5a4310d0-06b8-4b03-aefd-a36d29cc94b4','India','Chandigarh','Chandigarh District','Chandigarh','9938072620','','TRAINER TRAINEE','2024-08-31 20:47:11.247 +00:00','2024-08-31 20:47:11.247 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_36a75f59f1cb4b8688e959d5bb439bd6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c98ec35a-4d6c-4873-ac88-e726d7ea2862): COMMIT;
topicName Execution of the JalShala 2023-06-30T07:21:09.000+0000
Executing (82676c54-89be-4ae7-8326-fdc2263e95d7): START TRANSACTION;
Executing (79bc58c1-23d8-44af-8cfc-9f87f7af45a8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cab55eda34284793a75de86ea11bfa67$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Sreechand Tavva','867b20fb-b6bd-418d-91c6-aa5ef686e629','India','Karnataka','Bengaluru Urban District','Bengaluru','8884714641','','TRAINER TRAINEE','2024-08-31 20:47:11.250 +00:00','2024-08-31 20:47:11.250 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cab55eda34284793a75de86ea11bfa67$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Execution of the JalShala 2023-06-30T07:03:45.000+0000
Executing (5c98a6ee-0b85-4e27-a0cd-699a55c0c5b8): START TRANSACTION;
Executing (82676c54-89be-4ae7-8326-fdc2263e95d7): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '02281e30-0e4c-458d-babd-715fc3c4e388' LIMIT 1;
Executing (5c98a6ee-0b85-4e27-a0cd-699a55c0c5b8): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '2fac0fb6-ae1c-4ac0-a53d-df0a9d98d176' LIMIT 1;
topicName Execution of the JalShala 2023-06-30T07:26:16.000+0000
Executing (18560e6a-96db-406a-a5f2-7e99ae53d9d0): START TRANSACTION;
Executing (e356682f-11f3-4146-9eb6-0271b9f2e0e6): COMMIT;
Executing (82676c54-89be-4ae7-8326-fdc2263e95d7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f95f42392627422e80562cecaa87ce49$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Ahmad Sarif Laskar','02281e30-0e4c-458d-babd-715fc3c4e388','India','Assam','Cachar District','Silchar','7002795427','saddam.sarif786@gmail.com','TRAINEE ','2024-08-31 20:47:11.257 +00:00','2024-08-31 20:47:11.257 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f95f42392627422e80562cecaa87ce49$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5c98a6ee-0b85-4e27-a0cd-699a55c0c5b8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c14b73fc800340ef96506335b4ae7172$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Aditya Maruvada','2fac0fb6-ae1c-4ac0-a53d-df0a9d98d176','India','Karnataka','Bengaluru Urban District','Bengaluru','8095801505','',' TRAINEE','2024-08-31 20:47:11.259 +00:00','2024-08-31 20:47:11.259 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c14b73fc800340ef96506335b4ae7172$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (18560e6a-96db-406a-a5f2-7e99ae53d9d0): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '4f8fe22c-8dae-468f-b003-f41e1abdf485' LIMIT 1;
Executing (79bc58c1-23d8-44af-8cfc-9f87f7af45a8): COMMIT;
Executing (82676c54-89be-4ae7-8326-fdc2263e95d7): COMMIT;
Executing (5c98a6ee-0b85-4e27-a0cd-699a55c0c5b8): COMMIT;
Executing (18560e6a-96db-406a-a5f2-7e99ae53d9d0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3db630c3c3aa4276a93d0760f31ba2ac$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'APU SUKLA','4f8fe22c-8dae-468f-b003-f41e1abdf485','India','Assam','Karimganj District','Karimganj','9859479423','','TRAINEE ','2024-08-31 20:47:11.265 +00:00','2024-08-31 20:47:11.265 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3db630c3c3aa4276a93d0760f31ba2ac$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Test run for Assisted Scanning 2020-08-05T13:16:58.000+0000
Executing (2d087529-4321-44a2-a1a4-40091a36428d): START TRANSACTION;
topicName Execution of the JalShala 2023-06-08T09:21:56.000+0000
Executing (57d342c2-5c21-4d25-9409-5e31fff49d81): START TRANSACTION;
topicName PDA Hand-on 2023-08-17T11:11:22.000+0000
Executing (aaa839d2-7b4b-47c3-8736-5e71a780bf9a): START TRANSACTION;
topicName PDA structure Demo 2022-03-03T12:31:26.000+0000
Executing (ba7e84a6-22e7-4e88-a1ae-3e59c5cb1ccc): START TRANSACTION;
Executing (57d342c2-5c21-4d25-9409-5e31fff49d81): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '7e5a3a66-53b3-4a9e-a4af-da77b6e53614' LIMIT 1;
Executing (aaa839d2-7b4b-47c3-8736-5e71a780bf9a): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'fa1e92ec-093e-4b52-b2df-8f16d10203e2' LIMIT 1;
Executing (2d087529-4321-44a2-a1a4-40091a36428d): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'e348c20d-c7e1-460f-9ec7-15f268dc9d11' LIMIT 1;
Executing (18560e6a-96db-406a-a5f2-7e99ae53d9d0): COMMIT;
Executing (57d342c2-5c21-4d25-9409-5e31fff49d81): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_918699b8295243269901907448484f0e$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Sachin','7e5a3a66-53b3-4a9e-a4af-da77b6e53614','India','Maharashtra','Pune District','Pune','8097098187','',' TRAINEE','2024-08-31 20:47:11.273 +00:00','2024-08-31 20:47:11.273 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_918699b8295243269901907448484f0e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (aaa839d2-7b4b-47c3-8736-5e71a780bf9a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8bb30622c1ff4ab29be7353121818a90$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'J Tulasi Devi','fa1e92ec-093e-4b52-b2df-8f16d10203e2','India','Karnataka','Chikkaballapur District','Chintamani','9441941921','jampanitulasidevi@gmail.com','TRAINER TRAINEE','2024-08-31 20:47:11.275 +00:00','2024-08-31 20:47:11.275 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8bb30622c1ff4ab29be7353121818a90$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2d087529-4321-44a2-a1a4-40091a36428d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0527c5662b894f1eade7f2b78ce17aee$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Sayan Das','e348c20d-c7e1-460f-9ec7-15f268dc9d11','India','Assam','Cachar District','Binnakandi Part 2','NA','NA','TRAINEE ','2024-08-31 20:47:11.276 +00:00','2024-08-31 20:47:11.276 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0527c5662b894f1eade7f2b78ce17aee$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ba7e84a6-22e7-4e88-a1ae-3e59c5cb1ccc): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '3ca8d21c-b8f7-412b-85d0-77aa2d49a81a' LIMIT 1;
Executing (57d342c2-5c21-4d25-9409-5e31fff49d81): COMMIT;
Executing (aaa839d2-7b4b-47c3-8736-5e71a780bf9a): COMMIT;
Executing (2d087529-4321-44a2-a1a4-40091a36428d): COMMIT;
topicName Execution of the JalShala 2023-05-29T10:57:02.000+0000
Executing (c045f353-a858-4be3-8294-4237be84c25c): START TRANSACTION;
topicName Well Monitoring - Example 2022-11-29T10:08:33.000+0000
Executing (cd116681-d899-4c78-a96f-2b714722d357): START TRANSACTION;
topicName ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for         r different groups_BFTs_GKMs 2022-12-21T10:00:31.000+0000
Executing (7564a386-a6aa-4930-9664-8d168c8687b7): START TRANSACTION;
topicName Execution of the JalShala 2023-06-08T09:22:57.000+0000
Executing (519539b6-aa43-4010-8945-c71e1498ea3f): START TRANSACTION;
Executing (ba7e84a6-22e7-4e88-a1ae-3e59c5cb1ccc): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_13eec83e5cf64614b8a7b1264015e90b$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Prakash Lambi','3ca8d21c-b8f7-412b-85d0-77aa2d49a81a','India','Karnataka','Davanagere District','Davanagere','9620658996','prakashlambi24@gmail.com','TRAINEE ','2024-08-31 20:47:11.285 +00:00','2024-08-31 20:47:11.285 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_13eec83e5cf64614b8a7b1264015e90b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cd116681-d899-4c78-a96f-2b714722d357): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'c0072a31-91df-48a0-b79e-5d19c7d29d27' LIMIT 1;
Executing (7564a386-a6aa-4930-9664-8d168c8687b7): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '0a59ae48-1c58-4c3f-9d94-5339ab7c0944' LIMIT 1;
Executing (519539b6-aa43-4010-8945-c71e1498ea3f): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'e3867d63-96d5-4a20-9b9a-844063372dd5' LIMIT 1;
Executing (c045f353-a858-4be3-8294-4237be84c25c): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '2cbf38a3-d533-4451-9b58-f523baba5fe5' LIMIT 1;
Executing (cd116681-d899-4c78-a96f-2b714722d357): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e850183e653b4d5185eb364cfad91cac$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Soumya Ranjan','c0072a31-91df-48a0-b79e-5d19c7d29d27','India','Chhattisgarh','Raipur District','Raipur','8249993233','soumya@socion.io','TRAINEE ','2024-08-31 20:47:11.290 +00:00','2024-08-31 20:47:11.290 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e850183e653b4d5185eb364cfad91cac$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7564a386-a6aa-4930-9664-8d168c8687b7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7f756ffe1cb54927ab25d7c9fa4d61cf$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Rakesh kumar','0a59ae48-1c58-4c3f-9d94-5339ab7c0944','India','Jharkhand','Khunti District','Khuntitola','9504918417','','TRAINEE ','2024-08-31 20:47:11.291 +00:00','2024-08-31 20:47:11.291 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7f756ffe1cb54927ab25d7c9fa4d61cf$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (519539b6-aa43-4010-8945-c71e1498ea3f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_15f491db237f4f3499f1e89a067612c9$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Khadar Basha','e3867d63-96d5-4a20-9b9a-844063372dd5','India','Karnataka','Raichur District','Raichur','8088176313','khadar.1686@gmail.com','TRAINEE ','2024-08-31 20:47:11.292 +00:00','2024-08-31 20:47:11.292 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_15f491db237f4f3499f1e89a067612c9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ba7e84a6-22e7-4e88-a1ae-3e59c5cb1ccc): COMMIT;
Executing (cd116681-d899-4c78-a96f-2b714722d357): COMMIT;
Executing (7564a386-a6aa-4930-9664-8d168c8687b7): COMMIT;
Executing (c045f353-a858-4be3-8294-4237be84c25c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3e6f083aa54141c694a610ae803d7ca7$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Abhi','2cbf38a3-d533-4451-9b58-f523baba5fe5','India','Karnataka','Bengaluru Urban District','Bengaluru','9448176887','','TRAINEE ','2024-08-31 20:47:11.294 +00:00','2024-08-31 20:47:11.294 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3e6f083aa54141c694a610ae803d7ca7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Virtual Interactions - Best Practices - Smitha Murthy 2020-10-14T06:59:28.000+0000
Executing (45a9ca2f-0d94-44f4-87e7-5eac9d7945be): START TRANSACTION;
topicName PDA Hands-on 2021-03-16T08:21:47.000+0000
Executing (3ace4348-8158-4db1-8803-b888d8492468): START TRANSACTION;
topicName ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for d         different groups_BFTs_GKMs 2022-12-21T10:00:38.000+0000
Executing (f9563d18-f224-456c-b61c-311dac49bbb7): START TRANSACTION;
Executing (519539b6-aa43-4010-8945-c71e1498ea3f): COMMIT;
Executing (45a9ca2f-0d94-44f4-87e7-5eac9d7945be): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '0b7a3d60-9092-40ff-9c4b-73daede8e2b9' LIMIT 1;
Executing (3ace4348-8158-4db1-8803-b888d8492468): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = 'bc2d9734-3b59-4c4d-a8c2-9e543180c372' LIMIT 1;
Executing (f9563d18-f224-456c-b61c-311dac49bbb7): SELECT "id", "name", "userId", "country", "state", "district", "city", "phoneNumber", "emailId", "userRole", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."userId" = '8610e640-1fe5-43f1-8552-f0964cc48dc4' LIMIT 1;
Executing (45a9ca2f-0d94-44f4-87e7-5eac9d7945be): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ed4403c13bc34d628b60576b62abfdc7$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Nidhi Niharika Socion','0b7a3d60-9092-40ff-9c4b-73daede8e2b9','India','Telangana','Hyderabad District','Hyderabad','8080653700','nidhi@socion.io','TRAINEE ','2024-08-31 20:47:11.299 +00:00','2024-08-31 20:47:11.299 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ed4403c13bc34d628b60576b62abfdc7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3ace4348-8158-4db1-8803-b888d8492468): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ce4c51b932554381b9d532bbd9acb555$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Pavan The','bc2d9734-3b59-4c4d-a8c2-9e543180c372','India','Karnataka','Bengaluru Urban District','Bengaluru','9731115666','pavan@yopmail.com','TRAINEE ','2024-08-31 20:47:11.300 +00:00','2024-08-31 20:47:11.300 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ce4c51b932554381b9d532bbd9acb555$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c045f353-a858-4be3-8294-4237be84c25c): COMMIT;
topicName ವಿವಿಧ ಗುಂಪ ಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs 2022-12-21T10:02:57.000+0000
Executing (8d12ec55-5621-4d3b-a498-2e7a675aa127): START TRANSACTION;
Executing (45a9ca2f-0d94-44f4-87e7-5eac9d7945be): COMMIT;
topicName Scripts Review | T1.02 | DG 2020-12-02T11:40:31.000+0000
Executing (e8bc32df-64c5-4e22-860d-f5c538cf8837): START TRANSACTION;
Executing (f9563d18-f224-456c-b61c-311dac49bbb7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Users", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2411da527bd84a9f99989a9d4edd305b$ BEGIN INSERT INTO "Users" ("id","name","userId","country","state","district","city","phoneNumber","emailId","userRole","createdAt","updatedAt") VALUES (DEFAULT,'Ramakrishna Kalluri','8610e640-1fe5-43f1-8552-f0964cc48dc4','India','Karnataka','Bengaluru Urban District','Bengaluru','9900221154','rk_kalluri@yahoo.com','TRAINER TRAINEE','2024-08-31 20:47:11.304 +00:00','2024-08-31 20:47:11.304 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2411da527bd84a9f99989a9d4edd305b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."userId", (testfunc.response)."country", (testfunc.response)."state", (testfunc.response)."district", (testfunc.response)."city", (testfunc.response)."phoneNumber", (testfunc.response)."emailId", (testfunc.response)."userRole", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA - Program App 2021-04-05T10:40:59.000+0000
Executing (f9f50d0a-fe1b-4773-a19f-fcfa9e83c4c5): START TRANSACTION;
Executing (e8bc32df-64c5-4e22-860d-f5c538cf8837): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'ad439a79-65f3-4629-9523-27ae55fae348' AND "UserTopic"."name" = '3 Folds Concepts' AND "UserTopic"."issuedAt" = '2020-09-26 06:34:17.000 +00:00' LIMIT 1;
Executing (8d12ec55-5621-4d3b-a498-2e7a675aa127): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '840282c7-4246-44db-a1f6-d753c1913547' AND "UserTopic"."name" = 'Introduction to Learning Objectives' AND "UserTopic"."issuedAt" = '2022-02-22 07:24:47.000 +00:00' LIMIT 1;
Executing (3ace4348-8158-4db1-8803-b888d8492468): COMMIT;
Executing (f9f50d0a-fe1b-4773-a19f-fcfa9e83c4c5): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '912a7c4d-2482-4a7a-a506-3cd7c3d8b886' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:46:16.000 +00:00' LIMIT 1;
Executing (e8bc32df-64c5-4e22-860d-f5c538cf8837): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7589c70269a0411e88af76716641b156$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'3 Folds Concepts','2020-09-26 06:34:17.000 +00:00','ad439a79-65f3-4629-9523-27ae55fae348','2024-08-31 20:47:11.316 +00:00','2024-08-31 20:47:11.316 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7589c70269a0411e88af76716641b156$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8d12ec55-5621-4d3b-a498-2e7a675aa127): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_375adebf686f43158f569d7fe3b5177e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Learning Objectives','2022-02-22 07:24:47.000 +00:00','840282c7-4246-44db-a1f6-d753c1913547','2024-08-31 20:47:11.318 +00:00','2024-08-31 20:47:11.318 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_375adebf686f43158f569d7fe3b5177e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA - Participant App 2019-12-26T11:27:23+0000
Executing (190c4c85-3b97-4305-8964-d121a2e9cef0): START TRANSACTION;
Executing (f9563d18-f224-456c-b61c-311dac49bbb7): COMMIT;
Executing (f9f50d0a-fe1b-4773-a19f-fcfa9e83c4c5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6a605f02c0164a96b108653808b95a47$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:46:16.000 +00:00','912a7c4d-2482-4a7a-a506-3cd7c3d8b886','2024-08-31 20:47:11.321 +00:00','2024-08-31 20:47:11.321 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6a605f02c0164a96b108653808b95a47$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e8bc32df-64c5-4e22-860d-f5c538cf8837): COMMIT;
Executing (190c4c85-3b97-4305-8964-d121a2e9cef0): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c7407356-dbe6-4e58-aada-90773bb4201c' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 07:00:04.000 +00:00' LIMIT 1;
Executing (f9f50d0a-fe1b-4773-a19f-fcfa9e83c4c5): COMMIT;
topicName PDA - Trainer App 2020-01-08T08:53:55+0000
Executing (f7c269f8-78f8-4714-b896-6b52a29c20c6): START TRANSACTION;
Executing (8d12ec55-5621-4d3b-a498-2e7a675aa127): COMMIT;
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T07:01:09.000+0000
Executing (e3291f26-1df8-45f4-8b31-5d6dcc6d3634): START TRANSACTION;
Executing (f7c269f8-78f8-4714-b896-6b52a29c20c6): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'eafa5769-776e-421f-bdce-03326a065f7e' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-02-16 06:39:12.000 +00:00' LIMIT 1;
Processed user: Yalinikulendhran
Executing (1fd7c511-ab2d-4e44-abbd-85408a13fb47): START TRANSACTION;
Executing (190c4c85-3b97-4305-8964-d121a2e9cef0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_de351c0f9a054942bb3642c0a585ad3a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 07:00:04.000 +00:00','c7407356-dbe6-4e58-aada-90773bb4201c','2024-08-31 20:47:11.329 +00:00','2024-08-31 20:47:11.329 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_de351c0f9a054942bb3642c0a585ad3a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e3291f26-1df8-45f4-8b31-5d6dcc6d3634): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9b7cd3e3-5fdd-423f-8fb1-07790ab820fa' AND "UserTopic"."name" = 'CBP Orientation' AND "UserTopic"."issuedAt" = '2020-08-28 10:15:27.000 +00:00' LIMIT 1;
Executing (f7c269f8-78f8-4714-b896-6b52a29c20c6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_81d763c9c9194abf90547f15804093b6$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-02-16 06:39:12.000 +00:00','eafa5769-776e-421f-bdce-03326a065f7e','2024-08-31 20:47:11.331 +00:00','2024-08-31 20:47:11.331 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_81d763c9c9194abf90547f15804093b6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1fd7c511-ab2d-4e44-abbd-85408a13fb47): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '90df11b4-79fd-41c0-8d83-b3ba0d76bbde' AND "UserTopic"."name" = 'Post-Harvest Management and Value Addition in Spice Crops.' AND "UserTopic"."issuedAt" = '2021-02-24 08:43:31.000 +00:00' LIMIT 1;
topicName Introduction to Process of planning a lesson flow 2022-03-02T09:07:24.000+0000
Executing (420b9bc6-df08-47dd-bb78-dadd4cb71778): START TRANSACTION;
Executing (e3291f26-1df8-45f4-8b31-5d6dcc6d3634): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_29895862799e44c5b3267532dcef1213$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'CBP Orientation','2020-08-28 10:15:27.000 +00:00','9b7cd3e3-5fdd-423f-8fb1-07790ab820fa','2024-08-31 20:47:11.334 +00:00','2024-08-31 20:47:11.334 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_29895862799e44c5b3267532dcef1213$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1fd7c511-ab2d-4e44-abbd-85408a13fb47): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c6592b3a0a554dc1ae225c5c1b4e3272$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Post-Harvest Management and Value Addition in Spice Crops.','2021-02-24 08:43:31.000 +00:00','90df11b4-79fd-41c0-8d83-b3ba0d76bbde','2024-08-31 20:47:11.335 +00:00','2024-08-31 20:47:11.335 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c6592b3a0a554dc1ae225c5c1b4e3272$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (190c4c85-3b97-4305-8964-d121a2e9cef0): COMMIT;
Executing (e3291f26-1df8-45f4-8b31-5d6dcc6d3634): COMMIT;
Executing (420b9bc6-df08-47dd-bb78-dadd4cb71778): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c74c08a8-921e-433d-a1fd-917e9b1c4c34' AND "UserTopic"."name" = 'Demonstration of PDA - ICDS Supervisors Training' AND "UserTopic"."issuedAt" = '2021-06-09 10:05:28.000 +00:00' LIMIT 1;
Executing (f7c269f8-78f8-4714-b896-6b52a29c20c6): COMMIT;
Processed user: Ashutosh
Executing (b3d14455-bea5-4bfe-a337-40da1d1c4466): START TRANSACTION;
Executing (420b9bc6-df08-47dd-bb78-dadd4cb71778): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c834455f72d7474797c183a6196ab533$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Demonstration of PDA - ICDS Supervisors Training','2021-06-09 10:05:28.000 +00:00','c74c08a8-921e-433d-a1fd-917e9b1c4c34','2024-08-31 20:47:11.340 +00:00','2024-08-31 20:47:11.340 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c834455f72d7474797c183a6196ab533$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Kanaiyalal Vankar
Executing (0450cae2-7383-49c1-bcad-3fb0b093865a): START TRANSACTION;
Executing (1fd7c511-ab2d-4e44-abbd-85408a13fb47): COMMIT;
Executing (b3d14455-bea5-4bfe-a337-40da1d1c4466): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2fce8054-838b-4511-9de4-85c828516405' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM - II' AND "UserTopic"."issuedAt" = '2021-08-14 12:03:00.000 +00:00' LIMIT 1;
Executing (420b9bc6-df08-47dd-bb78-dadd4cb71778): COMMIT;
Executing (0450cae2-7383-49c1-bcad-3fb0b093865a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'a53273d5-0418-4e44-9160-d2747f67d825' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM' AND "UserTopic"."issuedAt" = '2021-08-14 07:30:12.000 +00:00' LIMIT 1;
topicName Concepts and development of Base map,Landuse map and Geo-morphology maps 2021-03-06T10:30:59.000+0000
Executing (d19e6d2c-16cf-499c-9467-e69023e80424): START TRANSACTION;
Executing (b3d14455-bea5-4bfe-a337-40da1d1c4466): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d6a8ab1acb7249e1a2401f83dc63fcca$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM - II','2021-08-14 12:03:00.000 +00:00','2fce8054-838b-4511-9de4-85c828516405','2024-08-31 20:47:11.345 +00:00','2024-08-31 20:47:11.345 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d6a8ab1acb7249e1a2401f83dc63fcca$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Shiva
Executing (23329957-8fcd-4c8c-a441-7ff660983c91): START TRANSACTION;
Executing (0450cae2-7383-49c1-bcad-3fb0b093865a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e6c44dba129e4cf3ba2b1fe93ff61cd8$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM','2021-08-14 07:30:12.000 +00:00','a53273d5-0418-4e44-9160-d2747f67d825','2024-08-31 20:47:11.346 +00:00','2024-08-31 20:47:11.346 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e6c44dba129e4cf3ba2b1fe93ff61cd8$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Shaileshbhai
Executing (7e544354-edd9-4f3e-a24e-05b8a6f5a391): START TRANSACTION;
Executing (b3d14455-bea5-4bfe-a337-40da1d1c4466): COMMIT;
Executing (23329957-8fcd-4c8c-a441-7ff660983c91): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5bfd7f81-ec88-422a-9f71-fbc75f3ace63' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-02-16 06:47:53.000 +00:00' LIMIT 1;
Executing (d19e6d2c-16cf-499c-9467-e69023e80424): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'de5fa352-ea4d-4bb8-8d72-9ad3dce253f5' AND "UserTopic"."name" = 'PDA - Program App' AND "UserTopic"."issuedAt" = '2021-04-05 10:41:01.000 +00:00' LIMIT 1;
Processed user: Meena parmar
Executing (6daaf8e7-4a52-46b9-8299-ababb5df27d4): START TRANSACTION;
Executing (23329957-8fcd-4c8c-a441-7ff660983c91): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_814a0677e31f45e89c9c95a2874184a3$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-02-16 06:47:53.000 +00:00','5bfd7f81-ec88-422a-9f71-fbc75f3ace63','2024-08-31 20:47:11.351 +00:00','2024-08-31 20:47:11.351 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_814a0677e31f45e89c9c95a2874184a3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7e544354-edd9-4f3e-a24e-05b8a6f5a391): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'db52891b-977c-429d-ad2c-9258b81a7ba4' AND "UserTopic"."name" = 'Midterm Measurement of Desilting(Jalsamruddhi)' AND "UserTopic"."issuedAt" = '2021-02-20 11:50:14.000 +00:00' LIMIT 1;
Executing (0450cae2-7383-49c1-bcad-3fb0b093865a): COMMIT;
Executing (6daaf8e7-4a52-46b9-8299-ababb5df27d4): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '98427f84-0e6b-4c1e-9bc7-580049d9e3ad' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:46:20.000 +00:00' LIMIT 1;
Executing (7e544354-edd9-4f3e-a24e-05b8a6f5a391): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_610f4883f7c84c12bea097c6a42e5fb6$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Midterm Measurement of Desilting(Jalsamruddhi)','2021-02-20 11:50:14.000 +00:00','db52891b-977c-429d-ad2c-9258b81a7ba4','2024-08-31 20:47:11.354 +00:00','2024-08-31 20:47:11.354 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_610f4883f7c84c12bea097c6a42e5fb6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d19e6d2c-16cf-499c-9467-e69023e80424): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ca7f3e871c2a465284396811c7b7a438$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Program App','2021-04-05 10:41:01.000 +00:00','de5fa352-ea4d-4bb8-8d72-9ad3dce253f5','2024-08-31 20:47:11.355 +00:00','2024-08-31 20:47:11.355 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ca7f3e871c2a465284396811c7b7a438$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6daaf8e7-4a52-46b9-8299-ababb5df27d4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d170e85c77704a539d231615775bfdea$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:46:20.000 +00:00','98427f84-0e6b-4c1e-9bc7-580049d9e3ad','2024-08-31 20:47:11.356 +00:00','2024-08-31 20:47:11.356 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d170e85c77704a539d231615775bfdea$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (23329957-8fcd-4c8c-a441-7ff660983c91): COMMIT;
Processed user: Raj bharatbhai pandya
Executing (fdc0c343-f518-4fce-a6e6-9dffb9ab287b): START TRANSACTION;
topicName Concepts and development of Base map,Landuse map and Geo-morphology maps 2021-03-06T10:31:59.000+0000
Executing (b02478b8-9c0a-49b1-9a5f-8529b7e079cd): START TRANSACTION;
Executing (7e544354-edd9-4f3e-a24e-05b8a6f5a391): COMMIT;
Executing (d19e6d2c-16cf-499c-9467-e69023e80424): COMMIT;
Executing (b02478b8-9c0a-49b1-9a5f-8529b7e079cd): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'a7c83a7f-e4bd-4fa8-9c2a-914c38352ec0' AND "UserTopic"."name" = 'Introduction to Learning Objectives' AND "UserTopic"."issuedAt" = '2022-02-22 07:23:48.000 +00:00' LIMIT 1;
topicName Content Development | T1.01 | DG 2020-11-26T11:45:05.000+0000
Executing (c7fc81fc-d9fb-4379-80c6-6fe06a8dacf8): START TRANSACTION;
Executing (fdc0c343-f518-4fce-a6e6-9dffb9ab287b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '94047112-9581-4ea9-a7b2-5532bd496584' AND "UserTopic"."name" = '3 Folds Concepts' AND "UserTopic"."issuedAt" = '2020-09-26 06:32:45.000 +00:00' LIMIT 1;
Executing (6daaf8e7-4a52-46b9-8299-ababb5df27d4): COMMIT;
Executing (b02478b8-9c0a-49b1-9a5f-8529b7e079cd): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6501a39f52d54ab7915795e180d864ad$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Learning Objectives','2022-02-22 07:23:48.000 +00:00','a7c83a7f-e4bd-4fa8-9c2a-914c38352ec0','2024-08-31 20:47:11.362 +00:00','2024-08-31 20:47:11.362 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6501a39f52d54ab7915795e180d864ad$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c7fc81fc-d9fb-4379-80c6-6fe06a8dacf8): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '3c872b16-ee10-4de9-a28b-992b5a11ce01' AND "UserTopic"."name" = 'Post-Harvest Management and Value Addition in Spice Crops.' AND "UserTopic"."issuedAt" = '2021-02-24 10:53:43.000 +00:00' LIMIT 1;
Executing (fdc0c343-f518-4fce-a6e6-9dffb9ab287b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3318274cc54c493fa2504b1bd6de53a3$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'3 Folds Concepts','2020-09-26 06:32:45.000 +00:00','94047112-9581-4ea9-a7b2-5532bd496584','2024-08-31 20:47:11.364 +00:00','2024-08-31 20:47:11.364 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3318274cc54c493fa2504b1bd6de53a3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Manu Panjikaran
Executing (bcf2b4e4-f3d3-41c5-8835-10e09a6a636e): START TRANSACTION;
Executing (b02478b8-9c0a-49b1-9a5f-8529b7e079cd): COMMIT;
Executing (c7fc81fc-d9fb-4379-80c6-6fe06a8dacf8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e1c33451901148a3a58257b6528a5803$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Post-Harvest Management and Value Addition in Spice Crops.','2021-02-24 10:53:43.000 +00:00','3c872b16-ee10-4de9-a28b-992b5a11ce01','2024-08-31 20:47:11.368 +00:00','2024-08-31 20:47:11.368 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e1c33451901148a3a58257b6528a5803$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Zala Anilsinh
Executing (00b9b285-1c22-440f-bb99-33f95b1a23d3): START TRANSACTION;
topicName Introduction to Process of planning a lesson flow 2022-03-02T06:57:55.000+0000
Executing (cc92d41b-6399-468a-911b-a08c08ccb4d2): START TRANSACTION;
Executing (bcf2b4e4-f3d3-41c5-8835-10e09a6a636e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '321375b5-ae91-4d01-8378-5eb311e2ff02' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2020-08-19 10:07:50.000 +00:00' LIMIT 1;
Executing (fdc0c343-f518-4fce-a6e6-9dffb9ab287b): COMMIT;
Executing (cc92d41b-6399-468a-911b-a08c08ccb4d2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'd3988f95-3458-49bf-bc97-a81ab0108569' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2020-04-07 09:20:52.000 +00:00' LIMIT 1;
Executing (bcf2b4e4-f3d3-41c5-8835-10e09a6a636e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9cc833a1ee284dcd8b65aec34ad883f7$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2020-08-19 10:07:50.000 +00:00','321375b5-ae91-4d01-8378-5eb311e2ff02','2024-08-31 20:47:11.374 +00:00','2024-08-31 20:47:11.374 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9cc833a1ee284dcd8b65aec34ad883f7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (00b9b285-1c22-440f-bb99-33f95b1a23d3): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '44a1ef88-ba82-4c2e-bf2d-67d6f7b9e350' AND "UserTopic"."name" = 'CBP Orientation' AND "UserTopic"."issuedAt" = '2020-08-28 10:17:17.000 +00:00' LIMIT 1;
Executing (c7fc81fc-d9fb-4379-80c6-6fe06a8dacf8): COMMIT;
Executing (cc92d41b-6399-468a-911b-a08c08ccb4d2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_dba81359467e4cb39768390a2286c5c0$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2020-04-07 09:20:52.000 +00:00','d3988f95-3458-49bf-bc97-a81ab0108569','2024-08-31 20:47:11.377 +00:00','2024-08-31 20:47:11.377 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_dba81359467e4cb39768390a2286c5c0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bcf2b4e4-f3d3-41c5-8835-10e09a6a636e): COMMIT;
Executing (00b9b285-1c22-440f-bb99-33f95b1a23d3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cfc8e26545ff464d98a486069a4a3b61$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'CBP Orientation','2020-08-28 10:17:17.000 +00:00','44a1ef88-ba82-4c2e-bf2d-67d6f7b9e350','2024-08-31 20:47:11.379 +00:00','2024-08-31 20:47:11.379 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cfc8e26545ff464d98a486069a4a3b61$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Prasanth
Executing (66cb04e1-6da0-418d-9934-2fd92725e23a): START TRANSACTION;
Executing (cc92d41b-6399-468a-911b-a08c08ccb4d2): COMMIT;
topicName Virtual Interactions - Needs and Benefits 2020-11-04T10:07:52.000+0000
Executing (1d2c99e2-eea7-4658-87a0-3ccb4589aedf): START TRANSACTION;
Executing (00b9b285-1c22-440f-bb99-33f95b1a23d3): COMMIT;
Processed user: Goswami nisha narendrabharathi
Executing (f3913849-276a-4bac-9f78-6e10cd6ae57c): START TRANSACTION;
topicName PDA - Participant App 2020-03-18T06:48:17+0000
Executing (ac3d3316-2324-4616-b672-41892c44d9a1): START TRANSACTION;
Executing (1d2c99e2-eea7-4658-87a0-3ccb4589aedf): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '85bce1bf-2a8b-4862-8a13-80758d68c6e0' AND "UserTopic"."name" = 'PDA Demo and Deployment Training for Trainers | ACT' AND "UserTopic"."issuedAt" = '2020-12-11 12:41:39.000 +00:00' LIMIT 1;
Processed user: Nirmal Chandra Mohanty 
Executing (eef1cefe-4b3b-4c99-94c0-7ed029e25be8): START TRANSACTION;
Executing (66cb04e1-6da0-418d-9934-2fd92725e23a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '267a7622-9c4b-4f7b-be36-c44170b402e7' AND "UserTopic"."name" = 'PDA Hands-on' AND "UserTopic"."issuedAt" = '2021-03-16 08:05:43.000 +00:00' LIMIT 1;
Executing (ac3d3316-2324-4616-b672-41892c44d9a1): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6ded97db-dc70-49eb-8b39-bd50173538d6' AND "UserTopic"."name" = 'Demonstration of PDA - ICDS Supervisors Training' AND "UserTopic"."issuedAt" = '2021-06-09 10:05:34.000 +00:00' LIMIT 1;
Executing (1d2c99e2-eea7-4658-87a0-3ccb4589aedf): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cf1b0e73066c4321a3ef2516cdda3b8b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo and Deployment Training for Trainers | ACT','2020-12-11 12:41:39.000 +00:00','85bce1bf-2a8b-4862-8a13-80758d68c6e0','2024-08-31 20:47:11.389 +00:00','2024-08-31 20:47:11.389 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cf1b0e73066c4321a3ef2516cdda3b8b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (eef1cefe-4b3b-4c99-94c0-7ed029e25be8): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8866902d-32f0-4d36-a6d3-eeef2072405c' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:51:15.000 +00:00' LIMIT 1;
Executing (f3913849-276a-4bac-9f78-6e10cd6ae57c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c9e258a0-5300-4461-b505-2ac5ff98636e' AND "UserTopic"."name" = 'TOT of Bhujal Janakar' AND "UserTopic"."issuedAt" = '2021-02-05 07:24:09.000 +00:00' LIMIT 1;
Executing (ac3d3316-2324-4616-b672-41892c44d9a1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c2f6b675e76f4404963d77e8490545b6$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Demonstration of PDA - ICDS Supervisors Training','2021-06-09 10:05:34.000 +00:00','6ded97db-dc70-49eb-8b39-bd50173538d6','2024-08-31 20:47:11.392 +00:00','2024-08-31 20:47:11.392 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c2f6b675e76f4404963d77e8490545b6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1d2c99e2-eea7-4658-87a0-3ccb4589aedf): COMMIT;
Executing (eef1cefe-4b3b-4c99-94c0-7ed029e25be8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8d3fc7e5958248d2a91ab4dbf75761ab$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:51:15.000 +00:00','8866902d-32f0-4d36-a6d3-eeef2072405c','2024-08-31 20:47:11.394 +00:00','2024-08-31 20:47:11.394 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8d3fc7e5958248d2a91ab4dbf75761ab$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (66cb04e1-6da0-418d-9934-2fd92725e23a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_97d6bdb2882d434ea93455ba643f1596$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Hands-on','2021-03-16 08:05:43.000 +00:00','267a7622-9c4b-4f7b-be36-c44170b402e7','2024-08-31 20:47:11.395 +00:00','2024-08-31 20:47:11.395 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_97d6bdb2882d434ea93455ba643f1596$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ac3d3316-2324-4616-b672-41892c44d9a1): COMMIT;
topicName TOT of Bhujal Janakar 2021-02-05T07:23:45.000+0000
Executing (139aaead-d1ba-4bea-b48a-b144088ea18d): START TRANSACTION;
Executing (f3913849-276a-4bac-9f78-6e10cd6ae57c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cd1b1e6e93474342b5215178a63e30e0$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'TOT of Bhujal Janakar','2021-02-05 07:24:09.000 +00:00','c9e258a0-5300-4461-b505-2ac5ff98636e','2024-08-31 20:47:11.397 +00:00','2024-08-31 20:47:11.397 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cd1b1e6e93474342b5215178a63e30e0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Farida supervisor
Executing (c5cf05c6-d8d9-4592-a285-0d2811208c7a): START TRANSACTION;
Executing (139aaead-d1ba-4bea-b48a-b144088ea18d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '3b26d9ed-f52c-4a3d-960e-963c1225b9cc' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM' AND "UserTopic"."issuedAt" = '2021-08-14 07:27:22.000 +00:00' LIMIT 1;
Executing (eef1cefe-4b3b-4c99-94c0-7ed029e25be8): COMMIT;
Executing (66cb04e1-6da0-418d-9934-2fd92725e23a): COMMIT;
Executing (c5cf05c6-d8d9-4592-a285-0d2811208c7a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '98d93e00-4864-48aa-9f6c-06068ffc4074' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:46:06.000 +00:00' LIMIT 1;
Executing (139aaead-d1ba-4bea-b48a-b144088ea18d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1b97870e6c3a4f81acc4c8c1ab5875b5$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM','2021-08-14 07:27:22.000 +00:00','3b26d9ed-f52c-4a3d-960e-963c1225b9cc','2024-08-31 20:47:11.404 +00:00','2024-08-31 20:47:11.404 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1b97870e6c3a4f81acc4c8c1ab5875b5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Post-Harvest Management and Value Addition in Spice Crops. 2021-02-24T09:58:51.000+0000
Executing (f1a62a49-30c8-4aae-b498-8add2c55916e): START TRANSACTION;
Executing (f3913849-276a-4bac-9f78-6e10cd6ae57c): COMMIT;
Executing (c5cf05c6-d8d9-4592-a285-0d2811208c7a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c6801f1f45e549d781e22064a4edd640$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:46:06.000 +00:00','98d93e00-4864-48aa-9f6c-06068ffc4074','2024-08-31 20:47:11.407 +00:00','2024-08-31 20:47:11.407 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c6801f1f45e549d781e22064a4edd640$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (139aaead-d1ba-4bea-b48a-b144088ea18d): COMMIT;
Executing (f1a62a49-30c8-4aae-b498-8add2c55916e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '941579b3-5b8d-43eb-88b1-80e87fa6a840' AND "UserTopic"."name" = 'Zoom for Hubs & Spokes' AND "UserTopic"."issuedAt" = '2020-12-10 06:26:04.000 +00:00' LIMIT 1;
Processed user: Jiten Malpahariya
Executing (1e07c3e4-13da-4ff6-81ee-0fd254e5d5f2): START TRANSACTION;
Executing (c5cf05c6-d8d9-4592-a285-0d2811208c7a): COMMIT;
Processed user: Hiralal miting
Executing (bb2942e2-24c9-4b88-8a64-74b5b9bd8a7a): START TRANSACTION;
Executing (f1a62a49-30c8-4aae-b498-8add2c55916e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_033a38416df043cfa7d5d095c474c2b3$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Zoom for Hubs & Spokes','2020-12-10 06:26:04.000 +00:00','941579b3-5b8d-43eb-88b1-80e87fa6a840','2024-08-31 20:47:11.414 +00:00','2024-08-31 20:47:11.414 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_033a38416df043cfa7d5d095c474c2b3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Data collection and Monitoring 2021-01-06T07:53:28.000+0000
Executing (66269757-44fa-44ea-9fd0-d7d800b7409d): START TRANSACTION;
Processed user: Desai Haresh kumar Ramesh Bhai 
Executing (600d1b88-f872-49a9-b6fa-6f475808fb09): START TRANSACTION;
Executing (bb2942e2-24c9-4b88-8a64-74b5b9bd8a7a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c64dca7e-f9df-453c-a6f1-7a57c142b6ab' AND "UserTopic"."name" = 'Demonstration of PDA - ICDS Supervisors Training' AND "UserTopic"."issuedAt" = '2021-06-09 10:22:23.000 +00:00' LIMIT 1;
Executing (1e07c3e4-13da-4ff6-81ee-0fd254e5d5f2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6b1255b3-c3cf-48bd-aa73-b0dcffaf6951' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2020-04-07 09:20:45.000 +00:00' LIMIT 1;
Executing (600d1b88-f872-49a9-b6fa-6f475808fb09): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c919ec69-7f36-4a98-a6e7-a7733764d137' AND "UserTopic"."name" = 'Concepts and development of Base map,Landuse map and Geo-morphology maps' AND "UserTopic"."issuedAt" = '2021-03-06 10:30:48.000 +00:00' LIMIT 1;
Executing (bb2942e2-24c9-4b88-8a64-74b5b9bd8a7a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2a3ec58a11104e009543938db832a435$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Demonstration of PDA - ICDS Supervisors Training','2021-06-09 10:22:23.000 +00:00','c64dca7e-f9df-453c-a6f1-7a57c142b6ab','2024-08-31 20:47:11.421 +00:00','2024-08-31 20:47:11.421 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2a3ec58a11104e009543938db832a435$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (66269757-44fa-44ea-9fd0-d7d800b7409d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '7b00fe4a-0677-4735-8674-870d3b9bfe95' AND "UserTopic"."name" = '3 Folds Concepts' AND "UserTopic"."issuedAt" = '2020-09-26 06:29:40.000 +00:00' LIMIT 1;
Executing (f1a62a49-30c8-4aae-b498-8add2c55916e): COMMIT;
Executing (600d1b88-f872-49a9-b6fa-6f475808fb09): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4521698ae74b4bffbc7aec09a891c49d$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Concepts and development of Base map,Landuse map and Geo-morphology maps','2021-03-06 10:30:48.000 +00:00','c919ec69-7f36-4a98-a6e7-a7733764d137','2024-08-31 20:47:11.424 +00:00','2024-08-31 20:47:11.424 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4521698ae74b4bffbc7aec09a891c49d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bb2942e2-24c9-4b88-8a64-74b5b9bd8a7a): COMMIT;
Executing (66269757-44fa-44ea-9fd0-d7d800b7409d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a2841f920f464969b82765834e7a25b8$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'3 Folds Concepts','2020-09-26 06:29:40.000 +00:00','7b00fe4a-0677-4735-8674-870d3b9bfe95','2024-08-31 20:47:11.426 +00:00','2024-08-31 20:47:11.426 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a2841f920f464969b82765834e7a25b8$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1e07c3e4-13da-4ff6-81ee-0fd254e5d5f2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_81c481514b974a829485b4264e674f4b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2020-04-07 09:20:45.000 +00:00','6b1255b3-c3cf-48bd-aa73-b0dcffaf6951','2024-08-31 20:47:11.428 +00:00','2024-08-31 20:47:11.428 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_81c481514b974a829485b4264e674f4b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (600d1b88-f872-49a9-b6fa-6f475808fb09): COMMIT;
Processed user: Shaik Saida begum
Executing (051fc4a2-06a1-479b-a337-2d29b892be83): START TRANSACTION;
Executing (66269757-44fa-44ea-9fd0-d7d800b7409d): COMMIT;
topicName Virtual Interactions - Needs and Benefits 2020-11-04T10:07:51.000+0000
Executing (dfe56d6d-0240-4421-8376-15e6a7bf14e7): START TRANSACTION;
topicName Community Participation-Why 2021-04-09T06:46:56.000+0000
Executing (ae0403b1-4da2-4149-a43d-65ebdf9516d8): START TRANSACTION;
Executing (051fc4a2-06a1-479b-a337-2d29b892be83): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '384f86d2-2fa2-4b51-8527-506c4e191ee8' AND "UserTopic"."name" = 'Demonstration of PDA - ICDS Supervisors Training' AND "UserTopic"."issuedAt" = '2021-06-09 10:05:27.000 +00:00' LIMIT 1;
Processed user: Chitra
Executing (d3e2f1f9-675f-477a-8fbe-0f9abf10bfb3): START TRANSACTION;
Executing (1e07c3e4-13da-4ff6-81ee-0fd254e5d5f2): COMMIT;
Executing (ae0403b1-4da2-4149-a43d-65ebdf9516d8): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9ca87890-0726-4909-9ebd-92fab6ce4a20' AND "UserTopic"."name" = 'Virtual Interactions - Best Practices - Smitha Murthy' AND "UserTopic"."issuedAt" = '2020-10-14 06:59:31.000 +00:00' LIMIT 1;
Executing (051fc4a2-06a1-479b-a337-2d29b892be83): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_97708d436a604e9294342d1c0102b008$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Demonstration of PDA - ICDS Supervisors Training','2021-06-09 10:05:27.000 +00:00','384f86d2-2fa2-4b51-8527-506c4e191ee8','2024-08-31 20:47:11.438 +00:00','2024-08-31 20:47:11.438 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_97708d436a604e9294342d1c0102b008$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d3e2f1f9-675f-477a-8fbe-0f9abf10bfb3): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5bdb6895-9c24-4df3-afc3-bb1924171fea' AND "UserTopic"."name" = 'ಅಟಲ್ ಭೂಜಲ್ ಯೋಜನೆಯ ಅವಲೋಕನ' AND "UserTopic"."issuedAt" = '2021-05-25 11:27:09.000 +00:00' LIMIT 1;
Executing (dfe56d6d-0240-4421-8376-15e6a7bf14e7): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9c782be5-e423-49f9-8b28-613ccc87fc3a' AND "UserTopic"."name" = 'Introduction to Learning Objectives' AND "UserTopic"."issuedAt" = '2022-02-22 07:25:53.000 +00:00' LIMIT 1;
Executing (ae0403b1-4da2-4149-a43d-65ebdf9516d8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ad24396a34f947e1822cdbe8b71ff4b3$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Virtual Interactions - Best Practices - Smitha Murthy','2020-10-14 06:59:31.000 +00:00','9ca87890-0726-4909-9ebd-92fab6ce4a20','2024-08-31 20:47:11.441 +00:00','2024-08-31 20:47:11.441 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ad24396a34f947e1822cdbe8b71ff4b3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (051fc4a2-06a1-479b-a337-2d29b892be83): COMMIT;
Executing (d3e2f1f9-675f-477a-8fbe-0f9abf10bfb3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_138d21788739421ea9cdc3c7b07dc487$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'ಅಟಲ್ ಭೂಜಲ್ ಯೋಜನೆಯ ಅವಲೋಕನ','2021-05-25 11:27:09.000 +00:00','5bdb6895-9c24-4df3-afc3-bb1924171fea','2024-08-31 20:47:11.442 +00:00','2024-08-31 20:47:11.442 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_138d21788739421ea9cdc3c7b07dc487$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA - Participant App 2020-03-18T06:49:03+0000
Executing (a16183f1-6abd-4d11-8968-c0059f53ae22): START TRANSACTION;
Executing (ae0403b1-4da2-4149-a43d-65ebdf9516d8): COMMIT;
Processed user: T Radha KMpally 
Executing (0c1a8538-29cf-4044-b7b5-979656c58620): START TRANSACTION;
Executing (dfe56d6d-0240-4421-8376-15e6a7bf14e7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cc69524d0f9a4c4d84201d9589ee256a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Learning Objectives','2022-02-22 07:25:53.000 +00:00','9c782be5-e423-49f9-8b28-613ccc87fc3a','2024-08-31 20:47:11.445 +00:00','2024-08-31 20:47:11.445 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cc69524d0f9a4c4d84201d9589ee256a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Virtual Training Format 2020-10-14T06:56:54.000+0000
Executing (a4199d0d-ab79-4050-93b2-fd0b329165c0): START TRANSACTION;
Executing (0c1a8538-29cf-4044-b7b5-979656c58620): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5db4d93e-0440-4889-aede-7c3540cc5831' AND "UserTopic"."name" = 'Post-Harvest Management and Value Addition in Spice Crops.' AND "UserTopic"."issuedAt" = '2021-02-24 10:19:39.000 +00:00' LIMIT 1;
Executing (a16183f1-6abd-4d11-8968-c0059f53ae22): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '242a3167-2079-4477-a496-a5068c491541' AND "UserTopic"."name" = 'Demonstration of PDA - ICDS Supervisors Training' AND "UserTopic"."issuedAt" = '2021-06-09 10:22:24.000 +00:00' LIMIT 1;
Executing (d3e2f1f9-675f-477a-8fbe-0f9abf10bfb3): COMMIT;
Executing (a4199d0d-ab79-4050-93b2-fd0b329165c0): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b47e89bd-a4e4-4809-972e-db2e7eae8843' AND "UserTopic"."name" = 'Demonstration of PDA - ICDS Supervisors Training' AND "UserTopic"."issuedAt" = '2021-06-09 10:05:32.000 +00:00' LIMIT 1;
Executing (0c1a8538-29cf-4044-b7b5-979656c58620): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_55836b10bee34061959983ee37c34818$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Post-Harvest Management and Value Addition in Spice Crops.','2021-02-24 10:19:39.000 +00:00','5db4d93e-0440-4889-aede-7c3540cc5831','2024-08-31 20:47:11.450 +00:00','2024-08-31 20:47:11.450 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_55836b10bee34061959983ee37c34818$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a16183f1-6abd-4d11-8968-c0059f53ae22): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b8ea8448e7134eb99390e2570e0e9f80$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Demonstration of PDA - ICDS Supervisors Training','2021-06-09 10:22:24.000 +00:00','242a3167-2079-4477-a496-a5068c491541','2024-08-31 20:47:11.451 +00:00','2024-08-31 20:47:11.451 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b8ea8448e7134eb99390e2570e0e9f80$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (dfe56d6d-0240-4421-8376-15e6a7bf14e7): COMMIT;
Executing (a4199d0d-ab79-4050-93b2-fd0b329165c0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6015a8b612e04cf7a84cd9f90b57fad9$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Demonstration of PDA - ICDS Supervisors Training','2021-06-09 10:05:32.000 +00:00','b47e89bd-a4e4-4809-972e-db2e7eae8843','2024-08-31 20:47:11.452 +00:00','2024-08-31 20:47:11.452 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6015a8b612e04cf7a84cd9f90b57fad9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0c1a8538-29cf-4044-b7b5-979656c58620): COMMIT;
Processed user: Harish kumar
Executing (cdd5ab8e-4791-4d7a-9673-8fe183f6e23d): START TRANSACTION;
Executing (a4199d0d-ab79-4050-93b2-fd0b329165c0): COMMIT;
topicName Content Development | T1.01 | DG 2020-11-26T11:45:15.000+0000
Executing (3da45ba3-7d08-480d-937b-39eea9bcb120): START TRANSACTION;
topicName Introduction to Process of planning a lesson flow 2022-03-02T06:57:58.000+0000
Executing (1bdad262-3dcd-4db7-9e4f-6c5dd76a0ec5): START TRANSACTION;
Executing (a16183f1-6abd-4d11-8968-c0059f53ae22): COMMIT;
Processed user: Kathi Vijayalaxmi
Executing (91aadabe-01f8-4251-ad8b-537227d15021): START TRANSACTION;
Executing (3da45ba3-7d08-480d-937b-39eea9bcb120): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '024316cc-7fe7-4f44-9ea8-c925726ed1bf' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:46:37.000 +00:00' LIMIT 1;
Executing (1bdad262-3dcd-4db7-9e4f-6c5dd76a0ec5): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5a7898e7-5779-4b5b-b345-0e67cd8ea9c2' AND "UserTopic"."name" = 'Introduction to Learning Experience Framework' AND "UserTopic"."issuedAt" = '2022-01-18 07:44:46.000 +00:00' LIMIT 1;
Executing (cdd5ab8e-4791-4d7a-9673-8fe183f6e23d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b59d4a46-f33b-4b08-ac4d-374948839c8c' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 06:57:13.000 +00:00' LIMIT 1;
Executing (91aadabe-01f8-4251-ad8b-537227d15021): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'cbec1c8c-7914-43b5-b7f6-a3e131c9fdff' AND "UserTopic"."name" = '3 Folds Concepts' AND "UserTopic"."issuedAt" = '2020-09-26 06:34:19.000 +00:00' LIMIT 1;
Executing (3da45ba3-7d08-480d-937b-39eea9bcb120): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c650a92ec3d047f1b6d2e2e3caf2b96b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:46:37.000 +00:00','024316cc-7fe7-4f44-9ea8-c925726ed1bf','2024-08-31 20:47:11.460 +00:00','2024-08-31 20:47:11.460 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c650a92ec3d047f1b6d2e2e3caf2b96b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1bdad262-3dcd-4db7-9e4f-6c5dd76a0ec5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_28c6f449b52f4898861ae1c2bc02600d$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Learning Experience Framework','2022-01-18 07:44:46.000 +00:00','5a7898e7-5779-4b5b-b345-0e67cd8ea9c2','2024-08-31 20:47:11.461 +00:00','2024-08-31 20:47:11.461 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_28c6f449b52f4898861ae1c2bc02600d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Adavath parvathi
Executing (1ccd9843-eea2-4918-9cd3-0797a79c1a80): START TRANSACTION;
Executing (91aadabe-01f8-4251-ad8b-537227d15021): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9107246cbf4a4323b5ffc4b774168994$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'3 Folds Concepts','2020-09-26 06:34:19.000 +00:00','cbec1c8c-7914-43b5-b7f6-a3e131c9fdff','2024-08-31 20:47:11.462 +00:00','2024-08-31 20:47:11.462 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9107246cbf4a4323b5ffc4b774168994$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3da45ba3-7d08-480d-937b-39eea9bcb120): COMMIT;
Executing (cdd5ab8e-4791-4d7a-9673-8fe183f6e23d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f8ac12bd255d466db660a1a22d7a89a4$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 06:57:13.000 +00:00','b59d4a46-f33b-4b08-ac4d-374948839c8c','2024-08-31 20:47:11.464 +00:00','2024-08-31 20:47:11.464 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f8ac12bd255d466db660a1a22d7a89a4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (91aadabe-01f8-4251-ad8b-537227d15021): COMMIT;
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T06:56:44.000+0000
Executing (c249fb8b-83d3-4e47-958e-d9c65f468c7e): START TRANSACTION;
Executing (1ccd9843-eea2-4918-9cd3-0797a79c1a80): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4752ee9a-d3d1-496b-b101-7d5dbd3194d6' AND "UserTopic"."name" = 'Demonstration of PDA - ICDS Supervisors Training' AND "UserTopic"."issuedAt" = '2021-06-09 10:05:31.000 +00:00' LIMIT 1;
Executing (1bdad262-3dcd-4db7-9e4f-6c5dd76a0ec5): COMMIT;
Processed user: Elavazhagan
Executing (3835264f-212e-4376-8312-1f3ee1c64ed4): START TRANSACTION;
Executing (c249fb8b-83d3-4e47-958e-d9c65f468c7e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'a1261bb9-8ef1-4b6b-94b6-1ae65102057f' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM - II' AND "UserTopic"."issuedAt" = '2021-08-14 11:59:23.000 +00:00' LIMIT 1;
Executing (1ccd9843-eea2-4918-9cd3-0797a79c1a80): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_964f01b08666431c9b783f478b29b0b3$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Demonstration of PDA - ICDS Supervisors Training','2021-06-09 10:05:31.000 +00:00','4752ee9a-d3d1-496b-b101-7d5dbd3194d6','2024-08-31 20:47:11.469 +00:00','2024-08-31 20:47:11.469 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_964f01b08666431c9b783f478b29b0b3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cdd5ab8e-4791-4d7a-9673-8fe183f6e23d): COMMIT;
Executing (3835264f-212e-4376-8312-1f3ee1c64ed4): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'fdb8b1d1-3822-42e2-8e57-7a95cb7297ee' AND "UserTopic"."name" = 'Post-Harvest Management and Value Addition in Spice Crops.' AND "UserTopic"."issuedAt" = '2021-02-24 11:04:06.000 +00:00' LIMIT 1;
Executing (c249fb8b-83d3-4e47-958e-d9c65f468c7e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_30688194ede24cd5abdfd73ede990d8a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM - II','2021-08-14 11:59:23.000 +00:00','a1261bb9-8ef1-4b6b-94b6-1ae65102057f','2024-08-31 20:47:11.471 +00:00','2024-08-31 20:47:11.471 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_30688194ede24cd5abdfd73ede990d8a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Feedback and next steps 2022-01-25T07:26:00.000+0000
Executing (9d3b7ede-cd11-4e10-8c3d-a7cf60d9d139): START TRANSACTION;
Executing (3835264f-212e-4376-8312-1f3ee1c64ed4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4efa4fc84d774091b3d8d40c8f7f8b28$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Post-Harvest Management and Value Addition in Spice Crops.','2021-02-24 11:04:06.000 +00:00','fdb8b1d1-3822-42e2-8e57-7a95cb7297ee','2024-08-31 20:47:11.473 +00:00','2024-08-31 20:47:11.473 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4efa4fc84d774091b3d8d40c8f7f8b28$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Raval Alpeshkumar laxmanbhai
Executing (62167488-4fca-4e77-a21a-359e7778d160): START TRANSACTION;
Executing (1ccd9843-eea2-4918-9cd3-0797a79c1a80): COMMIT;
Executing (62167488-4fca-4e77-a21a-359e7778d160): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2390c7a6-6347-41ef-be70-2eca8bd7e737' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:46:39.000 +00:00' LIMIT 1;
Executing (9d3b7ede-cd11-4e10-8c3d-a7cf60d9d139): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '53ada3ff-a458-444f-8186-7be0fd8399e8' AND "UserTopic"."name" = 'PDA Hands-on' AND "UserTopic"."issuedAt" = '2021-03-16 08:00:20.000 +00:00' LIMIT 1;
Executing (c249fb8b-83d3-4e47-958e-d9c65f468c7e): COMMIT;
Executing (62167488-4fca-4e77-a21a-359e7778d160): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9eb0bdf5bfc44a4d92da6bd3d993463e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:46:39.000 +00:00','2390c7a6-6347-41ef-be70-2eca8bd7e737','2024-08-31 20:47:11.477 +00:00','2024-08-31 20:47:11.477 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9eb0bdf5bfc44a4d92da6bd3d993463e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9d3b7ede-cd11-4e10-8c3d-a7cf60d9d139): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_db8a7b024c2f4d55bc0bd0ae8c0c5196$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Hands-on','2021-03-16 08:00:20.000 +00:00','53ada3ff-a458-444f-8186-7be0fd8399e8','2024-08-31 20:47:11.478 +00:00','2024-08-31 20:47:11.478 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_db8a7b024c2f4d55bc0bd0ae8c0c5196$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3835264f-212e-4376-8312-1f3ee1c64ed4): COMMIT;
Processed user: MANJULA
Executing (cd65800e-43bc-46ff-88ba-78a60d8dc3e4): START TRANSACTION;
Executing (62167488-4fca-4e77-a21a-359e7778d160): COMMIT;
Processed user: Rathod Nisha keshrsinh
Executing (fbffce7a-c0e7-4265-97a3-bbd2e78d4488): START TRANSACTION;
topicName Crop Water Budgeting Overview 2020-12-16T07:15:55.000+0000
Executing (d28ca1e1-423b-446c-bc7d-fa942964386d): START TRANSACTION;
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T06:57:08.000+0000
Executing (2ddacc50-2ae2-4bdf-aa89-992efa98ef26): START TRANSACTION;
Executing (fbffce7a-c0e7-4265-97a3-bbd2e78d4488): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4c86587a-893e-4d75-9881-965d8fdab183' AND "UserTopic"."name" = 'CBP Orientation' AND "UserTopic"."issuedAt" = '2020-08-17 10:20:48.000 +00:00' LIMIT 1;
Executing (9d3b7ede-cd11-4e10-8c3d-a7cf60d9d139): COMMIT;
Executing (cd65800e-43bc-46ff-88ba-78a60d8dc3e4): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '01f36c57-cf2f-42da-af8f-49576b08677c' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM - II' AND "UserTopic"."issuedAt" = '2021-08-14 12:05:56.000 +00:00' LIMIT 1;
Executing (2ddacc50-2ae2-4bdf-aa89-992efa98ef26): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9afe6d06-fc0c-42c3-983e-e64a33935587' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:46:00.000 +00:00' LIMIT 1;
Executing (fbffce7a-c0e7-4265-97a3-bbd2e78d4488): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_be6a4478ddcf4371bd6f8b670bd7ee94$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'CBP Orientation','2020-08-17 10:20:48.000 +00:00','4c86587a-893e-4d75-9881-965d8fdab183','2024-08-31 20:47:11.486 +00:00','2024-08-31 20:47:11.486 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_be6a4478ddcf4371bd6f8b670bd7ee94$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Mritunjay Kumar Mahato
Executing (59b2092e-f168-4343-9f3b-debb217abed5): START TRANSACTION;
Executing (d28ca1e1-423b-446c-bc7d-fa942964386d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4a91748d-c3d6-4cc2-8487-c54728c64902' AND "UserTopic"."name" = 'PMT Functions & CBP Training Calendar' AND "UserTopic"."issuedAt" = '2020-10-13 10:35:44.000 +00:00' LIMIT 1;
Executing (2ddacc50-2ae2-4bdf-aa89-992efa98ef26): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c114c9bc8b6641b988c539ceb66a30be$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:46:00.000 +00:00','9afe6d06-fc0c-42c3-983e-e64a33935587','2024-08-31 20:47:11.488 +00:00','2024-08-31 20:47:11.488 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c114c9bc8b6641b988c539ceb66a30be$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (59b2092e-f168-4343-9f3b-debb217abed5): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '93815ba1-bfba-437e-aee3-bf517173900e' AND "UserTopic"."name" = 'Water Literacy Campaign' AND "UserTopic"."issuedAt" = '2021-01-20 06:31:23.000 +00:00' LIMIT 1;
Executing (cd65800e-43bc-46ff-88ba-78a60d8dc3e4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6f1e75d62fb04d138a10d6d68c7873aa$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM - II','2021-08-14 12:05:56.000 +00:00','01f36c57-cf2f-42da-af8f-49576b08677c','2024-08-31 20:47:11.490 +00:00','2024-08-31 20:47:11.490 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6f1e75d62fb04d138a10d6d68c7873aa$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2ddacc50-2ae2-4bdf-aa89-992efa98ef26): COMMIT;
Executing (59b2092e-f168-4343-9f3b-debb217abed5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b2df51775a33467bbf85522486119924$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Water Literacy Campaign','2021-01-20 06:31:23.000 +00:00','93815ba1-bfba-437e-aee3-bf517173900e','2024-08-31 20:47:11.492 +00:00','2024-08-31 20:47:11.492 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b2df51775a33467bbf85522486119924$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (fbffce7a-c0e7-4265-97a3-bbd2e78d4488): COMMIT;
Executing (d28ca1e1-423b-446c-bc7d-fa942964386d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_479b8bc159eb4f068f7675c3cb7d7d89$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PMT Functions & CBP Training Calendar','2020-10-13 10:35:44.000 +00:00','4a91748d-c3d6-4cc2-8487-c54728c64902','2024-08-31 20:47:11.494 +00:00','2024-08-31 20:47:11.494 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_479b8bc159eb4f068f7675c3cb7d7d89$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T06:56:42.000+0000
Executing (4daa4246-2328-4d4f-8dea-056546fcced3): START TRANSACTION;
Executing (59b2092e-f168-4343-9f3b-debb217abed5): COMMIT;
Executing (cd65800e-43bc-46ff-88ba-78a60d8dc3e4): COMMIT;
Executing (4daa4246-2328-4d4f-8dea-056546fcced3): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '3142c5e5-e6b4-467c-8bc7-37c4d62b0601' AND "UserTopic"."name" = 'Demonstration of PDA - ICDS Supervisors Training' AND "UserTopic"."issuedAt" = '2021-06-09 10:22:27.000 +00:00' LIMIT 1;
topicName Content Development | T1.01 | DG 2020-11-26T11:45:13.000+0000
Executing (313f5435-94bf-4f15-b5dc-be24dff1e63d): START TRANSACTION;
Executing (d28ca1e1-423b-446c-bc7d-fa942964386d): COMMIT;
Executing (4daa4246-2328-4d4f-8dea-056546fcced3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_dee8db6692984880a9af862ce5fc4322$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Demonstration of PDA - ICDS Supervisors Training','2021-06-09 10:22:27.000 +00:00','3142c5e5-e6b4-467c-8bc7-37c4d62b0601','2024-08-31 20:47:11.499 +00:00','2024-08-31 20:47:11.499 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_dee8db6692984880a9af862ce5fc4322$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (313f5435-94bf-4f15-b5dc-be24dff1e63d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c6d045d9-99bc-4758-a443-a224f20d2784' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:47:25.000 +00:00' LIMIT 1;
Processed user: Sudam Bodake
Executing (7e2091ad-aa07-4f0c-a413-56a0e289c194): START TRANSACTION;
Processed user: Murji Khimji Maheshwari
Executing (ad2a6776-c2a3-440b-b7ac-c6b87f3986da): START TRANSACTION;
Executing (4daa4246-2328-4d4f-8dea-056546fcced3): COMMIT;
Executing (313f5435-94bf-4f15-b5dc-be24dff1e63d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6338125a5efe4d3e807e3ad37ebb104f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:47:25.000 +00:00','c6d045d9-99bc-4758-a443-a224f20d2784','2024-08-31 20:47:11.502 +00:00','2024-08-31 20:47:11.502 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6338125a5efe4d3e807e3ad37ebb104f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7e2091ad-aa07-4f0c-a413-56a0e289c194): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8ed9ff54-4090-4a47-9bfb-443b3dafc139' AND "UserTopic"."name" = 'Introduction to Learning Experience Framework' AND "UserTopic"."issuedAt" = '2022-01-18 07:45:27.000 +00:00' LIMIT 1;
Processed user: Narasimha Rao S
Executing (52c6289b-6455-4e81-b1d7-6c259d60266d): START TRANSACTION;
Processed user: K Nagamani Damarcherla project
Executing (222babc2-76a9-425f-b831-57e73fc3953d): START TRANSACTION;
Executing (7e2091ad-aa07-4f0c-a413-56a0e289c194): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4f043e2f4b524d4386e00e14228c75d6$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Learning Experience Framework','2022-01-18 07:45:27.000 +00:00','8ed9ff54-4090-4a47-9bfb-443b3dafc139','2024-08-31 20:47:11.505 +00:00','2024-08-31 20:47:11.505 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4f043e2f4b524d4386e00e14228c75d6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ad2a6776-c2a3-440b-b7ac-c6b87f3986da): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6dbddad7-a9ef-472b-8e22-5652e4533b35' AND "UserTopic"."name" = 'Post-Harvest Management and Value Addition in Spice Crops.' AND "UserTopic"."issuedAt" = '2021-02-24 08:35:47.000 +00:00' LIMIT 1;
Executing (222babc2-76a9-425f-b831-57e73fc3953d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'ff97766a-e506-49df-9522-8efa994ff324' AND "UserTopic"."name" = 'PDA - Trainer App' AND "UserTopic"."issuedAt" = '2019-12-05 07:26:08.000 +00:00' LIMIT 1;
Executing (313f5435-94bf-4f15-b5dc-be24dff1e63d): COMMIT;
Executing (52c6289b-6455-4e81-b1d7-6c259d60266d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6afb2b3b-3e1c-4e13-9bd9-b1e2e77810c9' AND "UserTopic"."name" = 'Post-Harvest Management and Value Addition in Spice Crops.' AND "UserTopic"."issuedAt" = '2021-02-24 09:04:56.000 +00:00' LIMIT 1;
Executing (222babc2-76a9-425f-b831-57e73fc3953d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c04269e0b3664e4d95ad2bb633abb698$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Trainer App','2019-12-05 07:26:08.000 +00:00','ff97766a-e506-49df-9522-8efa994ff324','2024-08-31 20:47:11.510 +00:00','2024-08-31 20:47:11.510 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c04269e0b3664e4d95ad2bb633abb698$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T06:59:19.000+0000
Executing (b100f771-dc51-4998-a4fe-b80e5eb79214): START TRANSACTION;
Executing (ad2a6776-c2a3-440b-b7ac-c6b87f3986da): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b8976a9e45aa48adbb134806ae050281$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Post-Harvest Management and Value Addition in Spice Crops.','2021-02-24 08:35:47.000 +00:00','6dbddad7-a9ef-472b-8e22-5652e4533b35','2024-08-31 20:47:11.511 +00:00','2024-08-31 20:47:11.511 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b8976a9e45aa48adbb134806ae050281$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7e2091ad-aa07-4f0c-a413-56a0e289c194): COMMIT;
Executing (222babc2-76a9-425f-b831-57e73fc3953d): COMMIT;
Executing (b100f771-dc51-4998-a4fe-b80e5eb79214): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2e400362-1635-47e4-99c8-72b00dd38b19' AND "UserTopic"."name" = 'Data analysis techniques for VCF' AND "UserTopic"."issuedAt" = '2021-04-30 12:55:11.000 +00:00' LIMIT 1;
Executing (52c6289b-6455-4e81-b1d7-6c259d60266d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fa09b8867e7c47a79c904348f9a2d862$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Post-Harvest Management and Value Addition in Spice Crops.','2021-02-24 09:04:56.000 +00:00','6afb2b3b-3e1c-4e13-9bd9-b1e2e77810c9','2024-08-31 20:47:11.514 +00:00','2024-08-31 20:47:11.514 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fa09b8867e7c47a79c904348f9a2d862$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Introduction to Springs | MTs 2020-02-18T07:22:46+0000
Executing (42c72f0d-2944-4c5c-a754-2477aff24fa3): START TRANSACTION;
Executing (b100f771-dc51-4998-a4fe-b80e5eb79214): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c1a038f0ac254eb8b510006a1c35be4b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Data analysis techniques for VCF','2021-04-30 12:55:11.000 +00:00','2e400362-1635-47e4-99c8-72b00dd38b19','2024-08-31 20:47:11.516 +00:00','2024-08-31 20:47:11.516 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c1a038f0ac254eb8b510006a1c35be4b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Feedback and next steps 2022-01-25T07:26:35.000+0000
Executing (67699c57-e26b-42e0-98aa-f6ee11972e89): START TRANSACTION;
Executing (ad2a6776-c2a3-440b-b7ac-c6b87f3986da): COMMIT;
Executing (42c72f0d-2944-4c5c-a754-2477aff24fa3): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9bb07b4d-1f9a-46ff-abff-29ec483b7763' AND "UserTopic"."name" = 'Test topic in new UI' AND "UserTopic"."issuedAt" = '2022-03-10 09:18:25.000 +00:00' LIMIT 1;
Executing (67699c57-e26b-42e0-98aa-f6ee11972e89): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b912e843-b03e-4f84-8133-82016c8dd2a8' AND "UserTopic"."name" = 'Content Development | T1.01 | DG' AND "UserTopic"."issuedAt" = '2020-11-26 11:45:08.000 +00:00' LIMIT 1;
Executing (52c6289b-6455-4e81-b1d7-6c259d60266d): COMMIT;
Executing (42c72f0d-2944-4c5c-a754-2477aff24fa3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_65ac85f2df5b46709d17e4c982c259ce$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Test topic in new UI','2022-03-10 09:18:25.000 +00:00','9bb07b4d-1f9a-46ff-abff-29ec483b7763','2024-08-31 20:47:11.520 +00:00','2024-08-31 20:47:11.520 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_65ac85f2df5b46709d17e4c982c259ce$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (67699c57-e26b-42e0-98aa-f6ee11972e89): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6efb9cdf26d041d8a9614f8285284f66$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Content Development | T1.01 | DG','2020-11-26 11:45:08.000 +00:00','b912e843-b03e-4f84-8133-82016c8dd2a8','2024-08-31 20:47:11.521 +00:00','2024-08-31 20:47:11.521 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6efb9cdf26d041d8a9614f8285284f66$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Kanubhai patel
Executing (f843a59d-ed2f-4ca6-b3a2-9b778c16357c): START TRANSACTION;
Executing (b100f771-dc51-4998-a4fe-b80e5eb79214): COMMIT;
Executing (42c72f0d-2944-4c5c-a754-2477aff24fa3): COMMIT;
Executing (67699c57-e26b-42e0-98aa-f6ee11972e89): COMMIT;
Executing (f843a59d-ed2f-4ca6-b3a2-9b778c16357c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c7aaf34b-f478-4809-94b2-38e316f25acc' AND "UserTopic"."name" = 'PDA Hands-on' AND "UserTopic"."issuedAt" = '2021-03-16 08:02:49.000 +00:00' LIMIT 1;
topicName Content Development | T1.01 | DG 2020-11-26T11:45:10.000+0000
Executing (ae11b4c5-d2b0-4be4-bcca-74d654002dd6): START TRANSACTION;
topicName Improved Hands on Test 2 2021-04-14T03:29:05.000+0000
Executing (2a01be2f-7d74-4fe2-9b00-36b6cce27b42): START TRANSACTION;
topicName PDA for Trainers 2020-11-23T05:57:29.000+0000
Executing (63e4dbb0-5c9c-48d3-9154-08e71d920994): START TRANSACTION;
topicName CBP Orientation 2020-08-17T10:29:27.000+0000
Executing (dfd7318b-bb01-467c-bc7c-5e84c1463f6c): START TRANSACTION;
Executing (2a01be2f-7d74-4fe2-9b00-36b6cce27b42): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '7d16789c-684c-442c-b2a1-487b76c24875' AND "UserTopic"."name" = '3 Folds Concepts' AND "UserTopic"."issuedAt" = '2020-09-26 06:34:38.000 +00:00' LIMIT 1;
Executing (63e4dbb0-5c9c-48d3-9154-08e71d920994): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '88acf595-35dd-4ee8-87aa-924166be5859' AND "UserTopic"."name" = 'Midterm Measurement of Desilting(Jalsamruddhi)' AND "UserTopic"."issuedAt" = '2021-02-20 11:42:46.000 +00:00' LIMIT 1;
Executing (f843a59d-ed2f-4ca6-b3a2-9b778c16357c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_039e5059803a4da3b280bdba672f1450$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Hands-on','2021-03-16 08:02:49.000 +00:00','c7aaf34b-f478-4809-94b2-38e316f25acc','2024-08-31 20:47:11.530 +00:00','2024-08-31 20:47:11.530 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_039e5059803a4da3b280bdba672f1450$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ae11b4c5-d2b0-4be4-bcca-74d654002dd6): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '025233ee-51b5-443f-af66-4aca4590614d' AND "UserTopic"."name" = 'Virtual Interactions - Needs and Benefits' AND "UserTopic"."issuedAt" = '2020-11-04 10:06:14.000 +00:00' LIMIT 1;
Executing (2a01be2f-7d74-4fe2-9b00-36b6cce27b42): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3613087614a045b09e698225d5ef3e2a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'3 Folds Concepts','2020-09-26 06:34:38.000 +00:00','7d16789c-684c-442c-b2a1-487b76c24875','2024-08-31 20:47:11.531 +00:00','2024-08-31 20:47:11.531 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3613087614a045b09e698225d5ef3e2a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (63e4dbb0-5c9c-48d3-9154-08e71d920994): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_23b46be5ed87413ea5cc09753f65d189$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Midterm Measurement of Desilting(Jalsamruddhi)','2021-02-20 11:42:46.000 +00:00','88acf595-35dd-4ee8-87aa-924166be5859','2024-08-31 20:47:11.533 +00:00','2024-08-31 20:47:11.533 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_23b46be5ed87413ea5cc09753f65d189$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (dfd7318b-bb01-467c-bc7c-5e84c1463f6c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '35218eb5-0116-4517-a902-d7b02fb15641' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:45:58.000 +00:00' LIMIT 1;
Executing (2a01be2f-7d74-4fe2-9b00-36b6cce27b42): COMMIT;
Executing (ae11b4c5-d2b0-4be4-bcca-74d654002dd6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7c25445940864a17990e177910ffda89$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Virtual Interactions - Needs and Benefits','2020-11-04 10:06:14.000 +00:00','025233ee-51b5-443f-af66-4aca4590614d','2024-08-31 20:47:11.535 +00:00','2024-08-31 20:47:11.535 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7c25445940864a17990e177910ffda89$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f843a59d-ed2f-4ca6-b3a2-9b778c16357c): COMMIT;
Processed user: Deepa
Executing (111a359e-cd8d-447a-85bb-316b10101697): START TRANSACTION;
Executing (dfd7318b-bb01-467c-bc7c-5e84c1463f6c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c5af8770e6604996b4a311b07006f668$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:45:58.000 +00:00','35218eb5-0116-4517-a902-d7b02fb15641','2024-08-31 20:47:11.538 +00:00','2024-08-31 20:47:11.538 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c5af8770e6604996b4a311b07006f668$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (63e4dbb0-5c9c-48d3-9154-08e71d920994): COMMIT;
Executing (111a359e-cd8d-447a-85bb-316b10101697): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f07d7b79-7244-4b9d-92d5-ba1ddcbf4d6f' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-02-16 06:55:03.000 +00:00' LIMIT 1;
Processed user: Subhabrata Das
Executing (9445db7f-079e-4d31-923a-feaab8f56d50): START TRANSACTION;
Executing (ae11b4c5-d2b0-4be4-bcca-74d654002dd6): COMMIT;
Executing (111a359e-cd8d-447a-85bb-316b10101697): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d184465a1110421aa6c2636dcd792028$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-02-16 06:55:03.000 +00:00','f07d7b79-7244-4b9d-92d5-ba1ddcbf4d6f','2024-08-31 20:47:11.542 +00:00','2024-08-31 20:47:11.542 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d184465a1110421aa6c2636dcd792028$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9445db7f-079e-4d31-923a-feaab8f56d50): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6e95d2e7-e874-4076-9412-17aeeb8ea5c3' AND "UserTopic"."name" = 'Introduction to Learning Objectives' AND "UserTopic"."issuedAt" = '2022-02-22 07:22:12.000 +00:00' LIMIT 1;
topicName Water User Association Training 2021-04-03T06:03:15.000+0000
Executing (24e83a91-c5cd-4df8-9efe-ad5e1e072215): START TRANSACTION;
Executing (dfd7318b-bb01-467c-bc7c-5e84c1463f6c): COMMIT;
Executing (111a359e-cd8d-447a-85bb-316b10101697): COMMIT;
Executing (9445db7f-079e-4d31-923a-feaab8f56d50): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b463e9ce81b64693b66f57904de43b3f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Learning Objectives','2022-02-22 07:22:12.000 +00:00','6e95d2e7-e874-4076-9412-17aeeb8ea5c3','2024-08-31 20:47:11.545 +00:00','2024-08-31 20:47:11.545 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b463e9ce81b64693b66f57904de43b3f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (24e83a91-c5cd-4df8-9efe-ad5e1e072215): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '25b9db1a-07dc-4c73-9ead-a9ab493821fb' AND "UserTopic"."name" = 'Introduction to Learning Objectives' AND "UserTopic"."issuedAt" = '2022-02-22 07:22:13.000 +00:00' LIMIT 1;
topicName Guided Mentoring Format 2020-11-04T10:38:15.000+0000
Executing (b63cce60-1727-49da-8de5-601eab739d52): START TRANSACTION;
topicName Community Participation-Why 2021-04-09T06:52:44.000+0000
Executing (be9be6bf-c749-4446-8dac-0a90ee12e649): START TRANSACTION;
Executing (24e83a91-c5cd-4df8-9efe-ad5e1e072215): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_799b51ec9eda451b906b67901020048a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Learning Objectives','2022-02-22 07:22:13.000 +00:00','25b9db1a-07dc-4c73-9ead-a9ab493821fb','2024-08-31 20:47:11.548 +00:00','2024-08-31 20:47:11.548 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_799b51ec9eda451b906b67901020048a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T06:57:32.000+0000
Executing (b6fc4b7a-6da9-4261-97cd-fd24a4a2560c): START TRANSACTION;
Executing (be9be6bf-c749-4446-8dac-0a90ee12e649): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8a499587-62a8-4f73-a20d-23cd31ee58f2' AND "UserTopic"."name" = 'PDA - Trainer App' AND "UserTopic"."issuedAt" = '2019-12-26 11:17:10.000 +00:00' LIMIT 1;
Executing (b63cce60-1727-49da-8de5-601eab739d52): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '891f8b91-199c-4a29-bb5c-59c067279273' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:45:56.000 +00:00' LIMIT 1;
Executing (9445db7f-079e-4d31-923a-feaab8f56d50): COMMIT;
Executing (be9be6bf-c749-4446-8dac-0a90ee12e649): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fb5af26021cb4919b3c998511e8f5fea$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Trainer App','2019-12-26 11:17:10.000 +00:00','8a499587-62a8-4f73-a20d-23cd31ee58f2','2024-08-31 20:47:11.552 +00:00','2024-08-31 20:47:11.552 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fb5af26021cb4919b3c998511e8f5fea$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b63cce60-1727-49da-8de5-601eab739d52): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_380c928c1e0a49b3aaa2c459242fb2a3$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:45:56.000 +00:00','891f8b91-199c-4a29-bb5c-59c067279273','2024-08-31 20:47:11.553 +00:00','2024-08-31 20:47:11.553 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_380c928c1e0a49b3aaa2c459242fb2a3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b6fc4b7a-6da9-4261-97cd-fd24a4a2560c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '14b5f225-43c0-4a97-ac66-52433582208a' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM' AND "UserTopic"."issuedAt" = '2021-08-14 07:14:48.000 +00:00' LIMIT 1;
Executing (24e83a91-c5cd-4df8-9efe-ad5e1e072215): COMMIT;
Executing (be9be6bf-c749-4446-8dac-0a90ee12e649): COMMIT;
Executing (b63cce60-1727-49da-8de5-601eab739d52): COMMIT;
Executing (b6fc4b7a-6da9-4261-97cd-fd24a4a2560c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d84c8dbb8d164436ae7a2e624d8c1441$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM','2021-08-14 07:14:48.000 +00:00','14b5f225-43c0-4a97-ac66-52433582208a','2024-08-31 20:47:11.556 +00:00','2024-08-31 20:47:11.556 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d84c8dbb8d164436ae7a2e624d8c1441$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Image composition and layouts LL3 2022-03-29T07:35:08.000+0000
Executing (f43191c5-85b5-4eb5-8d99-3d349a1102b6): START TRANSACTION;
topicName PDA - Participant App 2019-12-26T10:43:29+0000
Executing (d1c564f9-1341-42d7-a9b4-6086af201681): START TRANSACTION;
topicName Post-Harvest Management and Value Addition in Spice Crops. 2021-02-24T09:16:51.000+0000
Executing (e60dd127-5ca0-4f6b-a521-f1f4e695280d): START TRANSACTION;
topicName Feedback and next steps 2022-01-25T07:26:25.000+0000
Executing (9c6c8088-002a-4a07-a9bd-b17b47d2c431): START TRANSACTION;
Executing (d1c564f9-1341-42d7-a9b4-6086af201681): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b57afa83-caa4-4505-aaba-517e4a20ad5c' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM - II' AND "UserTopic"."issuedAt" = '2021-08-14 12:06:58.000 +00:00' LIMIT 1;
Executing (e60dd127-5ca0-4f6b-a521-f1f4e695280d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '07c9dc3e-7f5b-44f2-9e77-db2626100a1f' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-02-16 06:42:19.000 +00:00' LIMIT 1;
Executing (f43191c5-85b5-4eb5-8d99-3d349a1102b6): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '83ea2f52-d539-4842-ad29-390a6c1a238e' AND "UserTopic"."name" = 'Demonstration of PDA - ICDS Supervisors Training' AND "UserTopic"."issuedAt" = '2021-06-09 10:22:25.000 +00:00' LIMIT 1;
Executing (b6fc4b7a-6da9-4261-97cd-fd24a4a2560c): COMMIT;
Executing (d1c564f9-1341-42d7-a9b4-6086af201681): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c2f2855318de46aab859252c4b67016c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM - II','2021-08-14 12:06:58.000 +00:00','b57afa83-caa4-4505-aaba-517e4a20ad5c','2024-08-31 20:47:11.562 +00:00','2024-08-31 20:47:11.562 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c2f2855318de46aab859252c4b67016c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e60dd127-5ca0-4f6b-a521-f1f4e695280d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6e547873294b4536902f126d8508055c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-02-16 06:42:19.000 +00:00','07c9dc3e-7f5b-44f2-9e77-db2626100a1f','2024-08-31 20:47:11.563 +00:00','2024-08-31 20:47:11.563 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6e547873294b4536902f126d8508055c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f43191c5-85b5-4eb5-8d99-3d349a1102b6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2815b47a854a4995af36b6ecf0e0a60c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Demonstration of PDA - ICDS Supervisors Training','2021-06-09 10:22:25.000 +00:00','83ea2f52-d539-4842-ad29-390a6c1a238e','2024-08-31 20:47:11.564 +00:00','2024-08-31 20:47:11.564 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2815b47a854a4995af36b6ecf0e0a60c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9c6c8088-002a-4a07-a9bd-b17b47d2c431): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8c7435c7-ba84-42fa-bbd1-9938eabfdaeb' AND "UserTopic"."name" = 'Image composition and layouts LL3' AND "UserTopic"."issuedAt" = '2022-03-29 07:35:16.000 +00:00' LIMIT 1;
Executing (d1c564f9-1341-42d7-a9b4-6086af201681): COMMIT;
Executing (e60dd127-5ca0-4f6b-a521-f1f4e695280d): COMMIT;
Processed user: Pooja Bhavesh sathwara
Executing (d67ed744-b997-446b-8121-5d19c60d838c): START TRANSACTION;
Processed user: Tulasi Bhai bhanaji lakhani
Executing (0607e0a1-66ea-4edc-84c6-351dfb1c5592): START TRANSACTION;
topicName Community Participation-Why 2021-04-09T06:46:29.000+0000
Executing (1c4392af-5ce2-46f8-a997-8f19e02edcf1): START TRANSACTION;
Executing (9c6c8088-002a-4a07-a9bd-b17b47d2c431): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_367b68365d484ea785d5ae16eb268b2c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Image composition and layouts LL3','2022-03-29 07:35:16.000 +00:00','8c7435c7-ba84-42fa-bbd1-9938eabfdaeb','2024-08-31 20:47:11.568 +00:00','2024-08-31 20:47:11.568 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_367b68365d484ea785d5ae16eb268b2c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f43191c5-85b5-4eb5-8d99-3d349a1102b6): COMMIT;
Executing (0607e0a1-66ea-4edc-84c6-351dfb1c5592): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '97464daa-7d25-48bf-8d76-21978dc26162' AND "UserTopic"."name" = 'Demonstration of PDA - ICDS Supervisors Training' AND "UserTopic"."issuedAt" = '2021-06-09 10:05:29.000 +00:00' LIMIT 1;
Executing (1c4392af-5ce2-46f8-a997-8f19e02edcf1): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'd8e99826-8d1a-4abf-8ecf-2e9afb8dc01a' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2020-03-18 06:48:36.000 +00:00' LIMIT 1;
Executing (d67ed744-b997-446b-8121-5d19c60d838c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '103893bb-851c-4edb-9ed9-045654677f5d' AND "UserTopic"."name" = 'CBP Orientation' AND "UserTopic"."issuedAt" = '2020-08-25 06:11:18.000 +00:00' LIMIT 1;
Executing (0607e0a1-66ea-4edc-84c6-351dfb1c5592): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2f59f6a9b73e408a8f0a11427ed7bb33$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Demonstration of PDA - ICDS Supervisors Training','2021-06-09 10:05:29.000 +00:00','97464daa-7d25-48bf-8d76-21978dc26162','2024-08-31 20:47:11.572 +00:00','2024-08-31 20:47:11.572 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2f59f6a9b73e408a8f0a11427ed7bb33$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1c4392af-5ce2-46f8-a997-8f19e02edcf1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_175ee1d74ead45a698a2707682044878$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2020-03-18 06:48:36.000 +00:00','d8e99826-8d1a-4abf-8ecf-2e9afb8dc01a','2024-08-31 20:47:11.573 +00:00','2024-08-31 20:47:11.573 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_175ee1d74ead45a698a2707682044878$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Rashida suparviasor
Executing (972e94a7-55c7-415e-9d48-7ca7d4f0c1d1): START TRANSACTION;
Executing (9c6c8088-002a-4a07-a9bd-b17b47d2c431): COMMIT;
Executing (0607e0a1-66ea-4edc-84c6-351dfb1c5592): COMMIT;
Executing (972e94a7-55c7-415e-9d48-7ca7d4f0c1d1): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '46c3bc6a-0790-4fd7-b467-1fb0a8a3c1a8' AND "UserTopic"."name" = 'PDA Hands-on' AND "UserTopic"."issuedAt" = '2021-03-16 08:04:26.000 +00:00' LIMIT 1;
Executing (d67ed744-b997-446b-8121-5d19c60d838c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0e838acb261d4dc0a1e806a8a0961beb$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'CBP Orientation','2020-08-25 06:11:18.000 +00:00','103893bb-851c-4edb-9ed9-045654677f5d','2024-08-31 20:47:11.577 +00:00','2024-08-31 20:47:11.577 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0e838acb261d4dc0a1e806a8a0961beb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Depa Venkatamma
Executing (a3497a4f-ebb6-4167-8043-cfb238ce5d9a): START TRANSACTION;
Executing (972e94a7-55c7-415e-9d48-7ca7d4f0c1d1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_76c55d281d714bd889c25bc5da6072c3$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Hands-on','2021-03-16 08:04:26.000 +00:00','46c3bc6a-0790-4fd7-b467-1fb0a8a3c1a8','2024-08-31 20:47:11.579 +00:00','2024-08-31 20:47:11.579 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_76c55d281d714bd889c25bc5da6072c3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1c4392af-5ce2-46f8-a997-8f19e02edcf1): COMMIT;
topicName Introduction to Visual Design LL3 2022-03-22T07:25:47.000+0000
Executing (9b84dd74-879a-4286-86d0-6edcce7c7c29): START TRANSACTION;
Executing (a3497a4f-ebb6-4167-8043-cfb238ce5d9a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2b80d0a9-7767-4f05-9037-719583d95b5c' AND "UserTopic"."name" = 'PDA Demo' AND "UserTopic"."issuedAt" = '2021-06-15 05:15:54.000 +00:00' LIMIT 1;
Executing (d67ed744-b997-446b-8121-5d19c60d838c): COMMIT;
Executing (9b84dd74-879a-4286-86d0-6edcce7c7c29): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '90ed086b-cf3f-4107-b55d-b893385c105f' AND "UserTopic"."name" = 'How to Scan QR code test' AND "UserTopic"."issuedAt" = '2021-02-16 01:30:32.000 +00:00' LIMIT 1;
Processed user: Bulbuli
Executing (f7985068-83b7-4fc4-beb7-2d522afbd53e): START TRANSACTION;
Executing (972e94a7-55c7-415e-9d48-7ca7d4f0c1d1): COMMIT;
Executing (9b84dd74-879a-4286-86d0-6edcce7c7c29): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bd817b7653e74702964fa985a52a4c52$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'How to Scan QR code test','2021-02-16 01:30:32.000 +00:00','90ed086b-cf3f-4107-b55d-b893385c105f','2024-08-31 20:47:11.585 +00:00','2024-08-31 20:47:11.585 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bd817b7653e74702964fa985a52a4c52$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f7985068-83b7-4fc4-beb7-2d522afbd53e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'eae4b6b2-f9e0-4738-9d94-c9345173c4cd' AND "UserTopic"."name" = 'Virtual Interactions - Needs and Benefits' AND "UserTopic"."issuedAt" = '2020-11-04 10:07:10.000 +00:00' LIMIT 1;
Executing (a3497a4f-ebb6-4167-8043-cfb238ce5d9a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4f4d3079f52c4d8da40d8e90c6c538cc$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo','2021-06-15 05:15:54.000 +00:00','2b80d0a9-7767-4f05-9037-719583d95b5c','2024-08-31 20:47:11.587 +00:00','2024-08-31 20:47:11.587 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4f4d3079f52c4d8da40d8e90c6c538cc$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Rajesh
Executing (f1ae081b-416a-4629-afb6-8b67feb844a4): START TRANSACTION;
Executing (9b84dd74-879a-4286-86d0-6edcce7c7c29): COMMIT;
Executing (f7985068-83b7-4fc4-beb7-2d522afbd53e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7b4d952741ef4bf08179d49fc35c190c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Virtual Interactions - Needs and Benefits','2020-11-04 10:07:10.000 +00:00','eae4b6b2-f9e0-4738-9d94-c9345173c4cd','2024-08-31 20:47:11.590 +00:00','2024-08-31 20:47:11.590 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7b4d952741ef4bf08179d49fc35c190c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Om prakash singh
Executing (e514e2dd-73b1-495e-bd46-2f2ad9cc7040): START TRANSACTION;
Processed user: Hemant
Executing (bff2a92d-b8bf-42c2-aa70-dea08886b792): START TRANSACTION;
Executing (f1ae081b-416a-4629-afb6-8b67feb844a4): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '15834b56-cfac-4d93-ba91-1dcf7785ad19' AND "UserTopic"."name" = 'CBP Orientation' AND "UserTopic"."issuedAt" = '2020-08-25 06:11:13.000 +00:00' LIMIT 1;
Executing (a3497a4f-ebb6-4167-8043-cfb238ce5d9a): COMMIT;
Executing (bff2a92d-b8bf-42c2-aa70-dea08886b792): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9c70412d-ebdd-432a-a17a-6c493577ff7d' AND "UserTopic"."name" = 'Post-Harvest Management and Value Addition in Spice Crops.' AND "UserTopic"."issuedAt" = '2021-02-24 10:53:59.000 +00:00' LIMIT 1;
Executing (f1ae081b-416a-4629-afb6-8b67feb844a4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5713616eaa234ab6ae1a32f7bfabe324$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'CBP Orientation','2020-08-25 06:11:13.000 +00:00','15834b56-cfac-4d93-ba91-1dcf7785ad19','2024-08-31 20:47:11.595 +00:00','2024-08-31 20:47:11.595 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5713616eaa234ab6ae1a32f7bfabe324$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e514e2dd-73b1-495e-bd46-2f2ad9cc7040): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'efd178d2-ffe6-4fdf-90ac-0df881271fb4' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-02-16 06:43:50.000 +00:00' LIMIT 1;
Executing (f7985068-83b7-4fc4-beb7-2d522afbd53e): COMMIT;
Executing (bff2a92d-b8bf-42c2-aa70-dea08886b792): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_55522b2f2faf4b9a87bf9a12d33de1d1$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Post-Harvest Management and Value Addition in Spice Crops.','2021-02-24 10:53:59.000 +00:00','9c70412d-ebdd-432a-a17a-6c493577ff7d','2024-08-31 20:47:11.599 +00:00','2024-08-31 20:47:11.599 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_55522b2f2faf4b9a87bf9a12d33de1d1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f1ae081b-416a-4629-afb6-8b67feb844a4): COMMIT;
Executing (e514e2dd-73b1-495e-bd46-2f2ad9cc7040): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f0efc0e2576b4d27af7a2ebedc948186$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-02-16 06:43:50.000 +00:00','efd178d2-ffe6-4fdf-90ac-0df881271fb4','2024-08-31 20:47:11.602 +00:00','2024-08-31 20:47:11.602 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f0efc0e2576b4d27af7a2ebedc948186$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA DEMO english 2021-04-29T15:03:41.000+0000
Executing (c2844520-8a33-40b6-856c-9a18ee7f70fc): START TRANSACTION;
Executing (bff2a92d-b8bf-42c2-aa70-dea08886b792): COMMIT;
topicName Virtual Interactions - Best Practices - Smitha Murthy 2020-10-14T06:59:29.000+0000
Executing (590a518c-0316-49be-b52a-ce76ba857f93): START TRANSACTION;
Executing (c2844520-8a33-40b6-856c-9a18ee7f70fc): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8ec3b98a-9b06-40e1-9029-f3541fe9a640' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-02-16 06:40:15.000 +00:00' LIMIT 1;
topicName PDA Demo Hindi 2020-11-23T05:57:06.000+0000
Executing (5f17e18b-bae3-4650-b395-8b0d9fd3f3d2): START TRANSACTION;
Processed user: Chaudhari twinkle prabhudas 
Executing (d4d7ea80-1d6d-40d7-a3be-378efa11df64): START TRANSACTION;
Executing (590a518c-0316-49be-b52a-ce76ba857f93): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '86f32410-0d64-4345-9030-6d3533166fce' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 07:23:49.000 +00:00' LIMIT 1;
Executing (c2844520-8a33-40b6-856c-9a18ee7f70fc): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1d695f891b04450f8022a4744ec82608$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-02-16 06:40:15.000 +00:00','8ec3b98a-9b06-40e1-9029-f3541fe9a640','2024-08-31 20:47:11.611 +00:00','2024-08-31 20:47:11.611 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1d695f891b04450f8022a4744ec82608$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5f17e18b-bae3-4650-b395-8b0d9fd3f3d2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '0fcdf556-7144-4bdf-a6b6-005b50b00f14' AND "UserTopic"."name" = 'Image composition and layouts LL3' AND "UserTopic"."issuedAt" = '2022-03-29 07:34:59.000 +00:00' LIMIT 1;
Executing (e514e2dd-73b1-495e-bd46-2f2ad9cc7040): COMMIT;
Executing (d4d7ea80-1d6d-40d7-a3be-378efa11df64): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f571026c-dea6-4292-88a3-d71ffa3296d7' AND "UserTopic"."name" = 'Demonstration of PDA - ICDS Supervisors Training' AND "UserTopic"."issuedAt" = '2021-06-09 10:14:35.000 +00:00' LIMIT 1;
Executing (590a518c-0316-49be-b52a-ce76ba857f93): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8e7c29fd787f445c811cc35ac890cad6$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 07:23:49.000 +00:00','86f32410-0d64-4345-9030-6d3533166fce','2024-08-31 20:47:11.616 +00:00','2024-08-31 20:47:11.616 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8e7c29fd787f445c811cc35ac890cad6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c2844520-8a33-40b6-856c-9a18ee7f70fc): COMMIT;
Executing (5f17e18b-bae3-4650-b395-8b0d9fd3f3d2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_df3d206a96f74406af73a8aaa81e7bf1$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Image composition and layouts LL3','2022-03-29 07:34:59.000 +00:00','0fcdf556-7144-4bdf-a6b6-005b50b00f14','2024-08-31 20:47:11.618 +00:00','2024-08-31 20:47:11.618 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_df3d206a96f74406af73a8aaa81e7bf1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d4d7ea80-1d6d-40d7-a3be-378efa11df64): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9bb202a169654dd0af2373373d2dfa88$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Demonstration of PDA - ICDS Supervisors Training','2021-06-09 10:14:35.000 +00:00','f571026c-dea6-4292-88a3-d71ffa3296d7','2024-08-31 20:47:11.619 +00:00','2024-08-31 20:47:11.619 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9bb202a169654dd0af2373373d2dfa88$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (590a518c-0316-49be-b52a-ce76ba857f93): COMMIT;
topicName Concepts and development of Base map,Landuse map and Geo-morphology maps 2021-03-06T10:31:00.000+0000
Executing (ab0e6aba-16c1-497f-8294-418dacfab555): START TRANSACTION;
topicName Concepts and development of Base map,Landuse map and Geo-morphology maps 2021-03-06T10:31:26.000+0000
Executing (9a9d0c30-012b-498d-ace4-090a542bf50e): START TRANSACTION;
Executing (d4d7ea80-1d6d-40d7-a3be-378efa11df64): COMMIT;
Processed user: Nilamchaudhari
Executing (74a9205c-717f-41a1-b00c-126e96f23050): START TRANSACTION;
Executing (ab0e6aba-16c1-497f-8294-418dacfab555): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e51170d0-7e0f-4b6d-b7de-e0aef621b2a5' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2020-08-19 09:39:58.000 +00:00' LIMIT 1;
Executing (5f17e18b-bae3-4650-b395-8b0d9fd3f3d2): COMMIT;
Processed user:  Sunitha Gunda 
Executing (075f2cfb-ada0-4f14-9142-fa1ac5cbb939): START TRANSACTION;
Executing (74a9205c-717f-41a1-b00c-126e96f23050): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '399e4133-e3e8-463c-b885-6fb0ca8f2257' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM' AND "UserTopic"."issuedAt" = '2021-08-14 06:58:06.000 +00:00' LIMIT 1;
Executing (ab0e6aba-16c1-497f-8294-418dacfab555): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a2dcd2d99e3b4f56b1527db8d2a21f30$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2020-08-19 09:39:58.000 +00:00','e51170d0-7e0f-4b6d-b7de-e0aef621b2a5','2024-08-31 20:47:11.628 +00:00','2024-08-31 20:47:11.628 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a2dcd2d99e3b4f56b1527db8d2a21f30$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9a9d0c30-012b-498d-ace4-090a542bf50e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '805f8115-7fc6-481c-ae59-9a635ed92038' AND "UserTopic"."name" = 'Introduction to Learning Objectives' AND "UserTopic"."issuedAt" = '2022-02-22 07:22:43.000 +00:00' LIMIT 1;
Executing (075f2cfb-ada0-4f14-9142-fa1ac5cbb939): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '7d56f878-01cb-4e2d-8001-8d1308260ed2' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:46:12.000 +00:00' LIMIT 1;
Executing (74a9205c-717f-41a1-b00c-126e96f23050): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2c0eacdc87ba44059ed1c30ca5b349a6$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM','2021-08-14 06:58:06.000 +00:00','399e4133-e3e8-463c-b885-6fb0ca8f2257','2024-08-31 20:47:11.631 +00:00','2024-08-31 20:47:11.631 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2c0eacdc87ba44059ed1c30ca5b349a6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Taking good photos and making posters 2022-04-05T07:34:38.000+0000
Executing (e7b97776-afb6-4535-a2b6-aeee9fcc92b4): START TRANSACTION;
Executing (075f2cfb-ada0-4f14-9142-fa1ac5cbb939): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_297b73c9c6034e6f9f396c53ffe6085a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:46:12.000 +00:00','7d56f878-01cb-4e2d-8001-8d1308260ed2','2024-08-31 20:47:11.632 +00:00','2024-08-31 20:47:11.632 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_297b73c9c6034e6f9f396c53ffe6085a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ab0e6aba-16c1-497f-8294-418dacfab555): COMMIT;
Executing (9a9d0c30-012b-498d-ace4-090a542bf50e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d165f1305d0e4a35bf70ef9eba2b5dc8$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Learning Objectives','2022-02-22 07:22:43.000 +00:00','805f8115-7fc6-481c-ae59-9a635ed92038','2024-08-31 20:47:11.634 +00:00','2024-08-31 20:47:11.634 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d165f1305d0e4a35bf70ef9eba2b5dc8$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (075f2cfb-ada0-4f14-9142-fa1ac5cbb939): COMMIT;
topicName Hub Roles for Virtual Interactions 2020-12-10T05:58:23.000+0000
Executing (995278a9-ed79-4607-8846-a4f07fc9c788): START TRANSACTION;
Executing (e7b97776-afb6-4535-a2b6-aeee9fcc92b4): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2854f4ff-cf55-4f19-b9a6-f61947bbd907' AND "UserTopic"."name" = 'Introduction to Learning Objectives' AND "UserTopic"."issuedAt" = '2022-02-22 07:21:52.000 +00:00' LIMIT 1;
Executing (74a9205c-717f-41a1-b00c-126e96f23050): COMMIT;
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T06:56:09.000+0000
Executing (79479167-a58c-4ccd-b128-c769674bacd2): START TRANSACTION;
Executing (995278a9-ed79-4607-8846-a4f07fc9c788): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'bd52bd24-d067-42c5-951d-7fbddef90410' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 06:57:23.000 +00:00' LIMIT 1;
Executing (e7b97776-afb6-4535-a2b6-aeee9fcc92b4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5fd023bc6aba41efba18294d50d6cfa3$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Learning Objectives','2022-02-22 07:21:52.000 +00:00','2854f4ff-cf55-4f19-b9a6-f61947bbd907','2024-08-31 20:47:11.639 +00:00','2024-08-31 20:47:11.639 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5fd023bc6aba41efba18294d50d6cfa3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9a9d0c30-012b-498d-ace4-090a542bf50e): COMMIT;
Executing (79479167-a58c-4ccd-b128-c769674bacd2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '94409f12-5d4a-4efa-b825-2dc5a49051ef' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:46:23.000 +00:00' LIMIT 1;
Executing (995278a9-ed79-4607-8846-a4f07fc9c788): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_259438486b3945f88cb38edbf39eff4a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 06:57:23.000 +00:00','bd52bd24-d067-42c5-951d-7fbddef90410','2024-08-31 20:47:11.643 +00:00','2024-08-31 20:47:11.643 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_259438486b3945f88cb38edbf39eff4a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Kirti gor
Executing (4433dee4-dbb6-403c-98ee-d9201f8f9564): START TRANSACTION;
Executing (79479167-a58c-4ccd-b128-c769674bacd2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_847a9494dbc54608a196cfa734e1c432$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:46:23.000 +00:00','94409f12-5d4a-4efa-b825-2dc5a49051ef','2024-08-31 20:47:11.646 +00:00','2024-08-31 20:47:11.646 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_847a9494dbc54608a196cfa734e1c432$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e7b97776-afb6-4535-a2b6-aeee9fcc92b4): COMMIT;
topicName Introduction to Process of planning a lesson flow 2022-03-02T06:57:01.000+0000
Executing (92ecb224-221c-4815-a08b-e956b0d59932): START TRANSACTION;
Executing (79479167-a58c-4ccd-b128-c769674bacd2): COMMIT;
topicName Introduction to Process of planning a lesson flow 2022-03-02T06:56:48.000+0000
Executing (3a8b1c07-f5da-43b6-8621-24c0c5a62437): START TRANSACTION;
Executing (995278a9-ed79-4607-8846-a4f07fc9c788): COMMIT;
Executing (4433dee4-dbb6-403c-98ee-d9201f8f9564): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b2af58c6-41d9-4a76-80c1-203456c861c2' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:46:45.000 +00:00' LIMIT 1;
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T07:00:04.000+0000
Executing (bb2eff60-489e-4afe-b0b3-afedd5adfc36): START TRANSACTION;
Executing (3a8b1c07-f5da-43b6-8621-24c0c5a62437): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '97c83f6a-cc4b-4a2d-9749-2d6784f02c21' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-01-30 09:07:07.000 +00:00' LIMIT 1;
Processed user: Patel mayur rohitabhai
Executing (30d877c8-33c0-4a26-9466-c83ca9b933da): START TRANSACTION;
Executing (92ecb224-221c-4815-a08b-e956b0d59932): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '04d9d78f-9bbe-4cc9-85b2-d9381835154c' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:46:09.000 +00:00' LIMIT 1;
Executing (bb2eff60-489e-4afe-b0b3-afedd5adfc36): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9028cbac-2720-4a86-a3c4-44b61cc48eb5' AND "UserTopic"."name" = 'PDA Demo for  Prasari and BRLF' AND "UserTopic"."issuedAt" = '2020-10-01 05:58:31.000 +00:00' LIMIT 1;
Executing (3a8b1c07-f5da-43b6-8621-24c0c5a62437): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_af267d7bcb424d29a9888674c3d4be7e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-01-30 09:07:07.000 +00:00','97c83f6a-cc4b-4a2d-9749-2d6784f02c21','2024-08-31 20:47:11.655 +00:00','2024-08-31 20:47:11.655 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_af267d7bcb424d29a9888674c3d4be7e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (30d877c8-33c0-4a26-9466-c83ca9b933da): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '75e35cf1-3a59-4d8a-80de-f594a7b3c086' AND "UserTopic"."name" = 'PDA Demo' AND "UserTopic"."issuedAt" = '2021-07-13 05:16:07.000 +00:00' LIMIT 1;
Executing (4433dee4-dbb6-403c-98ee-d9201f8f9564): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_66bd416967404edeb5169fb80a476382$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:46:45.000 +00:00','b2af58c6-41d9-4a76-80c1-203456c861c2','2024-08-31 20:47:11.657 +00:00','2024-08-31 20:47:11.657 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_66bd416967404edeb5169fb80a476382$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bb2eff60-489e-4afe-b0b3-afedd5adfc36): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_43ee92d6e8bf482388eed8c3e931d4a7$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo for  Prasari and BRLF','2020-10-01 05:58:31.000 +00:00','9028cbac-2720-4a86-a3c4-44b61cc48eb5','2024-08-31 20:47:11.659 +00:00','2024-08-31 20:47:11.659 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_43ee92d6e8bf482388eed8c3e931d4a7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3a8b1c07-f5da-43b6-8621-24c0c5a62437): COMMIT;
Executing (30d877c8-33c0-4a26-9466-c83ca9b933da): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e5c44a97356f4def8cada611fff99153$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo','2021-07-13 05:16:07.000 +00:00','75e35cf1-3a59-4d8a-80de-f594a7b3c086','2024-08-31 20:47:11.660 +00:00','2024-08-31 20:47:11.660 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e5c44a97356f4def8cada611fff99153$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (92ecb224-221c-4815-a08b-e956b0d59932): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5e3bb6a0abaa479aaba0d2c82ac6e56b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:46:09.000 +00:00','04d9d78f-9bbe-4cc9-85b2-d9381835154c','2024-08-31 20:47:11.661 +00:00','2024-08-31 20:47:11.661 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5e3bb6a0abaa479aaba0d2c82ac6e56b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bb2eff60-489e-4afe-b0b3-afedd5adfc36): COMMIT;
topicName Capacity building of Jaldoots on MGNREGA schemes provisions 2021-01-11T07:40:08.000+0000
Executing (cfd97677-63f6-4865-b62d-416136c32d7e): START TRANSACTION;
Executing (4433dee4-dbb6-403c-98ee-d9201f8f9564): COMMIT;
Processed user: Rajdeep Sarkar 
Executing (a956f790-b9fa-480a-bbc6-e4d455404196): START TRANSACTION;
Executing (cfd97677-63f6-4865-b62d-416136c32d7e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8d96ee1c-383e-4573-84c2-5c4c5cb73b82' AND "UserTopic"."name" = 'CBP Orientation' AND "UserTopic"."issuedAt" = '2020-10-15 06:19:57.000 +00:00' LIMIT 1;
Executing (30d877c8-33c0-4a26-9466-c83ca9b933da): COMMIT;
Executing (92ecb224-221c-4815-a08b-e956b0d59932): COMMIT;
Executing (a956f790-b9fa-480a-bbc6-e4d455404196): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '7a99e279-a9dd-48ff-9424-a7c478b238b2' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2020-04-07 09:20:44.000 +00:00' LIMIT 1;
Executing (cfd97677-63f6-4865-b62d-416136c32d7e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_644651a8d8bb4d06b0b04a0957a1adcd$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'CBP Orientation','2020-10-15 06:19:57.000 +00:00','8d96ee1c-383e-4573-84c2-5c4c5cb73b82','2024-08-31 20:47:11.670 +00:00','2024-08-31 20:47:11.670 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_644651a8d8bb4d06b0b04a0957a1adcd$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Amit Wajpe
Executing (56095916-815e-490b-ae72-ed91fe6d7e2c): START TRANSACTION;
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T06:57:25.000+0000
Executing (478fceff-3419-45a1-b028-afab2789125e): START TRANSACTION;
Executing (a956f790-b9fa-480a-bbc6-e4d455404196): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3e5d36075d6b4351acf36fc49832699d$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2020-04-07 09:20:44.000 +00:00','7a99e279-a9dd-48ff-9424-a7c478b238b2','2024-08-31 20:47:11.674 +00:00','2024-08-31 20:47:11.674 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3e5d36075d6b4351acf36fc49832699d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cfd97677-63f6-4865-b62d-416136c32d7e): COMMIT;
Executing (56095916-815e-490b-ae72-ed91fe6d7e2c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '1074bfd7-300d-4a92-82b8-d8f2d53d569d' AND "UserTopic"."name" = 'Demonstration of PDA - ICDS Supervisors Training' AND "UserTopic"."issuedAt" = '2021-06-09 10:05:31.000 +00:00' LIMIT 1;
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T07:08:47.000+0000
Executing (44e1c227-9872-4ed0-946b-2bc6b3a4dea7): START TRANSACTION;
Executing (a956f790-b9fa-480a-bbc6-e4d455404196): COMMIT;
topicName PDA Demo 2020-11-20T05:39:11.000+0000
Executing (81bfb403-cf79-440f-9fe7-bda207e59996): START TRANSACTION;
Executing (56095916-815e-490b-ae72-ed91fe6d7e2c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a9b8c8ddc3264b74a4bc13e8a0374458$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Demonstration of PDA - ICDS Supervisors Training','2021-06-09 10:05:31.000 +00:00','1074bfd7-300d-4a92-82b8-d8f2d53d569d','2024-08-31 20:47:11.680 +00:00','2024-08-31 20:47:11.680 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a9b8c8ddc3264b74a4bc13e8a0374458$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (478fceff-3419-45a1-b028-afab2789125e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b791b39b-25d7-4e24-a280-9cd6d4870c90' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-02-16 06:40:32.000 +00:00' LIMIT 1;
topicName PDA - Trainer App 2020-04-07T10:41:14.000+0000
Executing (19ef2c80-9c8c-482b-9172-8f3d2c1ac85c): START TRANSACTION;
Executing (81bfb403-cf79-440f-9fe7-bda207e59996): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '48cb496f-d8ea-4a2d-ad8f-394c45a57566' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2020-04-07 09:24:52.000 +00:00' LIMIT 1;
Executing (56095916-815e-490b-ae72-ed91fe6d7e2c): COMMIT;
Executing (44e1c227-9872-4ed0-946b-2bc6b3a4dea7): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4d5ee2bb-8d8c-4e20-8c96-f0a6a0b41f29' AND "UserTopic"."name" = 'ಅಟಲ್ ಭೂಜಲ್ ಯೋಜನೆಯ ಅವಲೋಕನ' AND "UserTopic"."issuedAt" = '2021-05-25 11:26:55.000 +00:00' LIMIT 1;
Executing (19ef2c80-9c8c-482b-9172-8f3d2c1ac85c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'fe1b3f7e-975e-4751-9c35-c77fce2da98b' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM' AND "UserTopic"."issuedAt" = '2021-08-14 06:57:44.000 +00:00' LIMIT 1;
Executing (81bfb403-cf79-440f-9fe7-bda207e59996): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b6f728035c724f15a55a6b43e205fd63$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2020-04-07 09:24:52.000 +00:00','48cb496f-d8ea-4a2d-ad8f-394c45a57566','2024-08-31 20:47:11.689 +00:00','2024-08-31 20:47:11.689 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b6f728035c724f15a55a6b43e205fd63$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: PAREPALLI DANALAXMI
Executing (bfb5aa78-c874-4d6a-8f3f-fdf5807e2699): START TRANSACTION;
Executing (478fceff-3419-45a1-b028-afab2789125e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b1c922beb23e4988b1c1249e02b6c017$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-02-16 06:40:32.000 +00:00','b791b39b-25d7-4e24-a280-9cd6d4870c90','2024-08-31 20:47:11.691 +00:00','2024-08-31 20:47:11.691 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b1c922beb23e4988b1c1249e02b6c017$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (19ef2c80-9c8c-482b-9172-8f3d2c1ac85c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_190193efb1f0435e849249ff8515f36c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM','2021-08-14 06:57:44.000 +00:00','fe1b3f7e-975e-4751-9c35-c77fce2da98b','2024-08-31 20:47:11.692 +00:00','2024-08-31 20:47:11.692 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_190193efb1f0435e849249ff8515f36c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (81bfb403-cf79-440f-9fe7-bda207e59996): COMMIT;
Executing (bfb5aa78-c874-4d6a-8f3f-fdf5807e2699): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9ab90b6e-0934-4352-95de-1422b8c24f36' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:48:14.000 +00:00' LIMIT 1;
Executing (44e1c227-9872-4ed0-946b-2bc6b3a4dea7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9d86b6fc154a4d70bb97f9b1622e156e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'ಅಟಲ್ ಭೂಜಲ್ ಯೋಜನೆಯ ಅವಲೋಕನ','2021-05-25 11:26:55.000 +00:00','4d5ee2bb-8d8c-4e20-8c96-f0a6a0b41f29','2024-08-31 20:47:11.696 +00:00','2024-08-31 20:47:11.696 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9d86b6fc154a4d70bb97f9b1622e156e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (19ef2c80-9c8c-482b-9172-8f3d2c1ac85c): COMMIT;
topicName PDA - Trainer App 2020-04-07T10:41:16.000+0000
Executing (463cf9c4-53df-48a8-9f7d-8b216004c697): START TRANSACTION;
Executing (bfb5aa78-c874-4d6a-8f3f-fdf5807e2699): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_33f8b804de714964a9dfa0cfec91fa24$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:48:14.000 +00:00','9ab90b6e-0934-4352-95de-1422b8c24f36','2024-08-31 20:47:11.699 +00:00','2024-08-31 20:47:11.699 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_33f8b804de714964a9dfa0cfec91fa24$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (478fceff-3419-45a1-b028-afab2789125e): COMMIT;
Processed user: Vijaysinh
Executing (b0dc4478-3fb5-427e-9b29-2e2028e1b014): START TRANSACTION;
Executing (463cf9c4-53df-48a8-9f7d-8b216004c697): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6beec966-3a66-4621-9ff6-6fd5c20e8787' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2020-04-07 09:21:12.000 +00:00' LIMIT 1;
Executing (44e1c227-9872-4ed0-946b-2bc6b3a4dea7): COMMIT;
Executing (b0dc4478-3fb5-427e-9b29-2e2028e1b014): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '40a677ce-f0f1-424f-a63d-5cc7a42ce1d2' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM - II' AND "UserTopic"."issuedAt" = '2021-08-14 11:58:30.000 +00:00' LIMIT 1;
Executing (463cf9c4-53df-48a8-9f7d-8b216004c697): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_efc4533c04564381a9e465073aeeb852$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2020-04-07 09:21:12.000 +00:00','6beec966-3a66-4621-9ff6-6fd5c20e8787','2024-08-31 20:47:11.706 +00:00','2024-08-31 20:47:11.706 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_efc4533c04564381a9e465073aeeb852$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Concepts and development of Base map,Landuse map and Geo-morphology maps 2021-03-06T10:30:20.000+0000
Executing (99fc86d0-a204-40b3-9832-aaf47eca4afc): START TRANSACTION;
Executing (bfb5aa78-c874-4d6a-8f3f-fdf5807e2699): COMMIT;
Executing (b0dc4478-3fb5-427e-9b29-2e2028e1b014): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_85ce8fbe429a4932bc23d47630cb96e4$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM - II','2021-08-14 11:58:30.000 +00:00','40a677ce-f0f1-424f-a63d-5cc7a42ce1d2','2024-08-31 20:47:11.708 +00:00','2024-08-31 20:47:11.708 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_85ce8fbe429a4932bc23d47630cb96e4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (99fc86d0-a204-40b3-9832-aaf47eca4afc): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '578969e2-f544-4c86-8856-accfead4ce68' AND "UserTopic"."name" = 'Post-Harvest Management and Value Addition in Spice Crops.' AND "UserTopic"."issuedAt" = '2021-02-24 10:53:59.000 +00:00' LIMIT 1;
Processed user: Hema Prasanna
Executing (88d86896-c2f8-4250-80ec-d18e98773c71): START TRANSACTION;
Executing (b0dc4478-3fb5-427e-9b29-2e2028e1b014): COMMIT;
Executing (99fc86d0-a204-40b3-9832-aaf47eca4afc): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_413712e1394242df9bc4d5491208ca29$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Post-Harvest Management and Value Addition in Spice Crops.','2021-02-24 10:53:59.000 +00:00','578969e2-f544-4c86-8856-accfead4ce68','2024-08-31 20:47:11.713 +00:00','2024-08-31 20:47:11.713 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_413712e1394242df9bc4d5491208ca29$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (463cf9c4-53df-48a8-9f7d-8b216004c697): COMMIT;
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T06:56:20.000+0000
Executing (52442e4f-8959-4787-9994-dbc5081baca3): START TRANSACTION;
Processed user: Valji punsi gadhavi
Executing (9f5557cc-4789-4a32-8a70-124ba6538117): START TRANSACTION;
Executing (99fc86d0-a204-40b3-9832-aaf47eca4afc): COMMIT;
topicName PDA - Trainer App 2020-04-07T10:41:12.000+0000
Executing (f94f1f2f-6510-4395-97e0-2784daa6b157): START TRANSACTION;
Executing (52442e4f-8959-4787-9994-dbc5081baca3): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2d88780e-c21b-45f2-a2c5-62e6e96784de' AND "UserTopic"."name" = 'Post-Harvest Management and Value Addition in Spice Crops.' AND "UserTopic"."issuedAt" = '2021-02-24 10:56:00.000 +00:00' LIMIT 1;
Executing (88d86896-c2f8-4250-80ec-d18e98773c71): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'cc63685b-cf6c-467d-a178-e1ca40b8c0c8' AND "UserTopic"."name" = 'Post-Harvest Management and Value Addition in Spice Crops.' AND "UserTopic"."issuedAt" = '2021-02-24 10:53:59.000 +00:00' LIMIT 1;
Executing (9f5557cc-4789-4a32-8a70-124ba6538117): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'a592f325-0db2-4c28-a340-17a97748cc7f' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:46:10.000 +00:00' LIMIT 1;
Processed user: Dantani urmila giradhar bhai 
Executing (f2c800f3-d142-4f77-b4d0-291b5f42008b): START TRANSACTION;
Executing (f94f1f2f-6510-4395-97e0-2784daa6b157): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'aafc15ca-107f-4826-90cf-1552e978fb55' AND "UserTopic"."name" = 'Demonstration of PDA - ICDS Supervisors Training' AND "UserTopic"."issuedAt" = '2021-06-09 10:22:24.000 +00:00' LIMIT 1;
Executing (52442e4f-8959-4787-9994-dbc5081baca3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_042f7681e9864f2f86b9b8b192b65ca7$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Post-Harvest Management and Value Addition in Spice Crops.','2021-02-24 10:56:00.000 +00:00','2d88780e-c21b-45f2-a2c5-62e6e96784de','2024-08-31 20:47:11.726 +00:00','2024-08-31 20:47:11.726 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_042f7681e9864f2f86b9b8b192b65ca7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9f5557cc-4789-4a32-8a70-124ba6538117): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_109af8a1e82d48149aaeccc568c1ed91$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:46:10.000 +00:00','a592f325-0db2-4c28-a340-17a97748cc7f','2024-08-31 20:47:11.728 +00:00','2024-08-31 20:47:11.728 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_109af8a1e82d48149aaeccc568c1ed91$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f2c800f3-d142-4f77-b4d0-291b5f42008b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '94dbfffa-754e-4b5e-acf9-ba0ca73b4ea1' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM - III' AND "UserTopic"."issuedAt" = '2021-08-18 11:27:36.000 +00:00' LIMIT 1;
Executing (f94f1f2f-6510-4395-97e0-2784daa6b157): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_52866ba00282439cacd94c0850873484$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Demonstration of PDA - ICDS Supervisors Training','2021-06-09 10:22:24.000 +00:00','aafc15ca-107f-4826-90cf-1552e978fb55','2024-08-31 20:47:11.731 +00:00','2024-08-31 20:47:11.731 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_52866ba00282439cacd94c0850873484$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (88d86896-c2f8-4250-80ec-d18e98773c71): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4e400cfef8c7406481987f6cf32155e5$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Post-Harvest Management and Value Addition in Spice Crops.','2021-02-24 10:53:59.000 +00:00','cc63685b-cf6c-467d-a178-e1ca40b8c0c8','2024-08-31 20:47:11.733 +00:00','2024-08-31 20:47:11.733 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4e400cfef8c7406481987f6cf32155e5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9f5557cc-4789-4a32-8a70-124ba6538117): COMMIT;
Executing (f2c800f3-d142-4f77-b4d0-291b5f42008b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b7f93a625e494988bb6742093d24c940$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM - III','2021-08-18 11:27:36.000 +00:00','94dbfffa-754e-4b5e-acf9-ba0ca73b4ea1','2024-08-31 20:47:11.735 +00:00','2024-08-31 20:47:11.735 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b7f93a625e494988bb6742093d24c940$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f94f1f2f-6510-4395-97e0-2784daa6b157): COMMIT;
Executing (52442e4f-8959-4787-9994-dbc5081baca3): COMMIT;
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T07:00:32.000+0000
Executing (9ced7f53-b259-4b7a-9c60-4dd171f271b4): START TRANSACTION;
Processed user: S Saritha
Executing (7389b1ea-6927-413d-b00c-1997dab08e5a): START TRANSACTION;
Executing (88d86896-c2f8-4250-80ec-d18e98773c71): COMMIT;
Executing (9ced7f53-b259-4b7a-9c60-4dd171f271b4): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'ae945fe6-9a36-4989-8485-0684b9deddec' AND "UserTopic"."name" = 'Introduction to Simplified Functional Grid Format' AND "UserTopic"."issuedAt" = '2022-01-11 07:21:22.000 +00:00' LIMIT 1;
Executing (7389b1ea-6927-413d-b00c-1997dab08e5a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'dac7dcec-ffe3-4d2a-84be-db90e490c32e' AND "UserTopic"."name" = 'PDA Demo' AND "UserTopic"."issuedAt" = '2021-07-13 05:18:27.000 +00:00' LIMIT 1;
Executing (f2c800f3-d142-4f77-b4d0-291b5f42008b): COMMIT;
Processed user: Chaudhri grishma maheshbhai
Executing (916a021a-48af-4807-8c84-f31e269ca977): START TRANSACTION;
Executing (9ced7f53-b259-4b7a-9c60-4dd171f271b4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a0157f4e6b104fa89cb5aa714e5c493b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Simplified Functional Grid Format','2022-01-11 07:21:22.000 +00:00','ae945fe6-9a36-4989-8485-0684b9deddec','2024-08-31 20:47:11.742 +00:00','2024-08-31 20:47:11.742 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a0157f4e6b104fa89cb5aa714e5c493b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7389b1ea-6927-413d-b00c-1997dab08e5a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_115487dddde44d33972cb718e11436f7$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo','2021-07-13 05:18:27.000 +00:00','dac7dcec-ffe3-4d2a-84be-db90e490c32e','2024-08-31 20:47:11.743 +00:00','2024-08-31 20:47:11.743 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_115487dddde44d33972cb718e11436f7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Data collection and Monitoring 2021-01-06T08:02:26.000+0000
Executing (8331c702-02f5-4d27-a6f7-8d55ff61edd2): START TRANSACTION;
Processed user: Patel Asu Shailesh kumar
Executing (2c3f17d4-35d1-43c3-8864-f43904004dea): START TRANSACTION;
Executing (9ced7f53-b259-4b7a-9c60-4dd171f271b4): COMMIT;
Executing (7389b1ea-6927-413d-b00c-1997dab08e5a): COMMIT;
Executing (8331c702-02f5-4d27-a6f7-8d55ff61edd2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f2942501-3755-4fc6-bb7e-3ba77dc15ff4' AND "UserTopic"."name" = 'PDA Hands on' AND "UserTopic"."issuedAt" = '2021-01-02 06:57:27.000 +00:00' LIMIT 1;
Executing (916a021a-48af-4807-8c84-f31e269ca977): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c10b2749-563d-4edd-807d-0f68a8e37231' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 06:56:37.000 +00:00' LIMIT 1;
topicName Feedback and next steps 2022-01-25T07:25:37.000+0000
Executing (4529ed00-aa0a-4de6-a5f4-19466fbce6fe): START TRANSACTION;
Processed user: Arvind Parmar
Executing (4546bd8d-ccd3-42df-9bf3-9c11e8ab2636): START TRANSACTION;
Executing (8331c702-02f5-4d27-a6f7-8d55ff61edd2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a72ad87b8784489dabec570b469fb535$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Hands on','2021-01-02 06:57:27.000 +00:00','f2942501-3755-4fc6-bb7e-3ba77dc15ff4','2024-08-31 20:47:11.751 +00:00','2024-08-31 20:47:11.751 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a72ad87b8784489dabec570b469fb535$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2c3f17d4-35d1-43c3-8864-f43904004dea): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'bf4d2b2b-645e-464d-a4c2-3d3bf682a1d6' AND "UserTopic"."name" = 'Concepts and development of Base map,Landuse map and Geo-morphology maps' AND "UserTopic"."issuedAt" = '2021-03-06 10:31:10.000 +00:00' LIMIT 1;
Executing (4529ed00-aa0a-4de6-a5f4-19466fbce6fe): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'beda4a08-6aa1-4acf-a210-bcaa529d520f' AND "UserTopic"."name" = 'PDA Demo' AND "UserTopic"."issuedAt" = '2021-02-16 15:03:58.000 +00:00' LIMIT 1;
Executing (4546bd8d-ccd3-42df-9bf3-9c11e8ab2636): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6a172e25-60cf-4796-9b03-d93e27e85946' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2019-12-26 12:05:08.000 +00:00' LIMIT 1;
Executing (8331c702-02f5-4d27-a6f7-8d55ff61edd2): COMMIT;
Executing (916a021a-48af-4807-8c84-f31e269ca977): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a1e512e7c73a40c0a8dcfb352474b01e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 06:56:37.000 +00:00','c10b2749-563d-4edd-807d-0f68a8e37231','2024-08-31 20:47:11.757 +00:00','2024-08-31 20:47:11.757 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a1e512e7c73a40c0a8dcfb352474b01e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4529ed00-aa0a-4de6-a5f4-19466fbce6fe): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0174c4e06a334ad2ab38a67a20f2dd57$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo','2021-02-16 15:03:58.000 +00:00','beda4a08-6aa1-4acf-a210-bcaa529d520f','2024-08-31 20:47:11.759 +00:00','2024-08-31 20:47:11.759 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0174c4e06a334ad2ab38a67a20f2dd57$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4546bd8d-ccd3-42df-9bf3-9c11e8ab2636): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d6fef362ca644f40be59af81e5e335f6$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2019-12-26 12:05:08.000 +00:00','6a172e25-60cf-4796-9b03-d93e27e85946','2024-08-31 20:47:11.760 +00:00','2024-08-31 20:47:11.760 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d6fef362ca644f40be59af81e5e335f6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Dhanu deshmukh
Executing (338dcc0a-a58f-40e7-8292-761487524e3f): START TRANSACTION;
Executing (2c3f17d4-35d1-43c3-8864-f43904004dea): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_682b0d5af3c54403a950eca22af55a1d$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Concepts and development of Base map,Landuse map and Geo-morphology maps','2021-03-06 10:31:10.000 +00:00','bf4d2b2b-645e-464d-a4c2-3d3bf682a1d6','2024-08-31 20:47:11.763 +00:00','2024-08-31 20:47:11.763 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_682b0d5af3c54403a950eca22af55a1d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4529ed00-aa0a-4de6-a5f4-19466fbce6fe): COMMIT;
Executing (4546bd8d-ccd3-42df-9bf3-9c11e8ab2636): COMMIT;
Executing (338dcc0a-a58f-40e7-8292-761487524e3f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c14ea2c7-bd90-4f00-bfe0-2290c07b9219' AND "UserTopic"."name" = 'Test run for Assisted Scanning' AND "UserTopic"."issuedAt" = '2020-08-06 11:35:49.000 +00:00' LIMIT 1;
Executing (916a021a-48af-4807-8c84-f31e269ca977): COMMIT;
Processed user: Santosh Rao 
Executing (06ae43f7-f513-4104-a7d2-69d666a8e664): START TRANSACTION;
topicName PDA - Trainer App 2020-01-08T10:03:59+0000
Executing (70dcad4f-b9b5-41bd-b09d-31593d8d1e98): START TRANSACTION;
Executing (338dcc0a-a58f-40e7-8292-761487524e3f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1aa305e531d740c398c96584ad2cdb58$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Test run for Assisted Scanning','2020-08-06 11:35:49.000 +00:00','c14ea2c7-bd90-4f00-bfe0-2290c07b9219','2024-08-31 20:47:11.770 +00:00','2024-08-31 20:47:11.770 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1aa305e531d740c398c96584ad2cdb58$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2c3f17d4-35d1-43c3-8864-f43904004dea): COMMIT;
Executing (06ae43f7-f513-4104-a7d2-69d666a8e664): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '451170d0-83f8-4f99-9adf-db6380aa7c60' AND "UserTrainer"."name" = 'Thermodynamic treatment of Hard Water' AND "UserTrainer"."issueDate" = '2020-02-20 13:29:00.000 +00:00' LIMIT 1;
Executing (70dcad4f-b9b5-41bd-b09d-31593d8d1e98): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8e988141-44a5-4270-aef2-f61dcb0f9683' AND "UserTopic"."name" = 'Water Literacy Campaign' AND "UserTopic"."issuedAt" = '2021-01-13 05:38:17.000 +00:00' LIMIT 1;
Processed user: Jayeshkumar Premjiji Thakor
Executing (b5e2d553-ebc0-4a44-8cdb-54f0263aab65): START TRANSACTION;
Executing (06ae43f7-f513-4104-a7d2-69d666a8e664): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ce08af65b07e41759f1717a7fe1d0ff9$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Thermodynamic treatment of Hard Water','2020-02-20 13:29:00.000 +00:00','451170d0-83f8-4f99-9adf-db6380aa7c60','2024-08-31 20:47:11.777 +00:00','2024-08-31 20:47:11.777 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ce08af65b07e41759f1717a7fe1d0ff9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (70dcad4f-b9b5-41bd-b09d-31593d8d1e98): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d2f28f0370a748519fcfcaf1c93cc9f2$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Water Literacy Campaign','2021-01-13 05:38:17.000 +00:00','8e988141-44a5-4270-aef2-f61dcb0f9683','2024-08-31 20:47:11.779 +00:00','2024-08-31 20:47:11.779 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d2f28f0370a748519fcfcaf1c93cc9f2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Community Participation-Why 2021-04-09T06:47:46.000+0000
Executing (fba7b6f7-1e2b-43ea-8884-b770832d494c): START TRANSACTION;
Executing (338dcc0a-a58f-40e7-8292-761487524e3f): COMMIT;
Executing (06ae43f7-f513-4104-a7d2-69d666a8e664): COMMIT;
Executing (70dcad4f-b9b5-41bd-b09d-31593d8d1e98): COMMIT;
Executing (fba7b6f7-1e2b-43ea-8884-b770832d494c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b98b74e0-478d-4db1-805a-3e8daed1b58f' AND "UserTopic"."name" = 'ಅಟಲ್ ಭೂಜಲ್ ಯೋಜನೆಯ ಅವಲೋಕನ' AND "UserTopic"."issuedAt" = '2021-05-25 11:29:11.000 +00:00' LIMIT 1;
Executing (b5e2d553-ebc0-4a44-8cdb-54f0263aab65): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '01c4e8b7-6cb2-4f02-9f80-c4240868e4d1' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM - II' AND "UserTopic"."issuedAt" = '2021-08-14 11:58:32.000 +00:00' LIMIT 1;
Processed user: Balaji Vharkat
Executing (ee029f77-662b-4e32-8083-95efd827deb3): START TRANSACTION;
Processed user: Rahul vijay chavanke
Executing (fb5f4864-7f8c-4c9e-98a3-4fef7efa02ff): START TRANSACTION;
Executing (fba7b6f7-1e2b-43ea-8884-b770832d494c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_79129f602cfb4712862c50917c7d15e9$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'ಅಟಲ್ ಭೂಜಲ್ ಯೋಜನೆಯ ಅವಲೋಕನ','2021-05-25 11:29:11.000 +00:00','b98b74e0-478d-4db1-805a-3e8daed1b58f','2024-08-31 20:47:11.788 +00:00','2024-08-31 20:47:11.788 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_79129f602cfb4712862c50917c7d15e9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Bhargov Romdung
Executing (79221f27-824d-49b6-b5f7-18def3116ccb): START TRANSACTION;
Executing (ee029f77-662b-4e32-8083-95efd827deb3): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '54904a4f-f5ce-42a4-84fb-19b44b7a6b04' AND "UserTopic"."name" = 'ಅಂತರ್ಜಲ ಚೇತನ - ಮಾದರಿ ವಿಷಯ (Antarajala Chetana - Example Topic)' AND "UserTopic"."issuedAt" = '2021-09-02 11:05:54.000 +00:00' LIMIT 1;
Executing (fb5f4864-7f8c-4c9e-98a3-4fef7efa02ff): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'd17cf6d3-6234-4440-a34a-dfff233b2fef' AND "UserTopic"."name" = 'Post-Harvest Management and Value Addition in Spice Crops.' AND "UserTopic"."issuedAt" = '2021-02-24 10:29:01.000 +00:00' LIMIT 1;
Executing (b5e2d553-ebc0-4a44-8cdb-54f0263aab65): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e0c9523b54c9463484becd9f2524c0cb$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM - II','2021-08-14 11:58:32.000 +00:00','01c4e8b7-6cb2-4f02-9f80-c4240868e4d1','2024-08-31 20:47:11.792 +00:00','2024-08-31 20:47:11.792 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e0c9523b54c9463484becd9f2524c0cb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ee029f77-662b-4e32-8083-95efd827deb3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3d9dd72fbb7c4279b548580d067b9619$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'ಅಂತರ್ಜಲ ಚೇತನ - ಮಾದರಿ ವಿಷಯ (Antarajala Chetana - Example Topic)','2021-09-02 11:05:54.000 +00:00','54904a4f-f5ce-42a4-84fb-19b44b7a6b04','2024-08-31 20:47:11.793 +00:00','2024-08-31 20:47:11.793 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3d9dd72fbb7c4279b548580d067b9619$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (fb5f4864-7f8c-4c9e-98a3-4fef7efa02ff): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_33a67b45bf9f42648af827751ef09cd5$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Post-Harvest Management and Value Addition in Spice Crops.','2021-02-24 10:29:01.000 +00:00','d17cf6d3-6234-4440-a34a-dfff233b2fef','2024-08-31 20:47:11.794 +00:00','2024-08-31 20:47:11.794 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_33a67b45bf9f42648af827751ef09cd5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (79221f27-824d-49b6-b5f7-18def3116ccb): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c3f8949d-3600-455d-bbd0-0806a7f16ab6' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-02-16 06:40:35.000 +00:00' LIMIT 1;
Executing (fba7b6f7-1e2b-43ea-8884-b770832d494c): COMMIT;
Executing (ee029f77-662b-4e32-8083-95efd827deb3): COMMIT;
Executing (79221f27-824d-49b6-b5f7-18def3116ccb): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_73d0bc1e84664ce3b6df6fc5a56c2cdd$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-02-16 06:40:35.000 +00:00','c3f8949d-3600-455d-bbd0-0806a7f16ab6','2024-08-31 20:47:11.797 +00:00','2024-08-31 20:47:11.797 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_73d0bc1e84664ce3b6df6fc5a56c2cdd$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b5e2d553-ebc0-4a44-8cdb-54f0263aab65): COMMIT;
Processed user: Jagadish k s
Executing (063dd416-68b6-4b6e-992a-2cb9a6229b77): START TRANSACTION;
Executing (fb5f4864-7f8c-4c9e-98a3-4fef7efa02ff): COMMIT;
Processed user: Sharanya
Executing (71ff5d4f-bcfc-4559-aef0-d8b4736920a5): START TRANSACTION;
Executing (063dd416-68b6-4b6e-992a-2cb9a6229b77): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'ce251d08-52fe-4eee-a352-fb41a7503dc4' AND "UserTopic"."name" = 'Well Monitoring - Example' AND "UserTopic"."issuedAt" = '2022-06-16 09:26:24.000 +00:00' LIMIT 1;
Processed user: Patel kamleshbhai shankarbhai 
Executing (fa81210b-2328-409a-bed3-9afa4d2c2f23): START TRANSACTION;
Processed user: Jadeja narpatsinh
Executing (a4a6593e-6867-41e7-8441-5d38c8a5baed): START TRANSACTION;
Executing (79221f27-824d-49b6-b5f7-18def3116ccb): COMMIT;
Executing (063dd416-68b6-4b6e-992a-2cb9a6229b77): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d041ae817fe34ef38c78d0501c2bf8ec$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Well Monitoring - Example','2022-06-16 09:26:24.000 +00:00','ce251d08-52fe-4eee-a352-fb41a7503dc4','2024-08-31 20:47:11.803 +00:00','2024-08-31 20:47:11.803 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d041ae817fe34ef38c78d0501c2bf8ec$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (fa81210b-2328-409a-bed3-9afa4d2c2f23): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c5d35819-2105-4cef-8c0a-af367a875971' AND "UserTopic"."name" = 'CBP Orientation' AND "UserTopic"."issuedAt" = '2020-08-17 10:15:37.000 +00:00' LIMIT 1;
Executing (a4a6593e-6867-41e7-8441-5d38c8a5baed): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '387aedcd-c84e-409b-8067-b1d0e5444975' AND "UserTopic"."name" = 'PDA - Program App' AND "UserTopic"."issuedAt" = '2019-12-05 06:59:10.000 +00:00' LIMIT 1;
Executing (71ff5d4f-bcfc-4559-aef0-d8b4736920a5): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4dd30b8f-74fe-4c0a-a7aa-234f0a4cd6ac' AND "UserTopic"."name" = 'Well Monitoring - Example' AND "UserTopic"."issuedAt" = '2022-06-16 09:26:13.000 +00:00' LIMIT 1;
Executing (063dd416-68b6-4b6e-992a-2cb9a6229b77): COMMIT;
Executing (fa81210b-2328-409a-bed3-9afa4d2c2f23): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ff1a47a8c659459595902e7bc89558b0$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'CBP Orientation','2020-08-17 10:15:37.000 +00:00','c5d35819-2105-4cef-8c0a-af367a875971','2024-08-31 20:47:11.806 +00:00','2024-08-31 20:47:11.806 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ff1a47a8c659459595902e7bc89558b0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a4a6593e-6867-41e7-8441-5d38c8a5baed): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7f6004e746c24b6f88f002e3583c6f31$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Program App','2019-12-05 06:59:10.000 +00:00','387aedcd-c84e-409b-8067-b1d0e5444975','2024-08-31 20:47:11.807 +00:00','2024-08-31 20:47:11.807 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7f6004e746c24b6f88f002e3583c6f31$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Concepts and development of Base map,Landuse map and Geo-morphology maps 2021-03-06T10:31:38.000+0000
Executing (64fa63c5-9ae5-4c1e-a775-aded694c26e2): START TRANSACTION;
Processed user: Ravi Kumar Kasetty
Executing (2d0807fe-3c32-4842-898a-38a3d1b32380): START TRANSACTION;
Executing (71ff5d4f-bcfc-4559-aef0-d8b4736920a5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_973be5a104c64f2b87db77f26b49feb6$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Well Monitoring - Example','2022-06-16 09:26:13.000 +00:00','4dd30b8f-74fe-4c0a-a7aa-234f0a4cd6ac','2024-08-31 20:47:11.809 +00:00','2024-08-31 20:47:11.809 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_973be5a104c64f2b87db77f26b49feb6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2d0807fe-3c32-4842-898a-38a3d1b32380): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '1b150e3f-f854-4a66-9e73-3e8d856706a1' AND "UserTopic"."name" = 'CBP Orientation' AND "UserTopic"."issuedAt" = '2020-12-10 05:33:03.000 +00:00' LIMIT 1;
Executing (fa81210b-2328-409a-bed3-9afa4d2c2f23): COMMIT;
Executing (64fa63c5-9ae5-4c1e-a775-aded694c26e2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '950b76fc-6de2-4102-9af7-1df1b415726b' AND "UserTopic"."name" = 'Well Monitoring - Example' AND "UserTopic"."issuedAt" = '2022-06-16 09:26:40.000 +00:00' LIMIT 1;
Executing (a4a6593e-6867-41e7-8441-5d38c8a5baed): COMMIT;
Executing (2d0807fe-3c32-4842-898a-38a3d1b32380): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3f795ae35fb64a1889c4b8e4328cdfb0$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'CBP Orientation','2020-12-10 05:33:03.000 +00:00','1b150e3f-f854-4a66-9e73-3e8d856706a1','2024-08-31 20:47:11.813 +00:00','2024-08-31 20:47:11.813 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3f795ae35fb64a1889c4b8e4328cdfb0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Content Development | T1.01 | DG 2020-11-26T11:45:10.000+0000
Executing (6fef2bb0-e8b6-4fe6-8fc7-0d60c9bf2eb9): START TRANSACTION;
Executing (71ff5d4f-bcfc-4559-aef0-d8b4736920a5): COMMIT;
Executing (6fef2bb0-e8b6-4fe6-8fc7-0d60c9bf2eb9): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c0a06ec3-5563-40f7-a987-aea8fe29f08b' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM - III' AND "UserTopic"."issuedAt" = '2021-08-18 11:27:37.000 +00:00' LIMIT 1;
Executing (64fa63c5-9ae5-4c1e-a775-aded694c26e2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7a783afda22445c3909227713968d44f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Well Monitoring - Example','2022-06-16 09:26:40.000 +00:00','950b76fc-6de2-4102-9af7-1df1b415726b','2024-08-31 20:47:11.816 +00:00','2024-08-31 20:47:11.816 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7a783afda22445c3909227713968d44f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA - Trainer App 2019-12-05T07:26:32+0000
Executing (4050e827-cf01-4385-9a04-51c78da676c1): START TRANSACTION;
Executing (6fef2bb0-e8b6-4fe6-8fc7-0d60c9bf2eb9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b16362b806a64f2888d7af5a54f37a09$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM - III','2021-08-18 11:27:37.000 +00:00','c0a06ec3-5563-40f7-a987-aea8fe29f08b','2024-08-31 20:47:11.817 +00:00','2024-08-31 20:47:11.817 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b16362b806a64f2888d7af5a54f37a09$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Arun Aathreya
Executing (2b1ec672-e1d7-4307-9fde-5f0436ad57a8): START TRANSACTION;
Executing (2d0807fe-3c32-4842-898a-38a3d1b32380): COMMIT;
Executing (2b1ec672-e1d7-4307-9fde-5f0436ad57a8): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '64e5cd3d-c6f3-4cfa-9c0f-6116391e6b86' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM - II' AND "UserTopic"."issuedAt" = '2021-08-14 11:56:52.000 +00:00' LIMIT 1;
Executing (4050e827-cf01-4385-9a04-51c78da676c1): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '60c6a9c3-268e-4b5c-9939-d0efdcaa04cb' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM - III' AND "UserTopic"."issuedAt" = '2021-08-18 11:27:54.000 +00:00' LIMIT 1;
Executing (64fa63c5-9ae5-4c1e-a775-aded694c26e2): COMMIT;
Executing (2b1ec672-e1d7-4307-9fde-5f0436ad57a8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f09c63022772454b97f908c681e51c02$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM - II','2021-08-14 11:56:52.000 +00:00','64e5cd3d-c6f3-4cfa-9c0f-6116391e6b86','2024-08-31 20:47:11.821 +00:00','2024-08-31 20:47:11.821 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f09c63022772454b97f908c681e51c02$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4050e827-cf01-4385-9a04-51c78da676c1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f9951759a7714d288ee1f3adfbf75fa9$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM - III','2021-08-18 11:27:54.000 +00:00','60c6a9c3-268e-4b5c-9939-d0efdcaa04cb','2024-08-31 20:47:11.822 +00:00','2024-08-31 20:47:11.822 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f9951759a7714d288ee1f3adfbf75fa9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6fef2bb0-e8b6-4fe6-8fc7-0d60c9bf2eb9): COMMIT;
topicName Virtual Interactions - Needs and Benefits 2020-12-10T11:35:30.000+0000
Executing (d22ee751-cd56-46ed-9d21-c399053cbbc9): START TRANSACTION;
Executing (2b1ec672-e1d7-4307-9fde-5f0436ad57a8): COMMIT;
topicName Data collection and Analysis 2021-01-06T12:34:20.000+0000
Executing (556b3943-ef7b-4754-979e-c55a8ab75447): START TRANSACTION;
Processed user: Isha Dash 
Executing (534f9152-7727-4506-acda-13a25068ff7e): START TRANSACTION;
topicName Orientation on Abhy and PGWM 2021-08-14T07:14:18.000+0000
Executing (291086f3-56db-4107-946d-5bc97222501d): START TRANSACTION;
Executing (556b3943-ef7b-4754-979e-c55a8ab75447): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '971f2670-d929-4a00-a697-f5e19fa95fff' AND "UserTopic"."name" = 'CBP Orientation' AND "UserTopic"."issuedAt" = '2020-08-17 10:15:12.000 +00:00' LIMIT 1;
Executing (d22ee751-cd56-46ed-9d21-c399053cbbc9): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f5c71709-8bfc-4fe9-a633-559aeff445e6' AND "UserTopic"."name" = 'TOT of Bhujal Janakar' AND "UserTopic"."issuedAt" = '2021-02-05 07:24:14.000 +00:00' LIMIT 1;
Executing (4050e827-cf01-4385-9a04-51c78da676c1): COMMIT;
Executing (291086f3-56db-4107-946d-5bc97222501d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2adeac0d-3c9c-4429-9f7f-966c8169483d' AND "UserTopic"."name" = 'Introduction to mapping of content and learning needs requirements' AND "UserTopic"."issuedAt" = '2022-05-04 07:27:58.000 +00:00' LIMIT 1;
Executing (556b3943-ef7b-4754-979e-c55a8ab75447): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2cbdbbd8b7be42248131ecee78e4c3e4$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'CBP Orientation','2020-08-17 10:15:12.000 +00:00','971f2670-d929-4a00-a697-f5e19fa95fff','2024-08-31 20:47:11.828 +00:00','2024-08-31 20:47:11.828 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2cbdbbd8b7be42248131ecee78e4c3e4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d22ee751-cd56-46ed-9d21-c399053cbbc9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6e3818b4ed7e4c93922a80158b5898f0$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'TOT of Bhujal Janakar','2021-02-05 07:24:14.000 +00:00','f5c71709-8bfc-4fe9-a633-559aeff445e6','2024-08-31 20:47:11.829 +00:00','2024-08-31 20:47:11.829 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6e3818b4ed7e4c93922a80158b5898f0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (534f9152-7727-4506-acda-13a25068ff7e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c3806dc6-ac06-488b-8e75-88e2cae9c1a6' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM' AND "UserTopic"."issuedAt" = '2021-08-14 07:24:27.000 +00:00' LIMIT 1;
Executing (291086f3-56db-4107-946d-5bc97222501d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9c3136ffa01e4a13b5bb72a80faad35d$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to mapping of content and learning needs requirements','2022-05-04 07:27:58.000 +00:00','2adeac0d-3c9c-4429-9f7f-966c8169483d','2024-08-31 20:47:11.831 +00:00','2024-08-31 20:47:11.831 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9c3136ffa01e4a13b5bb72a80faad35d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName TOT of Bhujal Janakar 2021-02-05T07:24:00.000+0000
Executing (b5882881-5484-48cb-8546-4bddcf338d0d): START TRANSACTION;
Executing (556b3943-ef7b-4754-979e-c55a8ab75447): COMMIT;
Executing (534f9152-7727-4506-acda-13a25068ff7e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6242a7fcf519431e96611dc68c0ab7a3$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM','2021-08-14 07:24:27.000 +00:00','c3806dc6-ac06-488b-8e75-88e2cae9c1a6','2024-08-31 20:47:11.833 +00:00','2024-08-31 20:47:11.833 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6242a7fcf519431e96611dc68c0ab7a3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d22ee751-cd56-46ed-9d21-c399053cbbc9): COMMIT;
topicName Data collection and Monitoring 2021-01-06T07:52:36.000+0000
Executing (c2871124-5c0a-4769-852f-1949a67529be): START TRANSACTION;
Executing (b5882881-5484-48cb-8546-4bddcf338d0d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '95cc9688-64d4-4109-925d-47172ca52bbd' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 06:57:16.000 +00:00' LIMIT 1;
Executing (291086f3-56db-4107-946d-5bc97222501d): COMMIT;
Executing (c2871124-5c0a-4769-852f-1949a67529be): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b57134f1-23ce-48b9-bc6a-1e90a88d144f' AND "UserTopic"."name" = 'Understanding the Functional Grid' AND "UserTopic"."issuedAt" = '2022-04-26 07:03:11.000 +00:00' LIMIT 1;
Executing (b5882881-5484-48cb-8546-4bddcf338d0d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_88f455a0f2844d75a37f73dbacf3e71e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 06:57:16.000 +00:00','95cc9688-64d4-4109-925d-47172ca52bbd','2024-08-31 20:47:11.837 +00:00','2024-08-31 20:47:11.837 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_88f455a0f2844d75a37f73dbacf3e71e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Orientation on Abhy and PGWM 2021-08-14T07:16:17.000+0000
Executing (85e1f196-437c-4462-b45c-8ba490cff3b8): START TRANSACTION;
Executing (534f9152-7727-4506-acda-13a25068ff7e): COMMIT;
Executing (c2871124-5c0a-4769-852f-1949a67529be): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5f69cd14ad1f4eb48d5d42a8963fd77a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Understanding the Functional Grid','2022-04-26 07:03:11.000 +00:00','b57134f1-23ce-48b9-bc6a-1e90a88d144f','2024-08-31 20:47:11.839 +00:00','2024-08-31 20:47:11.839 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5f69cd14ad1f4eb48d5d42a8963fd77a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (85e1f196-437c-4462-b45c-8ba490cff3b8): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'd91fddd8-9b50-4dff-ac4e-1243c9c5b71f' AND "UserTopic"."name" = 'Post-Harvest Management and Value Addition in Spice Crops.' AND "UserTopic"."issuedAt" = '2021-02-24 10:53:27.000 +00:00' LIMIT 1;
topicName Introduction to prioritization and planning for content creation 2022-05-10T06:25:37.000+0000
Executing (9a9683b6-e10e-46be-93e9-28ddecc4e963): START TRANSACTION;
Executing (85e1f196-437c-4462-b45c-8ba490cff3b8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7d1651e9034e455287ebe17322aa0f78$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Post-Harvest Management and Value Addition in Spice Crops.','2021-02-24 10:53:27.000 +00:00','d91fddd8-9b50-4dff-ac4e-1243c9c5b71f','2024-08-31 20:47:11.841 +00:00','2024-08-31 20:47:11.841 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7d1651e9034e455287ebe17322aa0f78$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b5882881-5484-48cb-8546-4bddcf338d0d): COMMIT;
Processed user: Rajesh harji sangar
Executing (1a2864b8-4c6e-49b9-9c50-4491acbcd944): START TRANSACTION;
Processed user: Pinu ashish Chaudhari 
Executing (db80c902-2560-4640-8d5c-988d68bb0e7c): START TRANSACTION;
Executing (c2871124-5c0a-4769-852f-1949a67529be): COMMIT;
Executing (9a9683b6-e10e-46be-93e9-28ddecc4e963): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '675d29ab-9a37-4bb1-9cf2-013077eef6bd' AND "UserTopic"."name" = 'Content and PDA - Capacity Building Package' AND "UserTopic"."issuedAt" = '2020-12-21 11:18:58.000 +00:00' LIMIT 1;
Executing (db80c902-2560-4640-8d5c-988d68bb0e7c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '084fbd3e-1924-4484-a80f-f46e23e5c0df' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM - II' AND "UserTopic"."issuedAt" = '2021-08-14 11:59:01.000 +00:00' LIMIT 1;
topicName Introduction to mapping of content and learning needs requirements 2022-05-04T07:26:15.000+0000
Executing (579fc5cc-4fab-4a65-846e-b7192956b971): START TRANSACTION;
Executing (85e1f196-437c-4462-b45c-8ba490cff3b8): COMMIT;
Executing (1a2864b8-4c6e-49b9-9c50-4491acbcd944): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'ffdb4a54-b6d8-4e82-8f3e-b9cce836b67e' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2020-03-18 06:48:25.000 +00:00' LIMIT 1;
Executing (db80c902-2560-4640-8d5c-988d68bb0e7c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fdc53f7e647d4697b01e3648a3787df1$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM - II','2021-08-14 11:59:01.000 +00:00','084fbd3e-1924-4484-a80f-f46e23e5c0df','2024-08-31 20:47:11.847 +00:00','2024-08-31 20:47:11.847 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fdc53f7e647d4697b01e3648a3787df1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (579fc5cc-4fab-4a65-846e-b7192956b971): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'd654a1c1-ac64-408b-91a1-54d57c883590' AND "UserTopic"."name" = 'Demonstration of PDA - ICDS Supervisors Training' AND "UserTopic"."issuedAt" = '2021-06-09 10:22:25.000 +00:00' LIMIT 1;
Processed user: Amin bhoomi jayantibhai
Executing (fa339a00-68b8-4aea-81f4-a4684ef8b10f): START TRANSACTION;
Executing (9a9683b6-e10e-46be-93e9-28ddecc4e963): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5db904365c384eb4bce4e5de71c9a714$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Content and PDA - Capacity Building Package','2020-12-21 11:18:58.000 +00:00','675d29ab-9a37-4bb1-9cf2-013077eef6bd','2024-08-31 20:47:11.850 +00:00','2024-08-31 20:47:11.850 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5db904365c384eb4bce4e5de71c9a714$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (db80c902-2560-4640-8d5c-988d68bb0e7c): COMMIT;
Executing (579fc5cc-4fab-4a65-846e-b7192956b971): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_29b261327d3b412db50ac8ea891e72d3$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Demonstration of PDA - ICDS Supervisors Training','2021-06-09 10:22:25.000 +00:00','d654a1c1-ac64-408b-91a1-54d57c883590','2024-08-31 20:47:11.851 +00:00','2024-08-31 20:47:11.851 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_29b261327d3b412db50ac8ea891e72d3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (fa339a00-68b8-4aea-81f4-a4684ef8b10f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f3c005ad-b9e2-4a45-9900-60bdcced16b3' AND "UserTopic"."name" = 'CBP Orientation' AND "UserTopic"."issuedAt" = '2020-08-25 06:11:13.000 +00:00' LIMIT 1;
Executing (1a2864b8-4c6e-49b9-9c50-4491acbcd944): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f791826a11724872b4f690042dd10276$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2020-03-18 06:48:25.000 +00:00','ffdb4a54-b6d8-4e82-8f3e-b9cce836b67e','2024-08-31 20:47:11.853 +00:00','2024-08-31 20:47:11.853 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f791826a11724872b4f690042dd10276$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Pabu Baha'i gadhavi
Executing (c1e6399d-837c-4b97-b01f-b6052ca9cf41): START TRANSACTION;
Executing (579fc5cc-4fab-4a65-846e-b7192956b971): COMMIT;
Executing (fa339a00-68b8-4aea-81f4-a4684ef8b10f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1f0a8b086170476a93e37828dc797aff$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'CBP Orientation','2020-08-25 06:11:13.000 +00:00','f3c005ad-b9e2-4a45-9900-60bdcced16b3','2024-08-31 20:47:11.855 +00:00','2024-08-31 20:47:11.855 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1f0a8b086170476a93e37828dc797aff$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9a9683b6-e10e-46be-93e9-28ddecc4e963): COMMIT;
Executing (c1e6399d-837c-4b97-b01f-b6052ca9cf41): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '0b54ff54-02a9-4863-a5a2-c7e9ecf75dfb' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 09:36:35.000 +00:00' LIMIT 1;
Processed user: Basipaka kamalabai
Executing (5f5ae41e-cdf3-4aec-96f9-bbc5a08b4caa): START TRANSACTION;
Executing (1a2864b8-4c6e-49b9-9c50-4491acbcd944): COMMIT;
Executing (c1e6399d-837c-4b97-b01f-b6052ca9cf41): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c207e2ebba7f4132b3b1ba336a6c47b6$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 09:36:35.000 +00:00','0b54ff54-02a9-4863-a5a2-c7e9ecf75dfb','2024-08-31 20:47:11.858 +00:00','2024-08-31 20:47:11.858 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c207e2ebba7f4132b3b1ba336a6c47b6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5f5ae41e-cdf3-4aec-96f9-bbc5a08b4caa): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'aa8b852d-d69b-4341-a0fa-b8926901b4e9' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2020-04-07 09:21:17.000 +00:00' LIMIT 1;
Processed user: Vijit
Executing (0a4363b7-7046-4298-b54f-a6e63cf95d7b): START TRANSACTION;
Executing (fa339a00-68b8-4aea-81f4-a4684ef8b10f): COMMIT;
Executing (c1e6399d-837c-4b97-b01f-b6052ca9cf41): COMMIT;
Executing (5f5ae41e-cdf3-4aec-96f9-bbc5a08b4caa): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_991b4e8439994e2e8662740b77e3cf73$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2020-04-07 09:21:17.000 +00:00','aa8b852d-d69b-4341-a0fa-b8926901b4e9','2024-08-31 20:47:11.862 +00:00','2024-08-31 20:47:11.862 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_991b4e8439994e2e8662740b77e3cf73$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0a4363b7-7046-4298-b54f-a6e63cf95d7b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '441fc2a7-b992-46e0-951f-2a58ae3bdf32' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-02-16 06:39:44.000 +00:00' LIMIT 1;
Processed user: Krushna mohan Mishra
Executing (69a1118a-d6b1-4716-be72-752eff0e5da1): START TRANSACTION;
Processed user: Jigarji Rameshji Chauhan 
Executing (811704eb-1b5f-4fa0-8c0c-7367776d98c2): START TRANSACTION;
Executing (5f5ae41e-cdf3-4aec-96f9-bbc5a08b4caa): COMMIT;
Executing (0a4363b7-7046-4298-b54f-a6e63cf95d7b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_18ac9dcca1634a2ab46cd58bd2fe4ce2$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-02-16 06:39:44.000 +00:00','441fc2a7-b992-46e0-951f-2a58ae3bdf32','2024-08-31 20:47:11.865 +00:00','2024-08-31 20:47:11.865 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_18ac9dcca1634a2ab46cd58bd2fe4ce2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Johnson Thangaraj 
Executing (0632c195-2362-47da-bec0-4caffca7e8f9): START TRANSACTION;
Executing (811704eb-1b5f-4fa0-8c0c-7367776d98c2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '3a089d0b-0cea-42c8-a60a-dd9fb54e25d4' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-02-16 06:37:19.000 +00:00' LIMIT 1;
topicName PDA - Trainer App 2020-04-07T10:41:22.000+0000
Executing (979d8990-0ea7-4202-b2b0-0eb38b53ffba): START TRANSACTION;
Executing (69a1118a-d6b1-4716-be72-752eff0e5da1): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e4fc5fe0-87c6-4077-99be-ed1070f50b56' AND "UserTopic"."name" = 'Capacity Building @ Scale - Experiences from FES in Odisha' AND "UserTopic"."issuedAt" = '2021-06-04 12:08:15.000 +00:00' LIMIT 1;
Executing (811704eb-1b5f-4fa0-8c0c-7367776d98c2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a2bf5cbe54304966bcf311ca7b57adea$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-02-16 06:37:19.000 +00:00','3a089d0b-0cea-42c8-a60a-dd9fb54e25d4','2024-08-31 20:47:11.869 +00:00','2024-08-31 20:47:11.869 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a2bf5cbe54304966bcf311ca7b57adea$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (979d8990-0ea7-4202-b2b0-0eb38b53ffba): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '3d5cbfd9-a017-48c1-9ba0-a5e40b0ad188' AND "UserTopic"."name" = 'Post-Harvest Management and Value Addition in Spice Crops.' AND "UserTopic"."issuedAt" = '2021-02-24 10:54:14.000 +00:00' LIMIT 1;
Executing (0632c195-2362-47da-bec0-4caffca7e8f9): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f8ac18cb-5476-4655-b1b7-6459e8047e4d' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-02-16 06:41:32.000 +00:00' LIMIT 1;
Executing (0a4363b7-7046-4298-b54f-a6e63cf95d7b): COMMIT;
Executing (811704eb-1b5f-4fa0-8c0c-7367776d98c2): COMMIT;
Executing (979d8990-0ea7-4202-b2b0-0eb38b53ffba): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7a1b72f09e3b42ebb3cf57fb40d404b4$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Post-Harvest Management and Value Addition in Spice Crops.','2021-02-24 10:54:14.000 +00:00','3d5cbfd9-a017-48c1-9ba0-a5e40b0ad188','2024-08-31 20:47:11.872 +00:00','2024-08-31 20:47:11.872 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7a1b72f09e3b42ebb3cf57fb40d404b4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0632c195-2362-47da-bec0-4caffca7e8f9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_143abe783f3048538371f62207f88b3e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-02-16 06:41:32.000 +00:00','f8ac18cb-5476-4655-b1b7-6459e8047e4d','2024-08-31 20:47:11.873 +00:00','2024-08-31 20:47:11.873 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_143abe783f3048538371f62207f88b3e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (69a1118a-d6b1-4716-be72-752eff0e5da1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c1a1b61358ad4e2d902e408af8244617$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity Building @ Scale - Experiences from FES in Odisha','2021-06-04 12:08:15.000 +00:00','e4fc5fe0-87c6-4077-99be-ed1070f50b56','2024-08-31 20:47:11.874 +00:00','2024-08-31 20:47:11.874 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c1a1b61358ad4e2d902e408af8244617$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Concepts and development of Base map,Landuse map and Geo-morphology maps 2021-03-06T10:34:50.000+0000
Executing (e8c783e3-0d4f-4653-91c1-51e6ee16f89a): START TRANSACTION;
Executing (979d8990-0ea7-4202-b2b0-0eb38b53ffba): COMMIT;
topicName CBP Orientation 2020-08-17T10:15:25.000+0000
Executing (687347f4-51c9-407b-9b77-10cc8b743a6f): START TRANSACTION;
Executing (e8c783e3-0d4f-4653-91c1-51e6ee16f89a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'cf25e048-3020-4503-a358-dd9be7c7c117' AND "UserTopic"."name" = 'Post-Harvest Management and Value Addition in Spice Crops.' AND "UserTopic"."issuedAt" = '2021-02-24 10:00:28.000 +00:00' LIMIT 1;
Processed user: Chauhan Arati vishnusinh
Executing (97acbdae-523a-4173-b949-1befffdd8289): START TRANSACTION;
Executing (0632c195-2362-47da-bec0-4caffca7e8f9): COMMIT;
Executing (69a1118a-d6b1-4716-be72-752eff0e5da1): COMMIT;
Executing (e8c783e3-0d4f-4653-91c1-51e6ee16f89a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e34f618ddcfb4a95aebe01ee9b908f56$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Post-Harvest Management and Value Addition in Spice Crops.','2021-02-24 10:00:28.000 +00:00','cf25e048-3020-4503-a358-dd9be7c7c117','2024-08-31 20:47:11.878 +00:00','2024-08-31 20:47:11.878 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e34f618ddcfb4a95aebe01ee9b908f56$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (97acbdae-523a-4173-b949-1befffdd8289): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'd2724a98-724b-452f-8abe-d9a4492b3f21' AND "UserTopic"."name" = 'Introduction to Learning Objectives' AND "UserTopic"."issuedAt" = '2022-02-22 07:22:01.000 +00:00' LIMIT 1;
Executing (687347f4-51c9-407b-9b77-10cc8b743a6f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '3834ed59-d53b-4c72-8c36-9b8c146bd2d4' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM - II' AND "UserTopic"."issuedAt" = '2021-08-14 11:57:45.000 +00:00' LIMIT 1;
Executing (97acbdae-523a-4173-b949-1befffdd8289): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fc3bf217f0324ff89d078dbef163be4b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Learning Objectives','2022-02-22 07:22:01.000 +00:00','d2724a98-724b-452f-8abe-d9a4492b3f21','2024-08-31 20:47:11.880 +00:00','2024-08-31 20:47:11.880 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fc3bf217f0324ff89d078dbef163be4b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Concepts and development of Base map,Landuse map and Geo-morphology maps 2021-03-06T10:31:50.000+0000
Executing (161dfa74-96a7-47c1-9fa4-a38a635be7e2): START TRANSACTION;
Processed user: Umesh Desai 
Executing (a4f05663-ef14-47c7-a3d6-eb457c577c7e): START TRANSACTION;
Executing (97acbdae-523a-4173-b949-1befffdd8289): COMMIT;
Executing (161dfa74-96a7-47c1-9fa4-a38a635be7e2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c37080b4-1d4c-4a2c-98fd-8c7d6b78e36a' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-02-16 06:41:39.000 +00:00' LIMIT 1;
Executing (e8c783e3-0d4f-4653-91c1-51e6ee16f89a): COMMIT;
Executing (687347f4-51c9-407b-9b77-10cc8b743a6f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6d46118cfa3b44e2aa85ba35f4a663dc$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM - II','2021-08-14 11:57:45.000 +00:00','3834ed59-d53b-4c72-8c36-9b8c146bd2d4','2024-08-31 20:47:11.884 +00:00','2024-08-31 20:47:11.884 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6d46118cfa3b44e2aa85ba35f4a663dc$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Introduction to atomised content 2022-02-15T08:35:16.000+0000
Executing (fc0ddb7b-ea26-4a5b-8f37-59c75cb7554c): START TRANSACTION;
Executing (161dfa74-96a7-47c1-9fa4-a38a635be7e2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a42e576f3c594670811b34f9fdfa0c10$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-02-16 06:41:39.000 +00:00','c37080b4-1d4c-4a2c-98fd-8c7d6b78e36a','2024-08-31 20:47:11.886 +00:00','2024-08-31 20:47:11.886 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a42e576f3c594670811b34f9fdfa0c10$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Wheat Crop Training 2020-12-31T10:12:10.000+0000
Executing (9b4b4dc3-e76b-409c-acdb-b8fe32f5401c): START TRANSACTION;
Executing (a4f05663-ef14-47c7-a3d6-eb457c577c7e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '85238df0-66a9-4a1c-bd4e-05f408801f95' AND "UserTopic"."name" = 'Demonstration of PDA - ICDS Supervisors Training' AND "UserTopic"."issuedAt" = '2021-06-10 11:17:13.000 +00:00' LIMIT 1;
Executing (fc0ddb7b-ea26-4a5b-8f37-59c75cb7554c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '32d0595c-a70f-45b4-b100-fa671df6566a' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2020-04-07 09:21:28.000 +00:00' LIMIT 1;
Executing (9b4b4dc3-e76b-409c-acdb-b8fe32f5401c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8100d8fe-7ff4-4706-8fa7-144707e7d3ce' AND "UserTopic"."name" = 'Midterm Measurement of Desilting(Jalsamruddhi)' AND "UserTopic"."issuedAt" = '2021-02-20 11:38:17.000 +00:00' LIMIT 1;
Executing (687347f4-51c9-407b-9b77-10cc8b743a6f): COMMIT;
Executing (fc0ddb7b-ea26-4a5b-8f37-59c75cb7554c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_75ff2f68bbb84358917473073881930c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2020-04-07 09:21:28.000 +00:00','32d0595c-a70f-45b4-b100-fa671df6566a','2024-08-31 20:47:11.890 +00:00','2024-08-31 20:47:11.890 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_75ff2f68bbb84358917473073881930c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9b4b4dc3-e76b-409c-acdb-b8fe32f5401c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1441e6a5fbe244a0ae4d6a2f7a9d76ca$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Midterm Measurement of Desilting(Jalsamruddhi)','2021-02-20 11:38:17.000 +00:00','8100d8fe-7ff4-4706-8fa7-144707e7d3ce','2024-08-31 20:47:11.891 +00:00','2024-08-31 20:47:11.891 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1441e6a5fbe244a0ae4d6a2f7a9d76ca$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a4f05663-ef14-47c7-a3d6-eb457c577c7e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0bd09305243843339ff5fbad411c950c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Demonstration of PDA - ICDS Supervisors Training','2021-06-10 11:17:13.000 +00:00','85238df0-66a9-4a1c-bd4e-05f408801f95','2024-08-31 20:47:11.892 +00:00','2024-08-31 20:47:11.892 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0bd09305243843339ff5fbad411c950c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (161dfa74-96a7-47c1-9fa4-a38a635be7e2): COMMIT;
Executing (fc0ddb7b-ea26-4a5b-8f37-59c75cb7554c): COMMIT;
Processed user: Ravubha jadeja
Executing (0d3dcd63-e399-4794-9ec6-95ee86a4e785): START TRANSACTION;
topicName PDA - Participant App 2020-03-18T06:48:22+0000
Executing (f0fb8823-8702-4a0d-9863-1b80a4063a51): START TRANSACTION;
Executing (9b4b4dc3-e76b-409c-acdb-b8fe32f5401c): COMMIT;
topicName Community Participation-Why 2021-04-09T06:46:04.000+0000
Executing (27bd97fc-29bd-4aaa-af18-06e20711f91f): START TRANSACTION;
Executing (f0fb8823-8702-4a0d-9863-1b80a4063a51): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f15c3598-11e2-4c1f-8cda-d714a5c36867' AND "UserTopic"."name" = 'Introduction to Learning Objectives' AND "UserTopic"."issuedAt" = '2022-02-22 07:24:09.000 +00:00' LIMIT 1;
topicName PDA Hands on 2021-01-02T07:01:32.000+0000
Executing (76f3b6be-0fae-46c5-833c-1f10bc96d8a0): START TRANSACTION;
Executing (a4f05663-ef14-47c7-a3d6-eb457c577c7e): COMMIT;
Executing (0d3dcd63-e399-4794-9ec6-95ee86a4e785): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '80e5cc2d-48a2-4561-a840-c88ef88bf6ba' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM' AND "UserTopic"."issuedAt" = '2021-08-14 07:15:57.000 +00:00' LIMIT 1;
Executing (f0fb8823-8702-4a0d-9863-1b80a4063a51): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_792500ebbb014d8a91f24152a6ad8c3e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Learning Objectives','2022-02-22 07:24:09.000 +00:00','f15c3598-11e2-4c1f-8cda-d714a5c36867','2024-08-31 20:47:11.898 +00:00','2024-08-31 20:47:11.898 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_792500ebbb014d8a91f24152a6ad8c3e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (76f3b6be-0fae-46c5-833c-1f10bc96d8a0): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'a9dd0338-e5a1-4617-b94d-06b3b66f93d6' AND "UserTopic"."name" = 'PDA Demo' AND "UserTopic"."issuedAt" = '2021-08-27 06:50:19.000 +00:00' LIMIT 1;
Processed user: R Vani supervisor Icds Damarcherla 
Executing (159c14fb-bac5-41e2-8080-c54ba3a9a8f1): START TRANSACTION;
Executing (27bd97fc-29bd-4aaa-af18-06e20711f91f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6db52b87-7d08-4b7a-98da-0ab423f15330' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-02-16 06:53:53.000 +00:00' LIMIT 1;
Executing (f0fb8823-8702-4a0d-9863-1b80a4063a51): COMMIT;
Executing (76f3b6be-0fae-46c5-833c-1f10bc96d8a0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e70c7b4de05d435c8095fbd4189d31e8$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo','2021-08-27 06:50:19.000 +00:00','a9dd0338-e5a1-4617-b94d-06b3b66f93d6','2024-08-31 20:47:11.902 +00:00','2024-08-31 20:47:11.902 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e70c7b4de05d435c8095fbd4189d31e8$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (159c14fb-bac5-41e2-8080-c54ba3a9a8f1): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '65d158bb-b5e6-47d1-9fcb-fe4c9584b8de' AND "UserTopic"."name" = 'PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra.' AND "UserTopic"."issuedAt" = '2021-06-02 10:03:37.000 +00:00' LIMIT 1;
Executing (0d3dcd63-e399-4794-9ec6-95ee86a4e785): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8ca91c2bae5042d3bb065fa9bc7a70a1$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM','2021-08-14 07:15:57.000 +00:00','80e5cc2d-48a2-4561-a840-c88ef88bf6ba','2024-08-31 20:47:11.904 +00:00','2024-08-31 20:47:11.904 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8ca91c2bae5042d3bb065fa9bc7a70a1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Introduction to atomised content 2022-02-15T06:26:09.000+0000
Executing (02ff0205-198a-4362-a831-060cb7cb1d33): START TRANSACTION;
Executing (76f3b6be-0fae-46c5-833c-1f10bc96d8a0): COMMIT;
Executing (159c14fb-bac5-41e2-8080-c54ba3a9a8f1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_145b5a50494c4fa2a779ec111f3ea6b4$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra.','2021-06-02 10:03:37.000 +00:00','65d158bb-b5e6-47d1-9fcb-fe4c9584b8de','2024-08-31 20:47:11.907 +00:00','2024-08-31 20:47:11.907 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_145b5a50494c4fa2a779ec111f3ea6b4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (27bd97fc-29bd-4aaa-af18-06e20711f91f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cb0df7543e804451b16a86a4578fd73e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-02-16 06:53:53.000 +00:00','6db52b87-7d08-4b7a-98da-0ab423f15330','2024-08-31 20:47:11.910 +00:00','2024-08-31 20:47:11.910 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cb0df7543e804451b16a86a4578fd73e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (02ff0205-198a-4362-a831-060cb7cb1d33): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2307df28-88c9-4a61-a906-3a8448379edf' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM - II' AND "UserTopic"."issuedAt" = '2021-08-14 12:31:42.000 +00:00' LIMIT 1;
Processed user: Jairaj Rajguru
Executing (80cbac80-3114-4605-8575-eeb12a682b1d): START TRANSACTION;
Executing (159c14fb-bac5-41e2-8080-c54ba3a9a8f1): COMMIT;
Executing (0d3dcd63-e399-4794-9ec6-95ee86a4e785): COMMIT;
Executing (02ff0205-198a-4362-a831-060cb7cb1d33): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_81e0bee70d1b410f98e022a952b6c7bc$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM - II','2021-08-14 12:31:42.000 +00:00','2307df28-88c9-4a61-a906-3a8448379edf','2024-08-31 20:47:11.913 +00:00','2024-08-31 20:47:11.913 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_81e0bee70d1b410f98e022a952b6c7bc$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (80cbac80-3114-4605-8575-eeb12a682b1d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '561f2614-a9a4-4fea-8f74-fd79e0a2854a' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-02-16 06:47:53.000 +00:00' LIMIT 1;
Executing (27bd97fc-29bd-4aaa-af18-06e20711f91f): COMMIT;
Processed user: Ashish
Executing (404fcb26-b786-434b-a17c-644e915bfe8b): START TRANSACTION;
Processed user: Dhiraj manji sathawara
Executing (a5e7f80f-6b3a-4965-9779-407dc101cb57): START TRANSACTION;
Executing (404fcb26-b786-434b-a17c-644e915bfe8b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8015b555-310f-4896-be19-6801c9d16a40' AND "UserTopic"."name" = 'Concepts and development of Base map,Landuse map and Geo-morphology maps' AND "UserTopic"."issuedAt" = '2021-03-06 10:34:49.000 +00:00' LIMIT 1;
Executing (80cbac80-3114-4605-8575-eeb12a682b1d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_387a74d7d854456090b09f211cd07a72$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-02-16 06:47:53.000 +00:00','561f2614-a9a4-4fea-8f74-fd79e0a2854a','2024-08-31 20:47:11.917 +00:00','2024-08-31 20:47:11.917 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_387a74d7d854456090b09f211cd07a72$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (02ff0205-198a-4362-a831-060cb7cb1d33): COMMIT;
topicName Concepts and development of Base map,Landuse map and Geo-morphology maps 2021-03-06T10:31:22.000+0000
Executing (e8b3106b-a067-425f-a9d5-6b985245bb61): START TRANSACTION;
Executing (404fcb26-b786-434b-a17c-644e915bfe8b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4e00028680e7499cb8b9850cd997e156$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Concepts and development of Base map,Landuse map and Geo-morphology maps','2021-03-06 10:34:49.000 +00:00','8015b555-310f-4896-be19-6801c9d16a40','2024-08-31 20:47:11.919 +00:00','2024-08-31 20:47:11.919 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4e00028680e7499cb8b9850cd997e156$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a5e7f80f-6b3a-4965-9779-407dc101cb57): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '1e7b369b-6485-42d8-b46f-4d93173de143' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:47:58.000 +00:00' LIMIT 1;
Processed user: Rajdipsinh jitubha jadeja
Executing (310bc164-92cc-472d-b808-7b2e079518ba): START TRANSACTION;
Executing (e8b3106b-a067-425f-a9d5-6b985245bb61): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '04d19f6e-f331-4630-a51a-5aa2ea55bdcc' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:46:16.000 +00:00' LIMIT 1;
Executing (80cbac80-3114-4605-8575-eeb12a682b1d): COMMIT;
Executing (310bc164-92cc-472d-b808-7b2e079518ba): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '7047e907-28a3-4cb1-9797-30c04e005740' AND "UserTopic"."name" = 'Capacity Building @ Scale - Experiences from FES in Odisha' AND "UserTopic"."issuedAt" = '2021-06-04 11:23:54.000 +00:00' LIMIT 1;
Executing (e8b3106b-a067-425f-a9d5-6b985245bb61): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ed6da773b1c64980bf5142c3f81e1ac5$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:46:16.000 +00:00','04d19f6e-f331-4630-a51a-5aa2ea55bdcc','2024-08-31 20:47:11.926 +00:00','2024-08-31 20:47:11.926 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ed6da773b1c64980bf5142c3f81e1ac5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a5e7f80f-6b3a-4965-9779-407dc101cb57): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_572a4366ed0541c3a0b1d8b599d7da3e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:47:58.000 +00:00','1e7b369b-6485-42d8-b46f-4d93173de143','2024-08-31 20:47:11.928 +00:00','2024-08-31 20:47:11.928 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_572a4366ed0541c3a0b1d8b599d7da3e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (404fcb26-b786-434b-a17c-644e915bfe8b): COMMIT;
Executing (310bc164-92cc-472d-b808-7b2e079518ba): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_470d8476f87d4123a46272a03df5cf2c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity Building @ Scale - Experiences from FES in Odisha','2021-06-04 11:23:54.000 +00:00','7047e907-28a3-4cb1-9797-30c04e005740','2024-08-31 20:47:11.930 +00:00','2024-08-31 20:47:11.930 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_470d8476f87d4123a46272a03df5cf2c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e8b3106b-a067-425f-a9d5-6b985245bb61): COMMIT;
topicName Concepts and development of Base map,Landuse map and Geo-morphology maps 2021-03-06T10:31:17.000+0000
Executing (038aec17-07f3-4e05-bf02-b3fe95341f80): START TRANSACTION;
Executing (310bc164-92cc-472d-b808-7b2e079518ba): COMMIT;
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T06:56:04.000+0000
Executing (78b519e2-0981-4f75-b5a5-c5412fd7f871): START TRANSACTION;
Executing (a5e7f80f-6b3a-4965-9779-407dc101cb57): COMMIT;
topicName Community Participation-Why 2021-04-09T06:49:01.000+0000
Executing (b903a6f8-8eb6-4f6b-b339-30bc7203c3e0): START TRANSACTION;
Processed user: Vidyanshu Kumar
Executing (5a55f467-4a0a-4a8f-9464-26ddc1a056b3): START TRANSACTION;
Executing (78b519e2-0981-4f75-b5a5-c5412fd7f871): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '534ec60b-0deb-41a6-97f8-2b5477f9c3a3' AND "UserTopic"."name" = 'CBP Orientation' AND "UserTopic"."issuedAt" = '2020-08-28 10:15:31.000 +00:00' LIMIT 1;
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T06:57:20.000+0000
Executing (99ca0d0a-eeb7-4c2a-acd7-add9418442e2): START TRANSACTION;
Executing (038aec17-07f3-4e05-bf02-b3fe95341f80): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'ab701420-82f6-492b-bc21-e0ac11333177' AND "UserTopic"."name" = 'ಅಟಲ್ ಭೂಜಲ್ ಯೋಜನೆಯ ಅವಲೋಕನ' AND "UserTopic"."issuedAt" = '2021-05-25 11:26:54.000 +00:00' LIMIT 1;
Executing (5a55f467-4a0a-4a8f-9464-26ddc1a056b3): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '978c03c9-6857-455f-b955-129c9f5d70e9' AND "UserTopic"."name" = 'Introduction to Learning Experience Framework' AND "UserTopic"."issuedAt" = '2022-01-18 07:45:30.000 +00:00' LIMIT 1;
Executing (78b519e2-0981-4f75-b5a5-c5412fd7f871): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7ac5851a767844f3b48107b1641df85a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'CBP Orientation','2020-08-28 10:15:31.000 +00:00','534ec60b-0deb-41a6-97f8-2b5477f9c3a3','2024-08-31 20:47:11.944 +00:00','2024-08-31 20:47:11.944 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7ac5851a767844f3b48107b1641df85a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (99ca0d0a-eeb7-4c2a-acd7-add9418442e2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4f4578dd-db88-4474-8d4a-cb9f922009a9' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2020-08-19 10:41:37.000 +00:00' LIMIT 1;
Executing (b903a6f8-8eb6-4f6b-b339-30bc7203c3e0): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '827d361a-0594-4274-9856-374c4c2d09ca' AND "UserTopic"."name" = 'PDA Demo' AND "UserTopic"."issuedAt" = '2021-07-13 05:15:58.000 +00:00' LIMIT 1;
Executing (5a55f467-4a0a-4a8f-9464-26ddc1a056b3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4534895542a248d2a4c089f227ce5266$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Learning Experience Framework','2022-01-18 07:45:30.000 +00:00','978c03c9-6857-455f-b955-129c9f5d70e9','2024-08-31 20:47:11.948 +00:00','2024-08-31 20:47:11.948 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4534895542a248d2a4c089f227ce5266$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (78b519e2-0981-4f75-b5a5-c5412fd7f871): COMMIT;
Executing (99ca0d0a-eeb7-4c2a-acd7-add9418442e2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_40d27470b1f043f78023dd327056a665$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2020-08-19 10:41:37.000 +00:00','4f4578dd-db88-4474-8d4a-cb9f922009a9','2024-08-31 20:47:11.951 +00:00','2024-08-31 20:47:11.951 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_40d27470b1f043f78023dd327056a665$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (038aec17-07f3-4e05-bf02-b3fe95341f80): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cf0f224221544371ac73ec7f5712a529$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'ಅಟಲ್ ಭೂಜಲ್ ಯೋಜನೆಯ ಅವಲೋಕನ','2021-05-25 11:26:54.000 +00:00','ab701420-82f6-492b-bc21-e0ac11333177','2024-08-31 20:47:11.952 +00:00','2024-08-31 20:47:11.952 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cf0f224221544371ac73ec7f5712a529$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5a55f467-4a0a-4a8f-9464-26ddc1a056b3): COMMIT;
topicName PDA - Program App 2019-12-05T06:58:53+0000
Executing (7f472cd8-9a1f-44ec-8700-44d977157a40): START TRANSACTION;
Executing (99ca0d0a-eeb7-4c2a-acd7-add9418442e2): COMMIT;
Executing (b903a6f8-8eb6-4f6b-b339-30bc7203c3e0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ca436fdf66f8400ab71e7ce4fb08a698$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo','2021-07-13 05:15:58.000 +00:00','827d361a-0594-4274-9856-374c4c2d09ca','2024-08-31 20:47:11.956 +00:00','2024-08-31 20:47:11.956 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ca436fdf66f8400ab71e7ce4fb08a698$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Feedback and next steps 2022-01-25T07:26:01.000+0000
Executing (3d7593bf-d9b2-485d-b74b-31b6038522cc): START TRANSACTION;
Executing (7f472cd8-9a1f-44ec-8700-44d977157a40): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '1945733f-b5d8-4581-bb93-677e47af2892' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 06:59:12.000 +00:00' LIMIT 1;
Processed user: Nabamita Guha
Executing (e8346536-674d-485b-892d-542ac645d779): START TRANSACTION;
Executing (038aec17-07f3-4e05-bf02-b3fe95341f80): COMMIT;
Executing (3d7593bf-d9b2-485d-b74b-31b6038522cc): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '672fb9f9-8ea1-4cc8-b905-a35e69ce645c' AND "UserTopic"."name" = 'Wheat Crop Training' AND "UserTopic"."issuedAt" = '2020-12-31 10:12:06.000 +00:00' LIMIT 1;
Executing (7f472cd8-9a1f-44ec-8700-44d977157a40): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6f99d2ac25864a128c71c3e1cee312bf$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 06:59:12.000 +00:00','1945733f-b5d8-4581-bb93-677e47af2892','2024-08-31 20:47:11.962 +00:00','2024-08-31 20:47:11.962 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6f99d2ac25864a128c71c3e1cee312bf$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e8346536-674d-485b-892d-542ac645d779): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '49762a84-722e-4ae9-be16-ba5123bd74fa' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:46:58.000 +00:00' LIMIT 1;
Executing (b903a6f8-8eb6-4f6b-b339-30bc7203c3e0): COMMIT;
Executing (3d7593bf-d9b2-485d-b74b-31b6038522cc): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_682c3f6ee7ca4977a6403d5f81c0f04a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Wheat Crop Training','2020-12-31 10:12:06.000 +00:00','672fb9f9-8ea1-4cc8-b905-a35e69ce645c','2024-08-31 20:47:11.966 +00:00','2024-08-31 20:47:11.966 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_682c3f6ee7ca4977a6403d5f81c0f04a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7f472cd8-9a1f-44ec-8700-44d977157a40): COMMIT;
Executing (e8346536-674d-485b-892d-542ac645d779): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e89ab55b750f4f3ebf73a0abae5fae8d$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:46:58.000 +00:00','49762a84-722e-4ae9-be16-ba5123bd74fa','2024-08-31 20:47:11.968 +00:00','2024-08-31 20:47:11.968 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e89ab55b750f4f3ebf73a0abae5fae8d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Kiran Keri
Executing (e645ae88-9fa9-40c5-b34f-dba8b27ec711): START TRANSACTION;
Executing (3d7593bf-d9b2-485d-b74b-31b6038522cc): COMMIT;
Processed user: Arvindbhai
Executing (f589c031-b1c1-4e70-aa7f-56df2e72fb4b): START TRANSACTION;
Processed user: Kamlesh 
Executing (e1091b03-bf79-454f-9350-18ca11a829dd): START TRANSACTION;
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T06:57:06.000+0000
Executing (08a90835-c7fa-4905-aa74-4938ee1a2762): START TRANSACTION;
Executing (f589c031-b1c1-4e70-aa7f-56df2e72fb4b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '24fd8100-05dc-4818-ac5f-ae56daae290f' AND "UserTopic"."name" = 'Demonstration of PDA - ICDS Supervisors Training' AND "UserTopic"."issuedAt" = '2021-06-09 10:05:34.000 +00:00' LIMIT 1;
Executing (e645ae88-9fa9-40c5-b34f-dba8b27ec711): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '45147e6f-3094-4afd-8fc9-57575771296a' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:46:31.000 +00:00' LIMIT 1;
Executing (e8346536-674d-485b-892d-542ac645d779): COMMIT;
Executing (08a90835-c7fa-4905-aa74-4938ee1a2762): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c4dd62bb-64be-451a-a6b8-128879daf705' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2020-03-18 06:49:01.000 +00:00' LIMIT 1;
Executing (f589c031-b1c1-4e70-aa7f-56df2e72fb4b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_170aca232aef4a218fb9dcd6eda47a26$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Demonstration of PDA - ICDS Supervisors Training','2021-06-09 10:05:34.000 +00:00','24fd8100-05dc-4818-ac5f-ae56daae290f','2024-08-31 20:47:11.975 +00:00','2024-08-31 20:47:11.975 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_170aca232aef4a218fb9dcd6eda47a26$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e645ae88-9fa9-40c5-b34f-dba8b27ec711): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_47d74c50be1a44c8871638ba5d85401b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:46:31.000 +00:00','45147e6f-3094-4afd-8fc9-57575771296a','2024-08-31 20:47:11.976 +00:00','2024-08-31 20:47:11.976 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_47d74c50be1a44c8871638ba5d85401b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e1091b03-bf79-454f-9350-18ca11a829dd): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '68d36af3-395e-424e-9f89-2bc8dcec7b40' AND "UserTopic"."name" = 'Water User Association Training' AND "UserTopic"."issuedAt" = '2021-04-07 06:27:56.000 +00:00' LIMIT 1;
Executing (08a90835-c7fa-4905-aa74-4938ee1a2762): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ff2bcc824066477ba4078ecc221ec397$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2020-03-18 06:49:01.000 +00:00','c4dd62bb-64be-451a-a6b8-128879daf705','2024-08-31 20:47:11.978 +00:00','2024-08-31 20:47:11.978 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ff2bcc824066477ba4078ecc221ec397$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f589c031-b1c1-4e70-aa7f-56df2e72fb4b): COMMIT;
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T07:23:33.000+0000
Executing (1d94d5bf-f440-4db6-9bc0-ce94439a0a36): START TRANSACTION;
Processed user: Gona venkatamma
Executing (5301fc26-799e-4ff7-9047-ec70e6b2e8f7): START TRANSACTION;
Executing (e1091b03-bf79-454f-9350-18ca11a829dd): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_dddc9440c7234307be6db8cd2767b7f7$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Water User Association Training','2021-04-07 06:27:56.000 +00:00','68d36af3-395e-424e-9f89-2bc8dcec7b40','2024-08-31 20:47:11.981 +00:00','2024-08-31 20:47:11.981 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_dddc9440c7234307be6db8cd2767b7f7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e645ae88-9fa9-40c5-b34f-dba8b27ec711): COMMIT;
Executing (5301fc26-799e-4ff7-9047-ec70e6b2e8f7): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e07661b3-b906-4829-aa72-c5c2d4b6cff5' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:47:39.000 +00:00' LIMIT 1;
Executing (1d94d5bf-f440-4db6-9bc0-ce94439a0a36): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e91cf5ba-cf27-4a89-8cec-dc7423a1fac5' AND "UserTopic"."name" = 'TOT of Bhujal Janakar' AND "UserTopic"."issuedAt" = '2021-02-05 07:24:10.000 +00:00' LIMIT 1;
Executing (08a90835-c7fa-4905-aa74-4938ee1a2762): COMMIT;
Executing (5301fc26-799e-4ff7-9047-ec70e6b2e8f7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6cdaee0a1acd43018818882cb4629e27$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:47:39.000 +00:00','e07661b3-b906-4829-aa72-c5c2d4b6cff5','2024-08-31 20:47:11.984 +00:00','2024-08-31 20:47:11.984 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6cdaee0a1acd43018818882cb4629e27$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1d94d5bf-f440-4db6-9bc0-ce94439a0a36): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4029d1f3792b4e9f91a993cc61478e2c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'TOT of Bhujal Janakar','2021-02-05 07:24:10.000 +00:00','e91cf5ba-cf27-4a89-8cec-dc7423a1fac5','2024-08-31 20:47:11.985 +00:00','2024-08-31 20:47:11.985 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4029d1f3792b4e9f91a993cc61478e2c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Baranda Anupa
Executing (98545d14-e33d-4213-8d5a-21d78e36f21a): START TRANSACTION;
Executing (e1091b03-bf79-454f-9350-18ca11a829dd): COMMIT;
Executing (5301fc26-799e-4ff7-9047-ec70e6b2e8f7): COMMIT;
Executing (98545d14-e33d-4213-8d5a-21d78e36f21a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b5796159-916b-4366-8cda-b3bc91f214ec' AND "UserTopic"."name" = 'Post-Harvest Management and Value Addition in Spice Crops.' AND "UserTopic"."issuedAt" = '2021-02-24 09:04:54.000 +00:00' LIMIT 1;
Processed user: Biranchi Paikaray 
Executing (262d1bd4-7c96-48cd-8924-661cf070fd61): START TRANSACTION;
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T07:21:08.000+0000
Executing (888d1aad-a9e4-4f0a-aa36-07bdb61738f6): START TRANSACTION;
Executing (98545d14-e33d-4213-8d5a-21d78e36f21a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6432b851d91e44a9aadd3416821382e0$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Post-Harvest Management and Value Addition in Spice Crops.','2021-02-24 09:04:54.000 +00:00','b5796159-916b-4366-8cda-b3bc91f214ec','2024-08-31 20:47:11.989 +00:00','2024-08-31 20:47:11.989 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6432b851d91e44a9aadd3416821382e0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Sunita Suresh Ghegadmal
Executing (dc3c5919-53e0-45cf-bc7c-61fdf262fa33): START TRANSACTION;
Executing (1d94d5bf-f440-4db6-9bc0-ce94439a0a36): COMMIT;
Executing (888d1aad-a9e4-4f0a-aa36-07bdb61738f6): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f64f98b3-8680-4e4f-8978-a94781c6fb94' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:46:08.000 +00:00' LIMIT 1;
Executing (dc3c5919-53e0-45cf-bc7c-61fdf262fa33): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2c4e0071-bcce-448d-b363-6dcb75f84c57' AND "UserTopic"."name" = 'Demonstration of PDA - ICDS Supervisors Training' AND "UserTopic"."issuedAt" = '2021-06-10 05:25:32.000 +00:00' LIMIT 1;
Executing (262d1bd4-7c96-48cd-8924-661cf070fd61): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '623772f6-e951-4704-ad07-d8e1b852bee3' AND "UserTopic"."name" = 'Midterm Measurement of Desilting(Jalsamruddhi)' AND "UserTopic"."issuedAt" = '2021-02-20 11:14:05.000 +00:00' LIMIT 1;
Executing (888d1aad-a9e4-4f0a-aa36-07bdb61738f6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1efcef0a9c0b4c53a9866d945f44d6bb$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:46:08.000 +00:00','f64f98b3-8680-4e4f-8978-a94781c6fb94','2024-08-31 20:47:11.994 +00:00','2024-08-31 20:47:11.994 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1efcef0a9c0b4c53a9866d945f44d6bb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (dc3c5919-53e0-45cf-bc7c-61fdf262fa33): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bcba3e501756476aa7681332008429c8$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Demonstration of PDA - ICDS Supervisors Training','2021-06-10 05:25:32.000 +00:00','2c4e0071-bcce-448d-b363-6dcb75f84c57','2024-08-31 20:47:11.995 +00:00','2024-08-31 20:47:11.995 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bcba3e501756476aa7681332008429c8$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (98545d14-e33d-4213-8d5a-21d78e36f21a): COMMIT;
topicName Data collection and Monitoring 2021-01-06T07:53:31.000+0000
Executing (59d8ca08-26ff-4170-bcf8-d4504f89a94d): START TRANSACTION;
Executing (888d1aad-a9e4-4f0a-aa36-07bdb61738f6): COMMIT;
Executing (262d1bd4-7c96-48cd-8924-661cf070fd61): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_de55a608694645319c818dd41f91502f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Midterm Measurement of Desilting(Jalsamruddhi)','2021-02-20 11:14:05.000 +00:00','623772f6-e951-4704-ad07-d8e1b852bee3','2024-08-31 20:47:11.997 +00:00','2024-08-31 20:47:11.997 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_de55a608694645319c818dd41f91502f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T06:57:13.000+0000
Executing (79e25560-f8f6-4f01-aba2-1821dc2cce8f): START TRANSACTION;
Executing (59d8ca08-26ff-4170-bcf8-d4504f89a94d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8a6f88f1-1dd9-48c3-8e9c-7c2ccc1096d9' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:46:04.000 +00:00' LIMIT 1;
topicName Wheat Crop Training 2020-12-31T10:28:36.000+0000
Executing (09763b19-7302-4761-8efc-bf565a3aa028): START TRANSACTION;
Executing (dc3c5919-53e0-45cf-bc7c-61fdf262fa33): COMMIT;
Executing (79e25560-f8f6-4f01-aba2-1821dc2cce8f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '249f141b-3fd0-4d6b-8fdb-c68de7aca819' AND "UserTopic"."name" = 'Content Development | T1.01 | DG' AND "UserTopic"."issuedAt" = '2020-11-26 11:45:10.000 +00:00' LIMIT 1;
Executing (59d8ca08-26ff-4170-bcf8-d4504f89a94d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a5e944947e744d68a66cbec5d1637e22$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:46:04.000 +00:00','8a6f88f1-1dd9-48c3-8e9c-7c2ccc1096d9','2024-08-31 20:47:12.001 +00:00','2024-08-31 20:47:12.001 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a5e944947e744d68a66cbec5d1637e22$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (09763b19-7302-4761-8efc-bf565a3aa028): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '95a04b38-85ea-4d1a-a65f-cbcd05be181e' AND "UserTopic"."name" = 'PDA Demo' AND "UserTopic"."issuedAt" = '2021-08-27 06:49:04.000 +00:00' LIMIT 1;
Executing (262d1bd4-7c96-48cd-8924-661cf070fd61): COMMIT;
Executing (79e25560-f8f6-4f01-aba2-1821dc2cce8f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7f82cf0e864c447493fea0eec8d287d0$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Content Development | T1.01 | DG','2020-11-26 11:45:10.000 +00:00','249f141b-3fd0-4d6b-8fdb-c68de7aca819','2024-08-31 20:47:12.004 +00:00','2024-08-31 20:47:12.004 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7f82cf0e864c447493fea0eec8d287d0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (59d8ca08-26ff-4170-bcf8-d4504f89a94d): COMMIT;
Processed user: Nakarekanti suneetha
Executing (add370c1-df70-41eb-8af8-c5c1c1d53ac7): START TRANSACTION;
Processed user: Parmar pinakin
Executing (baa42599-a658-4ec2-968c-1d481a0cf32c): START TRANSACTION;
Executing (09763b19-7302-4761-8efc-bf565a3aa028): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_da5fd21443c14f57b7d516ae3bcf3932$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo','2021-08-27 06:49:04.000 +00:00','95a04b38-85ea-4d1a-a65f-cbcd05be181e','2024-08-31 20:47:12.006 +00:00','2024-08-31 20:47:12.006 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_da5fd21443c14f57b7d516ae3bcf3932$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Site Selection of Desilting work Process of Government Approval and data Collection of its work 2021-02-06T12:41:22.000+0000
Executing (9e8a0374-c03b-495f-b86d-5e3fda4127de): START TRANSACTION;
Executing (baa42599-a658-4ec2-968c-1d481a0cf32c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '1e094070-9b95-4034-92b4-559a6aff57fc' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM - II' AND "UserTopic"."issuedAt" = '2021-08-14 11:23:02.000 +00:00' LIMIT 1;
Executing (add370c1-df70-41eb-8af8-c5c1c1d53ac7): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '7819afc7-9754-4b53-976c-722417249f0f' AND "UserTopic"."name" = 'CBP Orientation' AND "UserTopic"."issuedAt" = '2020-08-28 10:16:08.000 +00:00' LIMIT 1;
Executing (79e25560-f8f6-4f01-aba2-1821dc2cce8f): COMMIT;
Executing (baa42599-a658-4ec2-968c-1d481a0cf32c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_470f3ea3c8784b7a8aaa13ccecfd803f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM - II','2021-08-14 11:23:02.000 +00:00','1e094070-9b95-4034-92b4-559a6aff57fc','2024-08-31 20:47:12.011 +00:00','2024-08-31 20:47:12.011 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_470f3ea3c8784b7a8aaa13ccecfd803f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (add370c1-df70-41eb-8af8-c5c1c1d53ac7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6bb8c4daeea84b08a0e37ecf96fd1930$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'CBP Orientation','2020-08-28 10:16:08.000 +00:00','7819afc7-9754-4b53-976c-722417249f0f','2024-08-31 20:47:12.012 +00:00','2024-08-31 20:47:12.012 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6bb8c4daeea84b08a0e37ecf96fd1930$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9e8a0374-c03b-495f-b86d-5e3fda4127de): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '7108b369-0740-47e3-a6c6-ff551de5b1a7' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2020-08-19 09:37:25.000 +00:00' LIMIT 1;
Executing (09763b19-7302-4761-8efc-bf565a3aa028): COMMIT;
Executing (baa42599-a658-4ec2-968c-1d481a0cf32c): COMMIT;
Executing (add370c1-df70-41eb-8af8-c5c1c1d53ac7): COMMIT;
topicName PDA Demo and Deployment Training for Trainers | ACT 2020-12-11T12:41:50.000+0000
Executing (29e1235d-d36f-424a-9081-738085b11848): START TRANSACTION;
Processed user: Lalji japare
Executing (78c5634e-9deb-4b02-847b-ad89f10a23b9): START TRANSACTION;
topicName PMT Functions & CBP Training Calendar 2020-10-13T10:35:49.000+0000
Executing (987aeeb4-8738-4962-a42b-893df94811d2): START TRANSACTION;
Executing (9e8a0374-c03b-495f-b86d-5e3fda4127de): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fdf19281456147b9be10fecf90f8252c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2020-08-19 09:37:25.000 +00:00','7108b369-0740-47e3-a6c6-ff551de5b1a7','2024-08-31 20:47:12.016 +00:00','2024-08-31 20:47:12.016 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fdf19281456147b9be10fecf90f8252c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Hand-on 2021-08-30T11:11:55.000+0000
Executing (c95ce60d-b19c-4857-8237-23670e7dab2c): START TRANSACTION;
Executing (78c5634e-9deb-4b02-847b-ad89f10a23b9): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4084a65c-8c7b-4f94-bf3f-cb5c6f9d7947' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2020-08-19 09:46:14.000 +00:00' LIMIT 1;
Executing (987aeeb4-8738-4962-a42b-893df94811d2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8443fea0-a160-4b2e-be83-604f9184622f' AND "UserTopic"."name" = 'PDA Demo' AND "UserTopic"."issuedAt" = '2021-04-28 06:23:25.000 +00:00' LIMIT 1;
Executing (29e1235d-d36f-424a-9081-738085b11848): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b9c083ae-1a2d-41ec-ace2-2459410042a9' AND "UserTopic"."name" = 'PDA mock session - Churu' AND "UserTopic"."issuedAt" = '2020-12-16 06:46:21.000 +00:00' LIMIT 1;
Executing (78c5634e-9deb-4b02-847b-ad89f10a23b9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_16ab9677855643cf8e8a383dafd3635f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2020-08-19 09:46:14.000 +00:00','4084a65c-8c7b-4f94-bf3f-cb5c6f9d7947','2024-08-31 20:47:12.020 +00:00','2024-08-31 20:47:12.020 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_16ab9677855643cf8e8a383dafd3635f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (987aeeb4-8738-4962-a42b-893df94811d2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_751df265406643bf9b3ff8d8c80d083e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo','2021-04-28 06:23:25.000 +00:00','8443fea0-a160-4b2e-be83-604f9184622f','2024-08-31 20:47:12.021 +00:00','2024-08-31 20:47:12.021 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_751df265406643bf9b3ff8d8c80d083e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c95ce60d-b19c-4857-8237-23670e7dab2c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'da44a0db-c91c-4437-8604-8bd05e2703dc' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM - II' AND "UserTopic"."issuedAt" = '2021-08-14 11:58:24.000 +00:00' LIMIT 1;
Executing (9e8a0374-c03b-495f-b86d-5e3fda4127de): COMMIT;
Executing (78c5634e-9deb-4b02-847b-ad89f10a23b9): COMMIT;
Executing (987aeeb4-8738-4962-a42b-893df94811d2): COMMIT;
Executing (c95ce60d-b19c-4857-8237-23670e7dab2c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_73b02a91aaa547d19fb503252384a6c4$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM - II','2021-08-14 11:58:24.000 +00:00','da44a0db-c91c-4437-8604-8bd05e2703dc','2024-08-31 20:47:12.024 +00:00','2024-08-31 20:47:12.024 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_73b02a91aaa547d19fb503252384a6c4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (29e1235d-d36f-424a-9081-738085b11848): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_51ed7346a4874b8fbd62cae4cb9a2bbf$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA mock session - Churu','2020-12-16 06:46:21.000 +00:00','b9c083ae-1a2d-41ec-ace2-2459410042a9','2024-08-31 20:47:12.025 +00:00','2024-08-31 20:47:12.025 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_51ed7346a4874b8fbd62cae4cb9a2bbf$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Hub Roles for Virtual Interactions 2020-12-10T05:59:47.000+0000
Executing (b9ce1235-45db-4449-a1e3-27bf586a913f): START TRANSACTION;
topicName PDA Demo Test fr content 2021-06-17T11:21:09.000+0000
Executing (d9effa30-eefb-4b75-9841-2a5903c3ec1e): START TRANSACTION;
topicName Hub Roles for Virtual Interactions 2020-12-10T08:24:30.000+0000
Executing (0d236aee-9e15-452e-ae01-cb2e01578036): START TRANSACTION;
Executing (b9ce1235-45db-4449-a1e3-27bf586a913f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'eabded96-d1c0-4ec9-a932-4b57b466a34c' AND "UserTopic"."name" = 'Introduction to atomised content' AND "UserTopic"."issuedAt" = '2022-02-15 08:39:52.000 +00:00' LIMIT 1;
Executing (d9effa30-eefb-4b75-9841-2a5903c3ec1e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'fd95ee30-3ab4-4c79-a54d-225162900383' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-02-16 06:50:35.000 +00:00' LIMIT 1;
Executing (c95ce60d-b19c-4857-8237-23670e7dab2c): COMMIT;
Executing (29e1235d-d36f-424a-9081-738085b11848): COMMIT;
Executing (b9ce1235-45db-4449-a1e3-27bf586a913f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ef65cf5b480d4d998404054faa9912df$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to atomised content','2022-02-15 08:39:52.000 +00:00','eabded96-d1c0-4ec9-a932-4b57b466a34c','2024-08-31 20:47:12.033 +00:00','2024-08-31 20:47:12.033 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ef65cf5b480d4d998404054faa9912df$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d9effa30-eefb-4b75-9841-2a5903c3ec1e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9b62c914744e4f3f9317524cc6c4ead2$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-02-16 06:50:35.000 +00:00','fd95ee30-3ab4-4c79-a54d-225162900383','2024-08-31 20:47:12.035 +00:00','2024-08-31 20:47:12.035 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9b62c914744e4f3f9317524cc6c4ead2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Orientation on Abhy and PGWM 2021-08-14T07:22:28.000+0000
Executing (9ff04093-6230-4b46-ae11-b60ece25adef): START TRANSACTION;
Executing (0d236aee-9e15-452e-ae01-cb2e01578036): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8534ca90-db07-4871-9011-4d41455f192c' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-02-16 06:34:57.000 +00:00' LIMIT 1;
Executing (b9ce1235-45db-4449-a1e3-27bf586a913f): COMMIT;
Executing (d9effa30-eefb-4b75-9841-2a5903c3ec1e): COMMIT;
Executing (9ff04093-6230-4b46-ae11-b60ece25adef): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e84e38c5-38bc-47e9-b5f1-a6c47d653c1e' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-02-16 06:45:34.000 +00:00' LIMIT 1;
Processed user: Shakti soni
Executing (a61ab3bc-d0bb-4ff9-8440-693b40154014): START TRANSACTION;
topicName Feedback and next steps 2022-01-25T07:34:42.000+0000
Executing (c5d77692-594b-4a0d-8343-6afbc5bfb33d): START TRANSACTION;
topicName Community Participation-Why 2021-04-09T06:47:24.000+0000
Executing (6164c5ed-2f0d-4a75-b279-bf7c82dcc19e): START TRANSACTION;
Executing (9ff04093-6230-4b46-ae11-b60ece25adef): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ff4c5f481bd749c180efacdcc46e6ec3$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-02-16 06:45:34.000 +00:00','e84e38c5-38bc-47e9-b5f1-a6c47d653c1e','2024-08-31 20:47:12.044 +00:00','2024-08-31 20:47:12.044 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ff4c5f481bd749c180efacdcc46e6ec3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0d236aee-9e15-452e-ae01-cb2e01578036): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_71b8469ab2de4dc6ba812bd86a02bb26$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-02-16 06:34:57.000 +00:00','8534ca90-db07-4871-9011-4d41455f192c','2024-08-31 20:47:12.046 +00:00','2024-08-31 20:47:12.046 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_71b8469ab2de4dc6ba812bd86a02bb26$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c5d77692-594b-4a0d-8343-6afbc5bfb33d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'bf0950c4-678f-41ec-a679-f64208fd1dd2' AND "UserTopic"."name" = 'PDA Demo' AND "UserTopic"."issuedAt" = '2021-07-13 05:16:25.000 +00:00' LIMIT 1;
Executing (6164c5ed-2f0d-4a75-b279-bf7c82dcc19e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '04512cf0-6175-4c6f-a757-a792934cc3ae' AND "UserTopic"."name" = 'Introduction to Learning Experience Framework' AND "UserTopic"."issuedAt" = '2022-01-18 07:44:35.000 +00:00' LIMIT 1;
Executing (9ff04093-6230-4b46-ae11-b60ece25adef): COMMIT;
Executing (a61ab3bc-d0bb-4ff9-8440-693b40154014): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '0ab69b7d-9e8e-4127-aa10-ed2172d2ce5e' AND "UserTopic"."name" = 'Crop Water Budgeting Overview' AND "UserTopic"."issuedAt" = '2020-12-16 07:15:55.000 +00:00' LIMIT 1;
Executing (c5d77692-594b-4a0d-8343-6afbc5bfb33d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8985f24a2c464e51af9b09f9d16abd8a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo','2021-07-13 05:16:25.000 +00:00','bf0950c4-678f-41ec-a679-f64208fd1dd2','2024-08-31 20:47:12.052 +00:00','2024-08-31 20:47:12.052 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8985f24a2c464e51af9b09f9d16abd8a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6164c5ed-2f0d-4a75-b279-bf7c82dcc19e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0b042f1a67b34cd9adeca20e6fd1d17a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Learning Experience Framework','2022-01-18 07:44:35.000 +00:00','04512cf0-6175-4c6f-a757-a792934cc3ae','2024-08-31 20:47:12.053 +00:00','2024-08-31 20:47:12.053 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0b042f1a67b34cd9adeca20e6fd1d17a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Concepts and development of Base map,Landuse map and Geo-morphology maps 2021-03-06T11:18:06.000+0000
Executing (e0521fb9-9b41-48a6-8e23-5c1b610d05df): START TRANSACTION;
Executing (0d236aee-9e15-452e-ae01-cb2e01578036): COMMIT;
Executing (c5d77692-594b-4a0d-8343-6afbc5bfb33d): COMMIT;
Executing (e0521fb9-9b41-48a6-8e23-5c1b610d05df): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9c993b60-1289-4c9c-a4cc-5b34e3a4c330' AND "UserTopic"."name" = 'PDA Demo' AND "UserTopic"."issuedAt" = '2021-08-27 06:49:18.000 +00:00' LIMIT 1;
Executing (a61ab3bc-d0bb-4ff9-8440-693b40154014): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2b141e3a62154b8d9e3174c9567594c9$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Crop Water Budgeting Overview','2020-12-16 07:15:55.000 +00:00','0ab69b7d-9e8e-4127-aa10-ed2172d2ce5e','2024-08-31 20:47:12.059 +00:00','2024-08-31 20:47:12.059 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2b141e3a62154b8d9e3174c9567594c9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Shakti
Executing (a73920a5-1e59-4d45-86c0-ab49cd651ee4): START TRANSACTION;
Executing (e0521fb9-9b41-48a6-8e23-5c1b610d05df): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3490f108d32d4df4914d9e99b702844a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo','2021-08-27 06:49:18.000 +00:00','9c993b60-1289-4c9c-a4cc-5b34e3a4c330','2024-08-31 20:47:12.062 +00:00','2024-08-31 20:47:12.062 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3490f108d32d4df4914d9e99b702844a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6164c5ed-2f0d-4a75-b279-bf7c82dcc19e): COMMIT;
topicName Community Participation-Why 2021-04-09T06:48:22.000+0000
Executing (b5366851-9897-4a07-880d-dce44d5ce1d7): START TRANSACTION;
Executing (a73920a5-1e59-4d45-86c0-ab49cd651ee4): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '48567399-eb17-4b8f-89b9-98d3f82e745a' AND "UserTopic"."name" = 'Demonstration of PDA - ICDS Supervisors Training' AND "UserTopic"."issuedAt" = '2021-06-09 10:07:01.000 +00:00' LIMIT 1;
Executing (e0521fb9-9b41-48a6-8e23-5c1b610d05df): COMMIT;
topicName Recap and potential next steps with the learning experience 2022-02-01T06:44:41.000+0000
Executing (65b2dd37-540f-4f18-8092-8f1d44d31955): START TRANSACTION;
Executing (a61ab3bc-d0bb-4ff9-8440-693b40154014): COMMIT;
Executing (a73920a5-1e59-4d45-86c0-ab49cd651ee4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8fe46f70a78b46ca9bcf75c5f0c240d4$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Demonstration of PDA - ICDS Supervisors Training','2021-06-09 10:07:01.000 +00:00','48567399-eb17-4b8f-89b9-98d3f82e745a','2024-08-31 20:47:12.069 +00:00','2024-08-31 20:47:12.069 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8fe46f70a78b46ca9bcf75c5f0c240d4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Hand-on 2021-08-30T11:11:51.000+0000
Executing (18d56520-dfe4-4933-aba3-bbde4da1276c): START TRANSACTION;
Executing (65b2dd37-540f-4f18-8092-8f1d44d31955): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '77f89c51-9282-4033-9a94-daebbc0b515f' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 07:10:38.000 +00:00' LIMIT 1;
Executing (b5366851-9897-4a07-880d-dce44d5ce1d7): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e97fd0ba-3afc-46e6-a51a-d46194af9fe2' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2020-04-07 09:20:44.000 +00:00' LIMIT 1;
Executing (a73920a5-1e59-4d45-86c0-ab49cd651ee4): COMMIT;
Executing (18d56520-dfe4-4933-aba3-bbde4da1276c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e6afff30-727b-4d6a-9a0f-a21ce2ac628c' AND "UserTopic"."name" = 'Introduction to Learning Objectives' AND "UserTopic"."issuedAt" = '2022-02-22 07:40:02.000 +00:00' LIMIT 1;
Executing (65b2dd37-540f-4f18-8092-8f1d44d31955): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4e1e4853f04f4e7ebbec726ec533465a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 07:10:38.000 +00:00','77f89c51-9282-4033-9a94-daebbc0b515f','2024-08-31 20:47:12.073 +00:00','2024-08-31 20:47:12.073 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4e1e4853f04f4e7ebbec726ec533465a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Gaurav Parmar
Executing (cf150e8d-f5be-4a4d-8f82-f4b9a9c2e71d): START TRANSACTION;
Processed user: lavanya
Executing (e368733e-66a3-4e1c-ae8d-21d34c2ef722): START TRANSACTION;
Executing (18d56520-dfe4-4933-aba3-bbde4da1276c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4a2e0457900f4d258ddbd845b8eb71db$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Learning Objectives','2022-02-22 07:40:02.000 +00:00','e6afff30-727b-4d6a-9a0f-a21ce2ac628c','2024-08-31 20:47:12.075 +00:00','2024-08-31 20:47:12.075 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4a2e0457900f4d258ddbd845b8eb71db$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b5366851-9897-4a07-880d-dce44d5ce1d7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_177a4d64be9544dca20a79f000953f7d$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2020-04-07 09:20:44.000 +00:00','e97fd0ba-3afc-46e6-a51a-d46194af9fe2','2024-08-31 20:47:12.076 +00:00','2024-08-31 20:47:12.076 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_177a4d64be9544dca20a79f000953f7d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e368733e-66a3-4e1c-ae8d-21d34c2ef722): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9f743472-2191-48cd-81c8-40eee1d96e31' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2020-03-18 06:48:47.000 +00:00' LIMIT 1;
Executing (18d56520-dfe4-4933-aba3-bbde4da1276c): COMMIT;
Executing (cf150e8d-f5be-4a4d-8f82-f4b9a9c2e71d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '3da1ae03-ee8f-4739-b245-d477b387772d' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 06:20:59.000 +00:00' LIMIT 1;
Executing (65b2dd37-540f-4f18-8092-8f1d44d31955): COMMIT;
Executing (e368733e-66a3-4e1c-ae8d-21d34c2ef722): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c0ea479e76504dd29e33f82f54b0cf59$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2020-03-18 06:48:47.000 +00:00','9f743472-2191-48cd-81c8-40eee1d96e31','2024-08-31 20:47:12.079 +00:00','2024-08-31 20:47:12.079 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c0ea479e76504dd29e33f82f54b0cf59$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Introduction to atomised content 2022-02-15T06:38:35.000+0000
Executing (cc145842-fb04-41ed-ad8e-85159b91f043): START TRANSACTION;
Executing (b5366851-9897-4a07-880d-dce44d5ce1d7): COMMIT;
Executing (cc145842-fb04-41ed-ad8e-85159b91f043): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'd02b6311-6074-4fa1-898d-d9e60793c1a5' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM' AND "UserTopic"."issuedAt" = '2021-08-14 07:27:29.000 +00:00' LIMIT 1;
Executing (cf150e8d-f5be-4a4d-8f82-f4b9a9c2e71d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e586e22b6beb422ea6680b740b3a93cb$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 06:20:59.000 +00:00','3da1ae03-ee8f-4739-b245-d477b387772d','2024-08-31 20:47:12.082 +00:00','2024-08-31 20:47:12.082 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e586e22b6beb422ea6680b740b3a93cb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Chaudhary Puriben kanjibhai
Executing (5f858397-848d-4cff-963a-63d129b4ac0b): START TRANSACTION;
Executing (cc145842-fb04-41ed-ad8e-85159b91f043): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d27fe439d07846059d15c81d9787d699$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM','2021-08-14 07:27:29.000 +00:00','d02b6311-6074-4fa1-898d-d9e60793c1a5','2024-08-31 20:47:12.085 +00:00','2024-08-31 20:47:12.085 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d27fe439d07846059d15c81d9787d699$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e368733e-66a3-4e1c-ae8d-21d34c2ef722): COMMIT;
topicName PDA - Trainer App 2020-04-07T10:41:09.000+0000
Executing (b5ba8276-80fd-43ce-8555-6af4fadd6b25): START TRANSACTION;
Executing (cc145842-fb04-41ed-ad8e-85159b91f043): COMMIT;
Processed user: Hrushikesh Mahapatra 
Executing (217826dd-7dd8-4297-8f4d-5960ab30a128): START TRANSACTION;
Executing (5f858397-848d-4cff-963a-63d129b4ac0b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '84b658c9-cb9b-4984-8f29-7186c1fa81bb' AND "UserTopic"."name" = 'Post-Harvest Management and Value Addition in Spice Crops.' AND "UserTopic"."issuedAt" = '2021-02-24 08:42:13.000 +00:00' LIMIT 1;
Executing (cf150e8d-f5be-4a4d-8f82-f4b9a9c2e71d): COMMIT;
Processed user: Dhirenbhai
Executing (71b62045-a629-4558-9a64-16e06834357b): START TRANSACTION;
Executing (217826dd-7dd8-4297-8f4d-5960ab30a128): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '01f6c773-65a6-4875-a9e1-3c649ba6c333' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:46:06.000 +00:00' LIMIT 1;
Executing (5f858397-848d-4cff-963a-63d129b4ac0b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c9ed85d279664584aa54398adec5e627$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Post-Harvest Management and Value Addition in Spice Crops.','2021-02-24 08:42:13.000 +00:00','84b658c9-cb9b-4984-8f29-7186c1fa81bb','2024-08-31 20:47:12.095 +00:00','2024-08-31 20:47:12.095 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c9ed85d279664584aa54398adec5e627$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b5ba8276-80fd-43ce-8555-6af4fadd6b25): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'ead391a6-2c6e-4389-9bf3-f949dcc4b97d' AND "UserTopic"."name" = 'CBP Orientation' AND "UserTopic"."issuedAt" = '2020-08-17 10:15:40.000 +00:00' LIMIT 1;
Executing (71b62045-a629-4558-9a64-16e06834357b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'd3ad7842-a5a6-462c-8a5d-b693bfd2cf89' AND "UserTopic"."name" = 'PDA Demo' AND "UserTopic"."issuedAt" = '2021-08-27 06:48:52.000 +00:00' LIMIT 1;
Executing (217826dd-7dd8-4297-8f4d-5960ab30a128): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f664a4ea1c694044bdf21bb0b9bac3ab$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:46:06.000 +00:00','01f6c773-65a6-4875-a9e1-3c649ba6c333','2024-08-31 20:47:12.099 +00:00','2024-08-31 20:47:12.099 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f664a4ea1c694044bdf21bb0b9bac3ab$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T07:04:20.000+0000
Executing (3ddb47da-5df7-41b1-8a6d-d9d5a293430c): START TRANSACTION;
Executing (71b62045-a629-4558-9a64-16e06834357b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3839351146044b628644dec9293f937a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo','2021-08-27 06:48:52.000 +00:00','d3ad7842-a5a6-462c-8a5d-b693bfd2cf89','2024-08-31 20:47:12.101 +00:00','2024-08-31 20:47:12.101 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3839351146044b628644dec9293f937a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5f858397-848d-4cff-963a-63d129b4ac0b): COMMIT;
Executing (b5ba8276-80fd-43ce-8555-6af4fadd6b25): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ca57456a237b4a148e08899c9b8fe1e3$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'CBP Orientation','2020-08-17 10:15:40.000 +00:00','ead391a6-2c6e-4389-9bf3-f949dcc4b97d','2024-08-31 20:47:12.103 +00:00','2024-08-31 20:47:12.103 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ca57456a237b4a148e08899c9b8fe1e3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (71b62045-a629-4558-9a64-16e06834357b): COMMIT;
Processed user: Gads b patel
Executing (29c53a60-2e4f-4ee7-9a0f-07512c876fe0): START TRANSACTION;
Executing (3ddb47da-5df7-41b1-8a6d-d9d5a293430c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e7ca78b7-9578-4795-ae25-a860c3976649' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:47:09.000 +00:00' LIMIT 1;
Executing (217826dd-7dd8-4297-8f4d-5960ab30a128): COMMIT;
topicName PDA Hand-on 2021-08-30T11:11:53.000+0000
Executing (df8330b3-d521-4460-a229-53eae23d9054): START TRANSACTION;
Executing (29c53a60-2e4f-4ee7-9a0f-07512c876fe0): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '84eef6b9-3acb-40f3-a8b3-f9ad7a2fb257' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:46:58.000 +00:00' LIMIT 1;
Executing (b5ba8276-80fd-43ce-8555-6af4fadd6b25): COMMIT;
Executing (df8330b3-d521-4460-a229-53eae23d9054): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '518c58b9-1081-495d-8c06-520a0f127641' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:46:34.000 +00:00' LIMIT 1;
Executing (3ddb47da-5df7-41b1-8a6d-d9d5a293430c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_afcb4fc92a624bf2a6f34110f4737977$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:47:09.000 +00:00','e7ca78b7-9578-4795-ae25-a860c3976649','2024-08-31 20:47:12.110 +00:00','2024-08-31 20:47:12.110 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_afcb4fc92a624bf2a6f34110f4737977$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T06:56:55.000+0000
Executing (0a103d4f-a195-4e7d-8689-729b74edd577): START TRANSACTION;
Executing (df8330b3-d521-4460-a229-53eae23d9054): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_dab28e1fe0f9493aa77020be7246a002$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:46:34.000 +00:00','518c58b9-1081-495d-8c06-520a0f127641','2024-08-31 20:47:12.111 +00:00','2024-08-31 20:47:12.111 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_dab28e1fe0f9493aa77020be7246a002$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (29c53a60-2e4f-4ee7-9a0f-07512c876fe0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b77c65e8161d4d35b89a3c79c3815d27$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:46:58.000 +00:00','84eef6b9-3acb-40f3-a8b3-f9ad7a2fb257','2024-08-31 20:47:12.112 +00:00','2024-08-31 20:47:12.112 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b77c65e8161d4d35b89a3c79c3815d27$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Gazala 
Executing (b92e6d28-876c-40fc-88f0-85ef7a7b8e30): START TRANSACTION;
Executing (df8330b3-d521-4460-a229-53eae23d9054): COMMIT;
Executing (29c53a60-2e4f-4ee7-9a0f-07512c876fe0): COMMIT;
Executing (0a103d4f-a195-4e7d-8689-729b74edd577): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e96e2ffe-dcae-4be3-b2b9-6066b9969f8b' AND "UserTopic"."name" = 'Water User Association Training' AND "UserTopic"."issuedAt" = '2021-04-03 09:20:15.000 +00:00' LIMIT 1;
Executing (3ddb47da-5df7-41b1-8a6d-d9d5a293430c): COMMIT;
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T07:22:54.000+0000
Executing (8c50d9b2-93f0-48fc-9c51-c4bfe4fde153): START TRANSACTION;
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T06:56:37.000+0000
Executing (5fe36998-e22e-4052-aca1-13cc93490de9): START TRANSACTION;
Executing (0a103d4f-a195-4e7d-8689-729b74edd577): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d1cfb41a165e4006a22ba0235373f104$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Water User Association Training','2021-04-03 09:20:15.000 +00:00','e96e2ffe-dcae-4be3-b2b9-6066b9969f8b','2024-08-31 20:47:12.119 +00:00','2024-08-31 20:47:12.119 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d1cfb41a165e4006a22ba0235373f104$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b92e6d28-876c-40fc-88f0-85ef7a7b8e30): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'a342759f-5fbb-42dd-804b-f8875e53362f' AND "UserTopic"."name" = 'Virtual Interactions - Needs and Benefits' AND "UserTopic"."issuedAt" = '2020-11-19 10:13:51.000 +00:00' LIMIT 1;
Executing (8c50d9b2-93f0-48fc-9c51-c4bfe4fde153): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f1708eec-aa7b-484e-8e5d-9e066c140cec' AND "UserTopic"."name" = 'Test 1' AND "UserTopic"."issuedAt" = '2021-04-05 07:55:36.000 +00:00' LIMIT 1;
Executing (5fe36998-e22e-4052-aca1-13cc93490de9): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '1da12f92-cab3-4f8b-b8c7-4c9baf5a32f9' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-02-16 06:50:59.000 +00:00' LIMIT 1;
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T06:56:51.000+0000
Executing (c77d1ced-1e25-45ae-97a4-0e583ad7d717): START TRANSACTION;
Executing (8c50d9b2-93f0-48fc-9c51-c4bfe4fde153): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_77d58dda5cb8437c80468097605e7563$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Test 1','2021-04-05 07:55:36.000 +00:00','f1708eec-aa7b-484e-8e5d-9e066c140cec','2024-08-31 20:47:12.122 +00:00','2024-08-31 20:47:12.122 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_77d58dda5cb8437c80468097605e7563$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b92e6d28-876c-40fc-88f0-85ef7a7b8e30): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6ae02adbba4e453891523d43df44248a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Virtual Interactions - Needs and Benefits','2020-11-19 10:13:51.000 +00:00','a342759f-5fbb-42dd-804b-f8875e53362f','2024-08-31 20:47:12.123 +00:00','2024-08-31 20:47:12.123 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6ae02adbba4e453891523d43df44248a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0a103d4f-a195-4e7d-8689-729b74edd577): COMMIT;
Executing (5fe36998-e22e-4052-aca1-13cc93490de9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fe074f8aa604401aa3fecc75a866cbd5$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-02-16 06:50:59.000 +00:00','1da12f92-cab3-4f8b-b8c7-4c9baf5a32f9','2024-08-31 20:47:12.124 +00:00','2024-08-31 20:47:12.124 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fe074f8aa604401aa3fecc75a866cbd5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c77d1ced-1e25-45ae-97a4-0e583ad7d717): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '985b18b2-845a-4900-8463-1a8832f9b8a3' AND "UserTopic"."name" = 'Post-Harvest Management and Value Addition in Spice Crops.' AND "UserTopic"."issuedAt" = '2021-02-24 08:46:28.000 +00:00' LIMIT 1;
Executing (8c50d9b2-93f0-48fc-9c51-c4bfe4fde153): COMMIT;
Processed user: Kaniphnath Anna Madhawai
Executing (67f4c6c1-80c3-44a6-99f6-3e49e56f2fbc): START TRANSACTION;
Executing (b92e6d28-876c-40fc-88f0-85ef7a7b8e30): COMMIT;
Processed user: AR Ahirwal
Executing (72b30ee8-075e-4b8b-8dbb-859c03b7b21a): START TRANSACTION;
Executing (67f4c6c1-80c3-44a6-99f6-3e49e56f2fbc): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'aa0791ae-e282-4470-9c63-a4e4c898bf3e' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM - II' AND "UserTopic"."issuedAt" = '2021-08-14 11:57:50.000 +00:00' LIMIT 1;
Executing (c77d1ced-1e25-45ae-97a4-0e583ad7d717): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_df271bfc822946808c64be8a76ecae74$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Post-Harvest Management and Value Addition in Spice Crops.','2021-02-24 08:46:28.000 +00:00','985b18b2-845a-4900-8463-1a8832f9b8a3','2024-08-31 20:47:12.129 +00:00','2024-08-31 20:47:12.129 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_df271bfc822946808c64be8a76ecae74$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5fe36998-e22e-4052-aca1-13cc93490de9): COMMIT;
Executing (72b30ee8-075e-4b8b-8dbb-859c03b7b21a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'd71b934c-81c3-47d1-8a1b-bfa821e53873' AND "UserTopic"."name" = 'Introduction to Learning Objectives' AND "UserTopic"."issuedAt" = '2022-02-22 07:23:32.000 +00:00' LIMIT 1;
Executing (67f4c6c1-80c3-44a6-99f6-3e49e56f2fbc): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7ed57458f6cb4e6ebb285c6ad1b8128a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM - II','2021-08-14 11:57:50.000 +00:00','aa0791ae-e282-4470-9c63-a4e4c898bf3e','2024-08-31 20:47:12.131 +00:00','2024-08-31 20:47:12.131 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7ed57458f6cb4e6ebb285c6ad1b8128a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA mock session - Churu 2020-12-15T15:10:10.000+0000
Executing (e4c422b5-c121-43c9-b8cf-d0da6132a145): START TRANSACTION;
Executing (72b30ee8-075e-4b8b-8dbb-859c03b7b21a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4e0caffaa8024452b8851c9386ce8e24$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Learning Objectives','2022-02-22 07:23:32.000 +00:00','d71b934c-81c3-47d1-8a1b-bfa821e53873','2024-08-31 20:47:12.132 +00:00','2024-08-31 20:47:12.132 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4e0caffaa8024452b8851c9386ce8e24$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Concepts and development of Base map,Landuse map and Geo-morphology maps 2021-03-06T10:31:09.000+0000
Executing (1d3aa3bd-6ee3-4fd0-958f-7c18a44a8314): START TRANSACTION;
Executing (c77d1ced-1e25-45ae-97a4-0e583ad7d717): COMMIT;
Executing (1d3aa3bd-6ee3-4fd0-958f-7c18a44a8314): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e6a08c80-8a53-4490-a3b4-bd407bfb5558' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM' AND "UserTopic"."issuedAt" = '2021-08-14 07:23:42.000 +00:00' LIMIT 1;
Executing (e4c422b5-c121-43c9-b8cf-d0da6132a145): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c8656f2b-d154-4578-935a-bd44c29e35d0' AND "UserTopic"."name" = 'Demonstration of PDA - ICDS Supervisors Training' AND "UserTopic"."issuedAt" = '2021-06-09 10:22:52.000 +00:00' LIMIT 1;
Executing (67f4c6c1-80c3-44a6-99f6-3e49e56f2fbc): COMMIT;
Executing (1d3aa3bd-6ee3-4fd0-958f-7c18a44a8314): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a62a7382946341e0918896fb6ad9f6db$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM','2021-08-14 07:23:42.000 +00:00','e6a08c80-8a53-4490-a3b4-bd407bfb5558','2024-08-31 20:47:12.136 +00:00','2024-08-31 20:47:12.136 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a62a7382946341e0918896fb6ad9f6db$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Patel kiran kumar bardevbhai
Executing (51489d82-62e5-4013-82a0-64a4bb9f0e47): START TRANSACTION;
Executing (72b30ee8-075e-4b8b-8dbb-859c03b7b21a): COMMIT;
Executing (51489d82-62e5-4013-82a0-64a4bb9f0e47): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b16b7c59-7de2-41e9-9a24-d63e33c0a825' AND "UserTopic"."name" = 'Introduction to Learning Objectives' AND "UserTopic"."issuedAt" = '2022-02-22 07:22:55.000 +00:00' LIMIT 1;
Executing (e4c422b5-c121-43c9-b8cf-d0da6132a145): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e3a9bf12992d431c8ea77bbfb57af372$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Demonstration of PDA - ICDS Supervisors Training','2021-06-09 10:22:52.000 +00:00','c8656f2b-d154-4578-935a-bd44c29e35d0','2024-08-31 20:47:12.139 +00:00','2024-08-31 20:47:12.139 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e3a9bf12992d431c8ea77bbfb57af372$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Dhanjirathod
Executing (34dea67b-db05-41fc-a702-2abf674fb3b0): START TRANSACTION;
Executing (51489d82-62e5-4013-82a0-64a4bb9f0e47): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e4c77fc237cd4d74ab9e6c100e6e7c9a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Learning Objectives','2022-02-22 07:22:55.000 +00:00','b16b7c59-7de2-41e9-9a24-d63e33c0a825','2024-08-31 20:47:12.140 +00:00','2024-08-31 20:47:12.140 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e4c77fc237cd4d74ab9e6c100e6e7c9a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Introduction to Process of planning a lesson flow 2022-03-02T06:58:23.000+0000
Executing (9a25043b-6185-48b5-826a-4e4c0c9170d2): START TRANSACTION;
Executing (1d3aa3bd-6ee3-4fd0-958f-7c18a44a8314): COMMIT;
Executing (9a25043b-6185-48b5-826a-4e4c0c9170d2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f838dac6-0aca-4a3c-a686-f4e012303539' AND "UserTopic"."name" = 'Codes instead of Scans' AND "UserTopic"."issuedAt" = '2021-02-04 06:06:22.000 +00:00' LIMIT 1;
Executing (34dea67b-db05-41fc-a702-2abf674fb3b0): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '0f021e0f-b508-4fbf-91a2-e256ffde7de3' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:36:55.000 +00:00' LIMIT 1;
Executing (e4c422b5-c121-43c9-b8cf-d0da6132a145): COMMIT;
Executing (9a25043b-6185-48b5-826a-4e4c0c9170d2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_36087c6f73114bcebfeaf26e361bb8e0$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Codes instead of Scans','2021-02-04 06:06:22.000 +00:00','f838dac6-0aca-4a3c-a686-f4e012303539','2024-08-31 20:47:12.144 +00:00','2024-08-31 20:47:12.144 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_36087c6f73114bcebfeaf26e361bb8e0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (51489d82-62e5-4013-82a0-64a4bb9f0e47): COMMIT;
Processed user: Rajeshbgai mohanvgai sathvara
Executing (dc496088-f71b-4b6a-902e-12857ba19d4f): START TRANSACTION;
Executing (34dea67b-db05-41fc-a702-2abf674fb3b0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8412a417fa2c415e8c819375f9b36438$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:36:55.000 +00:00','0f021e0f-b508-4fbf-91a2-e256ffde7de3','2024-08-31 20:47:12.146 +00:00','2024-08-31 20:47:12.146 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8412a417fa2c415e8c819375f9b36438$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Miryala  padma
Executing (b629c088-4fe6-4ed2-874d-29e42f24e334): START TRANSACTION;
topicName Introduction to atomised content 2022-02-15T06:23:45.000+0000
Executing (8fbb5a60-fbd0-4afd-85a0-b6048b49b4ff): START TRANSACTION;
Executing (dc496088-f71b-4b6a-902e-12857ba19d4f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '24116eb6-0d95-472a-befc-206e7e1f787c' AND "UserTopic"."name" = 'Zoom for Hubs & Spokes' AND "UserTopic"."issuedAt" = '2020-12-10 06:24:56.000 +00:00' LIMIT 1;
Executing (9a25043b-6185-48b5-826a-4e4c0c9170d2): COMMIT;
Executing (8fbb5a60-fbd0-4afd-85a0-b6048b49b4ff): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '32669155-14ca-462e-b187-55304716c91a' AND "UserTopic"."name" = 'Virtual Interactions - Needs and Benefits' AND "UserTopic"."issuedAt" = '2020-11-04 10:07:17.000 +00:00' LIMIT 1;
Executing (dc496088-f71b-4b6a-902e-12857ba19d4f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bba7ab325ff24d99969b8cd5f8958366$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Zoom for Hubs & Spokes','2020-12-10 06:24:56.000 +00:00','24116eb6-0d95-472a-befc-206e7e1f787c','2024-08-31 20:47:12.150 +00:00','2024-08-31 20:47:12.150 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bba7ab325ff24d99969b8cd5f8958366$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b629c088-4fe6-4ed2-874d-29e42f24e334): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5b560155-18f6-4430-9b9c-e4c45333628e' AND "UserTopic"."name" = 'Demonstration of PDA - ICDS Supervisors Training' AND "UserTopic"."issuedAt" = '2021-06-09 10:09:36.000 +00:00' LIMIT 1;
Executing (34dea67b-db05-41fc-a702-2abf674fb3b0): COMMIT;
Executing (8fbb5a60-fbd0-4afd-85a0-b6048b49b4ff): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2ea1ce58a10841b99d3f1e92d7b1819a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Virtual Interactions - Needs and Benefits','2020-11-04 10:07:17.000 +00:00','32669155-14ca-462e-b187-55304716c91a','2024-08-31 20:47:12.153 +00:00','2024-08-31 20:47:12.153 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2ea1ce58a10841b99d3f1e92d7b1819a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Demo 2021-07-13T05:16:42.000+0000
Executing (525372af-5882-431a-9d6b-dbf0f2955ffd): START TRANSACTION;
Executing (b629c088-4fe6-4ed2-874d-29e42f24e334): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5b76a3c527bc4ae4b4f0dad273819eb0$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Demonstration of PDA - ICDS Supervisors Training','2021-06-09 10:09:36.000 +00:00','5b560155-18f6-4430-9b9c-e4c45333628e','2024-08-31 20:47:12.154 +00:00','2024-08-31 20:47:12.154 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5b76a3c527bc4ae4b4f0dad273819eb0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (dc496088-f71b-4b6a-902e-12857ba19d4f): COMMIT;
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T06:47:05.000+0000
Executing (b7e42d7d-3d70-4241-a886-12d4b6d99695): START TRANSACTION;
Executing (525372af-5882-431a-9d6b-dbf0f2955ffd): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e88b61f8-77ab-4db5-8925-dd7986aedef2' AND "UserTopic"."name" = 'CBP Orientation' AND "UserTopic"."issuedAt" = '2020-08-25 06:11:13.000 +00:00' LIMIT 1;
Executing (8fbb5a60-fbd0-4afd-85a0-b6048b49b4ff): COMMIT;
topicName PDA - Participant App 2020-08-19T09:59:58.000+0000
Executing (3cbb486d-31d2-4126-ae18-9eafae3e6bf4): START TRANSACTION;
Executing (b7e42d7d-3d70-4241-a886-12d4b6d99695): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b93fb22c-4617-4d60-a38e-8718ad7b228f' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:46:03.000 +00:00' LIMIT 1;
Executing (b629c088-4fe6-4ed2-874d-29e42f24e334): COMMIT;
Executing (3cbb486d-31d2-4126-ae18-9eafae3e6bf4): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'ffb16e31-3fd8-4fc3-94e1-63c6b68c451e' AND "UserTopic"."name" = 'CBP Orientation' AND "UserTopic"."issuedAt" = '2020-08-28 10:16:05.000 +00:00' LIMIT 1;
Executing (b7e42d7d-3d70-4241-a886-12d4b6d99695): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_042daf23e4244bd58fa940c3a34b43f7$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:46:03.000 +00:00','b93fb22c-4617-4d60-a38e-8718ad7b228f','2024-08-31 20:47:12.160 +00:00','2024-08-31 20:47:12.160 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_042daf23e4244bd58fa940c3a34b43f7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (525372af-5882-431a-9d6b-dbf0f2955ffd): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b8ff447afed04428aef10ba46e58d33c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'CBP Orientation','2020-08-25 06:11:13.000 +00:00','e88b61f8-77ab-4db5-8925-dd7986aedef2','2024-08-31 20:47:12.162 +00:00','2024-08-31 20:47:12.162 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b8ff447afed04428aef10ba46e58d33c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Guided Mentoring Format 2020-11-04T10:39:09.000+0000
Executing (2b5e856f-53ad-45ad-8836-14c6145f1d4d): START TRANSACTION;
Executing (3cbb486d-31d2-4126-ae18-9eafae3e6bf4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_59c395e7ca24478baec80fc0e30e48e4$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'CBP Orientation','2020-08-28 10:16:05.000 +00:00','ffb16e31-3fd8-4fc3-94e1-63c6b68c451e','2024-08-31 20:47:12.165 +00:00','2024-08-31 20:47:12.165 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_59c395e7ca24478baec80fc0e30e48e4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b7e42d7d-3d70-4241-a886-12d4b6d99695): COMMIT;
Processed user: Naveen L 
Executing (de87f904-23d1-43cc-a5b1-48f9c96564de): START TRANSACTION;
Executing (3cbb486d-31d2-4126-ae18-9eafae3e6bf4): COMMIT;
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T06:58:58.000+0000
Executing (d48173d1-f1e9-4580-9954-64ed25b36dc3): START TRANSACTION;
Executing (2b5e856f-53ad-45ad-8836-14c6145f1d4d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c1f975e4-9644-4b1f-afc4-b7dc270bf848' AND "UserTopic"."name" = 'Demonstration of PDA - ICDS Supervisors Training' AND "UserTopic"."issuedAt" = '2021-06-09 10:51:06.000 +00:00' LIMIT 1;
Executing (525372af-5882-431a-9d6b-dbf0f2955ffd): COMMIT;
topicName CBP Orientation 2020-08-25T06:11:13.000+0000
Executing (620fd43f-9b11-4c03-af10-a2acf53234fd): START TRANSACTION;
Executing (d48173d1-f1e9-4580-9954-64ed25b36dc3): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c55bd79b-042e-46bf-9e18-f4dd8e383e5d' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM - III' AND "UserTopic"."issuedAt" = '2021-08-18 11:51:07.000 +00:00' LIMIT 1;
Executing (de87f904-23d1-43cc-a5b1-48f9c96564de): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '743c12ee-242e-452d-88b0-9744cfd55eaa' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM' AND "UserTopic"."issuedAt" = '2021-08-14 07:31:36.000 +00:00' LIMIT 1;
Executing (620fd43f-9b11-4c03-af10-a2acf53234fd): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '16e92e92-b29d-433b-8cff-121f6a631419' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM' AND "UserTopic"."issuedAt" = '2021-08-14 07:14:40.000 +00:00' LIMIT 1;
Executing (d48173d1-f1e9-4580-9954-64ed25b36dc3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_56f4b777155f4ae7b013f1f3c25d2534$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM - III','2021-08-18 11:51:07.000 +00:00','c55bd79b-042e-46bf-9e18-f4dd8e383e5d','2024-08-31 20:47:12.174 +00:00','2024-08-31 20:47:12.174 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_56f4b777155f4ae7b013f1f3c25d2534$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2b5e856f-53ad-45ad-8836-14c6145f1d4d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e89ad9915bc04e8cb3a53039c5dc94da$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Demonstration of PDA - ICDS Supervisors Training','2021-06-09 10:51:06.000 +00:00','c1f975e4-9644-4b1f-afc4-b7dc270bf848','2024-08-31 20:47:12.175 +00:00','2024-08-31 20:47:12.175 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e89ad9915bc04e8cb3a53039c5dc94da$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Balakrishnan 
Executing (6d884006-8107-4d9f-808b-6050ce5b7f08): START TRANSACTION;
Executing (620fd43f-9b11-4c03-af10-a2acf53234fd): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0c86c7ed29f04c5c93e055600c6df8fc$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM','2021-08-14 07:14:40.000 +00:00','16e92e92-b29d-433b-8cff-121f6a631419','2024-08-31 20:47:12.177 +00:00','2024-08-31 20:47:12.177 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0c86c7ed29f04c5c93e055600c6df8fc$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d48173d1-f1e9-4580-9954-64ed25b36dc3): COMMIT;
Executing (de87f904-23d1-43cc-a5b1-48f9c96564de): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ac53f8a4915c433187ca2ab2e561ce5c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM','2021-08-14 07:31:36.000 +00:00','743c12ee-242e-452d-88b0-9744cfd55eaa','2024-08-31 20:47:12.178 +00:00','2024-08-31 20:47:12.178 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ac53f8a4915c433187ca2ab2e561ce5c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName TOT of Bhujal Janakar 2021-02-05T07:24:06.000+0000
Executing (c4d26976-ced2-42db-a28a-5f68ba7a6dd2): START TRANSACTION;
Executing (6d884006-8107-4d9f-808b-6050ce5b7f08): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '452450c8-d384-4c61-83f8-4faf11a6d8ef' AND "UserTopic"."name" = 'PDA - Trainer App' AND "UserTopic"."issuedAt" = '2019-12-26 11:16:36.000 +00:00' LIMIT 1;
Executing (2b5e856f-53ad-45ad-8836-14c6145f1d4d): COMMIT;
Executing (c4d26976-ced2-42db-a28a-5f68ba7a6dd2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '88826799-8409-4769-bbfc-4885256b9ec8' AND "UserTopic"."name" = 'Post-Harvest Management and Value Addition in Spice Crops.' AND "UserTopic"."issuedAt" = '2021-02-24 10:53:25.000 +00:00' LIMIT 1;
Executing (620fd43f-9b11-4c03-af10-a2acf53234fd): COMMIT;
Executing (de87f904-23d1-43cc-a5b1-48f9c96564de): COMMIT;
Executing (c4d26976-ced2-42db-a28a-5f68ba7a6dd2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_80a53f6d9bf448af8d7b928b66885ba7$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Post-Harvest Management and Value Addition in Spice Crops.','2021-02-24 10:53:25.000 +00:00','88826799-8409-4769-bbfc-4885256b9ec8','2024-08-31 20:47:12.182 +00:00','2024-08-31 20:47:12.182 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_80a53f6d9bf448af8d7b928b66885ba7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6d884006-8107-4d9f-808b-6050ce5b7f08): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b5298962940343cc82d22aeae05418ab$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Trainer App','2019-12-26 11:16:36.000 +00:00','452450c8-d384-4c61-83f8-4faf11a6d8ef','2024-08-31 20:47:12.183 +00:00','2024-08-31 20:47:12.183 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b5298962940343cc82d22aeae05418ab$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Parimi Rajini
Executing (6224c23e-759f-4c43-8d7e-af0cc3805074): START TRANSACTION;
Processed user: Sonal sachin sathawara
Executing (75dd5550-a70a-47ca-a79a-612418084449): START TRANSACTION;
Processed user: Tushar Jethwa
Executing (34c2ed25-d823-40c7-85c4-8618b09914e5): START TRANSACTION;
Executing (75dd5550-a70a-47ca-a79a-612418084449): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '94c0c622-52e4-4601-8589-a1abcf398672' AND "UserTopic"."name" = 'Midterm Measurement of Desilting(Jalsamruddhi)' AND "UserTopic"."issuedAt" = '2021-02-20 12:04:09.000 +00:00' LIMIT 1;
Executing (c4d26976-ced2-42db-a28a-5f68ba7a6dd2): COMMIT;
Executing (6224c23e-759f-4c43-8d7e-af0cc3805074): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2cbe0329-07a4-481a-bf7a-22b814a464e5' AND "UserTopic"."name" = 'PDA - Trainer App' AND "UserTopic"."issuedAt" = '2019-12-26 11:16:40.000 +00:00' LIMIT 1;
Executing (6d884006-8107-4d9f-808b-6050ce5b7f08): COMMIT;
Executing (75dd5550-a70a-47ca-a79a-612418084449): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_070e1a98507842ed8ff759c04370c299$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Midterm Measurement of Desilting(Jalsamruddhi)','2021-02-20 12:04:09.000 +00:00','94c0c622-52e4-4601-8589-a1abcf398672','2024-08-31 20:47:12.191 +00:00','2024-08-31 20:47:12.191 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_070e1a98507842ed8ff759c04370c299$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Kadiya vidhi kirtibhai
Executing (912592f4-d51b-48d0-91ae-28fdea5e9965): START TRANSACTION;
Executing (6224c23e-759f-4c43-8d7e-af0cc3805074): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_21a6fd925aa74a4d8bd2273e11dddff1$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Trainer App','2019-12-26 11:16:40.000 +00:00','2cbe0329-07a4-481a-bf7a-22b814a464e5','2024-08-31 20:47:12.193 +00:00','2024-08-31 20:47:12.193 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_21a6fd925aa74a4d8bd2273e11dddff1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (34c2ed25-d823-40c7-85c4-8618b09914e5): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '0c28fe58-1af0-44b9-8d42-d25138965205' AND "UserTopic"."name" = 'Taking good photos and making posters' AND "UserTopic"."issuedAt" = '2022-04-05 07:35:16.000 +00:00' LIMIT 1;
Executing (75dd5550-a70a-47ca-a79a-612418084449): COMMIT;
Executing (912592f4-d51b-48d0-91ae-28fdea5e9965): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4f3f5e8e-de1b-411a-9454-9038cca34335' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-02-16 06:48:09.000 +00:00' LIMIT 1;
topicName PDA - Participant App 2019-12-26T10:41:05+0000
Executing (d9d62cda-c279-4960-8de6-182e3373e674): START TRANSACTION;
Processed user: Akash Chine
Executing (99290f45-ae1a-4c2f-b6e0-bb9d0cbab6f8): START TRANSACTION;
Executing (912592f4-d51b-48d0-91ae-28fdea5e9965): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8737f68f94344f85b5074e92a4e95b14$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-02-16 06:48:09.000 +00:00','4f3f5e8e-de1b-411a-9454-9038cca34335','2024-08-31 20:47:12.197 +00:00','2024-08-31 20:47:12.197 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8737f68f94344f85b5074e92a4e95b14$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (34c2ed25-d823-40c7-85c4-8618b09914e5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7fa58600841e4c6db393b57555bf05cb$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Taking good photos and making posters','2022-04-05 07:35:16.000 +00:00','0c28fe58-1af0-44b9-8d42-d25138965205','2024-08-31 20:47:12.198 +00:00','2024-08-31 20:47:12.198 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7fa58600841e4c6db393b57555bf05cb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6224c23e-759f-4c43-8d7e-af0cc3805074): COMMIT;
Executing (99290f45-ae1a-4c2f-b6e0-bb9d0cbab6f8): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'e6f9c8f7-019e-4d38-b18a-5acf5900c008' AND "UserTrainer"."name" = 'Introduction to Learning Objectives' AND "UserTrainer"."issueDate" = '2022-02-22 07:30:00.000 +00:00' LIMIT 1;
Executing (912592f4-d51b-48d0-91ae-28fdea5e9965): COMMIT;
Executing (d9d62cda-c279-4960-8de6-182e3373e674): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '305c306d-64cc-45eb-b51c-6bcb69c00291' AND "UserTopic"."name" = 'Introduction to Learning Objectives' AND "UserTopic"."issuedAt" = '2022-02-22 07:23:47.000 +00:00' LIMIT 1;
Executing (99290f45-ae1a-4c2f-b6e0-bb9d0cbab6f8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b2efe405239548caa157bd9d4d52a7ce$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Learning Objectives','2022-02-22 07:30:00.000 +00:00','e6f9c8f7-019e-4d38-b18a-5acf5900c008','2024-08-31 20:47:12.202 +00:00','2024-08-31 20:47:12.202 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b2efe405239548caa157bd9d4d52a7ce$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Concepts and development of Base map,Landuse map and Geo-morphology maps 2021-03-06T10:30:09.000+0000
Executing (c8f52d5d-e8d4-4cbc-bae8-faf5ea879462): START TRANSACTION;
topicName PDA - Participant App 2019-12-26T10:41:19+0000
Executing (1f5c4237-a784-4304-a89c-3b62bd451ef7): START TRANSACTION;
Executing (34c2ed25-d823-40c7-85c4-8618b09914e5): COMMIT;
Executing (99290f45-ae1a-4c2f-b6e0-bb9d0cbab6f8): COMMIT;
Executing (c8f52d5d-e8d4-4cbc-bae8-faf5ea879462): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'a6241a20-9982-4041-a67d-7e2a2e43f6b9' AND "UserTrainer"."name" = 'Introduction to Learning Objectives' AND "UserTrainer"."issueDate" = '2022-02-22 07:30:00.000 +00:00' LIMIT 1;
Executing (1f5c4237-a784-4304-a89c-3b62bd451ef7): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '22920d14-8b63-47ab-aebc-5e2b69deacb3' AND "UserTopic"."name" = 'Virtual Interactions - Needs and Benefits' AND "UserTopic"."issuedAt" = '2020-11-19 10:13:05.000 +00:00' LIMIT 1;
Executing (d9d62cda-c279-4960-8de6-182e3373e674): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_91aed3a0df3749699f0dff89231460d7$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Learning Objectives','2022-02-22 07:23:47.000 +00:00','305c306d-64cc-45eb-b51c-6bcb69c00291','2024-08-31 20:47:12.207 +00:00','2024-08-31 20:47:12.207 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_91aed3a0df3749699f0dff89231460d7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Image composition and layouts LL3
Executing (7365c01c-fb3c-4636-9864-52edd474289d): START TRANSACTION;
Executing (c8f52d5d-e8d4-4cbc-bae8-faf5ea879462): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7e158e496d4e4d45b56cdef57bb74c5a$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Learning Objectives','2022-02-22 07:30:00.000 +00:00','a6241a20-9982-4041-a67d-7e2a2e43f6b9','2024-08-31 20:47:12.208 +00:00','2024-08-31 20:47:12.208 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7e158e496d4e4d45b56cdef57bb74c5a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1f5c4237-a784-4304-a89c-3b62bd451ef7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6e1f996e81ce4a809151966996e98160$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Virtual Interactions - Needs and Benefits','2020-11-19 10:13:05.000 +00:00','22920d14-8b63-47ab-aebc-5e2b69deacb3','2024-08-31 20:47:12.209 +00:00','2024-08-31 20:47:12.209 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6e1f996e81ce4a809151966996e98160$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Introduction to Visual Design LL3 2022-03-22T07:24:30.000+0000
Executing (73de19aa-7aed-40bc-88f7-7ab5067e466b): START TRANSACTION;
Executing (7365c01c-fb3c-4636-9864-52edd474289d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '59921a3a-49f8-482e-9cab-dd64ad59a839' AND "UserTopic"."name" = 'Well Monitoring - Example' AND "UserTopic"."issuedAt" = '2022-06-16 09:26:11.000 +00:00' LIMIT 1;
Executing (c8f52d5d-e8d4-4cbc-bae8-faf5ea879462): COMMIT;
Executing (d9d62cda-c279-4960-8de6-182e3373e674): COMMIT;
Executing (7365c01c-fb3c-4636-9864-52edd474289d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a528cb8579bc430d814a4f76f17dcf44$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Well Monitoring - Example','2022-06-16 09:26:11.000 +00:00','59921a3a-49f8-482e-9cab-dd64ad59a839','2024-08-31 20:47:12.213 +00:00','2024-08-31 20:47:12.213 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a528cb8579bc430d814a4f76f17dcf44$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (73de19aa-7aed-40bc-88f7-7ab5067e466b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '192c494b-39ec-4cdc-b0b0-e4322d336e69' AND "UserTopic"."name" = 'Churu Fluorosis PDA demo' AND "UserTopic"."issuedAt" = '2020-10-21 10:48:22.000 +00:00' LIMIT 1;
Executing (1f5c4237-a784-4304-a89c-3b62bd451ef7): COMMIT;
Executing (7365c01c-fb3c-4636-9864-52edd474289d): COMMIT;
Executing (73de19aa-7aed-40bc-88f7-7ab5067e466b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_117cd06f0e774a17af38b1bab13aa9d1$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Churu Fluorosis PDA demo','2020-10-21 10:48:22.000 +00:00','192c494b-39ec-4cdc-b0b0-e4322d336e69','2024-08-31 20:47:12.217 +00:00','2024-08-31 20:47:12.217 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_117cd06f0e774a17af38b1bab13aa9d1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Image composition and layouts LL3
Executing (e4435aac-7717-4c6e-89c3-88891cc56ed4): START TRANSACTION;
topicName Image composition and layouts LL3 2022-03-29T07:40:23.000+0000
Executing (6f5f56f3-8a64-43af-8bb8-0d3aad8cabfe): START TRANSACTION;
topicName Understanding the Functional Grid 2022-09-15T04:47:28.000+0000
Executing (3a00c6eb-7a40-4597-b53d-1da2dad6e5f1): START TRANSACTION;
Executing (73de19aa-7aed-40bc-88f7-7ab5067e466b): COMMIT;
Executing (e4435aac-7717-4c6e-89c3-88891cc56ed4): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '945619e0-0d9c-435a-ad20-c4d392b263bd' AND "UserTopic"."name" = 'TOT of Bhujal Janakar' AND "UserTopic"."issuedAt" = '2021-02-05 07:25:46.000 +00:00' LIMIT 1;
Executing (6f5f56f3-8a64-43af-8bb8-0d3aad8cabfe): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'fb03a265-7824-49ee-a49d-fbe0c9e82564' AND "UserTopic"."name" = 'PDA Demo and Deployment Training for Trainers | ACT' AND "UserTopic"."issuedAt" = '2020-12-11 12:41:37.000 +00:00' LIMIT 1;
Processed user: Arvind  Singh
Executing (e77b1311-d20f-4064-8469-5dfdef3ec5da): START TRANSACTION;
Executing (3a00c6eb-7a40-4597-b53d-1da2dad6e5f1): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'ffe886cb-1150-4c72-8899-fe2c0927826d' AND "UserTopic"."name" = 'PDA Refresher Training for ACT and DSC' AND "UserTopic"."issuedAt" = '2021-10-07 11:59:39.000 +00:00' LIMIT 1;
topicName PDA mock session - Churu 2020-12-15T15:10:05.000+0000
Executing (a44089fb-012e-4629-905f-dacb20895412): START TRANSACTION;
Executing (e4435aac-7717-4c6e-89c3-88891cc56ed4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e008e79f6d244274871898939382b9ee$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'TOT of Bhujal Janakar','2021-02-05 07:25:46.000 +00:00','945619e0-0d9c-435a-ad20-c4d392b263bd','2024-08-31 20:47:12.229 +00:00','2024-08-31 20:47:12.229 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e008e79f6d244274871898939382b9ee$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6f5f56f3-8a64-43af-8bb8-0d3aad8cabfe): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e42ff6683a7b4fccadaef6339d387396$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo and Deployment Training for Trainers | ACT','2020-12-11 12:41:37.000 +00:00','fb03a265-7824-49ee-a49d-fbe0c9e82564','2024-08-31 20:47:12.231 +00:00','2024-08-31 20:47:12.231 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e42ff6683a7b4fccadaef6339d387396$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e77b1311-d20f-4064-8469-5dfdef3ec5da): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4e526a75-c8d4-436b-8245-b7f7dd485186' AND "UserTopic"."name" = 'CBP Orientation' AND "UserTopic"."issuedAt" = '2020-08-17 10:15:25.000 +00:00' LIMIT 1;
Executing (3a00c6eb-7a40-4597-b53d-1da2dad6e5f1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c74805ae76dd47218daade669ae96fbd$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Refresher Training for ACT and DSC','2021-10-07 11:59:39.000 +00:00','ffe886cb-1150-4c72-8899-fe2c0927826d','2024-08-31 20:47:12.234 +00:00','2024-08-31 20:47:12.234 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c74805ae76dd47218daade669ae96fbd$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a44089fb-012e-4629-905f-dacb20895412): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4c9c2ac4-1b68-49f8-811d-2f555eda7f69' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM - II' AND "UserTopic"."issuedAt" = '2021-08-14 11:59:37.000 +00:00' LIMIT 1;
Executing (e4435aac-7717-4c6e-89c3-88891cc56ed4): COMMIT;
Executing (6f5f56f3-8a64-43af-8bb8-0d3aad8cabfe): COMMIT;
Executing (3a00c6eb-7a40-4597-b53d-1da2dad6e5f1): COMMIT;
Executing (a44089fb-012e-4629-905f-dacb20895412): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b4bbf11505d94efbad2f977ee7598c98$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM - II','2021-08-14 11:59:37.000 +00:00','4c9c2ac4-1b68-49f8-811d-2f555eda7f69','2024-08-31 20:47:12.238 +00:00','2024-08-31 20:47:12.238 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b4bbf11505d94efbad2f977ee7598c98$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Data collection and Monitoring 2021-01-06T07:52:58.000+0000
Executing (1725f920-8d5f-4b3c-b0c6-c88cd7445300): START TRANSACTION;
Executing (e77b1311-d20f-4064-8469-5dfdef3ec5da): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b62ef28d8f704d0f930657f736d41e6c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'CBP Orientation','2020-08-17 10:15:25.000 +00:00','4e526a75-c8d4-436b-8245-b7f7dd485186','2024-08-31 20:47:12.241 +00:00','2024-08-31 20:47:12.241 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b62ef28d8f704d0f930657f736d41e6c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Hardi Sukhadiya
Executing (2df7add0-162a-4586-87b3-88431d75933c): START TRANSACTION;
Executing (a44089fb-012e-4629-905f-dacb20895412): COMMIT;
Executing (1725f920-8d5f-4b3c-b0c6-c88cd7445300): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'd848a85a-5f98-4df7-81a3-118fa56f1780' AND "UserTopic"."name" = 'Post-Harvest Management and Value Addition in Spice Crops.' AND "UserTopic"."issuedAt" = '2021-02-24 08:42:44.000 +00:00' LIMIT 1;
topicName TOT of Bhujal Janakar 2021-02-05T07:23:46.000+0000
Executing (de529096-ee68-45a0-813f-da9027e039fd): START TRANSACTION;
Executing (2df7add0-162a-4586-87b3-88431d75933c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6df4face-5699-4fa1-bd64-0c565ee7440d' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM - III' AND "UserTopic"."issuedAt" = '2021-08-18 12:01:31.000 +00:00' LIMIT 1;
Processed user: Chandan Chawla
Executing (ed7ad6aa-bed8-4b7e-9f28-6d9052c6e8e1): START TRANSACTION;
Executing (1725f920-8d5f-4b3c-b0c6-c88cd7445300): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7668ad10e6894309bc740ba5739d68b0$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Post-Harvest Management and Value Addition in Spice Crops.','2021-02-24 08:42:44.000 +00:00','d848a85a-5f98-4df7-81a3-118fa56f1780','2024-08-31 20:47:12.248 +00:00','2024-08-31 20:47:12.248 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7668ad10e6894309bc740ba5739d68b0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e77b1311-d20f-4064-8469-5dfdef3ec5da): COMMIT;
Executing (2df7add0-162a-4586-87b3-88431d75933c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_387a94eea9514831a35b99c613322fef$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM - III','2021-08-18 12:01:31.000 +00:00','6df4face-5699-4fa1-bd64-0c565ee7440d','2024-08-31 20:47:12.251 +00:00','2024-08-31 20:47:12.251 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_387a94eea9514831a35b99c613322fef$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ed7ad6aa-bed8-4b7e-9f28-6d9052c6e8e1): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'fe2cf7fe-c2da-42ff-bc9b-0bd9169b1f37' AND "UserTrainer"."name" = 'Test run for Assisted Scanning' AND "UserTrainer"."issueDate" = '2020-08-05 13:10:00.000 +00:00' LIMIT 1;
Executing (de529096-ee68-45a0-813f-da9027e039fd): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5264b284-4789-4883-81a1-0f7233e0c848' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-02-16 06:43:55.000 +00:00' LIMIT 1;
Executing (2df7add0-162a-4586-87b3-88431d75933c): COMMIT;
Executing (ed7ad6aa-bed8-4b7e-9f28-6d9052c6e8e1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_19b0d7dc4bbe4e90830ed7129ae80dbf$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Test run for Assisted Scanning','2020-08-05 13:10:00.000 +00:00','fe2cf7fe-c2da-42ff-bc9b-0bd9169b1f37','2024-08-31 20:47:12.255 +00:00','2024-08-31 20:47:12.255 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_19b0d7dc4bbe4e90830ed7129ae80dbf$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Orientation on Abhy and PGWM - III 2021-08-18T11:28:31.000+0000
Executing (eb4e342e-0d7d-4339-9569-73c8384af74d): START TRANSACTION;
Executing (1725f920-8d5f-4b3c-b0c6-c88cd7445300): COMMIT;
topicName TOT of Bhujal Janakar 2021-02-05T07:24:27.000+0000
Executing (1036a8a1-2c69-4199-979a-cf9301e7b71c): START TRANSACTION;
Executing (eb4e342e-0d7d-4339-9569-73c8384af74d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '78fb6721-9eb2-4099-98f7-75340a08c883' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-02-16 06:41:03.000 +00:00' LIMIT 1;
Executing (de529096-ee68-45a0-813f-da9027e039fd): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5d6010ecde1c4582baff30cad6539968$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-02-16 06:43:55.000 +00:00','5264b284-4789-4883-81a1-0f7233e0c848','2024-08-31 20:47:12.259 +00:00','2024-08-31 20:47:12.259 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5d6010ecde1c4582baff30cad6539968$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1036a8a1-2c69-4199-979a-cf9301e7b71c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9731fb01-dfad-4a22-b1f3-b9185873d4ae' AND "UserTopic"."name" = 'Demonstration of PDA - ICDS Supervisors Training' AND "UserTopic"."issuedAt" = '2021-06-09 10:05:46.000 +00:00' LIMIT 1;
Executing (eb4e342e-0d7d-4339-9569-73c8384af74d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e7aa8913f766437189be722402b680d1$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-02-16 06:41:03.000 +00:00','78fb6721-9eb2-4099-98f7-75340a08c883','2024-08-31 20:47:12.261 +00:00','2024-08-31 20:47:12.261 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e7aa8913f766437189be722402b680d1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Patel SURESHBHAI SADUTHALA 
Executing (f63c3668-ee39-4762-91e9-219f283fed8c): START TRANSACTION;
Executing (ed7ad6aa-bed8-4b7e-9f28-6d9052c6e8e1): COMMIT;
Executing (1036a8a1-2c69-4199-979a-cf9301e7b71c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_70ed3ab16b3d416ba69528b9781c95ec$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Demonstration of PDA - ICDS Supervisors Training','2021-06-09 10:05:46.000 +00:00','9731fb01-dfad-4a22-b1f3-b9185873d4ae','2024-08-31 20:47:12.263 +00:00','2024-08-31 20:47:12.263 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_70ed3ab16b3d416ba69528b9781c95ec$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f63c3668-ee39-4762-91e9-219f283fed8c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c4f487d3-f35f-4aaa-9e17-e8486db834c2' AND "UserTopic"."name" = 'CBP Orientation' AND "UserTopic"."issuedAt" = '2020-08-28 10:16:10.000 +00:00' LIMIT 1;
Executing (de529096-ee68-45a0-813f-da9027e039fd): COMMIT;
Executing (1036a8a1-2c69-4199-979a-cf9301e7b71c): COMMIT;
Executing (f63c3668-ee39-4762-91e9-219f283fed8c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_27c459ce09e24892a9bb7fe00a251fac$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'CBP Orientation','2020-08-28 10:16:10.000 +00:00','c4f487d3-f35f-4aaa-9e17-e8486db834c2','2024-08-31 20:47:12.267 +00:00','2024-08-31 20:47:12.267 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_27c459ce09e24892a9bb7fe00a251fac$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (eb4e342e-0d7d-4339-9569-73c8384af74d): COMMIT;
trainertopicname Test run for Assisted Scanning
Executing (be3f806a-ecc8-48c5-b21a-dcb7f9144c8c): START TRANSACTION;
Processed user: Dharavath sunitha
Executing (7502cb43-278c-4922-8758-d6e53722e4bc): START TRANSACTION;
Executing (f63c3668-ee39-4762-91e9-219f283fed8c): COMMIT;
topicName Concepts and development of Base map,Landuse map and Geo-morphology maps 2021-03-06T10:31:04.000+0000
Executing (cd9e049a-4d6a-49d1-8f91-72a4e2d2c562): START TRANSACTION;
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-01-30T09:06:45.000+0000
Executing (02b5e9af-0d4a-4968-8b1e-8902b90c7c1d): START TRANSACTION;
Executing (7502cb43-278c-4922-8758-d6e53722e4bc): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'a7756c59-d51a-4cff-af34-75b0403432f1' AND "UserTopic"."name" = 'PDA - Program App' AND "UserTopic"."issuedAt" = '2019-12-05 07:00:28.000 +00:00' LIMIT 1;
topicName PMT Functions & CBP Training Calendar 2020-10-13T10:35:42.000+0000
Executing (6472926c-f221-4626-a13b-57f413245fb5): START TRANSACTION;
Executing (cd9e049a-4d6a-49d1-8f91-72a4e2d2c562): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '04c32002-e577-43b2-901f-aca2a6004b1e' AND "UserTopic"."name" = 'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs         s' AND "UserTopic"."issuedAt" = '2023-01-02 11:35:23.000 +00:00' LIMIT 1;
Executing (be3f806a-ecc8-48c5-b21a-dcb7f9144c8c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9b6cd454-3a3c-49bf-b0d7-e7d797f03585' AND "UserTopic"."name" = 'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs' AND "UserTopic"."issuedAt" = '2023-01-02 11:35:10.000 +00:00' LIMIT 1;
Executing (7502cb43-278c-4922-8758-d6e53722e4bc): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fe7ad15d93d04907920e906a9bdd2a82$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Program App','2019-12-05 07:00:28.000 +00:00','a7756c59-d51a-4cff-af34-75b0403432f1','2024-08-31 20:47:12.278 +00:00','2024-08-31 20:47:12.278 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fe7ad15d93d04907920e906a9bdd2a82$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6472926c-f221-4626-a13b-57f413245fb5): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2c7ec408-8187-4669-96c5-6aa13608a15d' AND "UserTopic"."name" = 'Capacity Building @ Scale - Experiences from FES in Odisha' AND "UserTopic"."issuedAt" = '2021-06-04 11:24:27.000 +00:00' LIMIT 1;
Executing (cd9e049a-4d6a-49d1-8f91-72a4e2d2c562): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f0d9326b7af34edc861e193215c54f5c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs         s','2023-01-02 11:35:23.000 +00:00','04c32002-e577-43b2-901f-aca2a6004b1e','2024-08-31 20:47:12.281 +00:00','2024-08-31 20:47:12.281 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f0d9326b7af34edc861e193215c54f5c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (02b5e9af-0d4a-4968-8b1e-8902b90c7c1d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'fe52cdee-ac18-4e1b-adbf-746fcbca24a1' AND "UserTopic"."name" = 'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs         s' AND "UserTopic"."issuedAt" = '2023-01-02 11:36:14.000 +00:00' LIMIT 1;
Executing (7502cb43-278c-4922-8758-d6e53722e4bc): COMMIT;
Executing (6472926c-f221-4626-a13b-57f413245fb5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a52739ca717d48328a8d87426513cf19$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity Building @ Scale - Experiences from FES in Odisha','2021-06-04 11:24:27.000 +00:00','2c7ec408-8187-4669-96c5-6aa13608a15d','2024-08-31 20:47:12.285 +00:00','2024-08-31 20:47:12.285 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a52739ca717d48328a8d87426513cf19$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (be3f806a-ecc8-48c5-b21a-dcb7f9144c8c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6466a27f87114185a0965a2513672afa$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs','2023-01-02 11:35:10.000 +00:00','9b6cd454-3a3c-49bf-b0d7-e7d797f03585','2024-08-31 20:47:12.286 +00:00','2024-08-31 20:47:12.286 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6466a27f87114185a0965a2513672afa$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA - Trainer App 2019-12-05T07:26:09+0000
Executing (62a01d77-8d7e-4cb2-8755-bc57cae83700): START TRANSACTION;
Executing (cd9e049a-4d6a-49d1-8f91-72a4e2d2c562): COMMIT;
Executing (02b5e9af-0d4a-4968-8b1e-8902b90c7c1d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9966ff597e85486ca8bd24d9fefedb9e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs         s','2023-01-02 11:36:14.000 +00:00','fe52cdee-ac18-4e1b-adbf-746fcbca24a1','2024-08-31 20:47:12.290 +00:00','2024-08-31 20:47:12.290 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9966ff597e85486ca8bd24d9fefedb9e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (62a01d77-8d7e-4cb2-8755-bc57cae83700): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b2104b7e-50fb-4455-9a78-7e764a56ea9e' AND "UserTopic"."name" = 'Capacity Building @ Scale - Experiences from FES in Odisha' AND "UserTopic"."issuedAt" = '2021-06-04 11:23:51.000 +00:00' LIMIT 1;
Processed user: Adarsh 
Executing (006d3fbc-e03e-4c37-a82b-ee3cd4f1a4cf): START TRANSACTION;
Executing (6472926c-f221-4626-a13b-57f413245fb5): COMMIT;
Executing (be3f806a-ecc8-48c5-b21a-dcb7f9144c8c): COMMIT;
Executing (62a01d77-8d7e-4cb2-8755-bc57cae83700): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1385715704b740d388335566d98c8bf6$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity Building @ Scale - Experiences from FES in Odisha','2021-06-04 11:23:51.000 +00:00','b2104b7e-50fb-4455-9a78-7e764a56ea9e','2024-08-31 20:47:12.295 +00:00','2024-08-31 20:47:12.295 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1385715704b740d388335566d98c8bf6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (006d3fbc-e03e-4c37-a82b-ee3cd4f1a4cf): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6b9b9f7d-8411-44e8-ac46-817c80c15bc9' AND "UserTopic"."name" = 'ವಿವಿಧ ಗು ುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs' AND "UserTopic"."issuedAt" = '2022-12-21 10:00:26.000 +00:00' LIMIT 1;
Processed user: Pritesh Kumar Lal
Executing (9beb2751-0872-4e7a-93be-d1bf73e6d4db): START TRANSACTION;
Executing (02b5e9af-0d4a-4968-8b1e-8902b90c7c1d): COMMIT;
Executing (62a01d77-8d7e-4cb2-8755-bc57cae83700): COMMIT;
Executing (006d3fbc-e03e-4c37-a82b-ee3cd4f1a4cf): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_403a7a9e155347f5ab67780df3c276b8$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'ವಿವಿಧ ಗು ುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs','2022-12-21 10:00:26.000 +00:00','6b9b9f7d-8411-44e8-ac46-817c80c15bc9','2024-08-31 20:47:12.301 +00:00','2024-08-31 20:47:12.301 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_403a7a9e155347f5ab67780df3c276b8$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9beb2751-0872-4e7a-93be-d1bf73e6d4db): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '7050b19c-3082-434e-bef5-6e41056549af' AND "UserTopic"."name" = 'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs' AND "UserTopic"."issuedAt" = '2022-12-21 10:00:25.000 +00:00' LIMIT 1;
Processed user: Pooja
Executing (4e095e44-2e8d-4484-b1e4-a7d425aab7da): START TRANSACTION;
Processed user: Vivek Sharan
Executing (3341d822-321d-4d8f-917f-ae9b569caa72): START TRANSACTION;
Executing (006d3fbc-e03e-4c37-a82b-ee3cd4f1a4cf): COMMIT;
Executing (9beb2751-0872-4e7a-93be-d1bf73e6d4db): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_012374dc751e4479ae1391e25582d3c3$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs','2022-12-21 10:00:25.000 +00:00','7050b19c-3082-434e-bef5-6e41056549af','2024-08-31 20:47:12.306 +00:00','2024-08-31 20:47:12.306 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_012374dc751e4479ae1391e25582d3c3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Vinayak 
Executing (64f3cad0-1652-456d-8dcd-4465b31c1527): START TRANSACTION;
Executing (3341d822-321d-4d8f-917f-ae9b569caa72): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '1952f99c-0f23-41fb-9093-9005c5449d98' AND "UserTopic"."name" = 'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs' AND "UserTopic"."issuedAt" = '2022-12-21 10:00:30.000 +00:00' LIMIT 1;
Processed user: Prasanna kumar 
Executing (1d2a2897-e4a9-4670-8a43-69ce941add8a): START TRANSACTION;
Executing (4e095e44-2e8d-4484-b1e4-a7d425aab7da): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '140e088a-dfb0-4385-8522-3ae556c510c0' AND "UserTopic"."name" = 'Capacity Building @ Scale - Experiences from FES in Odisha' AND "UserTopic"."issuedAt" = '2021-06-04 11:23:47.000 +00:00' LIMIT 1;
Executing (3341d822-321d-4d8f-917f-ae9b569caa72): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7684d75d86a54ba78ef4cbab5fc14726$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs','2022-12-21 10:00:30.000 +00:00','1952f99c-0f23-41fb-9093-9005c5449d98','2024-08-31 20:47:12.313 +00:00','2024-08-31 20:47:12.313 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7684d75d86a54ba78ef4cbab5fc14726$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1d2a2897-e4a9-4670-8a43-69ce941add8a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '46032e3f-cc37-4289-aaa5-5c3af326130f' AND "UserTopic"."name" = 'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ    ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs' AND "UserTopic"."issuedAt" = '2022-12-21 10:00:26.000 +00:00' LIMIT 1;
Executing (64f3cad0-1652-456d-8dcd-4465b31c1527): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '07e64d90-36df-4114-bc07-d68fc28b716a' AND "UserTopic"."name" = 'ವಿವವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs' AND "UserTopic"."issuedAt" = '2022-12-21 10:01:05.000 +00:00' LIMIT 1;
Executing (9beb2751-0872-4e7a-93be-d1bf73e6d4db): COMMIT;
Executing (3341d822-321d-4d8f-917f-ae9b569caa72): COMMIT;
Executing (1d2a2897-e4a9-4670-8a43-69ce941add8a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_26d153155b054fbfb09270afcc8672e2$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ    ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs','2022-12-21 10:00:26.000 +00:00','46032e3f-cc37-4289-aaa5-5c3af326130f','2024-08-31 20:47:12.320 +00:00','2024-08-31 20:47:12.320 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_26d153155b054fbfb09270afcc8672e2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (64f3cad0-1652-456d-8dcd-4465b31c1527): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bb2387d206514bf781f90c9c532207a1$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'ವಿವವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs','2022-12-21 10:01:05.000 +00:00','07e64d90-36df-4114-bc07-d68fc28b716a','2024-08-31 20:47:12.321 +00:00','2024-08-31 20:47:12.321 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bb2387d206514bf781f90c9c532207a1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4e095e44-2e8d-4484-b1e4-a7d425aab7da): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_068c8ed4477241fbb0e478cc7f880326$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity Building @ Scale - Experiences from FES in Odisha','2021-06-04 11:23:47.000 +00:00','140e088a-dfb0-4385-8522-3ae556c510c0','2024-08-31 20:47:12.323 +00:00','2024-08-31 20:47:12.323 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_068c8ed4477241fbb0e478cc7f880326$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Soma Kumara K  DC
Executing (8b80f211-cc7a-403e-a6ed-0dd47fb5e28a): START TRANSACTION;
Executing (1d2a2897-e4a9-4670-8a43-69ce941add8a): COMMIT;
Executing (64f3cad0-1652-456d-8dcd-4465b31c1527): COMMIT;
Processed user: Vasudeva murthy
Executing (194ccf92-33ec-4ede-b12f-2c4554c66827): START TRANSACTION;
Executing (8b80f211-cc7a-403e-a6ed-0dd47fb5e28a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'd2a695e3-5d1c-49ba-adab-671dab6d81fa' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2020-04-07 09:22:06.000 +00:00' LIMIT 1;
Processed user: BYLAPPA
Executing (6008c9d2-d9af-4da0-8ad9-148d6f684ea5): START TRANSACTION;
Processed user: Shankaragoud C
Executing (36cdd0be-514d-4502-81c8-4a3b1b031967): START TRANSACTION;
Executing (4e095e44-2e8d-4484-b1e4-a7d425aab7da): COMMIT;
Executing (8b80f211-cc7a-403e-a6ed-0dd47fb5e28a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1d8dd805f2ec4e6d931963252acbd56a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2020-04-07 09:22:06.000 +00:00','d2a695e3-5d1c-49ba-adab-671dab6d81fa','2024-08-31 20:47:12.330 +00:00','2024-08-31 20:47:12.330 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1d8dd805f2ec4e6d931963252acbd56a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6008c9d2-d9af-4da0-8ad9-148d6f684ea5): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '67f6ffd9-0d75-4c92-8909-7c0f78daf8b7' AND "UserTopic"."name" = 'Community Mobilization' AND "UserTopic"."issuedAt" = '2020-08-07 07:17:45.000 +00:00' LIMIT 1;
Executing (36cdd0be-514d-4502-81c8-4a3b1b031967): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4290b0eb-020e-4137-8e54-f8de292d1782' AND "UserTopic"."name" = 'Well Monitoring - Example' AND "UserTopic"."issuedAt" = '2022-11-29 10:10:23.000 +00:00' LIMIT 1;
Executing (194ccf92-33ec-4ede-b12f-2c4554c66827): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6a23ff23-5a53-4947-a47f-8ea3a8f374c1' AND "UserTopic"."name" = 'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs' AND "UserTopic"."issuedAt" = '2022-12-21 10:17:38.000 +00:00' LIMIT 1;
Executing (8b80f211-cc7a-403e-a6ed-0dd47fb5e28a): COMMIT;
Executing (6008c9d2-d9af-4da0-8ad9-148d6f684ea5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bb5d1f0a1df44c30b84de6747dc20306$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Community Mobilization','2020-08-07 07:17:45.000 +00:00','67f6ffd9-0d75-4c92-8909-7c0f78daf8b7','2024-08-31 20:47:12.333 +00:00','2024-08-31 20:47:12.333 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bb5d1f0a1df44c30b84de6747dc20306$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (36cdd0be-514d-4502-81c8-4a3b1b031967): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b4cf386bfdaf4abaa035d97ac11e798c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Well Monitoring - Example','2022-11-29 10:10:23.000 +00:00','4290b0eb-020e-4137-8e54-f8de292d1782','2024-08-31 20:47:12.334 +00:00','2024-08-31 20:47:12.334 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b4cf386bfdaf4abaa035d97ac11e798c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Safdar Ali
Executing (e94a7b2f-c447-4b80-b20f-c3993b3fb15f): START TRANSACTION;
topicName PDA - Participant App 2020-03-18T06:49:05+0000
Executing (747f7790-4791-4859-9c23-63e4072298d1): START TRANSACTION;
Executing (6008c9d2-d9af-4da0-8ad9-148d6f684ea5): COMMIT;
Executing (194ccf92-33ec-4ede-b12f-2c4554c66827): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_92f9500664d34714b0ce7f84278d998c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs','2022-12-21 10:17:38.000 +00:00','6a23ff23-5a53-4947-a47f-8ea3a8f374c1','2024-08-31 20:47:12.337 +00:00','2024-08-31 20:47:12.337 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_92f9500664d34714b0ce7f84278d998c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (747f7790-4791-4859-9c23-63e4072298d1): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '00191047-642a-4678-aff6-22162d924cf5' AND "UserTopic"."name" = 'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini f         for different groups_BFTs_GKMs' AND "UserTopic"."issuedAt" = '2022-12-21 10:00:26.000 +00:00' LIMIT 1;
topicName PDA - Program App 2019-12-05T07:39:38+0000
Executing (99d6ca80-0652-4d41-a58d-ef290149b200): START TRANSACTION;
Executing (e94a7b2f-c447-4b80-b20f-c3993b3fb15f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'fe428fb5-8dbb-463f-af7a-c37857745007' AND "UserTopic"."name" = 'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for d         different groups_BFTs_GKMs' AND "UserTopic"."issuedAt" = '2023-01-02 11:34:58.000 +00:00' LIMIT 1;
Executing (36cdd0be-514d-4502-81c8-4a3b1b031967): COMMIT;
Executing (747f7790-4791-4859-9c23-63e4072298d1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_031163b68a61400b9d4f4755b2353709$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini f         for different groups_BFTs_GKMs','2022-12-21 10:00:26.000 +00:00','00191047-642a-4678-aff6-22162d924cf5','2024-08-31 20:47:12.340 +00:00','2024-08-31 20:47:12.340 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_031163b68a61400b9d4f4755b2353709$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (99d6ca80-0652-4d41-a58d-ef290149b200): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f10b75e8-8d1c-4591-be30-7ba8a9e0de33' AND "UserTopic"."name" = 'Orientation on Jala Sanjeevini /ಓರಿಯೆಂಟೇಷನ್ ಓನ್ ಜಲ ಸಂಜೀವಿನೀ/Elected members/ಚುನಾಯಿತ ಸದಸ್ಯರು' AND "UserTopic"."issuedAt" = 'Invalid date' LIMIT 1;
Executing (e94a7b2f-c447-4b80-b20f-c3993b3fb15f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bbc298001d574efa9a71682e34504196$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for d         different groups_BFTs_GKMs','2023-01-02 11:34:58.000 +00:00','fe428fb5-8dbb-463f-af7a-c37857745007','2024-08-31 20:47:12.343 +00:00','2024-08-31 20:47:12.343 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bbc298001d574efa9a71682e34504196$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (194ccf92-33ec-4ede-b12f-2c4554c66827): COMMIT;
Executing (747f7790-4791-4859-9c23-63e4072298d1): COMMIT;
Executing (99d6ca80-0652-4d41-a58d-ef290149b200): COMMIT;
Processed user: Akash Gaikwad
Executing (9f3b83f0-a591-45ab-b09e-badcca2bc345): START TRANSACTION;
Processed user: Gangamani.HR, tumkur District coordinator ,FES.
Executing (293a67b0-f09b-4ae3-b2a9-b39305cacfbf): START TRANSACTION;
Executing (8be65d5d-30e4-4d1a-946e-75f4091bc843): START TRANSACTION;
Processed user: BHEEMANAIKA B R
Executing (6b01f01f-06d5-45a6-8337-b1d9ce7298c1): START TRANSACTION;
Executing (e94a7b2f-c447-4b80-b20f-c3993b3fb15f): COMMIT;
Executing (293a67b0-f09b-4ae3-b2a9-b39305cacfbf): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '919b177f-2a3d-4883-8060-149bf84012b4' AND "UserTopic"."name" = 'JD test - Assam' AND "UserTopic"."issuedAt" = '2022-12-12 12:33:21.000 +00:00' LIMIT 1;
Executing (8be65d5d-30e4-4d1a-946e-75f4091bc843): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e1fe48c5-1f99-4815-9720-ef0f32dbcaab' AND "UserTopic"."name" = 'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GK         KMs' AND "UserTopic"."issuedAt" = '2023-01-02 11:35:18.000 +00:00' LIMIT 1;
Executing (6b01f01f-06d5-45a6-8337-b1d9ce7298c1): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '91b3214a-3f2c-4424-8112-1b73d35e8e74' AND "UserTopic"."name" = 'JD - Making the District Plan' AND "UserTopic"."issuedAt" = '2023-03-09 11:16:25.000 +00:00' LIMIT 1;
Executing (9f3b83f0-a591-45ab-b09e-badcca2bc345): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e931ea86-989b-4188-aa8b-8052253f14ce' AND "UserTopic"."name" = 'ಅಂತರ್ಜಲ ಚೇತನ - ಮಾದರಿ ವಿಷಯ (Antarajala Chetana - Example Topic)' AND "UserTopic"."issuedAt" = '2021-09-02 11:06:05.000 +00:00' LIMIT 1;
Executing (293a67b0-f09b-4ae3-b2a9-b39305cacfbf): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fc2282e933794f41ade87dbe07ed8c08$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD test - Assam','2022-12-12 12:33:21.000 +00:00','919b177f-2a3d-4883-8060-149bf84012b4','2024-08-31 20:47:12.355 +00:00','2024-08-31 20:47:12.355 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fc2282e933794f41ade87dbe07ed8c08$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8be65d5d-30e4-4d1a-946e-75f4091bc843): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ef5d339015274212bee061a6c2633c56$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GK         KMs','2023-01-02 11:35:18.000 +00:00','e1fe48c5-1f99-4815-9720-ef0f32dbcaab','2024-08-31 20:47:12.356 +00:00','2024-08-31 20:47:12.356 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ef5d339015274212bee061a6c2633c56$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6b01f01f-06d5-45a6-8337-b1d9ce7298c1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7802147621904b8293bae23ec444a2c9$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD - Making the District Plan','2023-03-09 11:16:25.000 +00:00','91b3214a-3f2c-4424-8112-1b73d35e8e74','2024-08-31 20:47:12.357 +00:00','2024-08-31 20:47:12.357 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7802147621904b8293bae23ec444a2c9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: sowmya lg
Executing (3bc310c4-a489-4f5b-91d9-e0994a5dd9e6): START TRANSACTION;
Executing (293a67b0-f09b-4ae3-b2a9-b39305cacfbf): COMMIT;
Executing (8be65d5d-30e4-4d1a-946e-75f4091bc843): COMMIT;
Executing (9f3b83f0-a591-45ab-b09e-badcca2bc345): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7f818c28ebac487198a9d4392f05046a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'ಅಂತರ್ಜಲ ಚೇತನ - ಮಾದರಿ ವಿಷಯ (Antarajala Chetana - Example Topic)','2021-09-02 11:06:05.000 +00:00','e931ea86-989b-4188-aa8b-8052253f14ce','2024-08-31 20:47:12.360 +00:00','2024-08-31 20:47:12.360 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7f818c28ebac487198a9d4392f05046a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName JD test - Completing the self assessment course  2023-01-21T07:40:38.000+0000
Executing (5ab3f19c-a490-4727-a0d8-211fe90a59ba): START TRANSACTION;
Processed user: Venugopal
Executing (d74d89b6-6446-4a60-acc9-6dc694fc4bda): START TRANSACTION;
Executing (3bc310c4-a489-4f5b-91d9-e0994a5dd9e6): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b8901b46-902f-4142-bec0-09b4d326dc9f' AND "UserTopic"."name" = 'JD - Making the District Plan' AND "UserTopic"."issuedAt" = '2023-03-18 12:18:16.000 +00:00' LIMIT 1;
Executing (6b01f01f-06d5-45a6-8337-b1d9ce7298c1): COMMIT;
Executing (5ab3f19c-a490-4727-a0d8-211fe90a59ba): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'd7e2fcef-65df-409c-9bb2-5d08080aa9d3' AND "UserTopic"."name" = 'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್         _BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs' AND "UserTopic"."issuedAt" = '2022-12-21 10:00:30.000 +00:00' LIMIT 1;
Executing (d74d89b6-6446-4a60-acc9-6dc694fc4bda): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '74852ff7-d5bb-4ceb-bf41-a7e8b9dede53' AND "UserTopic"."name" = 'JD - Facilitate two practical JalShalas for training of Block trainers - 1' AND "UserTopic"."issuedAt" = '2023-03-20 09:55:55.000 +00:00' LIMIT 1;
Executing (9f3b83f0-a591-45ab-b09e-badcca2bc345): COMMIT;
Executing (5ab3f19c-a490-4727-a0d8-211fe90a59ba): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_092ba40925db437b86154beabd94f996$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್         _BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs','2022-12-21 10:00:30.000 +00:00','d7e2fcef-65df-409c-9bb2-5d08080aa9d3','2024-08-31 20:47:12.367 +00:00','2024-08-31 20:47:12.367 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_092ba40925db437b86154beabd94f996$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d74d89b6-6446-4a60-acc9-6dc694fc4bda): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6def187e323b43afaf503250961d227e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD - Facilitate two practical JalShalas for training of Block trainers - 1','2023-03-20 09:55:55.000 +00:00','74852ff7-d5bb-4ceb-bf41-a7e8b9dede53','2024-08-31 20:47:12.368 +00:00','2024-08-31 20:47:12.368 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6def187e323b43afaf503250961d227e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3bc310c4-a489-4f5b-91d9-e0994a5dd9e6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_80b9e9b325334184b4959d40868fabd7$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD - Making the District Plan','2023-03-18 12:18:16.000 +00:00','b8901b46-902f-4142-bec0-09b4d326dc9f','2024-08-31 20:47:12.369 +00:00','2024-08-31 20:47:12.369 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_80b9e9b325334184b4959d40868fabd7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Jenifer Yasmin 
Executing (cf302269-c80d-4f06-b356-bcc9f3b2ccec): START TRANSACTION;
Executing (5ab3f19c-a490-4727-a0d8-211fe90a59ba): COMMIT;
Executing (d74d89b6-6446-4a60-acc9-6dc694fc4bda): COMMIT;
topicName ವಿ   ವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs 2023-01-02T11:35:23.000+0000
Executing (8577decf-3b4a-4c03-8c85-0a930e53fde0): START TRANSACTION;
Processed user: Ramesh M District Coordinator
Executing (e9725f70-549e-4ef2-8457-e9c829a629da): START TRANSACTION;
Processed user: Tejas Mahajan
Executing (bb48a2de-7c80-43b2-8cf9-15806ebb72cb): START TRANSACTION;
Executing (cf302269-c80d-4f06-b356-bcc9f3b2ccec): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f7e93313-2909-4493-9a53-fadfd033201b' AND "UserTopic"."name" = 'PDA - Program App' AND "UserTopic"."issuedAt" = '2021-04-05 10:40:58.000 +00:00' LIMIT 1;
Executing (3bc310c4-a489-4f5b-91d9-e0994a5dd9e6): COMMIT;
Executing (e9725f70-549e-4ef2-8457-e9c829a629da): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '0c193e5f-d189-464b-82cf-443317306d87' AND "UserTopic"."name" = 'Introduction to Springs | MTs' AND "UserTopic"."issuedAt" = '2021-02-10 08:46:47.000 +00:00' LIMIT 1;
Executing (bb48a2de-7c80-43b2-8cf9-15806ebb72cb): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5a9679fe-6c56-4e22-aa0a-14adb9703410' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2019-12-26 10:42:03.000 +00:00' LIMIT 1;
Executing (8577decf-3b4a-4c03-8c85-0a930e53fde0): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'bf9b2448-f718-4224-96d4-06bdb59034a3' AND "UserTopic"."name" = 'JD - Facilitate two practical JalShalas for training of Block trainers - 1' AND "UserTopic"."issuedAt" = '2023-03-18 12:23:39.000 +00:00' LIMIT 1;
Executing (e9725f70-549e-4ef2-8457-e9c829a629da): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b5f3df1e0b544f5fb97eb1a5b2ca2306$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Springs | MTs','2021-02-10 08:46:47.000 +00:00','0c193e5f-d189-464b-82cf-443317306d87','2024-08-31 20:47:12.378 +00:00','2024-08-31 20:47:12.378 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b5f3df1e0b544f5fb97eb1a5b2ca2306$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bb48a2de-7c80-43b2-8cf9-15806ebb72cb): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f44b41f1d65742e69269e859549ea1c0$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2019-12-26 10:42:03.000 +00:00','5a9679fe-6c56-4e22-aa0a-14adb9703410','2024-08-31 20:47:12.379 +00:00','2024-08-31 20:47:12.379 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f44b41f1d65742e69269e859549ea1c0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cf302269-c80d-4f06-b356-bcc9f3b2ccec): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1fc8bd8a46764992b4939b91567463e6$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Program App','2021-04-05 10:40:58.000 +00:00','f7e93313-2909-4493-9a53-fadfd033201b','2024-08-31 20:47:12.380 +00:00','2024-08-31 20:47:12.380 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1fc8bd8a46764992b4939b91567463e6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Arnab Bharali
Executing (dcdbce9b-3185-45a6-a293-8cdc68b7f350): START TRANSACTION;
Executing (e9725f70-549e-4ef2-8457-e9c829a629da): COMMIT;
Executing (bb48a2de-7c80-43b2-8cf9-15806ebb72cb): COMMIT;
Executing (8577decf-3b4a-4c03-8c85-0a930e53fde0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6f8bb729c88c4cf3bbc4b22842d4786d$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD - Facilitate two practical JalShalas for training of Block trainers - 1','2023-03-18 12:23:39.000 +00:00','bf9b2448-f718-4224-96d4-06bdb59034a3','2024-08-31 20:47:12.385 +00:00','2024-08-31 20:47:12.385 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6f8bb729c88c4cf3bbc4b22842d4786d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName स्वच्छ पानी को पाने की जंग 2019-12-02T10:50:15+0000
Executing (fcb4f6c8-98e2-45e6-98e0-970e3b47654b): START TRANSACTION;
topicName PDA - Program App 2019-12-26T11:49:08+0000
Executing (7f3f1ebf-b6eb-47bc-9d1a-101700f18348): START TRANSACTION;
Executing (dcdbce9b-3185-45a6-a293-8cdc68b7f350): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f5bda8c8-9b5d-4f02-aefc-e2ecf01d710c' AND "UserTopic"."name" = 'JD test - Assam' AND "UserTopic"."issuedAt" = '2022-12-12 12:37:26.000 +00:00' LIMIT 1;
Executing (cf302269-c80d-4f06-b356-bcc9f3b2ccec): COMMIT;
Executing (fcb4f6c8-98e2-45e6-98e0-970e3b47654b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '7dd8cae2-8102-44ca-b042-6a1d51b97504' AND "UserTopic"."name" = 'Image composition and layouts LL3' AND "UserTopic"."issuedAt" = '2022-03-29 07:37:51.000 +00:00' LIMIT 1;
Executing (7f3f1ebf-b6eb-47bc-9d1a-101700f18348): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b7031ba5-8d50-43d4-82db-b63e173db13c' AND "UserTopic"."name" = 'JD test - Assist for Jal Doot Journey' AND "UserTopic"."issuedAt" = '2023-01-19 07:12:54.000 +00:00' LIMIT 1;
Executing (dcdbce9b-3185-45a6-a293-8cdc68b7f350): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_05e37b9a499146899635c0743ba02642$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD test - Assam','2022-12-12 12:37:26.000 +00:00','f5bda8c8-9b5d-4f02-aefc-e2ecf01d710c','2024-08-31 20:47:12.395 +00:00','2024-08-31 20:47:12.395 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_05e37b9a499146899635c0743ba02642$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8577decf-3b4a-4c03-8c85-0a930e53fde0): COMMIT;
Executing (fcb4f6c8-98e2-45e6-98e0-970e3b47654b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1cdbff34e9094a7bae9e2376a356fff5$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Image composition and layouts LL3','2022-03-29 07:37:51.000 +00:00','7dd8cae2-8102-44ca-b042-6a1d51b97504','2024-08-31 20:47:12.398 +00:00','2024-08-31 20:47:12.398 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1cdbff34e9094a7bae9e2376a356fff5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7f3f1ebf-b6eb-47bc-9d1a-101700f18348): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8dc39aa238d6480f8695f1ec0ff27948$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD test - Assist for Jal Doot Journey','2023-01-19 07:12:54.000 +00:00','b7031ba5-8d50-43d4-82db-b63e173db13c','2024-08-31 20:47:12.400 +00:00','2024-08-31 20:47:12.400 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8dc39aa238d6480f8695f1ec0ff27948$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname ಅಂತರ್ಜಲ ಚೇತನ - ಮಾದರಿ ವಿಷಯ (Antarajala Chetana - Example Topic)
Executing (c8488710-58ca-49b5-a362-eed8872b5639): START TRANSACTION;
Executing (fcb4f6c8-98e2-45e6-98e0-970e3b47654b): COMMIT;
topicName Execution of the JalShala 2023-04-25T07:46:36.000+0000
Executing (71c61397-bd62-405c-bcc5-980f0a0daa62): START TRANSACTION;
Executing (dcdbce9b-3185-45a6-a293-8cdc68b7f350): COMMIT;
topicName Taking good photos and making posters 2022-04-05T07:38:37.000+0000
Executing (d899422c-97ff-4a32-8be1-7d580111d120): START TRANSACTION;
Executing (71c61397-bd62-405c-bcc5-980f0a0daa62): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '13fc614f-fced-4a20-88d4-13da63c5f701' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-15 06:08:12.000 +00:00' LIMIT 1;
Executing (c8488710-58ca-49b5-a362-eed8872b5639): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '281eb629-9078-40cf-a6f3-57ee6d3322ea' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-30 07:24:18.000 +00:00' LIMIT 1;
Executing (7f3f1ebf-b6eb-47bc-9d1a-101700f18348): COMMIT;
Executing (d899422c-97ff-4a32-8be1-7d580111d120): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b9d075fd-535e-4931-a9ec-07211bfe43e2' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-15 06:08:16.000 +00:00' LIMIT 1;
Executing (71c61397-bd62-405c-bcc5-980f0a0daa62): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c32fd1199c154aa0abcc14b399562a61$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-15 06:08:12.000 +00:00','13fc614f-fced-4a20-88d4-13da63c5f701','2024-08-31 20:47:12.412 +00:00','2024-08-31 20:47:12.412 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c32fd1199c154aa0abcc14b399562a61$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c8488710-58ca-49b5-a362-eed8872b5639): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_524cdbcf0500486c92ef166d089ce624$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-30 07:24:18.000 +00:00','281eb629-9078-40cf-a6f3-57ee6d3322ea','2024-08-31 20:47:12.413 +00:00','2024-08-31 20:47:12.413 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_524cdbcf0500486c92ef166d089ce624$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName JD test -  Training of Block Trainers for JalDoot Program  2023-01-19T07:21:39.000+0000
Executing (9fd111f0-5b32-4996-8f02-0f692c25bde5): START TRANSACTION;
Executing (d899422c-97ff-4a32-8be1-7d580111d120): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_55229e42878c4c60bd49c12dcd7579c2$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-15 06:08:16.000 +00:00','b9d075fd-535e-4931-a9ec-07211bfe43e2','2024-08-31 20:47:12.415 +00:00','2024-08-31 20:47:12.415 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_55229e42878c4c60bd49c12dcd7579c2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (71c61397-bd62-405c-bcc5-980f0a0daa62): COMMIT;
topicName JD test - Making of a block plan 2023-01-27T07:45:51.000+0000
Executing (78a4dba5-b12c-44d4-b48e-efd4195c1b48): START TRANSACTION;
Processed user: Rajdeep
Executing (55d5a4fa-915e-48fe-b8a6-147d256de131): START TRANSACTION;
Executing (9fd111f0-5b32-4996-8f02-0f692c25bde5): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6bf65efc-f264-43c2-a0be-860d7a2c1ba4' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-16 09:27:58.000 +00:00' LIMIT 1;
Executing (c8488710-58ca-49b5-a362-eed8872b5639): COMMIT;
Executing (55d5a4fa-915e-48fe-b8a6-147d256de131): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '29165e83-2d36-44a0-abeb-29671c4c1ed9' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-16 09:16:16.000 +00:00' LIMIT 1;
Executing (78a4dba5-b12c-44d4-b48e-efd4195c1b48): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '42740f34-6ea7-41e2-be0e-7ea2a846b001' AND "UserTopic"."name" = 'CBP Orientation' AND "UserTopic"."issuedAt" = '2020-08-28 10:16:16.000 +00:00' LIMIT 1;
Executing (d899422c-97ff-4a32-8be1-7d580111d120): COMMIT;
Executing (55d5a4fa-915e-48fe-b8a6-147d256de131): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_002e1f50e4c44a3384fabc8a3c68ff4a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-16 09:16:16.000 +00:00','29165e83-2d36-44a0-abeb-29671c4c1ed9','2024-08-31 20:47:12.423 +00:00','2024-08-31 20:47:12.423 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_002e1f50e4c44a3384fabc8a3c68ff4a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (78a4dba5-b12c-44d4-b48e-efd4195c1b48): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2d34e91f259e47d095e1bd8aa2c46343$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'CBP Orientation','2020-08-28 10:16:16.000 +00:00','42740f34-6ea7-41e2-be0e-7ea2a846b001','2024-08-31 20:47:12.424 +00:00','2024-08-31 20:47:12.424 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2d34e91f259e47d095e1bd8aa2c46343$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9fd111f0-5b32-4996-8f02-0f692c25bde5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7ceb960fd0fd44629be067c091edf2b8$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-16 09:27:58.000 +00:00','6bf65efc-f264-43c2-a0be-860d7a2c1ba4','2024-08-31 20:47:12.425 +00:00','2024-08-31 20:47:12.425 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7ceb960fd0fd44629be067c091edf2b8$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Hemanta pegu
Executing (0dc5cf24-8387-49ee-826d-8cf56c3ddf0f): START TRANSACTION;
Executing (55d5a4fa-915e-48fe-b8a6-147d256de131): COMMIT;
Executing (78a4dba5-b12c-44d4-b48e-efd4195c1b48): COMMIT;
Processed user: WKA
Executing (8d833851-2cf7-400c-8a7c-d0f1af09d0bc): START TRANSACTION;
Processed user: Nilmoni Sutradhar
Executing (44ce59de-eb8d-4bc1-920c-e64f71682301): START TRANSACTION;
topicName Capacity Building @ Scale - Experiences from FES in Odisha 2021-06-04T11:24:28.000+0000
Executing (f4930ea6-ed3e-42c5-b86c-2d1d256e230e): START TRANSACTION;
Executing (0dc5cf24-8387-49ee-826d-8cf56c3ddf0f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '1893c0a9-e5b6-4d84-81e9-fdccb4099495' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-16 09:28:55.000 +00:00' LIMIT 1;
Executing (9fd111f0-5b32-4996-8f02-0f692c25bde5): COMMIT;
Executing (44ce59de-eb8d-4bc1-920c-e64f71682301): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9fc9a526-f8f1-41a0-9315-90ab1034c015' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-16 09:38:15.000 +00:00' LIMIT 1;
Executing (f4930ea6-ed3e-42c5-b86c-2d1d256e230e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '110ef2a1-b7ef-4492-837a-610b52065d14' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-16 09:33:17.000 +00:00' LIMIT 1;
Executing (0dc5cf24-8387-49ee-826d-8cf56c3ddf0f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b4e57864be07408c8c4f50d50fa44ca9$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-16 09:28:55.000 +00:00','1893c0a9-e5b6-4d84-81e9-fdccb4099495','2024-08-31 20:47:12.436 +00:00','2024-08-31 20:47:12.436 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b4e57864be07408c8c4f50d50fa44ca9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8d833851-2cf7-400c-8a7c-d0f1af09d0bc): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9ed66187-2ab1-4850-a46e-6b643d6152c3' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-16 09:16:21.000 +00:00' LIMIT 1;
Executing (44ce59de-eb8d-4bc1-920c-e64f71682301): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d7836687fa434051883beec00ec79e2a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-16 09:38:15.000 +00:00','9fc9a526-f8f1-41a0-9315-90ab1034c015','2024-08-31 20:47:12.439 +00:00','2024-08-31 20:47:12.439 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d7836687fa434051883beec00ec79e2a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f4930ea6-ed3e-42c5-b86c-2d1d256e230e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bc9f30989718469bb2936185dfcf1066$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-16 09:33:17.000 +00:00','110ef2a1-b7ef-4492-837a-610b52065d14','2024-08-31 20:47:12.441 +00:00','2024-08-31 20:47:12.441 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bc9f30989718469bb2936185dfcf1066$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0dc5cf24-8387-49ee-826d-8cf56c3ddf0f): COMMIT;
Processed user: Dulal Adhikary 
Executing (fafdacff-ce60-4671-9afd-c7d0e36bce4f): START TRANSACTION;
Executing (44ce59de-eb8d-4bc1-920c-e64f71682301): COMMIT;
Executing (f4930ea6-ed3e-42c5-b86c-2d1d256e230e): COMMIT;
Processed user: Md Amir Hossain
Executing (a8783325-536d-4d1b-bb7a-ba8e0406838c): START TRANSACTION;
Executing (8d833851-2cf7-400c-8a7c-d0f1af09d0bc): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fecfb3c12e664883b951ab5b7b29c4da$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-16 09:16:21.000 +00:00','9ed66187-2ab1-4850-a46e-6b643d6152c3','2024-08-31 20:47:12.448 +00:00','2024-08-31 20:47:12.448 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fecfb3c12e664883b951ab5b7b29c4da$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Parmeswar Ray
Executing (a15b449e-871b-4c1b-aa17-703a60838423): START TRANSACTION;
Processed user: Arun Chandra nath 
Executing (48ffbfb4-a967-49c5-9512-9762d576192a): START TRANSACTION;
Executing (a8783325-536d-4d1b-bb7a-ba8e0406838c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'ca50e610-790e-4e87-88ae-de258d6f0984' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-16 09:28:06.000 +00:00' LIMIT 1;
Executing (fafdacff-ce60-4671-9afd-c7d0e36bce4f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '940bad7d-ebab-40dd-8b9c-d03951723ce1' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-16 09:30:00.000 +00:00' LIMIT 1;
Executing (a15b449e-871b-4c1b-aa17-703a60838423): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'd7ff3cb7-f173-4971-a433-471f0aab2add' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-16 10:17:48.000 +00:00' LIMIT 1;
Executing (48ffbfb4-a967-49c5-9512-9762d576192a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '42549872-9eea-474a-a594-621890e222e7' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-23 07:43:56.000 +00:00' LIMIT 1;
Executing (a8783325-536d-4d1b-bb7a-ba8e0406838c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1cfe163ee3bf4a678a56ff32201f699b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-16 09:28:06.000 +00:00','ca50e610-790e-4e87-88ae-de258d6f0984','2024-08-31 20:47:12.458 +00:00','2024-08-31 20:47:12.458 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1cfe163ee3bf4a678a56ff32201f699b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8d833851-2cf7-400c-8a7c-d0f1af09d0bc): COMMIT;
Executing (a15b449e-871b-4c1b-aa17-703a60838423): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_04dbd1672e0a4127a8a363ad674614a1$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-16 10:17:48.000 +00:00','d7ff3cb7-f173-4971-a433-471f0aab2add','2024-08-31 20:47:12.460 +00:00','2024-08-31 20:47:12.460 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_04dbd1672e0a4127a8a363ad674614a1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (48ffbfb4-a967-49c5-9512-9762d576192a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e19eadea8f9749f680d834daa2bee812$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-23 07:43:56.000 +00:00','42549872-9eea-474a-a594-621890e222e7','2024-08-31 20:47:12.463 +00:00','2024-08-31 20:47:12.463 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e19eadea8f9749f680d834daa2bee812$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (fafdacff-ce60-4671-9afd-c7d0e36bce4f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1065c0f4d7474adb94cc56226ebee354$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-16 09:30:00.000 +00:00','940bad7d-ebab-40dd-8b9c-d03951723ce1','2024-08-31 20:47:12.465 +00:00','2024-08-31 20:47:12.465 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1065c0f4d7474adb94cc56226ebee354$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a15b449e-871b-4c1b-aa17-703a60838423): COMMIT;
Executing (a8783325-536d-4d1b-bb7a-ba8e0406838c): COMMIT;
Processed user: Sofior Rahman 
Executing (c27befac-a4b5-49e7-83cd-52972f0bf031): START TRANSACTION;
Processed user: Sanjit kumar das
Executing (f8228a55-aeb6-4544-ac27-cd1cb24846ba): START TRANSACTION;
Processed user: Kushal Nath
Executing (ff390b79-b04f-4efa-936d-cb16f2aaa1ab): START TRANSACTION;
Executing (48ffbfb4-a967-49c5-9512-9762d576192a): COMMIT;
Executing (fafdacff-ce60-4671-9afd-c7d0e36bce4f): COMMIT;
Executing (f8228a55-aeb6-4544-ac27-cd1cb24846ba): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b6ef39c8-f38b-40df-9383-69e0d5eeeb19' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-23 07:41:44.000 +00:00' LIMIT 1;
Executing (ff390b79-b04f-4efa-936d-cb16f2aaa1ab): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e1ccedd7-f57c-459b-9821-edb85017a0a4' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-23 07:42:59.000 +00:00' LIMIT 1;
Processed user: Robin kurmi
Executing (1cfdb312-cd89-4124-9cb8-1855d5dd5522): START TRANSACTION;
Executing (c27befac-a4b5-49e7-83cd-52972f0bf031): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c3efa9f7-b055-40bf-a1fd-6abfb6dd248f' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-23 07:41:39.000 +00:00' LIMIT 1;
Executing (f8228a55-aeb6-4544-ac27-cd1cb24846ba): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_703a647fca7f423fa9fc2055bc1cb196$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-23 07:41:44.000 +00:00','b6ef39c8-f38b-40df-9383-69e0d5eeeb19','2024-08-31 20:47:12.479 +00:00','2024-08-31 20:47:12.479 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_703a647fca7f423fa9fc2055bc1cb196$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ff390b79-b04f-4efa-936d-cb16f2aaa1ab): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4405600c0be546979085802bb22739da$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-23 07:42:59.000 +00:00','e1ccedd7-f57c-459b-9821-edb85017a0a4','2024-08-31 20:47:12.480 +00:00','2024-08-31 20:47:12.480 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4405600c0be546979085802bb22739da$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1cfdb312-cd89-4124-9cb8-1855d5dd5522): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '0b55fce6-afbd-4528-84fd-33bf04fda5d6' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-23 07:45:50.000 +00:00' LIMIT 1;
Processed user: Mandira Prodhani
Executing (1d57678a-7ccb-4c8d-8454-0c0f5d436033): START TRANSACTION;
Executing (f8228a55-aeb6-4544-ac27-cd1cb24846ba): COMMIT;
Executing (ff390b79-b04f-4efa-936d-cb16f2aaa1ab): COMMIT;
Executing (1cfdb312-cd89-4124-9cb8-1855d5dd5522): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_21b857604b984e698b5ae165ffa96828$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-23 07:45:50.000 +00:00','0b55fce6-afbd-4528-84fd-33bf04fda5d6','2024-08-31 20:47:12.487 +00:00','2024-08-31 20:47:12.487 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_21b857604b984e698b5ae165ffa96828$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1d57678a-7ccb-4c8d-8454-0c0f5d436033): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '00a4275f-77c9-4549-a1aa-03f02627ce8e' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-23 07:38:06.000 +00:00' LIMIT 1;
Executing (c27befac-a4b5-49e7-83cd-52972f0bf031): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b8cf1dd0e3974551826e4b0606c4d4f3$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-23 07:41:39.000 +00:00','c3efa9f7-b055-40bf-a1fd-6abfb6dd248f','2024-08-31 20:47:12.490 +00:00','2024-08-31 20:47:12.490 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b8cf1dd0e3974551826e4b0606c4d4f3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Sankor Jyoti Boruah
Executing (cf8ef226-1d1e-45f9-95cb-04d613e6b812): START TRANSACTION;
Processed user: Simanta Changmai
Executing (28c0c5a2-b2fb-4db0-8bf5-ed3f919cd770): START TRANSACTION;
Executing (1cfdb312-cd89-4124-9cb8-1855d5dd5522): COMMIT;
Executing (1d57678a-7ccb-4c8d-8454-0c0f5d436033): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c6c1c7d1e2a049ca9329043b65e39457$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-23 07:38:06.000 +00:00','00a4275f-77c9-4549-a1aa-03f02627ce8e','2024-08-31 20:47:12.493 +00:00','2024-08-31 20:47:12.493 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c6c1c7d1e2a049ca9329043b65e39457$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cf8ef226-1d1e-45f9-95cb-04d613e6b812): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'a8b89bfc-e3f3-466a-9336-9b1bff1b3ec0' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-23 07:37:45.000 +00:00' LIMIT 1;
Executing (28c0c5a2-b2fb-4db0-8bf5-ed3f919cd770): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8d3b7c58-4a3d-400a-bff6-b8dc2bffa831' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-23 07:45:26.000 +00:00' LIMIT 1;
Processed user: BIPUL UPADHYAY 
Executing (6451d647-fb7d-4c00-88fb-16a3842e818f): START TRANSACTION;
Executing (c27befac-a4b5-49e7-83cd-52972f0bf031): COMMIT;
Executing (cf8ef226-1d1e-45f9-95cb-04d613e6b812): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d26f7e9d960f4062a0dd4baa7e93527f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-23 07:37:45.000 +00:00','a8b89bfc-e3f3-466a-9336-9b1bff1b3ec0','2024-08-31 20:47:12.497 +00:00','2024-08-31 20:47:12.497 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d26f7e9d960f4062a0dd4baa7e93527f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (28c0c5a2-b2fb-4db0-8bf5-ed3f919cd770): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e108ca7059954f3daeb7f3b74db52bce$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-23 07:45:26.000 +00:00','8d3b7c58-4a3d-400a-bff6-b8dc2bffa831','2024-08-31 20:47:12.498 +00:00','2024-08-31 20:47:12.498 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e108ca7059954f3daeb7f3b74db52bce$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6451d647-fb7d-4c00-88fb-16a3842e818f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '0fa6f373-8a59-43ce-86b4-46d2a5924bb8' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-06 12:13:02.000 +00:00' LIMIT 1;
Executing (1d57678a-7ccb-4c8d-8454-0c0f5d436033): COMMIT;
Executing (cf8ef226-1d1e-45f9-95cb-04d613e6b812): COMMIT;
Executing (6451d647-fb7d-4c00-88fb-16a3842e818f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_63e6bb32d832457ea619221c024c829a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-06 12:13:02.000 +00:00','0fa6f373-8a59-43ce-86b4-46d2a5924bb8','2024-08-31 20:47:12.501 +00:00','2024-08-31 20:47:12.501 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_63e6bb32d832457ea619221c024c829a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Heman Hazarika
Executing (920816ed-285b-486c-a7ae-7e85103b8c4d): START TRANSACTION;
Processed user: DIGANTA BHAJANI
Executing (ace04b6b-3aef-4fa2-94d3-ae924e4d5c9e): START TRANSACTION;
Executing (28c0c5a2-b2fb-4db0-8bf5-ed3f919cd770): COMMIT;
Processed user: Rupjyoti Gogoi
Executing (3bb30837-8084-4d30-9c40-6f5457764254): START TRANSACTION;
Executing (ace04b6b-3aef-4fa2-94d3-ae924e4d5c9e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '01cf5f0d-2ddc-4cff-9168-78a5ef6a0390' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-06 11:18:57.000 +00:00' LIMIT 1;
Processed user: Bhugil Neog
Executing (784ae39b-8b73-4266-ab1d-c726944cfb3c): START TRANSACTION;
Executing (6451d647-fb7d-4c00-88fb-16a3842e818f): COMMIT;
Executing (920816ed-285b-486c-a7ae-7e85103b8c4d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '18ae1d53-99c6-4838-a0b5-22c2b83b2b35' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-23 07:43:47.000 +00:00' LIMIT 1;
Executing (ace04b6b-3aef-4fa2-94d3-ae924e4d5c9e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cfe6903004a34244aba2d77c62c6b940$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-06 11:18:57.000 +00:00','01cf5f0d-2ddc-4cff-9168-78a5ef6a0390','2024-08-31 20:47:12.507 +00:00','2024-08-31 20:47:12.507 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cfe6903004a34244aba2d77c62c6b940$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (784ae39b-8b73-4266-ab1d-c726944cfb3c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9484cabc-789c-490a-abc0-50cc74dbd4b7' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-06 16:55:25.000 +00:00' LIMIT 1;
Processed user: Asraf Ali 
Executing (1d52d838-3e77-4a9e-b8bd-fd3129ab7398): START TRANSACTION;
Executing (3bb30837-8084-4d30-9c40-6f5457764254): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '43cbd0c4-ab9e-4f97-b943-d29673283717' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-23 07:44:49.000 +00:00' LIMIT 1;
Executing (ace04b6b-3aef-4fa2-94d3-ae924e4d5c9e): COMMIT;
Executing (784ae39b-8b73-4266-ab1d-c726944cfb3c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3f4034e6d16f4a9398dffcb88973e1fb$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-06 16:55:25.000 +00:00','9484cabc-789c-490a-abc0-50cc74dbd4b7','2024-08-31 20:47:12.511 +00:00','2024-08-31 20:47:12.511 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3f4034e6d16f4a9398dffcb88973e1fb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1d52d838-3e77-4a9e-b8bd-fd3129ab7398): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '704248ea-bdd5-4300-a69e-54264c035207' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-08 09:16:10.000 +00:00' LIMIT 1;
Executing (920816ed-285b-486c-a7ae-7e85103b8c4d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_aa9bdf0e596049d79b12e103154975be$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-23 07:43:47.000 +00:00','18ae1d53-99c6-4838-a0b5-22c2b83b2b35','2024-08-31 20:47:12.513 +00:00','2024-08-31 20:47:12.513 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_aa9bdf0e596049d79b12e103154975be$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Susanta 
Executing (5b2cad34-a9f6-47ea-ba8e-ee9edc16abca): START TRANSACTION;
Executing (784ae39b-8b73-4266-ab1d-c726944cfb3c): COMMIT;
Executing (1d52d838-3e77-4a9e-b8bd-fd3129ab7398): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2f5c1098022344a18945dead7fc1f3d4$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-08 09:16:10.000 +00:00','704248ea-bdd5-4300-a69e-54264c035207','2024-08-31 20:47:12.515 +00:00','2024-08-31 20:47:12.515 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2f5c1098022344a18945dead7fc1f3d4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3bb30837-8084-4d30-9c40-6f5457764254): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_01c9c43638994b93a3d8b1abb32cd597$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-23 07:44:49.000 +00:00','43cbd0c4-ab9e-4f97-b943-d29673283717','2024-08-31 20:47:12.516 +00:00','2024-08-31 20:47:12.516 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_01c9c43638994b93a3d8b1abb32cd597$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5b2cad34-a9f6-47ea-ba8e-ee9edc16abca): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '3dde8fd3-646c-429d-9a62-388274eb125a' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-08 09:29:57.000 +00:00' LIMIT 1;
Processed user: DELETED BY USER
Executing (2aac11dd-00e4-41e3-aeb9-0bbd39127cef): START TRANSACTION;
Executing (920816ed-285b-486c-a7ae-7e85103b8c4d): COMMIT;
Executing (5b2cad34-a9f6-47ea-ba8e-ee9edc16abca): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c38df0544f714da396880b02e129977b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-08 09:29:57.000 +00:00','3dde8fd3-646c-429d-9a62-388274eb125a','2024-08-31 20:47:12.519 +00:00','2024-08-31 20:47:12.519 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c38df0544f714da396880b02e129977b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2aac11dd-00e4-41e3-aeb9-0bbd39127cef): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2d5d097f-c694-4188-bf09-1859357b1515' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-08 09:22:04.000 +00:00' LIMIT 1;
Executing (1d52d838-3e77-4a9e-b8bd-fd3129ab7398): COMMIT;
Executing (3bb30837-8084-4d30-9c40-6f5457764254): COMMIT;
Executing (5b2cad34-a9f6-47ea-ba8e-ee9edc16abca): COMMIT;
Executing (2aac11dd-00e4-41e3-aeb9-0bbd39127cef): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3d67cb2a46024814b3702590fb3b6d0e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-08 09:22:04.000 +00:00','2d5d097f-c694-4188-bf09-1859357b1515','2024-08-31 20:47:12.523 +00:00','2024-08-31 20:47:12.523 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3d67cb2a46024814b3702590fb3b6d0e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Sagar Panika
Executing (46b4f02e-0e53-4d27-b3d8-55e0cbbdb362): START TRANSACTION;
Processed user: Krishna Kanta Das
Executing (d7747e1e-6eed-4bff-b349-0101e7cef00a): START TRANSACTION;
Processed user: SATYAJIT DAS
Executing (8a25ff62-288a-4310-9235-8b600a9813eb): START TRANSACTION;
Processed user: Kamal Borah 
Executing (23397207-a8f8-4770-9373-430a59f35674): START TRANSACTION;
Executing (d7747e1e-6eed-4bff-b349-0101e7cef00a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '78ed1d0e-5194-4376-8b3f-f69c1391d3a3' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-11 09:28:34.000 +00:00' LIMIT 1;
Executing (8a25ff62-288a-4310-9235-8b600a9813eb): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '3028ee3f-39b2-4f0f-89db-7672e037ef63' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-08 09:27:47.000 +00:00' LIMIT 1;
Executing (46b4f02e-0e53-4d27-b3d8-55e0cbbdb362): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e5e059eb-5d83-4fe2-93d7-04ef49a1b047' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-29 11:04:44.000 +00:00' LIMIT 1;
Executing (2aac11dd-00e4-41e3-aeb9-0bbd39127cef): COMMIT;
Executing (d7747e1e-6eed-4bff-b349-0101e7cef00a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_73b32a727d5c4a61aa6a94215dfa645c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-11 09:28:34.000 +00:00','78ed1d0e-5194-4376-8b3f-f69c1391d3a3','2024-08-31 20:47:12.529 +00:00','2024-08-31 20:47:12.529 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_73b32a727d5c4a61aa6a94215dfa645c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8a25ff62-288a-4310-9235-8b600a9813eb): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_712012d9ad2947d2af683aa394269751$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-08 09:27:47.000 +00:00','3028ee3f-39b2-4f0f-89db-7672e037ef63','2024-08-31 20:47:12.530 +00:00','2024-08-31 20:47:12.530 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_712012d9ad2947d2af683aa394269751$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (46b4f02e-0e53-4d27-b3d8-55e0cbbdb362): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e85a34c9903440599ac26b9c6c366edf$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-05-29 11:04:44.000 +00:00','e5e059eb-5d83-4fe2-93d7-04ef49a1b047','2024-08-31 20:47:12.531 +00:00','2024-08-31 20:47:12.531 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e85a34c9903440599ac26b9c6c366edf$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (23397207-a8f8-4770-9373-430a59f35674): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4033ed96-355e-45b1-91ce-9f1fd8532b47' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-08 09:30:13.000 +00:00' LIMIT 1;
Executing (d7747e1e-6eed-4bff-b349-0101e7cef00a): COMMIT;
Executing (8a25ff62-288a-4310-9235-8b600a9813eb): COMMIT;
Processed user: L Darendrojit Singha
Executing (6e5f1b55-e62f-45e6-8cf1-8268e5322d25): START TRANSACTION;
Processed user: Golap Hussain
Executing (422375e4-c5a7-4c72-8ee4-4434e2443faa): START TRANSACTION;
Processed user: Dipankar Ghosh 
Executing (1b2600ac-470d-48cf-a819-57005c917bf7): START TRANSACTION;
Executing (23397207-a8f8-4770-9373-430a59f35674): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e82d5705bfe545a7a6fbb608adfbd4a6$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-08 09:30:13.000 +00:00','4033ed96-355e-45b1-91ce-9f1fd8532b47','2024-08-31 20:47:12.536 +00:00','2024-08-31 20:47:12.536 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e82d5705bfe545a7a6fbb608adfbd4a6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (46b4f02e-0e53-4d27-b3d8-55e0cbbdb362): COMMIT;
Executing (422375e4-c5a7-4c72-8ee4-4434e2443faa): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '59652d89-4354-40d8-be71-8b5d15ca4d7d' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-11 09:33:40.000 +00:00' LIMIT 1;
Executing (1b2600ac-470d-48cf-a819-57005c917bf7): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'eaea65ad-ae30-4949-9fcb-2933a042e796' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-12 03:30:22.000 +00:00' LIMIT 1;
Executing (6e5f1b55-e62f-45e6-8cf1-8268e5322d25): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6ddf90c1-9c9b-4ca1-a369-45db7c480042' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-11 09:35:14.000 +00:00' LIMIT 1;
Executing (422375e4-c5a7-4c72-8ee4-4434e2443faa): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b47a90efb8014ffe909c09c16c52b6ca$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-11 09:33:40.000 +00:00','59652d89-4354-40d8-be71-8b5d15ca4d7d','2024-08-31 20:47:12.539 +00:00','2024-08-31 20:47:12.539 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b47a90efb8014ffe909c09c16c52b6ca$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1b2600ac-470d-48cf-a819-57005c917bf7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b41388959bb14d1bb511a696d86bd441$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-12 03:30:22.000 +00:00','eaea65ad-ae30-4949-9fcb-2933a042e796','2024-08-31 20:47:12.540 +00:00','2024-08-31 20:47:12.540 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b41388959bb14d1bb511a696d86bd441$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Niranjan Borah 
Executing (760d72c8-4190-4b1d-8d78-7f661d26afc4): START TRANSACTION;
Executing (23397207-a8f8-4770-9373-430a59f35674): COMMIT;
Executing (422375e4-c5a7-4c72-8ee4-4434e2443faa): COMMIT;
Executing (760d72c8-4190-4b1d-8d78-7f661d26afc4): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '68d802d6-0ce4-45cb-86d2-2ca69cf9d2a0' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-11 03:52:29.000 +00:00' LIMIT 1;
Executing (6e5f1b55-e62f-45e6-8cf1-8268e5322d25): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2fbb7b4b37f64425acaba4dd480f6af0$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-11 09:35:14.000 +00:00','6ddf90c1-9c9b-4ca1-a369-45db7c480042','2024-08-31 20:47:12.544 +00:00','2024-08-31 20:47:12.544 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2fbb7b4b37f64425acaba4dd480f6af0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Debjit Ghosh
Executing (cd7d4573-ee79-4297-b6c5-8706d3e24b16): START TRANSACTION;
Executing (760d72c8-4190-4b1d-8d78-7f661d26afc4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bfa3eddbf2ef42adbff6ecf9737d72b6$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-11 03:52:29.000 +00:00','68d802d6-0ce4-45cb-86d2-2ca69cf9d2a0','2024-08-31 20:47:12.546 +00:00','2024-08-31 20:47:12.546 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bfa3eddbf2ef42adbff6ecf9737d72b6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1b2600ac-470d-48cf-a819-57005c917bf7): COMMIT;
Processed user: Manna Kishore Das
Executing (48e65067-d941-4705-93de-04c986e0de93): START TRANSACTION;
Executing (cd7d4573-ee79-4297-b6c5-8706d3e24b16): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'ed78b801-9229-4182-b609-470f1ca00fa6' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-11 09:30:18.000 +00:00' LIMIT 1;
Processed user: Chhandami Rongpipi
Executing (459f51e5-a496-4531-8e35-cfe15d19f42d): START TRANSACTION;
Executing (6e5f1b55-e62f-45e6-8cf1-8268e5322d25): COMMIT;
Executing (cd7d4573-ee79-4297-b6c5-8706d3e24b16): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_52d9132151674d5b91aa459d0754eadb$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-11 09:30:18.000 +00:00','ed78b801-9229-4182-b609-470f1ca00fa6','2024-08-31 20:47:12.550 +00:00','2024-08-31 20:47:12.550 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_52d9132151674d5b91aa459d0754eadb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (459f51e5-a496-4531-8e35-cfe15d19f42d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8784c9b7-1298-4c5b-aaad-082095062d5c' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-11 09:28:46.000 +00:00' LIMIT 1;
Executing (48e65067-d941-4705-93de-04c986e0de93): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b7934ad1-ac0f-4bc5-836e-46944134194a' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-08 09:27:55.000 +00:00' LIMIT 1;
Executing (760d72c8-4190-4b1d-8d78-7f661d26afc4): COMMIT;
Executing (cd7d4573-ee79-4297-b6c5-8706d3e24b16): COMMIT;
Executing (459f51e5-a496-4531-8e35-cfe15d19f42d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ccc0c8a1840b4767ae8ec27e71a62cf7$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-11 09:28:46.000 +00:00','8784c9b7-1298-4c5b-aaad-082095062d5c','2024-08-31 20:47:12.554 +00:00','2024-08-31 20:47:12.554 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ccc0c8a1840b4767ae8ec27e71a62cf7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (48e65067-d941-4705-93de-04c986e0de93): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a2b01c87d9bd4635b09d94ec22d6646a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-08 09:27:55.000 +00:00','b7934ad1-ac0f-4bc5-836e-46944134194a','2024-08-31 20:47:12.555 +00:00','2024-08-31 20:47:12.555 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a2b01c87d9bd4635b09d94ec22d6646a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Rezaul Alom 
Executing (deb8e39e-6cef-4605-ad65-6539a6b57fcb): START TRANSACTION;
Processed user: Ariful Hoque Khandokar
Executing (7636b73c-dfb5-4e2d-987c-b8114b1725d2): START TRANSACTION;
Executing (459f51e5-a496-4531-8e35-cfe15d19f42d): COMMIT;
Processed user: D Wary
Executing (025805dc-3b9b-4a42-b394-bf7dab0b6345): START TRANSACTION;
Executing (7636b73c-dfb5-4e2d-987c-b8114b1725d2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '67544f1b-f881-498b-9bd5-b4044eee7e76' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-11 09:30:40.000 +00:00' LIMIT 1;
Processed user: NUR ALOM HOQUE
Executing (9771fc5b-0de1-4500-af68-425fd134b1f0): START TRANSACTION;
Executing (deb8e39e-6cef-4605-ad65-6539a6b57fcb): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'a7db7bf8-9af9-440d-aab9-ced9b308ead4' AND "UserTopic"."name" = 'Planning of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-15 09:59:58.000 +00:00' LIMIT 1;
Executing (48e65067-d941-4705-93de-04c986e0de93): COMMIT;
Executing (7636b73c-dfb5-4e2d-987c-b8114b1725d2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_91656795398d49698756a01c710c4b01$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-11 09:30:40.000 +00:00','67544f1b-f881-498b-9bd5-b4044eee7e76','2024-08-31 20:47:12.562 +00:00','2024-08-31 20:47:12.562 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_91656795398d49698756a01c710c4b01$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9771fc5b-0de1-4500-af68-425fd134b1f0): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '533b6923-355b-4a2d-b88a-802edf884268' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-29 13:47:01.000 +00:00' LIMIT 1;
Executing (025805dc-3b9b-4a42-b394-bf7dab0b6345): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5b3ecf7c-0070-489b-be1d-995dc1829f0a' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-15 10:17:34.000 +00:00' LIMIT 1;
Executing (7636b73c-dfb5-4e2d-987c-b8114b1725d2): COMMIT;
Executing (9771fc5b-0de1-4500-af68-425fd134b1f0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3e46b7ac169248d5adb9bfda7cf0766f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-05-29 13:47:01.000 +00:00','533b6923-355b-4a2d-b88a-802edf884268','2024-08-31 20:47:12.564 +00:00','2024-08-31 20:47:12.564 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3e46b7ac169248d5adb9bfda7cf0766f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (deb8e39e-6cef-4605-ad65-6539a6b57fcb): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5cbdff31376d454b9cb0119d2508626c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Planning of the JalShala','2023-05-15 09:59:58.000 +00:00','a7db7bf8-9af9-440d-aab9-ced9b308ead4','2024-08-31 20:47:12.565 +00:00','2024-08-31 20:47:12.565 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5cbdff31376d454b9cb0119d2508626c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Abdur Rahman Mazumder 
Executing (befa5f4d-cfb0-4d28-97ca-8b7dd9d2eaa5): START TRANSACTION;
Processed user: Abdul Awal Khan
Executing (b2c25ca5-282b-43cc-b181-9fb5c457aeed): START TRANSACTION;
Executing (9771fc5b-0de1-4500-af68-425fd134b1f0): COMMIT;
Executing (025805dc-3b9b-4a42-b394-bf7dab0b6345): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8a0447899cfd447e9e1d3aafadb0b7e8$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-05-15 10:17:34.000 +00:00','5b3ecf7c-0070-489b-be1d-995dc1829f0a','2024-08-31 20:47:12.568 +00:00','2024-08-31 20:47:12.568 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8a0447899cfd447e9e1d3aafadb0b7e8$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b2c25ca5-282b-43cc-b181-9fb5c457aeed): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '62c01ea6-4c0b-4564-9a72-d7b0c608554d' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-15 10:12:05.000 +00:00' LIMIT 1;
Processed user: Nazrul Islam 
Executing (af7bfd66-db4f-43c8-8463-bf3888cf9b5a): START TRANSACTION;
Executing (befa5f4d-cfb0-4d28-97ca-8b7dd9d2eaa5): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5cdc1a8a-cb15-43f3-b601-8e5709a7332d' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-26 11:28:11.000 +00:00' LIMIT 1;
Executing (deb8e39e-6cef-4605-ad65-6539a6b57fcb): COMMIT;
Executing (b2c25ca5-282b-43cc-b181-9fb5c457aeed): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0f04ee07d8fb4d678ff2d4e193f1b747$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-05-15 10:12:05.000 +00:00','62c01ea6-4c0b-4564-9a72-d7b0c608554d','2024-08-31 20:47:12.572 +00:00','2024-08-31 20:47:12.572 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0f04ee07d8fb4d678ff2d4e193f1b747$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (af7bfd66-db4f-43c8-8463-bf3888cf9b5a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '1d26bd1f-53f9-4a4f-872d-75baa4d966a6' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-29 10:57:03.000 +00:00' LIMIT 1;
Executing (befa5f4d-cfb0-4d28-97ca-8b7dd9d2eaa5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2365c102c1434291be0964f5546e9d82$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-05-26 11:28:11.000 +00:00','5cdc1a8a-cb15-43f3-b601-8e5709a7332d','2024-08-31 20:47:12.574 +00:00','2024-08-31 20:47:12.574 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2365c102c1434291be0964f5546e9d82$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (025805dc-3b9b-4a42-b394-bf7dab0b6345): COMMIT;
Executing (b2c25ca5-282b-43cc-b181-9fb5c457aeed): COMMIT;
Executing (af7bfd66-db4f-43c8-8463-bf3888cf9b5a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_50b9b2e713874b09919328679df6f5fe$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-05-29 10:57:03.000 +00:00','1d26bd1f-53f9-4a4f-872d-75baa4d966a6','2024-08-31 20:47:12.576 +00:00','2024-08-31 20:47:12.576 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_50b9b2e713874b09919328679df6f5fe$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Execution of the JalShala 2023-05-15T10:05:54.000+0000
Executing (af24e751-fef1-4a1a-827a-8189386ece5d): START TRANSACTION;
Processed user: Dr. Mukut Kalita
Executing (19cceac5-743a-4d10-9de2-5e787664a864): START TRANSACTION;
Processed user: BHRIGURAJ KASHYAP 
Executing (1209b66a-7631-4fd9-8137-ab47344228e7): START TRANSACTION;
Executing (befa5f4d-cfb0-4d28-97ca-8b7dd9d2eaa5): COMMIT;
Executing (19cceac5-743a-4d10-9de2-5e787664a864): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '909970da-ceda-452d-a554-3253549b7c34' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-29 10:57:03.000 +00:00' LIMIT 1;
Executing (1209b66a-7631-4fd9-8137-ab47344228e7): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '39577de1-cc39-4e94-9663-8b1479d62ee3' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-29 10:57:13.000 +00:00' LIMIT 1;
Executing (af24e751-fef1-4a1a-827a-8189386ece5d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5362a9d7-d18a-4cd0-9094-b499e05d2c13' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-29 10:57:07.000 +00:00' LIMIT 1;
Executing (af7bfd66-db4f-43c8-8463-bf3888cf9b5a): COMMIT;
Executing (19cceac5-743a-4d10-9de2-5e787664a864): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d93b3b3fac2f42458a1d593ca580fb05$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-05-29 10:57:03.000 +00:00','909970da-ceda-452d-a554-3253549b7c34','2024-08-31 20:47:12.584 +00:00','2024-08-31 20:47:12.584 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d93b3b3fac2f42458a1d593ca580fb05$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1209b66a-7631-4fd9-8137-ab47344228e7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9fda21a805aa4c1282cd6cd429f16636$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-05-29 10:57:13.000 +00:00','39577de1-cc39-4e94-9663-8b1479d62ee3','2024-08-31 20:47:12.586 +00:00','2024-08-31 20:47:12.586 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9fda21a805aa4c1282cd6cd429f16636$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (af24e751-fef1-4a1a-827a-8189386ece5d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_32ef5cba6db54a9d9dec99a040092fc3$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-05-29 10:57:07.000 +00:00','5362a9d7-d18a-4cd0-9094-b499e05d2c13','2024-08-31 20:47:12.587 +00:00','2024-08-31 20:47:12.587 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_32ef5cba6db54a9d9dec99a040092fc3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Janardon Buragohain
Executing (5ae69b93-4fd6-4563-a2d9-5a9e83ffbe33): START TRANSACTION;
Executing (19cceac5-743a-4d10-9de2-5e787664a864): COMMIT;
Executing (1209b66a-7631-4fd9-8137-ab47344228e7): COMMIT;
Executing (af24e751-fef1-4a1a-827a-8189386ece5d): COMMIT;
Executing (5ae69b93-4fd6-4563-a2d9-5a9e83ffbe33): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '1a587d8f-ab0f-41a4-8734-4eb5299de541' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-29 11:08:08.000 +00:00' LIMIT 1;
Processed user: Dr. Dima Rani Borgohain
Executing (fb06c9ca-a5c0-46cc-909f-9100aaff0c1a): START TRANSACTION;
Processed user: Trinayan Das
Executing (80ac7706-3a90-4f67-923d-3befc0a38f94): START TRANSACTION;
Processed user: Dr. Arunabha Bhattacharjee 
Executing (a91f0c36-b376-4d75-891c-21c145be4a7a): START TRANSACTION;
Processed user: Bikash Jyoti Hazarika 
Executing (10336813-35da-4da5-a3df-08a3034280f0): START TRANSACTION;
Executing (5ae69b93-4fd6-4563-a2d9-5a9e83ffbe33): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ef5970d24cbb44e39e318dec1093e909$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-05-29 11:08:08.000 +00:00','1a587d8f-ab0f-41a4-8734-4eb5299de541','2024-08-31 20:47:12.597 +00:00','2024-08-31 20:47:12.597 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ef5970d24cbb44e39e318dec1093e909$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (80ac7706-3a90-4f67-923d-3befc0a38f94): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '220027ad-44ca-4456-bce1-b7bc320100ca' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-29 10:57:14.000 +00:00' LIMIT 1;
Executing (a91f0c36-b376-4d75-891c-21c145be4a7a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '008bf78d-3278-40df-ac0b-f61aaad7df00' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-29 10:57:31.000 +00:00' LIMIT 1;
Executing (10336813-35da-4da5-a3df-08a3034280f0): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '47dfaaee-20e7-470d-a578-be5efdb6fcbc' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-30 11:04:30.000 +00:00' LIMIT 1;
Executing (fb06c9ca-a5c0-46cc-909f-9100aaff0c1a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '33f2bc0a-4818-4cfd-b1a7-dc96eca03a20' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-29 10:57:02.000 +00:00' LIMIT 1;
Executing (80ac7706-3a90-4f67-923d-3befc0a38f94): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_15d721d4b40f4fe79d6b82cf55d6f67d$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-05-29 10:57:14.000 +00:00','220027ad-44ca-4456-bce1-b7bc320100ca','2024-08-31 20:47:12.602 +00:00','2024-08-31 20:47:12.602 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_15d721d4b40f4fe79d6b82cf55d6f67d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a91f0c36-b376-4d75-891c-21c145be4a7a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_316d5a71556048768a14906cebe0a060$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-05-29 10:57:31.000 +00:00','008bf78d-3278-40df-ac0b-f61aaad7df00','2024-08-31 20:47:12.603 +00:00','2024-08-31 20:47:12.603 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_316d5a71556048768a14906cebe0a060$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (10336813-35da-4da5-a3df-08a3034280f0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_52bf5b81bc9b43149d0db1d3d30c5a7e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-05-30 11:04:30.000 +00:00','47dfaaee-20e7-470d-a578-be5efdb6fcbc','2024-08-31 20:47:12.604 +00:00','2024-08-31 20:47:12.604 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_52bf5b81bc9b43149d0db1d3d30c5a7e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5ae69b93-4fd6-4563-a2d9-5a9e83ffbe33): COMMIT;
Executing (80ac7706-3a90-4f67-923d-3befc0a38f94): COMMIT;
Executing (a91f0c36-b376-4d75-891c-21c145be4a7a): COMMIT;
Executing (fb06c9ca-a5c0-46cc-909f-9100aaff0c1a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7888fa0629a74c98867c9f6a70b6ea05$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-05-29 10:57:02.000 +00:00','33f2bc0a-4818-4cfd-b1a7-dc96eca03a20','2024-08-31 20:47:12.607 +00:00','2024-08-31 20:47:12.607 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7888fa0629a74c98867c9f6a70b6ea05$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Subir Adhikari
Executing (40320ac3-91e0-4a99-9c0f-26901ad42c5c): START TRANSACTION;
Processed user: RANA RANJAN NATH 
Executing (e0495bba-941a-4288-934e-06950c794410): START TRANSACTION;
Executing (10336813-35da-4da5-a3df-08a3034280f0): COMMIT;
Processed user: Debajit Chakrabarty
Executing (45b8a049-0df2-4a7d-b5c9-4cda48484b50): START TRANSACTION;
Executing (40320ac3-91e0-4a99-9c0f-26901ad42c5c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '984a0a77-1089-4069-b1b7-31d6653cf39f' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-29 10:57:25.000 +00:00' LIMIT 1;
Executing (e0495bba-941a-4288-934e-06950c794410): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '65b9d878-fa4a-4ffd-bb97-f830475c6b7b' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-30 11:00:00.000 +00:00' LIMIT 1;
Executing (fb06c9ca-a5c0-46cc-909f-9100aaff0c1a): COMMIT;
Executing (40320ac3-91e0-4a99-9c0f-26901ad42c5c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0090e3ebb61747cfb5a8f1581b3d035f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-05-29 10:57:25.000 +00:00','984a0a77-1089-4069-b1b7-31d6653cf39f','2024-08-31 20:47:12.613 +00:00','2024-08-31 20:47:12.613 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0090e3ebb61747cfb5a8f1581b3d035f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e0495bba-941a-4288-934e-06950c794410): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_06f8833bf43c45478a5ae56431de1e23$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-05-30 11:00:00.000 +00:00','65b9d878-fa4a-4ffd-bb97-f830475c6b7b','2024-08-31 20:47:12.614 +00:00','2024-08-31 20:47:12.614 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_06f8833bf43c45478a5ae56431de1e23$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Arnab Saikia
Executing (36e97af3-650d-475b-b5cd-0277a4308f4c): START TRANSACTION;
Executing (45b8a049-0df2-4a7d-b5c9-4cda48484b50): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '0fd2789c-d2c1-48de-8e48-0e3b9d3c234c' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-30 11:02:22.000 +00:00' LIMIT 1;
Executing (40320ac3-91e0-4a99-9c0f-26901ad42c5c): COMMIT;
Executing (e0495bba-941a-4288-934e-06950c794410): COMMIT;
Executing (36e97af3-650d-475b-b5cd-0277a4308f4c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f33cb0b3-7f13-48d7-b67d-bf42767fcf32' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-30 11:02:15.000 +00:00' LIMIT 1;
Processed user: KSHIROD MOHAN Boruah
Executing (cf21fa39-3afd-4a68-b291-2ebe4ade06f8): START TRANSACTION;
Processed user: Saikat dey
Executing (aca6c305-0004-4b36-9f9b-12d583f54092): START TRANSACTION;
Processed user: Trisiddha Nath 
Executing (0e74375c-7032-4e63-9e54-2d1b3d73934a): START TRANSACTION;
Executing (36e97af3-650d-475b-b5cd-0277a4308f4c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f3e0dac4d68c4c2fb0778a773e52a9a2$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-05-30 11:02:15.000 +00:00','f33cb0b3-7f13-48d7-b67d-bf42767fcf32','2024-08-31 20:47:12.621 +00:00','2024-08-31 20:47:12.621 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f3e0dac4d68c4c2fb0778a773e52a9a2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (45b8a049-0df2-4a7d-b5c9-4cda48484b50): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_eb6ec392e57c4aa084aa21b02fe9eb82$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-05-30 11:02:22.000 +00:00','0fd2789c-d2c1-48de-8e48-0e3b9d3c234c','2024-08-31 20:47:12.622 +00:00','2024-08-31 20:47:12.622 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_eb6ec392e57c4aa084aa21b02fe9eb82$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (aca6c305-0004-4b36-9f9b-12d583f54092): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '35914b29-c7ff-41c7-9b2c-28c4128d66fa' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-30 11:02:24.000 +00:00' LIMIT 1;
Executing (0e74375c-7032-4e63-9e54-2d1b3d73934a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2fd74557-b0c1-4d60-8f7d-47eabf8e6f62' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-30 11:02:19.000 +00:00' LIMIT 1;
Executing (cf21fa39-3afd-4a68-b291-2ebe4ade06f8): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '814ff81f-1482-41fa-b34a-97ae266fb085' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-30 11:02:16.000 +00:00' LIMIT 1;
Executing (aca6c305-0004-4b36-9f9b-12d583f54092): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5037ec9cacd14ec791403a55e270f196$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-05-30 11:02:24.000 +00:00','35914b29-c7ff-41c7-9b2c-28c4128d66fa','2024-08-31 20:47:12.626 +00:00','2024-08-31 20:47:12.626 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5037ec9cacd14ec791403a55e270f196$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0e74375c-7032-4e63-9e54-2d1b3d73934a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bdf09a8556a74e2199e6eecec75a2187$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-05-30 11:02:19.000 +00:00','2fd74557-b0c1-4d60-8f7d-47eabf8e6f62','2024-08-31 20:47:12.627 +00:00','2024-08-31 20:47:12.627 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bdf09a8556a74e2199e6eecec75a2187$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (36e97af3-650d-475b-b5cd-0277a4308f4c): COMMIT;
Executing (45b8a049-0df2-4a7d-b5c9-4cda48484b50): COMMIT;
Executing (aca6c305-0004-4b36-9f9b-12d583f54092): COMMIT;
Executing (0e74375c-7032-4e63-9e54-2d1b3d73934a): COMMIT;
Processed user: Arnab Jyoti Arya
Executing (efa8cbcf-59ba-4df0-8083-74a3ead1edd1): START TRANSACTION;
Executing (cf21fa39-3afd-4a68-b291-2ebe4ade06f8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_eff6338dd08841e18ebd5de09b492665$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-05-30 11:02:16.000 +00:00','814ff81f-1482-41fa-b34a-97ae266fb085','2024-08-31 20:47:12.631 +00:00','2024-08-31 20:47:12.631 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_eff6338dd08841e18ebd5de09b492665$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Kiyekashyap Pathak
Executing (d0cc04cc-06ee-44af-8953-766fdff86256): START TRANSACTION;
Processed user: Shahinur Islam
Executing (933dae7a-7513-40fd-9e7f-ab91dd350b75): START TRANSACTION;
Executing (efa8cbcf-59ba-4df0-8083-74a3ead1edd1): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '7c236bf0-be29-4c30-8651-f8e88fb6dde9' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-30 11:02:27.000 +00:00' LIMIT 1;
Processed user: Shashabindu Dey
Executing (81ecb76d-1125-49fc-a5d0-019c4eed59b6): START TRANSACTION;
Executing (d0cc04cc-06ee-44af-8953-766fdff86256): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e87a3059-a5a4-48ae-aef2-601658bd0e18' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-30 07:04:24.000 +00:00' LIMIT 1;
Executing (933dae7a-7513-40fd-9e7f-ab91dd350b75): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6bbbe571-d71f-4e95-88b7-0483cd3f0555' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-30 07:26:19.000 +00:00' LIMIT 1;
Executing (efa8cbcf-59ba-4df0-8083-74a3ead1edd1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_62cc95268f4c4e96b55053c054ceda7b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-05-30 11:02:27.000 +00:00','7c236bf0-be29-4c30-8651-f8e88fb6dde9','2024-08-31 20:47:12.637 +00:00','2024-08-31 20:47:12.637 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_62cc95268f4c4e96b55053c054ceda7b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cf21fa39-3afd-4a68-b291-2ebe4ade06f8): COMMIT;
Executing (d0cc04cc-06ee-44af-8953-766fdff86256): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_40936aadddc94ec0a9fa15bb03cf065a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-30 07:04:24.000 +00:00','e87a3059-a5a4-48ae-aef2-601658bd0e18','2024-08-31 20:47:12.639 +00:00','2024-08-31 20:47:12.639 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_40936aadddc94ec0a9fa15bb03cf065a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (933dae7a-7513-40fd-9e7f-ab91dd350b75): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fe6efad407364a729f46351f12efc36e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-30 07:26:19.000 +00:00','6bbbe571-d71f-4e95-88b7-0483cd3f0555','2024-08-31 20:47:12.640 +00:00','2024-08-31 20:47:12.640 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fe6efad407364a729f46351f12efc36e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (81ecb76d-1125-49fc-a5d0-019c4eed59b6): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '91b483c7-6378-4355-be57-3a69f6e10ba5' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-30 07:20:08.000 +00:00' LIMIT 1;
Executing (d0cc04cc-06ee-44af-8953-766fdff86256): COMMIT;
Executing (efa8cbcf-59ba-4df0-8083-74a3ead1edd1): COMMIT;
Processed user: Bhaskaryya Deka
Executing (69367235-2bea-4363-8682-f203eb4508a6): START TRANSACTION;
Processed user: Pradip kumar Gogoi
Executing (438babe4-7cdd-401e-b891-48f7bdebeb21): START TRANSACTION;
Processed user: Roton Ramdey 
Executing (e047e0e1-3fbd-4f4c-b602-0aee527a6cd0): START TRANSACTION;
Executing (81ecb76d-1125-49fc-a5d0-019c4eed59b6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_da7c954447c04e6cbd6655f4d612b645$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-30 07:20:08.000 +00:00','91b483c7-6378-4355-be57-3a69f6e10ba5','2024-08-31 20:47:12.644 +00:00','2024-08-31 20:47:12.644 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_da7c954447c04e6cbd6655f4d612b645$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (933dae7a-7513-40fd-9e7f-ab91dd350b75): COMMIT;
Executing (438babe4-7cdd-401e-b891-48f7bdebeb21): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e91e616e-06fa-4748-a1ab-75a15a4cf3c2' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-30 07:19:55.000 +00:00' LIMIT 1;
Executing (e047e0e1-3fbd-4f4c-b602-0aee527a6cd0): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '025224e5-00f8-4dbf-adb9-d2a96416a391' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-30 07:27:09.000 +00:00' LIMIT 1;
Executing (69367235-2bea-4363-8682-f203eb4508a6): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'a6a3144d-7891-4ea9-ba34-72737cbfdb8c' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-31 02:16:40.000 +00:00' LIMIT 1;
Executing (438babe4-7cdd-401e-b891-48f7bdebeb21): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5675d139a38a4a1dbf86b82c95ca43e2$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-30 07:19:55.000 +00:00','e91e616e-06fa-4748-a1ab-75a15a4cf3c2','2024-08-31 20:47:12.648 +00:00','2024-08-31 20:47:12.648 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5675d139a38a4a1dbf86b82c95ca43e2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e047e0e1-3fbd-4f4c-b602-0aee527a6cd0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5d460b8c8c4341cb8c68bf956d1b1da0$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-30 07:27:09.000 +00:00','025224e5-00f8-4dbf-adb9-d2a96416a391','2024-08-31 20:47:12.649 +00:00','2024-08-31 20:47:12.649 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5d460b8c8c4341cb8c68bf956d1b1da0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Riju moni Saikia
Executing (29a9f1a5-4bf7-4f4b-9622-6ac840057872): START TRANSACTION;
Executing (81ecb76d-1125-49fc-a5d0-019c4eed59b6): COMMIT;
Executing (438babe4-7cdd-401e-b891-48f7bdebeb21): COMMIT;
Executing (e047e0e1-3fbd-4f4c-b602-0aee527a6cd0): COMMIT;
Executing (29a9f1a5-4bf7-4f4b-9622-6ac840057872): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8a45579a-7412-48d0-a7fa-41d9cd88398b' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-30 07:19:03.000 +00:00' LIMIT 1;
Executing (69367235-2bea-4363-8682-f203eb4508a6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9222e459e18945dc893835571e30721a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-05-31 02:16:40.000 +00:00','a6a3144d-7891-4ea9-ba34-72737cbfdb8c','2024-08-31 20:47:12.652 +00:00','2024-08-31 20:47:12.652 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9222e459e18945dc893835571e30721a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Amit Yadav
Executing (ed5a60cc-0991-4dd8-839d-21670b873d46): START TRANSACTION;
Processed user: Mainu Handique
Executing (e464537b-3f0f-403b-afb2-2682d3167dbe): START TRANSACTION;
Executing (29a9f1a5-4bf7-4f4b-9622-6ac840057872): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_100bc747939a43de93bb7b5cbc9e6bb5$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-30 07:19:03.000 +00:00','8a45579a-7412-48d0-a7fa-41d9cd88398b','2024-08-31 20:47:12.655 +00:00','2024-08-31 20:47:12.655 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_100bc747939a43de93bb7b5cbc9e6bb5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Dulu Saikia
Executing (e278c698-2bf0-46bb-b2cf-5a82b2bd5072): START TRANSACTION;
Executing (ed5a60cc-0991-4dd8-839d-21670b873d46): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '1ce1078b-d061-4943-a69d-0179aca0cb67' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-30 07:19:15.000 +00:00' LIMIT 1;
Executing (e464537b-3f0f-403b-afb2-2682d3167dbe): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'd4afef28-d322-4097-960f-358bdc25343f' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-30 07:21:35.000 +00:00' LIMIT 1;
Executing (69367235-2bea-4363-8682-f203eb4508a6): COMMIT;
Executing (ed5a60cc-0991-4dd8-839d-21670b873d46): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_972e252bbb7b409f9de82fc9c897f8de$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-30 07:19:15.000 +00:00','1ce1078b-d061-4943-a69d-0179aca0cb67','2024-08-31 20:47:12.659 +00:00','2024-08-31 20:47:12.659 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_972e252bbb7b409f9de82fc9c897f8de$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e464537b-3f0f-403b-afb2-2682d3167dbe): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d5cefdcff1774220bf7249142f9f5fc9$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-30 07:21:35.000 +00:00','d4afef28-d322-4097-960f-358bdc25343f','2024-08-31 20:47:12.661 +00:00','2024-08-31 20:47:12.661 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d5cefdcff1774220bf7249142f9f5fc9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e278c698-2bf0-46bb-b2cf-5a82b2bd5072): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6e6aea1b-4ebc-4ca7-b684-bd44941bf28f' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-30 07:23:39.000 +00:00' LIMIT 1;
Executing (29a9f1a5-4bf7-4f4b-9622-6ac840057872): COMMIT;
Executing (ed5a60cc-0991-4dd8-839d-21670b873d46): COMMIT;
Executing (e464537b-3f0f-403b-afb2-2682d3167dbe): COMMIT;
Executing (e278c698-2bf0-46bb-b2cf-5a82b2bd5072): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_730c746daf8440da99806f2c446726b9$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-30 07:23:39.000 +00:00','6e6aea1b-4ebc-4ca7-b684-bd44941bf28f','2024-08-31 20:47:12.666 +00:00','2024-08-31 20:47:12.666 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_730c746daf8440da99806f2c446726b9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Akhya Raj Muchahary
Executing (2ed0b208-e891-409b-a62c-930fe5ef3f2d): START TRANSACTION;
Processed user: Dipen Gogoi
Executing (772e4404-7888-4665-bbf0-2c416f07452c): START TRANSACTION;
Processed user: Tanu Sonowal
Executing (da012d2d-e087-4b48-9a9d-e1f6b3721ac5): START TRANSACTION;
Processed user: Nabin chandra Boruah
Executing (59f28410-5494-42e5-ba02-2c46d9072e47): START TRANSACTION;
Executing (772e4404-7888-4665-bbf0-2c416f07452c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b2d4299c-604e-4dba-943c-737573b163d2' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-30 07:08:38.000 +00:00' LIMIT 1;
Executing (da012d2d-e087-4b48-9a9d-e1f6b3721ac5): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '29787f29-d741-464e-a655-5cbce52de684' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-30 07:33:15.000 +00:00' LIMIT 1;
Executing (e278c698-2bf0-46bb-b2cf-5a82b2bd5072): COMMIT;
Executing (2ed0b208-e891-409b-a62c-930fe5ef3f2d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '0631b942-dc35-4461-bb0e-6970e84682cd' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-29 10:57:10.000 +00:00' LIMIT 1;
Executing (772e4404-7888-4665-bbf0-2c416f07452c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_69687851d2c44e859874a2ba3765ef3e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-30 07:08:38.000 +00:00','b2d4299c-604e-4dba-943c-737573b163d2','2024-08-31 20:47:12.677 +00:00','2024-08-31 20:47:12.677 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_69687851d2c44e859874a2ba3765ef3e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (da012d2d-e087-4b48-9a9d-e1f6b3721ac5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fbd02247e47a4798a573654495ed5f41$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-30 07:33:15.000 +00:00','29787f29-d741-464e-a655-5cbce52de684','2024-08-31 20:47:12.678 +00:00','2024-08-31 20:47:12.678 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fbd02247e47a4798a573654495ed5f41$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Dulal Chandra Bhuyan 
Executing (a8583050-858d-4c4a-9167-880d46a25b8e): START TRANSACTION;
Executing (59f28410-5494-42e5-ba02-2c46d9072e47): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '72717c70-603e-49a7-97bb-97365ea9be52' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-30 07:09:11.000 +00:00' LIMIT 1;
Executing (772e4404-7888-4665-bbf0-2c416f07452c): COMMIT;
Executing (da012d2d-e087-4b48-9a9d-e1f6b3721ac5): COMMIT;
Executing (a8583050-858d-4c4a-9167-880d46a25b8e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f6165fcf-2289-4399-841d-bc30a889e7f7' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-30 07:03:57.000 +00:00' LIMIT 1;
Executing (2ed0b208-e891-409b-a62c-930fe5ef3f2d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a0df2df096424683a938aa4c98cc607f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-05-29 10:57:10.000 +00:00','0631b942-dc35-4461-bb0e-6970e84682cd','2024-08-31 20:47:12.685 +00:00','2024-08-31 20:47:12.685 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a0df2df096424683a938aa4c98cc607f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Monuj kr Deori
Executing (59de19e8-4dee-45ab-964a-ea7dd224aa8b): START TRANSACTION;
Processed user: Manuj Mipun
Executing (b076856c-70b1-4b10-bb5e-46508f068830): START TRANSACTION;
Executing (a8583050-858d-4c4a-9167-880d46a25b8e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_290cb7c2f9bc47feb4c2e2521089cdd2$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-30 07:03:57.000 +00:00','f6165fcf-2289-4399-841d-bc30a889e7f7','2024-08-31 20:47:12.688 +00:00','2024-08-31 20:47:12.688 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_290cb7c2f9bc47feb4c2e2521089cdd2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (59f28410-5494-42e5-ba02-2c46d9072e47): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ecaacdc63011418faa5ed0f107048bba$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-30 07:09:11.000 +00:00','72717c70-603e-49a7-97bb-97365ea9be52','2024-08-31 20:47:12.690 +00:00','2024-08-31 20:47:12.690 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ecaacdc63011418faa5ed0f107048bba$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (59de19e8-4dee-45ab-964a-ea7dd224aa8b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4e8f38a1-5e19-4f08-957a-d40414a0d205' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-30 07:07:33.000 +00:00' LIMIT 1;
Executing (b076856c-70b1-4b10-bb5e-46508f068830): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'cf3b2a06-a181-4a5d-a11d-fe78e5b66d3c' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-30 07:32:15.000 +00:00' LIMIT 1;
Executing (a8583050-858d-4c4a-9167-880d46a25b8e): COMMIT;
Executing (2ed0b208-e891-409b-a62c-930fe5ef3f2d): COMMIT;
Executing (59de19e8-4dee-45ab-964a-ea7dd224aa8b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d3ef76e5e573402499322ad0e208b4ca$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-30 07:07:33.000 +00:00','4e8f38a1-5e19-4f08-957a-d40414a0d205','2024-08-31 20:47:12.695 +00:00','2024-08-31 20:47:12.695 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d3ef76e5e573402499322ad0e208b4ca$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b076856c-70b1-4b10-bb5e-46508f068830): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_02f3252528294ab89bd14e63b92ea718$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-30 07:32:15.000 +00:00','cf3b2a06-a181-4a5d-a11d-fe78e5b66d3c','2024-08-31 20:47:12.697 +00:00','2024-08-31 20:47:12.697 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_02f3252528294ab89bd14e63b92ea718$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: UPEN PEGU
Executing (dcb728f7-e10e-44ad-84b1-6a299c8f6b68): START TRANSACTION;
Executing (59f28410-5494-42e5-ba02-2c46d9072e47): COMMIT;
Executing (59de19e8-4dee-45ab-964a-ea7dd224aa8b): COMMIT;
Executing (b076856c-70b1-4b10-bb5e-46508f068830): COMMIT;
Executing (dcb728f7-e10e-44ad-84b1-6a299c8f6b68): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '86e7cb28-edb6-4c4f-85d2-97e0f46f1446' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-30 07:25:46.000 +00:00' LIMIT 1;
Processed user: Monunyoti Regon
Executing (237bd7e6-7c33-4fb0-bcff-8c1a32cf72bf): START TRANSACTION;
Processed user: Joyprakash Deori
Executing (7c005ba8-5cb0-4110-b643-b64a93bf3657): START TRANSACTION;
Processed user: Suman Das
Executing (5d2d3d09-b16b-4d7f-96bb-4843e522bb38): START TRANSACTION;
Executing (dcb728f7-e10e-44ad-84b1-6a299c8f6b68): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6d5b716b499047048f42da96b34b96b4$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-30 07:25:46.000 +00:00','86e7cb28-edb6-4c4f-85d2-97e0f46f1446','2024-08-31 20:47:12.704 +00:00','2024-08-31 20:47:12.704 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6d5b716b499047048f42da96b34b96b4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Raju Deori
Executing (420448cf-2e8b-4b7e-aecb-b2f02b9f6cdb): START TRANSACTION;
Executing (7c005ba8-5cb0-4110-b643-b64a93bf3657): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2c0b2117-d29a-4466-bbce-8f9f09c77486' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-30 07:21:09.000 +00:00' LIMIT 1;
Executing (5d2d3d09-b16b-4d7f-96bb-4843e522bb38): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '78ffaf20-36b3-4dbe-954e-8bc62734f726' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-30 07:03:45.000 +00:00' LIMIT 1;
Executing (237bd7e6-7c33-4fb0-bcff-8c1a32cf72bf): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'ad866673-aec4-46ff-bc8c-33b59e8d4b80' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-30 07:26:24.000 +00:00' LIMIT 1;
Executing (7c005ba8-5cb0-4110-b643-b64a93bf3657): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_66eb00c08e9046b3a084c2120ae455c4$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-30 07:21:09.000 +00:00','2c0b2117-d29a-4466-bbce-8f9f09c77486','2024-08-31 20:47:12.708 +00:00','2024-08-31 20:47:12.708 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_66eb00c08e9046b3a084c2120ae455c4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5d2d3d09-b16b-4d7f-96bb-4843e522bb38): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3bf88721fb414e1ba7e60dd7d687b9d2$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-30 07:03:45.000 +00:00','78ffaf20-36b3-4dbe-954e-8bc62734f726','2024-08-31 20:47:12.709 +00:00','2024-08-31 20:47:12.709 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3bf88721fb414e1ba7e60dd7d687b9d2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (420448cf-2e8b-4b7e-aecb-b2f02b9f6cdb): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '57864e70-faed-419b-bda1-14b54d0fd4f1' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-30 07:26:16.000 +00:00' LIMIT 1;
Executing (dcb728f7-e10e-44ad-84b1-6a299c8f6b68): COMMIT;
Executing (7c005ba8-5cb0-4110-b643-b64a93bf3657): COMMIT;
Executing (420448cf-2e8b-4b7e-aecb-b2f02b9f6cdb): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0dd95a5b31ee4153a6334c18372a54eb$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-30 07:26:16.000 +00:00','57864e70-faed-419b-bda1-14b54d0fd4f1','2024-08-31 20:47:12.712 +00:00','2024-08-31 20:47:12.712 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0dd95a5b31ee4153a6334c18372a54eb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (237bd7e6-7c33-4fb0-bcff-8c1a32cf72bf): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1efb41a6ce5946d5930f668c5882599e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-30 07:26:24.000 +00:00','ad866673-aec4-46ff-bc8c-33b59e8d4b80','2024-08-31 20:47:12.713 +00:00','2024-08-31 20:47:12.713 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1efb41a6ce5946d5930f668c5882599e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Tullya Gogoi
Executing (d1fa16ee-e5fb-402d-95f6-5011f43f4934): START TRANSACTION;
Executing (5d2d3d09-b16b-4d7f-96bb-4843e522bb38): COMMIT;
Processed user: Kuheswar Deori
Executing (eb71abe3-293a-4cff-8c31-1b12d49e5f90): START TRANSACTION;
Executing (d1fa16ee-e5fb-402d-95f6-5011f43f4934): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5a4310d0-06b8-4b03-aefd-a36d29cc94b4' AND "UserTopic"."name" = 'Test run for Assisted Scanning' AND "UserTopic"."issuedAt" = '2020-08-05 13:16:58.000 +00:00' LIMIT 1;
Processed user: Pinku Pegu
Executing (705277e0-4836-4254-9d27-90381c9aaf9c): START TRANSACTION;
Executing (420448cf-2e8b-4b7e-aecb-b2f02b9f6cdb): COMMIT;
Executing (237bd7e6-7c33-4fb0-bcff-8c1a32cf72bf): COMMIT;
Executing (d1fa16ee-e5fb-402d-95f6-5011f43f4934): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_def6762ff45546fc8ed22dc8191382de$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Test run for Assisted Scanning','2020-08-05 13:16:58.000 +00:00','5a4310d0-06b8-4b03-aefd-a36d29cc94b4','2024-08-31 20:47:12.718 +00:00','2024-08-31 20:47:12.718 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_def6762ff45546fc8ed22dc8191382de$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (705277e0-4836-4254-9d27-90381c9aaf9c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2fac0fb6-ae1c-4ac0-a53d-df0a9d98d176' AND "UserTopic"."name" = 'PDA Hand-on' AND "UserTopic"."issuedAt" = '2023-08-17 11:11:22.000 +00:00' LIMIT 1;
Processed user: Tapti gogoi mahanta
Executing (973696bf-cb85-484b-a542-710363378088): START TRANSACTION;
Executing (eb71abe3-293a-4cff-8c31-1b12d49e5f90): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '02281e30-0e4c-458d-babd-715fc3c4e388' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-08 09:21:56.000 +00:00' LIMIT 1;
Executing (d1fa16ee-e5fb-402d-95f6-5011f43f4934): COMMIT;
Executing (705277e0-4836-4254-9d27-90381c9aaf9c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_eaf3432d533748199e116f8ea80551bc$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Hand-on','2023-08-17 11:11:22.000 +00:00','2fac0fb6-ae1c-4ac0-a53d-df0a9d98d176','2024-08-31 20:47:12.722 +00:00','2024-08-31 20:47:12.722 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_eaf3432d533748199e116f8ea80551bc$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (973696bf-cb85-484b-a542-710363378088): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '867b20fb-b6bd-418d-91c6-aa5ef686e629' AND "UserTopic"."name" = 'PDA structure Demo' AND "UserTopic"."issuedAt" = '2022-03-03 12:31:26.000 +00:00' LIMIT 1;
Processed user: Labanya Lahan
Executing (94014399-e3e8-4055-a395-828f3ceb3f33): START TRANSACTION;
trainertopicname Test run for Assisted Scanning
Executing (d121791a-69e3-499b-9ab0-cd87a5a33b86): START TRANSACTION;
Executing (705277e0-4836-4254-9d27-90381c9aaf9c): COMMIT;
Executing (973696bf-cb85-484b-a542-710363378088): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a34a5d38e0c94234b283444d92bb1cf3$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA structure Demo','2022-03-03 12:31:26.000 +00:00','867b20fb-b6bd-418d-91c6-aa5ef686e629','2024-08-31 20:47:12.728 +00:00','2024-08-31 20:47:12.728 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a34a5d38e0c94234b283444d92bb1cf3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (eb71abe3-293a-4cff-8c31-1b12d49e5f90): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d93ca204e4d846518b4c0af02239312b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-08 09:21:56.000 +00:00','02281e30-0e4c-458d-babd-715fc3c4e388','2024-08-31 20:47:12.730 +00:00','2024-08-31 20:47:12.730 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d93ca204e4d846518b4c0af02239312b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d121791a-69e3-499b-9ab0-cd87a5a33b86): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '7e5a3a66-53b3-4a9e-a4af-da77b6e53614' AND "UserTopic"."name" = 'Well Monitoring - Example' AND "UserTopic"."issuedAt" = '2022-11-29 10:08:33.000 +00:00' LIMIT 1;
Processed user: Aditya Maruvada
Executing (a4dfd0dc-d867-4784-b75b-1924d4c8c74f): START TRANSACTION;
Executing (94014399-e3e8-4055-a395-828f3ceb3f33): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4f8fe22c-8dae-468f-b003-f41e1abdf485' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-29 10:57:02.000 +00:00' LIMIT 1;
Executing (d121791a-69e3-499b-9ab0-cd87a5a33b86): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b121451863e2411fb6d12a4c6b48ab2c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Well Monitoring - Example','2022-11-29 10:08:33.000 +00:00','7e5a3a66-53b3-4a9e-a4af-da77b6e53614','2024-08-31 20:47:12.733 +00:00','2024-08-31 20:47:12.733 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b121451863e2411fb6d12a4c6b48ab2c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a4dfd0dc-d867-4784-b75b-1924d4c8c74f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'fa1e92ec-093e-4b52-b2df-8f16d10203e2' AND "UserTopic"."name" = 'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for         r different groups_BFTs_GKMs' AND "UserTopic"."issuedAt" = '2022-12-21 10:00:31.000 +00:00' LIMIT 1;
Executing (973696bf-cb85-484b-a542-710363378088): COMMIT;
Executing (eb71abe3-293a-4cff-8c31-1b12d49e5f90): COMMIT;
Executing (d121791a-69e3-499b-9ab0-cd87a5a33b86): COMMIT;
Executing (a4dfd0dc-d867-4784-b75b-1924d4c8c74f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_87e9036b7269460781624a7c1e41205e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for         r different groups_BFTs_GKMs','2022-12-21 10:00:31.000 +00:00','fa1e92ec-093e-4b52-b2df-8f16d10203e2','2024-08-31 20:47:12.736 +00:00','2024-08-31 20:47:12.736 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_87e9036b7269460781624a7c1e41205e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (94014399-e3e8-4055-a395-828f3ceb3f33): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_709480240e374ee69c89d9911e213503$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-05-29 10:57:02.000 +00:00','4f8fe22c-8dae-468f-b003-f41e1abdf485','2024-08-31 20:47:12.738 +00:00','2024-08-31 20:47:12.738 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_709480240e374ee69c89d9911e213503$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Sachin
Executing (edb3f8a9-07ee-4dbe-acfa-d556c2a99b20): START TRANSACTION;
topicName CBP Orientation 2020-08-28T10:19:52.000+0000
Executing (4f675c8b-497c-4f0a-a318-2de647a85176): START TRANSACTION;
Processed user: Ahmad Sarif Laskar
Executing (b27dc91f-11c2-4bb6-ad0c-5903cdc04523): START TRANSACTION;
Executing (edb3f8a9-07ee-4dbe-acfa-d556c2a99b20): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e348c20d-c7e1-460f-9ec7-15f268dc9d11' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-06-08 09:22:57.000 +00:00' LIMIT 1;
Executing (4f675c8b-497c-4f0a-a318-2de647a85176): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c0072a31-91df-48a0-b79e-5d19c7d29d27' AND "UserTopic"."name" = 'Virtual Interactions - Best Practices - Smitha Murthy' AND "UserTopic"."issuedAt" = '2020-10-14 06:59:28.000 +00:00' LIMIT 1;
Executing (a4dfd0dc-d867-4784-b75b-1924d4c8c74f): COMMIT;
Executing (94014399-e3e8-4055-a395-828f3ceb3f33): COMMIT;
Executing (edb3f8a9-07ee-4dbe-acfa-d556c2a99b20): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5a06914b738243148a75b19c4797b090$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-06-08 09:22:57.000 +00:00','e348c20d-c7e1-460f-9ec7-15f268dc9d11','2024-08-31 20:47:12.743 +00:00','2024-08-31 20:47:12.743 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5a06914b738243148a75b19c4797b090$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4f675c8b-497c-4f0a-a318-2de647a85176): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5a0faa2fac3d4e39af728932b17cc3c5$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Virtual Interactions - Best Practices - Smitha Murthy','2020-10-14 06:59:28.000 +00:00','c0072a31-91df-48a0-b79e-5d19c7d29d27','2024-08-31 20:47:12.744 +00:00','2024-08-31 20:47:12.744 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5a0faa2fac3d4e39af728932b17cc3c5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ   ಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs
Executing (3579e0dc-25b5-4836-bf34-4ee4fa6e0402): START TRANSACTION;
Executing (b27dc91f-11c2-4bb6-ad0c-5903cdc04523): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '0a59ae48-1c58-4c3f-9d94-5339ab7c0944' AND "UserTopic"."name" = 'PDA Hands-on' AND "UserTopic"."issuedAt" = '2021-03-16 08:21:47.000 +00:00' LIMIT 1;
Executing (edb3f8a9-07ee-4dbe-acfa-d556c2a99b20): COMMIT;
Executing (3579e0dc-25b5-4836-bf34-4ee4fa6e0402): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '3ca8d21c-b8f7-412b-85d0-77aa2d49a81a' AND "UserTopic"."name" = 'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for d         different groups_BFTs_GKMs' AND "UserTopic"."issuedAt" = '2022-12-21 10:00:38.000 +00:00' LIMIT 1;
Processed user: APU SUKLA
Executing (1744b93e-53f0-4e2c-a439-7f47b5bde6ff): START TRANSACTION;
Processed user: Sayan Das
Executing (5f384826-6bfd-4e45-9571-35e076df11ca): START TRANSACTION;
Executing (3579e0dc-25b5-4836-bf34-4ee4fa6e0402): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_81ed3354f4c54bdeb83efd6cb0c80c60$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for d         different groups_BFTs_GKMs','2022-12-21 10:00:38.000 +00:00','3ca8d21c-b8f7-412b-85d0-77aa2d49a81a','2024-08-31 20:47:12.750 +00:00','2024-08-31 20:47:12.750 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_81ed3354f4c54bdeb83efd6cb0c80c60$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4f675c8b-497c-4f0a-a318-2de647a85176): COMMIT;
Executing (b27dc91f-11c2-4bb6-ad0c-5903cdc04523): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1ac7b44ca29a424e83bb481a2431a904$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Hands-on','2021-03-16 08:21:47.000 +00:00','0a59ae48-1c58-4c3f-9d94-5339ab7c0944','2024-08-31 20:47:12.751 +00:00','2024-08-31 20:47:12.751 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1ac7b44ca29a424e83bb481a2431a904$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5f384826-6bfd-4e45-9571-35e076df11ca): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2cbf38a3-d533-4451-9b58-f523baba5fe5' AND "UserTopic"."name" = 'Scripts Review | T1.02 | DG' AND "UserTopic"."issuedAt" = '2020-12-02 11:40:31.000 +00:00' LIMIT 1;
topicName Virtual Training Format 2020-10-14T06:56:55.000+0000
Executing (3f904a5d-ba0a-4f33-988f-d6dd01f0d63a): START TRANSACTION;
Executing (1744b93e-53f0-4e2c-a439-7f47b5bde6ff): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e3867d63-96d5-4a20-9b9a-844063372dd5' AND "UserTopic"."name" = 'ವಿವಿಧ ಗುಂಪ ಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs' AND "UserTopic"."issuedAt" = '2022-12-21 10:02:57.000 +00:00' LIMIT 1;
Executing (5f384826-6bfd-4e45-9571-35e076df11ca): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5d46a149cade44bd9189649fc2b6af89$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Scripts Review | T1.02 | DG','2020-12-02 11:40:31.000 +00:00','2cbf38a3-d533-4451-9b58-f523baba5fe5','2024-08-31 20:47:12.754 +00:00','2024-08-31 20:47:12.754 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5d46a149cade44bd9189649fc2b6af89$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3f904a5d-ba0a-4f33-988f-d6dd01f0d63a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '0b7a3d60-9092-40ff-9c4b-73daede8e2b9' AND "UserTopic"."name" = 'PDA - Program App' AND "UserTopic"."issuedAt" = '2021-04-05 10:40:59.000 +00:00' LIMIT 1;
Executing (3579e0dc-25b5-4836-bf34-4ee4fa6e0402): COMMIT;
Executing (b27dc91f-11c2-4bb6-ad0c-5903cdc04523): COMMIT;
Executing (5f384826-6bfd-4e45-9571-35e076df11ca): COMMIT;
Executing (3f904a5d-ba0a-4f33-988f-d6dd01f0d63a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c17ddcec9f384826bd87aecf42c52b83$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Program App','2021-04-05 10:40:59.000 +00:00','0b7a3d60-9092-40ff-9c4b-73daede8e2b9','2024-08-31 20:47:12.757 +00:00','2024-08-31 20:47:12.757 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c17ddcec9f384826bd87aecf42c52b83$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1744b93e-53f0-4e2c-a439-7f47b5bde6ff): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_92d7368f70fb45eda1148c9e85f839d7$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'ವಿವಿಧ ಗುಂಪ ಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs','2022-12-21 10:02:57.000 +00:00','e3867d63-96d5-4a20-9b9a-844063372dd5','2024-08-31 20:47:12.758 +00:00','2024-08-31 20:47:12.758 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_92d7368f70fb45eda1148c9e85f839d7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Crop Water Budgeting 2020-12-15T10:36:02.000+0000
Executing (d4a7a7b9-d9ef-467f-9fca-22e873c7650d): START TRANSACTION;
Processed user: Prakash Lambi
Executing (68435acd-ffea-4ec0-9993-d21ce1abc55d): START TRANSACTION;
Processed user: Rakesh kumar
Executing (b8ed48f2-de42-4196-a0c9-76fd38355249): START TRANSACTION;
Executing (d4a7a7b9-d9ef-467f-9fca-22e873c7650d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'bc2d9734-3b59-4c4d-a8c2-9e543180c372' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2019-12-26 11:27:23.000 +00:00' LIMIT 1;
Executing (68435acd-ffea-4ec0-9993-d21ce1abc55d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8610e640-1fe5-43f1-8552-f0964cc48dc4' AND "UserTopic"."name" = 'PDA - Trainer App' AND "UserTopic"."issuedAt" = '2020-01-08 08:53:55.000 +00:00' LIMIT 1;
Executing (3f904a5d-ba0a-4f33-988f-d6dd01f0d63a): COMMIT;
Executing (1744b93e-53f0-4e2c-a439-7f47b5bde6ff): COMMIT;
Executing (d4a7a7b9-d9ef-467f-9fca-22e873c7650d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f0b80eac088b4fd0bbbaf36913fe3747$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2019-12-26 11:27:23.000 +00:00','bc2d9734-3b59-4c4d-a8c2-9e543180c372','2024-08-31 20:47:12.763 +00:00','2024-08-31 20:47:12.763 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f0b80eac088b4fd0bbbaf36913fe3747$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (68435acd-ffea-4ec0-9993-d21ce1abc55d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_85f9f6cef93346638e0faf2b1d03c20f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Trainer App','2020-01-08 08:53:55.000 +00:00','8610e640-1fe5-43f1-8552-f0964cc48dc4','2024-08-31 20:47:12.765 +00:00','2024-08-31 20:47:12.765 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_85f9f6cef93346638e0faf2b1d03c20f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b8ed48f2-de42-4196-a0c9-76fd38355249): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '912a7c4d-2482-4a7a-a506-3cd7c3d8b886' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 07:01:09.000 +00:00' LIMIT 1;
Executing (d4a7a7b9-d9ef-467f-9fca-22e873c7650d): COMMIT;
Processed user: Nidhi Niharika Socion
Executing (7852376e-b38a-44e9-a6c4-693f67517f09): START TRANSACTION;
Processed user: Khadar Basha
Executing (076e0f4c-4f99-4273-8edf-6a1170090a49): START TRANSACTION;
Processed user: Pavan The
Executing (64419f98-60a4-428e-84f6-7436e8cc3cc5): START TRANSACTION;
Executing (7852376e-b38a-44e9-a6c4-693f67517f09): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '840282c7-4246-44db-a1f6-d753c1913547' AND "UserTopic"."name" = 'Introduction to Process of planning a lesson flow' AND "UserTopic"."issuedAt" = '2022-03-02 09:07:24.000 +00:00' LIMIT 1;
Executing (b8ed48f2-de42-4196-a0c9-76fd38355249): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9f648da67a3b4216ba5493fefd410996$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 07:01:09.000 +00:00','912a7c4d-2482-4a7a-a506-3cd7c3d8b886','2024-08-31 20:47:12.770 +00:00','2024-08-31 20:47:12.770 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9f648da67a3b4216ba5493fefd410996$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (68435acd-ffea-4ec0-9993-d21ce1abc55d): COMMIT;
Executing (64419f98-60a4-428e-84f6-7436e8cc3cc5): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5bfd7f81-ec88-422a-9f71-fbc75f3ace63' AND "UserTopic"."name" = 'Concepts and development of Base map,Landuse map and Geo-morphology maps' AND "UserTopic"."issuedAt" = '2021-03-06 10:31:59.000 +00:00' LIMIT 1;
Executing (7852376e-b38a-44e9-a6c4-693f67517f09): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e3e5fb95eb8d411188f16abdb80e0071$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Process of planning a lesson flow','2022-03-02 09:07:24.000 +00:00','840282c7-4246-44db-a1f6-d753c1913547','2024-08-31 20:47:12.772 +00:00','2024-08-31 20:47:12.772 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e3e5fb95eb8d411188f16abdb80e0071$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (076e0f4c-4f99-4273-8edf-6a1170090a49): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'eafa5769-776e-421f-bdce-03326a065f7e' AND "UserTopic"."name" = 'Concepts and development of Base map,Landuse map and Geo-morphology maps' AND "UserTopic"."issuedAt" = '2021-03-06 10:30:59.000 +00:00' LIMIT 1;
Executing (64419f98-60a4-428e-84f6-7436e8cc3cc5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2183439f412940b3bc079bb0e1236e0f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Concepts and development of Base map,Landuse map and Geo-morphology maps','2021-03-06 10:31:59.000 +00:00','5bfd7f81-ec88-422a-9f71-fbc75f3ace63','2024-08-31 20:47:12.774 +00:00','2024-08-31 20:47:12.774 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2183439f412940b3bc079bb0e1236e0f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname ಅಂತರ್ಜಲ ಚೇತನ - ಮಾದರಿ ವಿಷಯ (Antarajala Chetana - Example Topic)
Executing (03243c9d-6811-4f5d-9527-4cf39cc926ad): START TRANSACTION;
Executing (b8ed48f2-de42-4196-a0c9-76fd38355249): COMMIT;
Executing (03243c9d-6811-4f5d-9527-4cf39cc926ad): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'db52891b-977c-429d-ad2c-9258b81a7ba4' AND "UserTopic"."name" = 'Content Development | T1.01 | DG' AND "UserTopic"."issuedAt" = '2020-11-26 11:45:05.000 +00:00' LIMIT 1;
Executing (7852376e-b38a-44e9-a6c4-693f67517f09): COMMIT;
Executing (076e0f4c-4f99-4273-8edf-6a1170090a49): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_010fe0ea973f440c85e49a11d4994107$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Concepts and development of Base map,Landuse map and Geo-morphology maps','2021-03-06 10:30:59.000 +00:00','eafa5769-776e-421f-bdce-03326a065f7e','2024-08-31 20:47:12.777 +00:00','2024-08-31 20:47:12.777 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_010fe0ea973f440c85e49a11d4994107$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (03243c9d-6811-4f5d-9527-4cf39cc926ad): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_36536adcdae54181ae6e809fb7c8383a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Content Development | T1.01 | DG','2020-11-26 11:45:05.000 +00:00','db52891b-977c-429d-ad2c-9258b81a7ba4','2024-08-31 20:47:12.778 +00:00','2024-08-31 20:47:12.778 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_36536adcdae54181ae6e809fb7c8383a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Introduction to Visual Design LL3 2022-03-22T07:25:58.000+0000
Executing (1095e263-3992-4d2d-9616-900083c9ad53): START TRANSACTION;
Executing (64419f98-60a4-428e-84f6-7436e8cc3cc5): COMMIT;
Processed user: Patel mukeshbhai
Executing (cc0e2be2-6ced-4ca2-8e6a-7bdee4a1f75e): START TRANSACTION;
Executing (03243c9d-6811-4f5d-9527-4cf39cc926ad): COMMIT;
Executing (1095e263-3992-4d2d-9616-900083c9ad53): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'a7c83a7f-e4bd-4fa8-9c2a-914c38352ec0' AND "UserTopic"."name" = 'Introduction to Process of planning a lesson flow' AND "UserTopic"."issuedAt" = '2022-03-02 06:57:55.000 +00:00' LIMIT 1;
topicName Community Participation-Why 2021-04-09T06:49:34.000+0000
Executing (d785a808-736b-46fe-9647-1e6945b379fc): START TRANSACTION;
Executing (076e0f4c-4f99-4273-8edf-6a1170090a49): COMMIT;
topicName Scripts Review | T1.02 | DG 2020-12-02T11:39:51.000+0000
Executing (92ecac39-2308-4fdb-aab0-0b53d864c87f): START TRANSACTION;
Executing (1095e263-3992-4d2d-9616-900083c9ad53): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_33a9405881e748d392a7362b5bc62f91$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Process of planning a lesson flow','2022-03-02 06:57:55.000 +00:00','a7c83a7f-e4bd-4fa8-9c2a-914c38352ec0','2024-08-31 20:47:12.784 +00:00','2024-08-31 20:47:12.784 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_33a9405881e748d392a7362b5bc62f91$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d785a808-736b-46fe-9647-1e6945b379fc): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'd3988f95-3458-49bf-bc97-a81ab0108569' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2020-03-18 06:48:17.000 +00:00' LIMIT 1;
Executing (cc0e2be2-6ced-4ca2-8e6a-7bdee4a1f75e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '321375b5-ae91-4d01-8378-5eb311e2ff02' AND "UserTopic"."name" = 'Virtual Interactions - Needs and Benefits' AND "UserTopic"."issuedAt" = '2020-11-04 10:07:52.000 +00:00' LIMIT 1;
Executing (92ecac39-2308-4fdb-aab0-0b53d864c87f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '85bce1bf-2a8b-4862-8a13-80758d68c6e0' AND "UserTopic"."name" = 'TOT of Bhujal Janakar' AND "UserTopic"."issuedAt" = '2021-02-05 07:23:45.000 +00:00' LIMIT 1;
Executing (1095e263-3992-4d2d-9616-900083c9ad53): COMMIT;
Executing (d785a808-736b-46fe-9647-1e6945b379fc): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c01a974dabf2414fa89238b92ea91ac3$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2020-03-18 06:48:17.000 +00:00','d3988f95-3458-49bf-bc97-a81ab0108569','2024-08-31 20:47:12.787 +00:00','2024-08-31 20:47:12.787 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c01a974dabf2414fa89238b92ea91ac3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Community Participation-Why 2021-04-09T06:46:51.000+0000
Executing (1f1bffa0-7902-4551-b6bc-d48c55beef92): START TRANSACTION;
Executing (92ecac39-2308-4fdb-aab0-0b53d864c87f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_43c3f4b0ce72442ba8076a763cd462d2$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'TOT of Bhujal Janakar','2021-02-05 07:23:45.000 +00:00','85bce1bf-2a8b-4862-8a13-80758d68c6e0','2024-08-31 20:47:12.789 +00:00','2024-08-31 20:47:12.789 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_43c3f4b0ce72442ba8076a763cd462d2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Introduction to atomised content 2022-02-15T06:38:15.000+0000
Executing (1cf28492-81ce-42f3-ad9c-b4b5585eb5b1): START TRANSACTION;
Executing (cc0e2be2-6ced-4ca2-8e6a-7bdee4a1f75e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_72d7f60157f14277ab46019a63f6e738$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Virtual Interactions - Needs and Benefits','2020-11-04 10:07:52.000 +00:00','321375b5-ae91-4d01-8378-5eb311e2ff02','2024-08-31 20:47:12.791 +00:00','2024-08-31 20:47:12.791 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_72d7f60157f14277ab46019a63f6e738$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1cf28492-81ce-42f3-ad9c-b4b5585eb5b1): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c9e258a0-5300-4461-b505-2ac5ff98636e' AND "UserTopic"."name" = 'Data collection and Monitoring' AND "UserTopic"."issuedAt" = '2021-01-06 07:53:28.000 +00:00' LIMIT 1;
Executing (1f1bffa0-7902-4551-b6bc-d48c55beef92): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8866902d-32f0-4d36-a6d3-eeef2072405c' AND "UserTopic"."name" = 'Post-Harvest Management and Value Addition in Spice Crops.' AND "UserTopic"."issuedAt" = '2021-02-24 09:58:51.000 +00:00' LIMIT 1;
Executing (d785a808-736b-46fe-9647-1e6945b379fc): COMMIT;
Executing (1cf28492-81ce-42f3-ad9c-b4b5585eb5b1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4be0f74995a949a4bce2650a34779732$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Data collection and Monitoring','2021-01-06 07:53:28.000 +00:00','c9e258a0-5300-4461-b505-2ac5ff98636e','2024-08-31 20:47:12.794 +00:00','2024-08-31 20:47:12.794 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4be0f74995a949a4bce2650a34779732$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1f1bffa0-7902-4551-b6bc-d48c55beef92): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_58903838947d43d7a5e80d19d9a01f7c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Post-Harvest Management and Value Addition in Spice Crops.','2021-02-24 09:58:51.000 +00:00','8866902d-32f0-4d36-a6d3-eeef2072405c','2024-08-31 20:47:12.796 +00:00','2024-08-31 20:47:12.796 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_58903838947d43d7a5e80d19d9a01f7c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (92ecac39-2308-4fdb-aab0-0b53d864c87f): COMMIT;
Executing (cc0e2be2-6ced-4ca2-8e6a-7bdee4a1f75e): COMMIT;
Executing (1cf28492-81ce-42f3-ad9c-b4b5585eb5b1): COMMIT;
Executing (1f1bffa0-7902-4551-b6bc-d48c55beef92): COMMIT;
topicName Crop Water Budgeting Overview 2020-12-16T07:15:47.000+0000
Executing (ac02e72b-5ef8-410e-ae91-24e49cd9858f): START TRANSACTION;
Processed user: Subrata Singh
Executing (22e388bb-c5b9-4ad6-8ea6-73ae0dd76b8c): START TRANSACTION;
topicName Data collection and Analysis 2021-01-06T12:40:20.000+0000
Executing (8cedf27f-1b26-4d59-92ef-537863499c17): START TRANSACTION;
topicName Wheat Crop Training 2020-12-31T10:15:02.000+0000
Executing (3e503e87-865c-4822-8258-5a51f151f02b): START TRANSACTION;
Executing (ac02e72b-5ef8-410e-ae91-24e49cd9858f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '941579b3-5b8d-43eb-88b1-80e87fa6a840' AND "UserTopic"."name" = 'Virtual Interactions - Needs and Benefits' AND "UserTopic"."issuedAt" = '2020-11-04 10:07:51.000 +00:00' LIMIT 1;
topicName Guided Mentoring Format 2020-11-04T12:41:42.000+0000
Executing (87214255-c0b9-4901-8b0d-ff8b8f14e493): START TRANSACTION;
Executing (8cedf27f-1b26-4d59-92ef-537863499c17): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6b1255b3-c3cf-48bd-aa73-b0dcffaf6951' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2020-03-18 06:49:03.000 +00:00' LIMIT 1;
Executing (3e503e87-865c-4822-8258-5a51f151f02b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9ca87890-0726-4909-9ebd-92fab6ce4a20' AND "UserTopic"."name" = 'Virtual Training Format' AND "UserTopic"."issuedAt" = '2020-10-14 06:56:54.000 +00:00' LIMIT 1;
Executing (ac02e72b-5ef8-410e-ae91-24e49cd9858f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c6a3219be5414bc3b8270b767c294da4$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Virtual Interactions - Needs and Benefits','2020-11-04 10:07:51.000 +00:00','941579b3-5b8d-43eb-88b1-80e87fa6a840','2024-08-31 20:47:12.810 +00:00','2024-08-31 20:47:12.810 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c6a3219be5414bc3b8270b767c294da4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (22e388bb-c5b9-4ad6-8ea6-73ae0dd76b8c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c919ec69-7f36-4a98-a6e7-a7733764d137' AND "UserTopic"."name" = 'Community Participation-Why' AND "UserTopic"."issuedAt" = '2021-04-09 06:46:56.000 +00:00' LIMIT 1;
Executing (8cedf27f-1b26-4d59-92ef-537863499c17): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f6f4fc700e6a44e0bd97be602d92cd81$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2020-03-18 06:49:03.000 +00:00','6b1255b3-c3cf-48bd-aa73-b0dcffaf6951','2024-08-31 20:47:12.814 +00:00','2024-08-31 20:47:12.814 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f6f4fc700e6a44e0bd97be602d92cd81$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3e503e87-865c-4822-8258-5a51f151f02b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f08287fb8790475a857437a41a90e3b6$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Virtual Training Format','2020-10-14 06:56:54.000 +00:00','9ca87890-0726-4909-9ebd-92fab6ce4a20','2024-08-31 20:47:12.815 +00:00','2024-08-31 20:47:12.815 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f08287fb8790475a857437a41a90e3b6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ac02e72b-5ef8-410e-ae91-24e49cd9858f): COMMIT;
Executing (87214255-c0b9-4901-8b0d-ff8b8f14e493): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5db4d93e-0440-4889-aede-7c3540cc5831' AND "UserTopic"."name" = 'Content Development | T1.01 | DG' AND "UserTopic"."issuedAt" = '2020-11-26 11:45:15.000 +00:00' LIMIT 1;
Executing (8cedf27f-1b26-4d59-92ef-537863499c17): COMMIT;
Executing (3e503e87-865c-4822-8258-5a51f151f02b): COMMIT;
topicName Guided Mentoring Format 2020-11-04T10:39:39.000+0000
Executing (d9355f89-3a16-450c-8c67-46819088b096): START TRANSACTION;
Executing (22e388bb-c5b9-4ad6-8ea6-73ae0dd76b8c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cd8cca92680d410aa46ab18d04e48f93$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Community Participation-Why','2021-04-09 06:46:56.000 +00:00','c919ec69-7f36-4a98-a6e7-a7733764d137','2024-08-31 20:47:12.822 +00:00','2024-08-31 20:47:12.822 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cd8cca92680d410aa46ab18d04e48f93$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Rani Reddy
Executing (ddbb8040-80b3-4fcd-a9d2-c8a643377915): START TRANSACTION;
topicName Virtual Interactions - Needs and Benefits 2020-10-14T05:52:44.000+0000
Executing (3269fe07-bb0a-4f16-8ec3-c9e3646a7c79): START TRANSACTION;
Executing (d9355f89-3a16-450c-8c67-46819088b096): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9c782be5-e423-49f9-8b28-613ccc87fc3a' AND "UserTopic"."name" = 'Introduction to Process of planning a lesson flow' AND "UserTopic"."issuedAt" = '2022-03-02 06:57:58.000 +00:00' LIMIT 1;
Executing (87214255-c0b9-4901-8b0d-ff8b8f14e493): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9dae4da1443e4328a79118569765e30a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Content Development | T1.01 | DG','2020-11-26 11:45:15.000 +00:00','5db4d93e-0440-4889-aede-7c3540cc5831','2024-08-31 20:47:12.827 +00:00','2024-08-31 20:47:12.827 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9dae4da1443e4328a79118569765e30a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ddbb8040-80b3-4fcd-a9d2-c8a643377915): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '024316cc-7fe7-4f44-9ea8-c925726ed1bf' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 06:56:44.000 +00:00' LIMIT 1;
Executing (3269fe07-bb0a-4f16-8ec3-c9e3646a7c79): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5a7898e7-5779-4b5b-b345-0e67cd8ea9c2' AND "UserTopic"."name" = 'Feedback and next steps' AND "UserTopic"."issuedAt" = '2022-01-25 07:26:00.000 +00:00' LIMIT 1;
Executing (d9355f89-3a16-450c-8c67-46819088b096): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_24bb9b33518f4d6ab63bd2c43e5cda94$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Process of planning a lesson flow','2022-03-02 06:57:58.000 +00:00','9c782be5-e423-49f9-8b28-613ccc87fc3a','2024-08-31 20:47:12.831 +00:00','2024-08-31 20:47:12.831 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_24bb9b33518f4d6ab63bd2c43e5cda94$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (22e388bb-c5b9-4ad6-8ea6-73ae0dd76b8c): COMMIT;
Executing (ddbb8040-80b3-4fcd-a9d2-c8a643377915): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_eb8f6bc43e2b46548bc68e8139f7a951$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 06:56:44.000 +00:00','024316cc-7fe7-4f44-9ea8-c925726ed1bf','2024-08-31 20:47:12.833 +00:00','2024-08-31 20:47:12.833 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_eb8f6bc43e2b46548bc68e8139f7a951$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3269fe07-bb0a-4f16-8ec3-c9e3646a7c79): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_16cc45483df14d21b75f405748a9dc19$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Feedback and next steps','2022-01-25 07:26:00.000 +00:00','5a7898e7-5779-4b5b-b345-0e67cd8ea9c2','2024-08-31 20:47:12.835 +00:00','2024-08-31 20:47:12.835 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_16cc45483df14d21b75f405748a9dc19$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (87214255-c0b9-4901-8b0d-ff8b8f14e493): COMMIT;
Executing (ddbb8040-80b3-4fcd-a9d2-c8a643377915): COMMIT;
Executing (3269fe07-bb0a-4f16-8ec3-c9e3646a7c79): COMMIT;
topicName Scripts Review | T1.02 | DG 2020-12-02T11:40:38.000+0000
Executing (dad3780a-0ebe-417c-a17c-95ec83a4b736): START TRANSACTION;
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-01-30T09:06:36.000+0000
Executing (f17593a6-bc72-4c2a-8deb-6a6c7d835996): START TRANSACTION;
Executing (d9355f89-3a16-450c-8c67-46819088b096): COMMIT;
Processed user: Ranchhodji Ajamelji Thakor
Executing (94bffc7e-a165-473d-a83e-f35d4f1447f4): START TRANSACTION;
topicName Introduction to Simplified Functional Grid Format 2022-01-11T07:21:22.000+0000
Executing (332264ed-fc1f-4437-bb60-f397e1a591e3): START TRANSACTION;
Executing (dad3780a-0ebe-417c-a17c-95ec83a4b736): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'a1261bb9-8ef1-4b6b-94b6-1ae65102057f' AND "UserTopic"."name" = 'Crop Water Budgeting Overview' AND "UserTopic"."issuedAt" = '2020-12-16 07:15:55.000 +00:00' LIMIT 1;
Executing (f17593a6-bc72-4c2a-8deb-6a6c7d835996): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2390c7a6-6347-41ef-be70-2eca8bd7e737' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 06:57:08.000 +00:00' LIMIT 1;
Executing (94bffc7e-a165-473d-a83e-f35d4f1447f4): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9afe6d06-fc0c-42c3-983e-e64a33935587' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 06:56:42.000 +00:00' LIMIT 1;
Executing (332264ed-fc1f-4437-bb60-f397e1a591e3): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4c86587a-893e-4d75-9881-965d8fdab183' AND "UserTopic"."name" = 'Content Development | T1.01 | DG' AND "UserTopic"."issuedAt" = '2020-11-26 11:45:13.000 +00:00' LIMIT 1;
Executing (dad3780a-0ebe-417c-a17c-95ec83a4b736): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6363ed2e10484a6d9dc2f12918312c46$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Crop Water Budgeting Overview','2020-12-16 07:15:55.000 +00:00','a1261bb9-8ef1-4b6b-94b6-1ae65102057f','2024-08-31 20:47:12.845 +00:00','2024-08-31 20:47:12.845 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6363ed2e10484a6d9dc2f12918312c46$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Introduction to atomised content 2022-02-15T06:24:13.000+0000
Executing (20205ca5-1543-489d-a9b0-74e5adf7c2d3): START TRANSACTION;
Executing (94bffc7e-a165-473d-a83e-f35d4f1447f4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bf197a1898db4e658a3cec3ca22344ac$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 06:56:42.000 +00:00','9afe6d06-fc0c-42c3-983e-e64a33935587','2024-08-31 20:47:12.847 +00:00','2024-08-31 20:47:12.847 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bf197a1898db4e658a3cec3ca22344ac$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (332264ed-fc1f-4437-bb60-f397e1a591e3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_926229750ec74064a15b4aeba368a45d$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Content Development | T1.01 | DG','2020-11-26 11:45:13.000 +00:00','4c86587a-893e-4d75-9881-965d8fdab183','2024-08-31 20:47:12.848 +00:00','2024-08-31 20:47:12.848 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_926229750ec74064a15b4aeba368a45d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f17593a6-bc72-4c2a-8deb-6a6c7d835996): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bb97e23c4b9440e7971f8978bb4e133b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 06:57:08.000 +00:00','2390c7a6-6347-41ef-be70-2eca8bd7e737','2024-08-31 20:47:12.849 +00:00','2024-08-31 20:47:12.849 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bb97e23c4b9440e7971f8978bb4e133b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (94bffc7e-a165-473d-a83e-f35d4f1447f4): COMMIT;
Executing (20205ca5-1543-489d-a9b0-74e5adf7c2d3): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c6d045d9-99bc-4758-a443-a224f20d2784' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 06:59:19.000 +00:00' LIMIT 1;
Executing (dad3780a-0ebe-417c-a17c-95ec83a4b736): COMMIT;
Processed user: Rajput swarupsinh
Executing (999b2006-c42b-41ac-a29f-fb7fed3a025c): START TRANSACTION;
Executing (20205ca5-1543-489d-a9b0-74e5adf7c2d3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_61dcb9c6d0644f0f9f4e08b7d1a254d5$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 06:59:19.000 +00:00','c6d045d9-99bc-4758-a443-a224f20d2784','2024-08-31 20:47:12.853 +00:00','2024-08-31 20:47:12.853 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_61dcb9c6d0644f0f9f4e08b7d1a254d5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (332264ed-fc1f-4437-bb60-f397e1a591e3): COMMIT;
Executing (f17593a6-bc72-4c2a-8deb-6a6c7d835996): COMMIT;
Executing (999b2006-c42b-41ac-a29f-fb7fed3a025c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'ff97766a-e506-49df-9522-8efa994ff324' AND "UserTopic"."name" = 'Introduction to Springs | MTs' AND "UserTopic"."issuedAt" = '2020-02-18 07:22:46.000 +00:00' LIMIT 1;
Processed user: Bhati savan
Executing (a3906c38-24cc-4a42-b633-85b650efb041): START TRANSACTION;
topicName PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra. 2020-12-23T10:06:21.000+0000
Executing (243cfc35-0314-4a72-a307-0a11a183cbda): START TRANSACTION;
Executing (20205ca5-1543-489d-a9b0-74e5adf7c2d3): COMMIT;
Processed user: Rathod Ajaysinh Fatesinh 
Executing (56866a20-6d63-46a7-9a71-cf90d7127127): START TRANSACTION;
Executing (243cfc35-0314-4a72-a307-0a11a183cbda): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6afb2b3b-3e1c-4e13-9bd9-b1e2e77810c9' AND "UserTopic"."name" = 'Content Development | T1.01 | DG' AND "UserTopic"."issuedAt" = '2020-11-26 11:45:10.000 +00:00' LIMIT 1;
Processed user: Bhavnaben satishbhai oad
Executing (672af6df-7470-4ed4-9e0b-b4ec3e1dc01b): START TRANSACTION;
Executing (999b2006-c42b-41ac-a29f-fb7fed3a025c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bc0cba1a3873482abb6ac92636c3ff40$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Springs | MTs','2020-02-18 07:22:46.000 +00:00','ff97766a-e506-49df-9522-8efa994ff324','2024-08-31 20:47:12.861 +00:00','2024-08-31 20:47:12.861 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bc0cba1a3873482abb6ac92636c3ff40$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a3906c38-24cc-4a42-b633-85b650efb041): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8ed9ff54-4090-4a47-9bfb-443b3dafc139' AND "UserTopic"."name" = 'Feedback and next steps' AND "UserTopic"."issuedAt" = '2022-01-25 07:26:35.000 +00:00' LIMIT 1;
Executing (243cfc35-0314-4a72-a307-0a11a183cbda): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e6a1ae49ba8f43cf996dfdf22e5a1fe5$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Content Development | T1.01 | DG','2020-11-26 11:45:10.000 +00:00','6afb2b3b-3e1c-4e13-9bd9-b1e2e77810c9','2024-08-31 20:47:12.863 +00:00','2024-08-31 20:47:12.863 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e6a1ae49ba8f43cf996dfdf22e5a1fe5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (672af6df-7470-4ed4-9e0b-b4ec3e1dc01b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b912e843-b03e-4f84-8133-82016c8dd2a8' AND "UserTopic"."name" = 'PDA for Trainers' AND "UserTopic"."issuedAt" = '2020-11-23 05:57:29.000 +00:00' LIMIT 1;
Executing (56866a20-6d63-46a7-9a71-cf90d7127127): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9bb07b4d-1f9a-46ff-abff-29ec483b7763' AND "UserTopic"."name" = 'Improved Hands on Test 2' AND "UserTopic"."issuedAt" = '2021-04-14 03:29:05.000 +00:00' LIMIT 1;
Executing (243cfc35-0314-4a72-a307-0a11a183cbda): COMMIT;
Executing (672af6df-7470-4ed4-9e0b-b4ec3e1dc01b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1e43e7d7fe514be0a8642e9b4f1c4291$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA for Trainers','2020-11-23 05:57:29.000 +00:00','b912e843-b03e-4f84-8133-82016c8dd2a8','2024-08-31 20:47:12.868 +00:00','2024-08-31 20:47:12.868 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1e43e7d7fe514be0a8642e9b4f1c4291$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a3906c38-24cc-4a42-b633-85b650efb041): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9274c029406c474d93d0cab340fe2fc4$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Feedback and next steps','2022-01-25 07:26:35.000 +00:00','8ed9ff54-4090-4a47-9bfb-443b3dafc139','2024-08-31 20:47:12.870 +00:00','2024-08-31 20:47:12.870 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9274c029406c474d93d0cab340fe2fc4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (999b2006-c42b-41ac-a29f-fb7fed3a025c): COMMIT;
topicName Scripts Review | T1.02 | DG 2020-12-02T11:40:35.000+0000
Executing (4ee8140f-b01f-433a-b1de-d3715dcd8c57): START TRANSACTION;
Executing (672af6df-7470-4ed4-9e0b-b4ec3e1dc01b): COMMIT;
Executing (56866a20-6d63-46a7-9a71-cf90d7127127): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b28e7b44b494430ca74c5ab53a7a8dd1$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Improved Hands on Test 2','2021-04-14 03:29:05.000 +00:00','9bb07b4d-1f9a-46ff-abff-29ec483b7763','2024-08-31 20:47:12.874 +00:00','2024-08-31 20:47:12.874 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b28e7b44b494430ca74c5ab53a7a8dd1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4ee8140f-b01f-433a-b1de-d3715dcd8c57): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2e400362-1635-47e4-99c8-72b00dd38b19' AND "UserTopic"."name" = 'CBP Orientation' AND "UserTopic"."issuedAt" = '2020-08-17 10:29:27.000 +00:00' LIMIT 1;
topicName Scripts Review | T1.02 | DG 2020-12-02T11:40:32.000+0000
Executing (eb871779-ec66-4bad-bc1f-55201d89d951): START TRANSACTION;
Executing (a3906c38-24cc-4a42-b633-85b650efb041): COMMIT;
trainertopicname CBP Orientation
Executing (800b2c86-93c6-47ba-8dd5-d1f5bf140a64): START TRANSACTION;
Executing (4ee8140f-b01f-433a-b1de-d3715dcd8c57): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fdd4f1e94df84fa6b6bfbf5a3c5c6303$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'CBP Orientation','2020-08-17 10:29:27.000 +00:00','2e400362-1635-47e4-99c8-72b00dd38b19','2024-08-31 20:47:12.878 +00:00','2024-08-31 20:47:12.878 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fdd4f1e94df84fa6b6bfbf5a3c5c6303$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (eb871779-ec66-4bad-bc1f-55201d89d951): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '88acf595-35dd-4ee8-87aa-924166be5859' AND "UserTopic"."name" = 'Water User Association Training' AND "UserTopic"."issuedAt" = '2021-04-03 06:03:15.000 +00:00' LIMIT 1;
topicName Recap and potential next steps with the learning experience 2022-02-01T06:45:26.000+0000
Executing (e3ad258e-a2c1-41de-bda9-c24b51763644): START TRANSACTION;
Executing (56866a20-6d63-46a7-9a71-cf90d7127127): COMMIT;
Executing (4ee8140f-b01f-433a-b1de-d3715dcd8c57): COMMIT;
Executing (eb871779-ec66-4bad-bc1f-55201d89d951): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fde77c2c64fb4e53b520d87bc62545bf$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Water User Association Training','2021-04-03 06:03:15.000 +00:00','88acf595-35dd-4ee8-87aa-924166be5859','2024-08-31 20:47:12.884 +00:00','2024-08-31 20:47:12.884 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fde77c2c64fb4e53b520d87bc62545bf$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e3ad258e-a2c1-41de-bda9-c24b51763644): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f07d7b79-7244-4b9d-92d5-ba1ddcbf4d6f' AND "UserTopic"."name" = 'Community Participation-Why' AND "UserTopic"."issuedAt" = '2021-04-09 06:52:44.000 +00:00' LIMIT 1;
Executing (800b2c86-93c6-47ba-8dd5-d1f5bf140a64): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '025233ee-51b5-443f-af66-4aca4590614d' AND "UserTopic"."name" = 'Guided Mentoring Format' AND "UserTopic"."issuedAt" = '2020-11-04 10:38:15.000 +00:00' LIMIT 1;
topicName CBP Orientation 2020-08-25T06:11:51.000+0000
Executing (0b8e1ede-13f7-434a-b49b-88f57b3bf785): START TRANSACTION;
Executing (eb871779-ec66-4bad-bc1f-55201d89d951): COMMIT;
Executing (e3ad258e-a2c1-41de-bda9-c24b51763644): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2ba7576d726d4313835dfabcbef9170f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Community Participation-Why','2021-04-09 06:52:44.000 +00:00','f07d7b79-7244-4b9d-92d5-ba1ddcbf4d6f','2024-08-31 20:47:12.888 +00:00','2024-08-31 20:47:12.888 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2ba7576d726d4313835dfabcbef9170f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName test 2022-02-24T11:24:35.000+0000
Executing (fac18d36-0098-42ac-9963-df3c9a2bf19d): START TRANSACTION;
Executing (0b8e1ede-13f7-434a-b49b-88f57b3bf785): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '35218eb5-0116-4517-a902-d7b02fb15641' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 06:57:32.000 +00:00' LIMIT 1;
topicName Site Selection of Desilting work Process of Government Approval and data Collection of its work 2021-02-06T11:51:50.000+0000
Executing (7ce41ab4-9148-46d3-961a-797c5681d28c): START TRANSACTION;
Executing (800b2c86-93c6-47ba-8dd5-d1f5bf140a64): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_715c31fe6fa14ad7a29da647aa1a2e04$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Guided Mentoring Format','2020-11-04 10:38:15.000 +00:00','025233ee-51b5-443f-af66-4aca4590614d','2024-08-31 20:47:12.891 +00:00','2024-08-31 20:47:12.891 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_715c31fe6fa14ad7a29da647aa1a2e04$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0b8e1ede-13f7-434a-b49b-88f57b3bf785): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_715ef9f860fe4a67afbe5ee23e0965d9$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 06:57:32.000 +00:00','35218eb5-0116-4517-a902-d7b02fb15641','2024-08-31 20:47:12.892 +00:00','2024-08-31 20:47:12.892 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_715ef9f860fe4a67afbe5ee23e0965d9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7ce41ab4-9148-46d3-961a-797c5681d28c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8a499587-62a8-4f73-a20d-23cd31ee58f2' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2019-12-26 10:43:29.000 +00:00' LIMIT 1;
Executing (fac18d36-0098-42ac-9963-df3c9a2bf19d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6e95d2e7-e874-4076-9412-17aeeb8ea5c3' AND "UserTopic"."name" = 'Image composition and layouts LL3' AND "UserTopic"."issuedAt" = '2022-03-29 07:35:08.000 +00:00' LIMIT 1;
Executing (e3ad258e-a2c1-41de-bda9-c24b51763644): COMMIT;
Executing (0b8e1ede-13f7-434a-b49b-88f57b3bf785): COMMIT;
Executing (7ce41ab4-9148-46d3-961a-797c5681d28c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_092e7401b4ae45f58ea25134d7bc4551$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2019-12-26 10:43:29.000 +00:00','8a499587-62a8-4f73-a20d-23cd31ee58f2','2024-08-31 20:47:12.896 +00:00','2024-08-31 20:47:12.896 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_092e7401b4ae45f58ea25134d7bc4551$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (fac18d36-0098-42ac-9963-df3c9a2bf19d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f557af615c6f42e592f32de8885844f1$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Image composition and layouts LL3','2022-03-29 07:35:08.000 +00:00','6e95d2e7-e874-4076-9412-17aeeb8ea5c3','2024-08-31 20:47:12.897 +00:00','2024-08-31 20:47:12.897 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f557af615c6f42e592f32de8885844f1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (800b2c86-93c6-47ba-8dd5-d1f5bf140a64): COMMIT;
Processed user: Divya Goswami
Executing (c36120b1-2f47-4611-929e-3ac4f99178b3): START TRANSACTION;
Executing (7ce41ab4-9148-46d3-961a-797c5681d28c): COMMIT;
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-01-30T09:05:34.000+0000
Executing (73a724c6-345b-459a-aa2a-cae933f1c74f): START TRANSACTION;
Executing (c36120b1-2f47-4611-929e-3ac4f99178b3): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '891f8b91-199c-4a29-bb5c-59c067279273' AND "UserTopic"."name" = 'Post-Harvest Management and Value Addition in Spice Crops.' AND "UserTopic"."issuedAt" = '2021-02-24 09:16:51.000 +00:00' LIMIT 1;
topicName PDA - Program App 2019-12-26T11:48:50+0000
Executing (51666de2-2fb8-492a-a427-aec0c1503305): START TRANSACTION;
topicName Hub Roles for Virtual Interactions 2020-12-10T05:56:58.000+0000
Executing (cfba2672-b395-47a1-9c79-e4ec9dbf0130): START TRANSACTION;
Executing (fac18d36-0098-42ac-9963-df3c9a2bf19d): COMMIT;
Executing (c36120b1-2f47-4611-929e-3ac4f99178b3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a2be25a8e1ba4867935fa6cc0f3d496c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Post-Harvest Management and Value Addition in Spice Crops.','2021-02-24 09:16:51.000 +00:00','891f8b91-199c-4a29-bb5c-59c067279273','2024-08-31 20:47:12.905 +00:00','2024-08-31 20:47:12.905 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a2be25a8e1ba4867935fa6cc0f3d496c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (51666de2-2fb8-492a-a427-aec0c1503305): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '07c9dc3e-7f5b-44f2-9e77-db2626100a1f' AND "UserTopic"."name" = 'Community Participation-Why' AND "UserTopic"."issuedAt" = '2021-04-09 06:46:29.000 +00:00' LIMIT 1;
Executing (cfba2672-b395-47a1-9c79-e4ec9dbf0130): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8c7435c7-ba84-42fa-bbd1-9938eabfdaeb' AND "UserTopic"."name" = 'Introduction to Visual Design LL3' AND "UserTopic"."issuedAt" = '2022-03-22 07:25:47.000 +00:00' LIMIT 1;
Executing (73a724c6-345b-459a-aa2a-cae933f1c74f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '25b9db1a-07dc-4c73-9ead-a9ab493821fb' AND "UserTopic"."name" = 'Feedback and next steps' AND "UserTopic"."issuedAt" = '2022-01-25 07:26:25.000 +00:00' LIMIT 1;
Executing (c36120b1-2f47-4611-929e-3ac4f99178b3): COMMIT;
Executing (51666de2-2fb8-492a-a427-aec0c1503305): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_544cd7f86e6e4a108d8829fbc9950f4f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Community Participation-Why','2021-04-09 06:46:29.000 +00:00','07c9dc3e-7f5b-44f2-9e77-db2626100a1f','2024-08-31 20:47:12.911 +00:00','2024-08-31 20:47:12.911 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_544cd7f86e6e4a108d8829fbc9950f4f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cfba2672-b395-47a1-9c79-e4ec9dbf0130): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0f586e0db5f049f5b4753c810bbb2cb7$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Visual Design LL3','2022-03-22 07:25:47.000 +00:00','8c7435c7-ba84-42fa-bbd1-9938eabfdaeb','2024-08-31 20:47:12.913 +00:00','2024-08-31 20:47:12.913 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0f586e0db5f049f5b4753c810bbb2cb7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Introduction to atomised content 2022-02-15T06:47:55.000+0000
Executing (2cb59de1-bf73-451b-a585-93cd7cf663e2): START TRANSACTION;
topicName Wheat Crop Training 2020-12-31T10:11:42.000+0000
Executing (e3043ce4-36dc-491b-9f83-e327b38202ac): START TRANSACTION;
Executing (51666de2-2fb8-492a-a427-aec0c1503305): COMMIT;
Executing (73a724c6-345b-459a-aa2a-cae933f1c74f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f2dab1004f214cefb6ef573e197b1e4d$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Feedback and next steps','2022-01-25 07:26:25.000 +00:00','25b9db1a-07dc-4c73-9ead-a9ab493821fb','2024-08-31 20:47:12.917 +00:00','2024-08-31 20:47:12.917 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f2dab1004f214cefb6ef573e197b1e4d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e3043ce4-36dc-491b-9f83-e327b38202ac): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '15834b56-cfac-4d93-ba91-1dcf7785ad19' AND "UserTopic"."name" = 'Virtual Interactions - Best Practices - Smitha Murthy' AND "UserTopic"."issuedAt" = '2020-10-14 06:59:29.000 +00:00' LIMIT 1;
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-01-30T09:05:50.000+0000
Executing (d555db0a-02ee-43ac-956f-8425bcaf06c5): START TRANSACTION;
Executing (2cb59de1-bf73-451b-a585-93cd7cf663e2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2b80d0a9-7767-4f05-9037-719583d95b5c' AND "UserTopic"."name" = 'PDA DEMO english' AND "UserTopic"."issuedAt" = '2021-04-29 15:03:41.000 +00:00' LIMIT 1;
Executing (cfba2672-b395-47a1-9c79-e4ec9dbf0130): COMMIT;
Executing (e3043ce4-36dc-491b-9f83-e327b38202ac): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_45ceceb6b6a64f9a88759455d160f43f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Virtual Interactions - Best Practices - Smitha Murthy','2020-10-14 06:59:29.000 +00:00','15834b56-cfac-4d93-ba91-1dcf7785ad19','2024-08-31 20:47:12.923 +00:00','2024-08-31 20:47:12.923 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_45ceceb6b6a64f9a88759455d160f43f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d555db0a-02ee-43ac-956f-8425bcaf06c5): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'eae4b6b2-f9e0-4738-9d94-c9345173c4cd' AND "UserTopic"."name" = 'PDA Demo Hindi' AND "UserTopic"."issuedAt" = '2020-11-23 05:57:06.000 +00:00' LIMIT 1;
Executing (2cb59de1-bf73-451b-a585-93cd7cf663e2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e87a1b32a2a2405896666c7bdc4156a3$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA DEMO english','2021-04-29 15:03:41.000 +00:00','2b80d0a9-7767-4f05-9037-719583d95b5c','2024-08-31 20:47:12.925 +00:00','2024-08-31 20:47:12.925 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e87a1b32a2a2405896666c7bdc4156a3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (73a724c6-345b-459a-aa2a-cae933f1c74f): COMMIT;
Executing (e3043ce4-36dc-491b-9f83-e327b38202ac): COMMIT;
Executing (d555db0a-02ee-43ac-956f-8425bcaf06c5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5e84b4f5c8854f80815337c5f6b18730$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo Hindi','2020-11-23 05:57:06.000 +00:00','eae4b6b2-f9e0-4738-9d94-c9345173c4cd','2024-08-31 20:47:12.930 +00:00','2024-08-31 20:47:12.930 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5e84b4f5c8854f80815337c5f6b18730$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2cb59de1-bf73-451b-a585-93cd7cf663e2): COMMIT;
topicName Recap and potential next steps with the learning experience 2022-02-01T06:43:50.000+0000
Executing (d2c8aece-9dfc-4e67-9095-301c9218ae8b): START TRANSACTION;
Processed user: Shubhoshree Banerjee
Executing (b565e20e-bb56-4200-b366-baf8a5ec50ea): START TRANSACTION;
topicName Virtual Training Format 2020-10-14T06:57:06.000+0000
Executing (695526cd-027c-41f2-9dd2-c6fa3e618d37): START TRANSACTION;
Executing (d555db0a-02ee-43ac-956f-8425bcaf06c5): COMMIT;
topicName PDA Demo Hindi 2021-04-29T15:02:48.000+0000
Executing (8c7a7f82-fad4-4616-8d7c-2877ba452714): START TRANSACTION;
Executing (d2c8aece-9dfc-4e67-9095-301c9218ae8b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8ec3b98a-9b06-40e1-9029-f3541fe9a640' AND "UserTopic"."name" = 'Concepts and development of Base map,Landuse map and Geo-morphology maps' AND "UserTopic"."issuedAt" = '2021-03-06 10:31:00.000 +00:00' LIMIT 1;
Executing (695526cd-027c-41f2-9dd2-c6fa3e618d37): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '0fcdf556-7144-4bdf-a6b6-005b50b00f14' AND "UserTopic"."name" = 'Taking good photos and making posters' AND "UserTopic"."issuedAt" = '2022-04-05 07:34:38.000 +00:00' LIMIT 1;
Processed user: Poonam Kulshrestha
Executing (ac82399c-8c3d-4ea0-959c-9b04b85ab69f): START TRANSACTION;
Executing (8c7a7f82-fad4-4616-8d7c-2877ba452714): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e51170d0-7e0f-4b6d-b7de-e0aef621b2a5' AND "UserTopic"."name" = 'Hub Roles for Virtual Interactions' AND "UserTopic"."issuedAt" = '2020-12-10 05:58:23.000 +00:00' LIMIT 1;
Executing (b565e20e-bb56-4200-b366-baf8a5ec50ea): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'efd178d2-ffe6-4fdf-90ac-0df881271fb4' AND "UserTopic"."name" = 'Concepts and development of Base map,Landuse map and Geo-morphology maps' AND "UserTopic"."issuedAt" = '2021-03-06 10:31:26.000 +00:00' LIMIT 1;
Executing (695526cd-027c-41f2-9dd2-c6fa3e618d37): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f897b30a743f41168da34f3b163aad39$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Taking good photos and making posters','2022-04-05 07:34:38.000 +00:00','0fcdf556-7144-4bdf-a6b6-005b50b00f14','2024-08-31 20:47:12.940 +00:00','2024-08-31 20:47:12.940 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f897b30a743f41168da34f3b163aad39$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ac82399c-8c3d-4ea0-959c-9b04b85ab69f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '7d56f878-01cb-4e2d-8001-8d1308260ed2' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 06:56:09.000 +00:00' LIMIT 1;
Executing (8c7a7f82-fad4-4616-8d7c-2877ba452714): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_104ed98124af44eeb8302f02fff0df82$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Hub Roles for Virtual Interactions','2020-12-10 05:58:23.000 +00:00','e51170d0-7e0f-4b6d-b7de-e0aef621b2a5','2024-08-31 20:47:12.942 +00:00','2024-08-31 20:47:12.942 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_104ed98124af44eeb8302f02fff0df82$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d2c8aece-9dfc-4e67-9095-301c9218ae8b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_47ea470d8e5a4e6499a249af148d6549$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Concepts and development of Base map,Landuse map and Geo-morphology maps','2021-03-06 10:31:00.000 +00:00','8ec3b98a-9b06-40e1-9029-f3541fe9a640','2024-08-31 20:47:12.944 +00:00','2024-08-31 20:47:12.944 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_47ea470d8e5a4e6499a249af148d6549$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (695526cd-027c-41f2-9dd2-c6fa3e618d37): COMMIT;
Executing (ac82399c-8c3d-4ea0-959c-9b04b85ab69f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_852bca85260545319a4fbf7140c77183$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 06:56:09.000 +00:00','7d56f878-01cb-4e2d-8001-8d1308260ed2','2024-08-31 20:47:12.946 +00:00','2024-08-31 20:47:12.946 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_852bca85260545319a4fbf7140c77183$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8c7a7f82-fad4-4616-8d7c-2877ba452714): COMMIT;
Executing (b565e20e-bb56-4200-b366-baf8a5ec50ea): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ac4dd418ec77433487d839fb8aaa8a51$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Concepts and development of Base map,Landuse map and Geo-morphology maps','2021-03-06 10:31:26.000 +00:00','efd178d2-ffe6-4fdf-90ac-0df881271fb4','2024-08-31 20:47:12.949 +00:00','2024-08-31 20:47:12.949 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ac4dd418ec77433487d839fb8aaa8a51$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Introduction to Visual Design LL3 2022-03-22T07:25:14.000+0000
Executing (93bbe03d-5e98-45e1-952d-62c2addfc36a): START TRANSACTION;
Executing (ac82399c-8c3d-4ea0-959c-9b04b85ab69f): COMMIT;
Processed user: Raj kumar Das
Executing (34795495-47bc-4a3c-a19d-cc8d646bb173): START TRANSACTION;
Executing (d2c8aece-9dfc-4e67-9095-301c9218ae8b): COMMIT;
Executing (93bbe03d-5e98-45e1-952d-62c2addfc36a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '805f8115-7fc6-481c-ae59-9a635ed92038' AND "UserTopic"."name" = 'Introduction to Process of planning a lesson flow' AND "UserTopic"."issuedAt" = '2022-03-02 06:57:01.000 +00:00' LIMIT 1;
Processed user: RAVAL RUPESHKUMAR dilipbhai
Executing (becd2c77-3d79-4e89-bc3f-295f37aec0b0): START TRANSACTION;
Executing (34795495-47bc-4a3c-a19d-cc8d646bb173): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2854f4ff-cf55-4f19-b9a6-f61947bbd907' AND "UserTopic"."name" = 'Introduction to Process of planning a lesson flow' AND "UserTopic"."issuedAt" = '2022-03-02 06:56:48.000 +00:00' LIMIT 1;
Executing (b565e20e-bb56-4200-b366-baf8a5ec50ea): COMMIT;
Executing (93bbe03d-5e98-45e1-952d-62c2addfc36a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_73ea61c3f31745058596409cb3f37cdb$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Process of planning a lesson flow','2022-03-02 06:57:01.000 +00:00','805f8115-7fc6-481c-ae59-9a635ed92038','2024-08-31 20:47:12.958 +00:00','2024-08-31 20:47:12.958 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_73ea61c3f31745058596409cb3f37cdb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (becd2c77-3d79-4e89-bc3f-295f37aec0b0): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '94409f12-5d4a-4efa-b825-2dc5a49051ef' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 07:00:04.000 +00:00' LIMIT 1;
Executing (34795495-47bc-4a3c-a19d-cc8d646bb173): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7cb2a49e535d4454bd8181820bf455bd$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Process of planning a lesson flow','2022-03-02 06:56:48.000 +00:00','2854f4ff-cf55-4f19-b9a6-f61947bbd907','2024-08-31 20:47:12.960 +00:00','2024-08-31 20:47:12.960 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7cb2a49e535d4454bd8181820bf455bd$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-01-30T09:04:51.000+0000
Executing (7ced4d60-fe10-46a9-ae8c-2aa184237965): START TRANSACTION;
Executing (93bbe03d-5e98-45e1-952d-62c2addfc36a): COMMIT;
Executing (becd2c77-3d79-4e89-bc3f-295f37aec0b0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3ffa568c901a4f3685d64f137f5f2ad5$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 07:00:04.000 +00:00','94409f12-5d4a-4efa-b825-2dc5a49051ef','2024-08-31 20:47:12.964 +00:00','2024-08-31 20:47:12.964 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3ffa568c901a4f3685d64f137f5f2ad5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-01-30T09:06:05.000+0000
Executing (897e283a-adef-4ede-af92-f8657d8f9b80): START TRANSACTION;
topicName Introduction to atomised content 2022-02-15T06:23:31.000+0000
Executing (3f6b8acb-a9a7-423b-a938-bccc50f75111): START TRANSACTION;
Executing (7ced4d60-fe10-46a9-ae8c-2aa184237965): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '97c83f6a-cc4b-4a2d-9749-2d6784f02c21' AND "UserTopic"."name" = 'Capacity building of Jaldoots on MGNREGA schemes provisions' AND "UserTopic"."issuedAt" = '2021-01-11 07:40:08.000 +00:00' LIMIT 1;
Executing (34795495-47bc-4a3c-a19d-cc8d646bb173): COMMIT;
Executing (3f6b8acb-a9a7-423b-a938-bccc50f75111): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '04d9d78f-9bbe-4cc9-85b2-d9381835154c' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 07:08:47.000 +00:00' LIMIT 1;
Executing (7ced4d60-fe10-46a9-ae8c-2aa184237965): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_197e6e1f50f74cb7bb8eba417fc39870$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots on MGNREGA schemes provisions','2021-01-11 07:40:08.000 +00:00','97c83f6a-cc4b-4a2d-9749-2d6784f02c21','2024-08-31 20:47:12.970 +00:00','2024-08-31 20:47:12.970 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_197e6e1f50f74cb7bb8eba417fc39870$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (897e283a-adef-4ede-af92-f8657d8f9b80): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b2af58c6-41d9-4a76-80c1-203456c861c2' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 06:57:25.000 +00:00' LIMIT 1;
Executing (becd2c77-3d79-4e89-bc3f-295f37aec0b0): COMMIT;
Executing (3f6b8acb-a9a7-423b-a938-bccc50f75111): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5e2e1e1eb8064c618aa0e3da1c7f3515$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 07:08:47.000 +00:00','04d9d78f-9bbe-4cc9-85b2-d9381835154c','2024-08-31 20:47:12.974 +00:00','2024-08-31 20:47:12.974 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5e2e1e1eb8064c618aa0e3da1c7f3515$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7ced4d60-fe10-46a9-ae8c-2aa184237965): COMMIT;
Executing (897e283a-adef-4ede-af92-f8657d8f9b80): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7c0169515b0c465c995210d1153b9340$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 06:57:25.000 +00:00','b2af58c6-41d9-4a76-80c1-203456c861c2','2024-08-31 20:47:12.976 +00:00','2024-08-31 20:47:12.976 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7c0169515b0c465c995210d1153b9340$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Introduction to atomised content 2022-02-15T06:25:21.000+0000
Executing (8806d3c4-734d-42c2-8dc8-7cd9320cadf7): START TRANSACTION;
Executing (3f6b8acb-a9a7-423b-a938-bccc50f75111): COMMIT;
Processed user: Gorabhai thkor 
Executing (03e3e315-c04e-4adb-b930-9c36bfb4b6a2): START TRANSACTION;
Processed user: રાજપૂત કિશનસિંહ વિક્રમસિંહ
Executing (d8f46d3c-8faf-4ee8-98b3-4653f1a18e4b): START TRANSACTION;
Processed user: Patel Ankushkumar Dahyabhai
Executing (86600019-6a9c-4454-88cc-fa8f3a7130e2): START TRANSACTION;
Executing (03e3e315-c04e-4adb-b930-9c36bfb4b6a2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '7a99e279-a9dd-48ff-9424-a7c478b238b2' AND "UserTopic"."name" = 'PDA - Trainer App' AND "UserTopic"."issuedAt" = '2020-04-07 10:41:14.000 +00:00' LIMIT 1;
Executing (8806d3c4-734d-42c2-8dc8-7cd9320cadf7): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8d96ee1c-383e-4573-84c2-5c4c5cb73b82' AND "UserTopic"."name" = 'PDA Demo' AND "UserTopic"."issuedAt" = '2020-11-20 05:39:11.000 +00:00' LIMIT 1;
Executing (897e283a-adef-4ede-af92-f8657d8f9b80): COMMIT;
Executing (86600019-6a9c-4454-88cc-fa8f3a7130e2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b791b39b-25d7-4e24-a280-9cd6d4870c90' AND "UserTopic"."name" = 'Concepts and development of Base map,Landuse map and Geo-morphology maps' AND "UserTopic"."issuedAt" = '2021-03-06 10:30:20.000 +00:00' LIMIT 1;
Executing (03e3e315-c04e-4adb-b930-9c36bfb4b6a2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e2a7f19e9d794e3b8461562302a3339a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Trainer App','2020-04-07 10:41:14.000 +00:00','7a99e279-a9dd-48ff-9424-a7c478b238b2','2024-08-31 20:47:12.984 +00:00','2024-08-31 20:47:12.984 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e2a7f19e9d794e3b8461562302a3339a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d8f46d3c-8faf-4ee8-98b3-4653f1a18e4b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '48cb496f-d8ea-4a2d-ad8f-394c45a57566' AND "UserTopic"."name" = 'PDA - Trainer App' AND "UserTopic"."issuedAt" = '2020-04-07 10:41:16.000 +00:00' LIMIT 1;
Executing (86600019-6a9c-4454-88cc-fa8f3a7130e2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f5a54e0534b64b65b54901b6b93bd481$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Concepts and development of Base map,Landuse map and Geo-morphology maps','2021-03-06 10:30:20.000 +00:00','b791b39b-25d7-4e24-a280-9cd6d4870c90','2024-08-31 20:47:12.985 +00:00','2024-08-31 20:47:12.985 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f5a54e0534b64b65b54901b6b93bd481$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8806d3c4-734d-42c2-8dc8-7cd9320cadf7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d8f0c035060a4927a132fa227ae81ca7$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo','2020-11-20 05:39:11.000 +00:00','8d96ee1c-383e-4573-84c2-5c4c5cb73b82','2024-08-31 20:47:12.986 +00:00','2024-08-31 20:47:12.986 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d8f0c035060a4927a132fa227ae81ca7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Thakor sanjay k
Executing (b3fe87e5-d054-44a1-93ed-2bbc7a69921b): START TRANSACTION;
Executing (86600019-6a9c-4454-88cc-fa8f3a7130e2): COMMIT;
Executing (d8f46d3c-8faf-4ee8-98b3-4653f1a18e4b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ff45400911954f4eb1bba9c7a2a799d1$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Trainer App','2020-04-07 10:41:16.000 +00:00','48cb496f-d8ea-4a2d-ad8f-394c45a57566','2024-08-31 20:47:12.988 +00:00','2024-08-31 20:47:12.988 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ff45400911954f4eb1bba9c7a2a799d1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (03e3e315-c04e-4adb-b930-9c36bfb4b6a2): COMMIT;
topicName Community Participation-Why 2021-04-09T06:47:39.000+0000
Executing (f12dea45-4d5b-4cfa-9aee-38762aeecce8): START TRANSACTION;
Executing (b3fe87e5-d054-44a1-93ed-2bbc7a69921b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9ab90b6e-0934-4352-95de-1422b8c24f36' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 06:56:20.000 +00:00' LIMIT 1;
Executing (8806d3c4-734d-42c2-8dc8-7cd9320cadf7): COMMIT;
Executing (f12dea45-4d5b-4cfa-9aee-38762aeecce8): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6beec966-3a66-4621-9ff6-6fd5c20e8787' AND "UserTopic"."name" = 'PDA - Trainer App' AND "UserTopic"."issuedAt" = '2020-04-07 10:41:12.000 +00:00' LIMIT 1;
topicName PDA - Program App 2020-04-07T10:49:42.000+0000
Executing (0a336131-9c7a-4427-ad88-c5603b171dc9): START TRANSACTION;
Executing (d8f46d3c-8faf-4ee8-98b3-4653f1a18e4b): COMMIT;
Executing (f12dea45-4d5b-4cfa-9aee-38762aeecce8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5ff2065b851142e39a25d3312246c8a6$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Trainer App','2020-04-07 10:41:12.000 +00:00','6beec966-3a66-4621-9ff6-6fd5c20e8787','2024-08-31 20:47:12.993 +00:00','2024-08-31 20:47:12.993 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5ff2065b851142e39a25d3312246c8a6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0a336131-9c7a-4427-ad88-c5603b171dc9): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'a592f325-0db2-4c28-a340-17a97748cc7f' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 07:00:32.000 +00:00' LIMIT 1;
Executing (b3fe87e5-d054-44a1-93ed-2bbc7a69921b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_41769db300874dd68df5dcbf6ea6544e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 06:56:20.000 +00:00','9ab90b6e-0934-4352-95de-1422b8c24f36','2024-08-31 20:47:12.995 +00:00','2024-08-31 20:47:12.995 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_41769db300874dd68df5dcbf6ea6544e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Virtual Interactions - Needs and Benefits 2020-11-19T10:12:36.000+0000
Executing (b91f7071-e414-4115-989d-22633c289942): START TRANSACTION;
Executing (f12dea45-4d5b-4cfa-9aee-38762aeecce8): COMMIT;
Executing (0a336131-9c7a-4427-ad88-c5603b171dc9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_957f9ac852734996aaba241500b7455f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 07:00:32.000 +00:00','a592f325-0db2-4c28-a340-17a97748cc7f','2024-08-31 20:47:12.998 +00:00','2024-08-31 20:47:12.998 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_957f9ac852734996aaba241500b7455f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA - Program App 2020-04-07T10:49:17.000+0000
Executing (ba966a85-9010-4998-b69d-209e8140afb5): START TRANSACTION;
topicName PDA - Program App 2020-04-07T10:49:34.000+0000
Executing (d1649668-c082-4d33-ae1b-5deb8f51cec2): START TRANSACTION;
Executing (b91f7071-e414-4115-989d-22633c289942): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '94dbfffa-754e-4b5e-acf9-ba0ca73b4ea1' AND "UserTopic"."name" = 'Data collection and Monitoring' AND "UserTopic"."issuedAt" = '2021-01-06 08:02:26.000 +00:00' LIMIT 1;
Executing (b3fe87e5-d054-44a1-93ed-2bbc7a69921b): COMMIT;
Executing (d1649668-c082-4d33-ae1b-5deb8f51cec2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6a172e25-60cf-4796-9b03-d93e27e85946' AND "UserTopic"."name" = 'PDA - Trainer App' AND "UserTopic"."issuedAt" = '2020-01-08 10:03:59.000 +00:00' LIMIT 1;
Executing (b91f7071-e414-4115-989d-22633c289942): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_41ea6b9c43c64ed1bbdea7d65a58cccb$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Data collection and Monitoring','2021-01-06 08:02:26.000 +00:00','94dbfffa-754e-4b5e-acf9-ba0ca73b4ea1','2024-08-31 20:47:13.002 +00:00','2024-08-31 20:47:13.002 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_41ea6b9c43c64ed1bbdea7d65a58cccb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ba966a85-9010-4998-b69d-209e8140afb5): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'ae945fe6-9a36-4989-8485-0684b9deddec' AND "UserTopic"."name" = 'Feedback and next steps' AND "UserTopic"."issuedAt" = '2022-01-25 07:25:37.000 +00:00' LIMIT 1;
Executing (0a336131-9c7a-4427-ad88-c5603b171dc9): COMMIT;
Executing (d1649668-c082-4d33-ae1b-5deb8f51cec2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_58d975c9fab141abab9101f0234b1def$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Trainer App','2020-01-08 10:03:59.000 +00:00','6a172e25-60cf-4796-9b03-d93e27e85946','2024-08-31 20:47:13.004 +00:00','2024-08-31 20:47:13.004 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_58d975c9fab141abab9101f0234b1def$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b91f7071-e414-4115-989d-22633c289942): COMMIT;
Processed user: Arvindsinh A
Executing (71d6e679-73c7-44c5-8e99-c32722813710): START TRANSACTION;
Processed user: Nawab lakha
Executing (b6b503a8-c591-426d-99b8-34e6e2244c30): START TRANSACTION;
Executing (ba966a85-9010-4998-b69d-209e8140afb5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0dee6864ebba4d7eb01a1324d163e551$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Feedback and next steps','2022-01-25 07:25:37.000 +00:00','ae945fe6-9a36-4989-8485-0684b9deddec','2024-08-31 20:47:13.007 +00:00','2024-08-31 20:47:13.007 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0dee6864ebba4d7eb01a1324d163e551$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Chandrapalsinh Rathod
Executing (eda43650-cdd9-42ef-be47-92d39940b05c): START TRANSACTION;
Executing (b6b503a8-c591-426d-99b8-34e6e2244c30): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c3f8949d-3600-455d-bbd0-0806a7f16ab6' AND "UserTopic"."name" = 'Concepts and development of Base map,Landuse map and Geo-morphology maps' AND "UserTopic"."issuedAt" = '2021-03-06 10:31:38.000 +00:00' LIMIT 1;
Executing (71d6e679-73c7-44c5-8e99-c32722813710): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'bf4d2b2b-645e-464d-a4c2-3d3bf682a1d6' AND "UserTopic"."name" = 'Community Participation-Why' AND "UserTopic"."issuedAt" = '2021-04-09 06:47:46.000 +00:00' LIMIT 1;
Executing (d1649668-c082-4d33-ae1b-5deb8f51cec2): COMMIT;
Executing (b6b503a8-c591-426d-99b8-34e6e2244c30): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_171a8d925ff1480db171594371834c0b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Concepts and development of Base map,Landuse map and Geo-morphology maps','2021-03-06 10:31:38.000 +00:00','c3f8949d-3600-455d-bbd0-0806a7f16ab6','2024-08-31 20:47:13.012 +00:00','2024-08-31 20:47:13.012 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_171a8d925ff1480db171594371834c0b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (71d6e679-73c7-44c5-8e99-c32722813710): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_63943299656b47138ca6be02650ebc65$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Community Participation-Why','2021-04-09 06:47:46.000 +00:00','bf4d2b2b-645e-464d-a4c2-3d3bf682a1d6','2024-08-31 20:47:13.013 +00:00','2024-08-31 20:47:13.013 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_63943299656b47138ca6be02650ebc65$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (eda43650-cdd9-42ef-be47-92d39940b05c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c5d35819-2105-4cef-8c0a-af367a875971' AND "UserTopic"."name" = 'Content Development | T1.01 | DG' AND "UserTopic"."issuedAt" = '2020-11-26 11:45:10.000 +00:00' LIMIT 1;
Executing (ba966a85-9010-4998-b69d-209e8140afb5): COMMIT;
Executing (b6b503a8-c591-426d-99b8-34e6e2244c30): COMMIT;
Executing (71d6e679-73c7-44c5-8e99-c32722813710): COMMIT;
Processed user: Harry
Executing (73b031f3-ed84-4a0a-8458-3a5bc6b9dc39): START TRANSACTION;
Processed user: Ramesh bhikhabhai
Executing (049e46c0-31cb-45d5-ad6d-32f5f744486d): START TRANSACTION;
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-01-30T09:06:45.000+0000
Executing (9daebf1e-4fd3-47d3-8cc0-e0c629a4c187): START TRANSACTION;
Executing (eda43650-cdd9-42ef-be47-92d39940b05c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4210a8eac60441298b765318e1c59d4d$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Content Development | T1.01 | DG','2020-11-26 11:45:10.000 +00:00','c5d35819-2105-4cef-8c0a-af367a875971','2024-08-31 20:47:13.019 +00:00','2024-08-31 20:47:13.019 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4210a8eac60441298b765318e1c59d4d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Recap and potential next steps with the learning experience 2022-02-01T06:43:31.000+0000
Executing (47ada49e-ffd5-4508-b46d-26aafe416c61): START TRANSACTION;
Executing (049e46c0-31cb-45d5-ad6d-32f5f744486d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '1b150e3f-f854-4a66-9e73-3e8d856706a1' AND "UserTopic"."name" = 'Virtual Interactions - Needs and Benefits' AND "UserTopic"."issuedAt" = '2020-12-10 11:35:30.000 +00:00' LIMIT 1;
Executing (9daebf1e-4fd3-47d3-8cc0-e0c629a4c187): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c0a06ec3-5563-40f7-a987-aea8fe29f08b' AND "UserTopic"."name" = 'Data collection and Analysis' AND "UserTopic"."issuedAt" = '2021-01-06 12:34:20.000 +00:00' LIMIT 1;
Executing (73b031f3-ed84-4a0a-8458-3a5bc6b9dc39): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '387aedcd-c84e-409b-8067-b1d0e5444975' AND "UserTopic"."name" = 'PDA - Trainer App' AND "UserTopic"."issuedAt" = '2019-12-05 07:26:32.000 +00:00' LIMIT 1;
Executing (049e46c0-31cb-45d5-ad6d-32f5f744486d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7cda1af647034f16bcd2e5dfd106f959$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Virtual Interactions - Needs and Benefits','2020-12-10 11:35:30.000 +00:00','1b150e3f-f854-4a66-9e73-3e8d856706a1','2024-08-31 20:47:13.023 +00:00','2024-08-31 20:47:13.023 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7cda1af647034f16bcd2e5dfd106f959$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9daebf1e-4fd3-47d3-8cc0-e0c629a4c187): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_64bdc77a04be4e11aabc930649970cf4$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Data collection and Analysis','2021-01-06 12:34:20.000 +00:00','c0a06ec3-5563-40f7-a987-aea8fe29f08b','2024-08-31 20:47:13.024 +00:00','2024-08-31 20:47:13.024 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_64bdc77a04be4e11aabc930649970cf4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (47ada49e-ffd5-4508-b46d-26aafe416c61): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '64e5cd3d-c6f3-4cfa-9c0f-6116391e6b86' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM' AND "UserTopic"."issuedAt" = '2021-08-14 07:14:18.000 +00:00' LIMIT 1;
Executing (eda43650-cdd9-42ef-be47-92d39940b05c): COMMIT;
Executing (049e46c0-31cb-45d5-ad6d-32f5f744486d): COMMIT;
Executing (47ada49e-ffd5-4508-b46d-26aafe416c61): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_040b33fbbff04d01a705f7e02040be48$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM','2021-08-14 07:14:18.000 +00:00','64e5cd3d-c6f3-4cfa-9c0f-6116391e6b86','2024-08-31 20:47:13.027 +00:00','2024-08-31 20:47:13.027 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_040b33fbbff04d01a705f7e02040be48$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (73b031f3-ed84-4a0a-8458-3a5bc6b9dc39): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_811cd75952dc47ad8b76eb0e7850454d$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Trainer App','2019-12-05 07:26:32.000 +00:00','387aedcd-c84e-409b-8067-b1d0e5444975','2024-08-31 20:47:13.028 +00:00','2024-08-31 20:47:13.028 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_811cd75952dc47ad8b76eb0e7850454d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Guided Mentoring Format 2020-12-10T11:37:49.000+0000
Executing (4d71de05-dd86-4c44-8af6-88559d9a3932): START TRANSACTION;
Executing (9daebf1e-4fd3-47d3-8cc0-e0c629a4c187): COMMIT;
topicName PDA Updates 2020-10-06T06:26:41.000+0000
Executing (16a104ea-4138-4538-9cd6-dfd36b387b88): START TRANSACTION;
Executing (4d71de05-dd86-4c44-8af6-88559d9a3932): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '60c6a9c3-268e-4b5c-9939-d0efdcaa04cb' AND "UserTopic"."name" = 'TOT of Bhujal Janakar' AND "UserTopic"."issuedAt" = '2021-02-05 07:24:00.000 +00:00' LIMIT 1;
Executing (47ada49e-ffd5-4508-b46d-26aafe416c61): COMMIT;
Executing (73b031f3-ed84-4a0a-8458-3a5bc6b9dc39): COMMIT;
Executing (16a104ea-4138-4538-9cd6-dfd36b387b88): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '971f2670-d929-4a00-a697-f5e19fa95fff' AND "UserTopic"."name" = 'Data collection and Monitoring' AND "UserTopic"."issuedAt" = '2021-01-06 07:52:36.000 +00:00' LIMIT 1;
Processed user: Nagji bhai
Executing (796c8043-8597-4a9d-9b25-a35c5c77b8b8): START TRANSACTION;
topicName Content Development | T1.01 | DG 2020-11-26T11:45:16.000+0000
Executing (6218ee8b-7c24-4c9f-b1b9-28f73ebfdea0): START TRANSACTION;
Executing (4d71de05-dd86-4c44-8af6-88559d9a3932): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4040229865e04164a5b9ea41e9e4c2a8$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'TOT of Bhujal Janakar','2021-02-05 07:24:00.000 +00:00','60c6a9c3-268e-4b5c-9939-d0efdcaa04cb','2024-08-31 20:47:13.034 +00:00','2024-08-31 20:47:13.034 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4040229865e04164a5b9ea41e9e4c2a8$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Sahadevsinh
Executing (43a1cc60-4c40-482f-9c3e-33c3417b1739): START TRANSACTION;
Executing (6218ee8b-7c24-4c9f-b1b9-28f73ebfdea0): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2adeac0d-3c9c-4429-9f7f-966c8169483d' AND "UserTopic"."name" = 'Introduction to prioritization and planning for content creation' AND "UserTopic"."issuedAt" = '2022-05-10 06:25:37.000 +00:00' LIMIT 1;
Executing (16a104ea-4138-4538-9cd6-dfd36b387b88): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8818a400e98a41e69d3cd1260b9e0fc9$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Data collection and Monitoring','2021-01-06 07:52:36.000 +00:00','971f2670-d929-4a00-a697-f5e19fa95fff','2024-08-31 20:47:13.037 +00:00','2024-08-31 20:47:13.037 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8818a400e98a41e69d3cd1260b9e0fc9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (796c8043-8597-4a9d-9b25-a35c5c77b8b8): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f5c71709-8bfc-4fe9-a633-559aeff445e6' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM' AND "UserTopic"."issuedAt" = '2021-08-14 07:16:17.000 +00:00' LIMIT 1;
Executing (6218ee8b-7c24-4c9f-b1b9-28f73ebfdea0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bf90e3efd4e745dfb5129b3c3a24ad7a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to prioritization and planning for content creation','2022-05-10 06:25:37.000 +00:00','2adeac0d-3c9c-4429-9f7f-966c8169483d','2024-08-31 20:47:13.039 +00:00','2024-08-31 20:47:13.039 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bf90e3efd4e745dfb5129b3c3a24ad7a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (43a1cc60-4c40-482f-9c3e-33c3417b1739): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b57134f1-23ce-48b9-bc6a-1e90a88d144f' AND "UserTopic"."name" = 'Introduction to mapping of content and learning needs requirements' AND "UserTopic"."issuedAt" = '2022-05-04 07:26:15.000 +00:00' LIMIT 1;
Executing (4d71de05-dd86-4c44-8af6-88559d9a3932): COMMIT;
Executing (43a1cc60-4c40-482f-9c3e-33c3417b1739): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3bb0e66eca1a41b3bac4e54df6925125$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to mapping of content and learning needs requirements','2022-05-04 07:26:15.000 +00:00','b57134f1-23ce-48b9-bc6a-1e90a88d144f','2024-08-31 20:47:13.041 +00:00','2024-08-31 20:47:13.041 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3bb0e66eca1a41b3bac4e54df6925125$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (796c8043-8597-4a9d-9b25-a35c5c77b8b8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6bf19e59a1ef44609b34d8d61188705c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM','2021-08-14 07:16:17.000 +00:00','f5c71709-8bfc-4fe9-a633-559aeff445e6','2024-08-31 20:47:13.042 +00:00','2024-08-31 20:47:13.042 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6bf19e59a1ef44609b34d8d61188705c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (16a104ea-4138-4538-9cd6-dfd36b387b88): COMMIT;
Executing (6218ee8b-7c24-4c9f-b1b9-28f73ebfdea0): COMMIT;
topicName Data collection and Monitoring 2021-01-06T07:53:06.000+0000
Executing (f947b94f-4096-4d70-9f27-acee1360fe3c): START TRANSACTION;
Processed user: Priyanka sarthi
Executing (42fcd07e-c935-4b8a-abe8-66e88e5dcbd4): START TRANSACTION;
Executing (43a1cc60-4c40-482f-9c3e-33c3417b1739): COMMIT;
topicName Data collection and Analysis 2021-01-06T12:49:05.000+0000
Executing (19bf9b1c-2dfd-496e-918e-ad7784e3d027): START TRANSACTION;
Executing (796c8043-8597-4a9d-9b25-a35c5c77b8b8): COMMIT;
Executing (42fcd07e-c935-4b8a-abe8-66e88e5dcbd4): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '3a089d0b-0cea-42c8-a60a-dd9fb54e25d4' AND "UserTopic"."name" = 'Concepts and development of Base map,Landuse map and Geo-morphology maps' AND "UserTopic"."issuedAt" = '2021-03-06 10:34:50.000 +00:00' LIMIT 1;
Processed user: Goutam
Executing (60cac37c-f61a-418a-80b5-fdd4f6f515b2): START TRANSACTION;
Executing (19bf9b1c-2dfd-496e-918e-ad7784e3d027): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '441fc2a7-b992-46e0-951f-2a58ae3bdf32' AND "UserTopic"."name" = 'CBP Orientation' AND "UserTopic"."issuedAt" = '2020-08-17 10:15:25.000 +00:00' LIMIT 1;
topicName Crop Water Budgeting Overview 2020-12-16T07:15:56.000+0000
Executing (20e7177e-f47d-464f-8699-312bd294310a): START TRANSACTION;
Executing (f947b94f-4096-4d70-9f27-acee1360fe3c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'aa8b852d-d69b-4341-a0fa-b8926901b4e9' AND "UserTopic"."name" = 'PDA - Trainer App' AND "UserTopic"."issuedAt" = '2020-04-07 10:41:22.000 +00:00' LIMIT 1;
Executing (42fcd07e-c935-4b8a-abe8-66e88e5dcbd4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3a5e5cd6f2f241a1ac705e6a8df406b3$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Concepts and development of Base map,Landuse map and Geo-morphology maps','2021-03-06 10:34:50.000 +00:00','3a089d0b-0cea-42c8-a60a-dd9fb54e25d4','2024-08-31 20:47:13.051 +00:00','2024-08-31 20:47:13.051 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3a5e5cd6f2f241a1ac705e6a8df406b3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (60cac37c-f61a-418a-80b5-fdd4f6f515b2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f8ac18cb-5476-4655-b1b7-6459e8047e4d' AND "UserTopic"."name" = 'Concepts and development of Base map,Landuse map and Geo-morphology maps' AND "UserTopic"."issuedAt" = '2021-03-06 10:31:50.000 +00:00' LIMIT 1;
Executing (19bf9b1c-2dfd-496e-918e-ad7784e3d027): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b7300f28e13e4c67805c16ad02b76224$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'CBP Orientation','2020-08-17 10:15:25.000 +00:00','441fc2a7-b992-46e0-951f-2a58ae3bdf32','2024-08-31 20:47:13.053 +00:00','2024-08-31 20:47:13.053 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b7300f28e13e4c67805c16ad02b76224$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (20e7177e-f47d-464f-8699-312bd294310a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'd2724a98-724b-452f-8abe-d9a4492b3f21' AND "UserTopic"."name" = 'Introduction to atomised content' AND "UserTopic"."issuedAt" = '2022-02-15 08:35:16.000 +00:00' LIMIT 1;
Executing (42fcd07e-c935-4b8a-abe8-66e88e5dcbd4): COMMIT;
Executing (60cac37c-f61a-418a-80b5-fdd4f6f515b2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_27b7b6be7ceb46e78d4b70edb9e5939b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Concepts and development of Base map,Landuse map and Geo-morphology maps','2021-03-06 10:31:50.000 +00:00','f8ac18cb-5476-4655-b1b7-6459e8047e4d','2024-08-31 20:47:13.055 +00:00','2024-08-31 20:47:13.055 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_27b7b6be7ceb46e78d4b70edb9e5939b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f947b94f-4096-4d70-9f27-acee1360fe3c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_73ec31bc592042c4bf15dae56f351993$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Trainer App','2020-04-07 10:41:22.000 +00:00','aa8b852d-d69b-4341-a0fa-b8926901b4e9','2024-08-31 20:47:13.056 +00:00','2024-08-31 20:47:13.056 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_73ec31bc592042c4bf15dae56f351993$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Community Participation-Why 2021-04-09T06:47:29.000+0000
Executing (235deb5e-0048-4efe-b76f-636fd2b842a9): START TRANSACTION;
Executing (19bf9b1c-2dfd-496e-918e-ad7784e3d027): COMMIT;
Executing (20e7177e-f47d-464f-8699-312bd294310a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0798a9f77fb24b8ab7dc3a1ee40b4ce1$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to atomised content','2022-02-15 08:35:16.000 +00:00','d2724a98-724b-452f-8abe-d9a4492b3f21','2024-08-31 20:47:13.058 +00:00','2024-08-31 20:47:13.058 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0798a9f77fb24b8ab7dc3a1ee40b4ce1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (235deb5e-0048-4efe-b76f-636fd2b842a9): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'cf25e048-3020-4503-a358-dd9be7c7c117' AND "UserTopic"."name" = 'Wheat Crop Training' AND "UserTopic"."issuedAt" = '2020-12-31 10:12:10.000 +00:00' LIMIT 1;
topicName PDA Hands on 2021-01-08T07:51:10.000+0000
Executing (e6befe37-b6b2-4593-8c24-6bbcf739a001): START TRANSACTION;
Executing (60cac37c-f61a-418a-80b5-fdd4f6f515b2): COMMIT;
Executing (f947b94f-4096-4d70-9f27-acee1360fe3c): COMMIT;
Executing (235deb5e-0048-4efe-b76f-636fd2b842a9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_67904113d75a44d4aada1ac61a468a93$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Wheat Crop Training','2020-12-31 10:12:10.000 +00:00','cf25e048-3020-4503-a358-dd9be7c7c117','2024-08-31 20:47:13.062 +00:00','2024-08-31 20:47:13.062 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_67904113d75a44d4aada1ac61a468a93$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e6befe37-b6b2-4593-8c24-6bbcf739a001): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '32d0595c-a70f-45b4-b100-fa671df6566a' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2020-03-18 06:48:22.000 +00:00' LIMIT 1;
Executing (20e7177e-f47d-464f-8699-312bd294310a): COMMIT;
topicName Community Participation-Why 2021-04-09T06:32:01.000+0000
Executing (246e636f-db8f-430a-99dc-86c42d9db17b): START TRANSACTION;
topicName PDA - Program App 2020-04-07T10:49:28.000+0000
Executing (172fbaaa-ffd3-4412-8a7a-6749a667b72e): START TRANSACTION;
Executing (246e636f-db8f-430a-99dc-86c42d9db17b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c37080b4-1d4c-4a2c-98fd-8c7d6b78e36a' AND "UserTopic"."name" = 'Community Participation-Why' AND "UserTopic"."issuedAt" = '2021-04-09 06:46:04.000 +00:00' LIMIT 1;
Executing (e6befe37-b6b2-4593-8c24-6bbcf739a001): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ad4da7b21f004c0fa78b6c52e743b8ed$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2020-03-18 06:48:22.000 +00:00','32d0595c-a70f-45b4-b100-fa671df6566a','2024-08-31 20:47:13.066 +00:00','2024-08-31 20:47:13.066 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ad4da7b21f004c0fa78b6c52e743b8ed$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (235deb5e-0048-4efe-b76f-636fd2b842a9): COMMIT;
Processed user: Aditya Kumar
Executing (0ac65f12-e418-43a4-a85c-15c493fcebb1): START TRANSACTION;
Executing (246e636f-db8f-430a-99dc-86c42d9db17b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3c56028a1e6f4f5fbb7a3efd0677fb24$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Community Participation-Why','2021-04-09 06:46:04.000 +00:00','c37080b4-1d4c-4a2c-98fd-8c7d6b78e36a','2024-08-31 20:47:13.068 +00:00','2024-08-31 20:47:13.068 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3c56028a1e6f4f5fbb7a3efd0677fb24$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T06:55:16.000+0000
Executing (c841448b-66d3-4755-ad6a-4cf84eb93bb5): START TRANSACTION;
Executing (172fbaaa-ffd3-4412-8a7a-6749a667b72e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8100d8fe-7ff4-4706-8fa7-144707e7d3ce' AND "UserTopic"."name" = 'PDA Hands on' AND "UserTopic"."issuedAt" = '2021-01-02 07:01:32.000 +00:00' LIMIT 1;
Executing (246e636f-db8f-430a-99dc-86c42d9db17b): COMMIT;
Executing (c841448b-66d3-4755-ad6a-4cf84eb93bb5): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6db52b87-7d08-4b7a-98da-0ab423f15330' AND "UserTopic"."name" = 'Concepts and development of Base map,Landuse map and Geo-morphology maps' AND "UserTopic"."issuedAt" = '2021-03-06 10:31:22.000 +00:00' LIMIT 1;
Executing (0ac65f12-e418-43a4-a85c-15c493fcebb1): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f15c3598-11e2-4c1f-8cda-d714a5c36867' AND "UserTopic"."name" = 'Introduction to atomised content' AND "UserTopic"."issuedAt" = '2022-02-15 06:26:09.000 +00:00' LIMIT 1;
Executing (e6befe37-b6b2-4593-8c24-6bbcf739a001): COMMIT;
topicName Jaldoots capacity building on Geo-hydrology 2021-01-08T16:47:53.000+0000
Executing (c68e8c4a-8d95-4f36-aa69-36f916f357dd): START TRANSACTION;
Executing (c841448b-66d3-4755-ad6a-4cf84eb93bb5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b173ed9318544026a1603bd815dd0a1e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Concepts and development of Base map,Landuse map and Geo-morphology maps','2021-03-06 10:31:22.000 +00:00','6db52b87-7d08-4b7a-98da-0ab423f15330','2024-08-31 20:47:13.074 +00:00','2024-08-31 20:47:13.074 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b173ed9318544026a1603bd815dd0a1e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (172fbaaa-ffd3-4412-8a7a-6749a667b72e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2d880f8c1a9a4c4f92919ca85be8e45b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Hands on','2021-01-02 07:01:32.000 +00:00','8100d8fe-7ff4-4706-8fa7-144707e7d3ce','2024-08-31 20:47:13.075 +00:00','2024-08-31 20:47:13.075 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2d880f8c1a9a4c4f92919ca85be8e45b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c68e8c4a-8d95-4f36-aa69-36f916f357dd): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '561f2614-a9a4-4fea-8f74-fd79e0a2854a' AND "UserTopic"."name" = 'Concepts and development of Base map,Landuse map and Geo-morphology maps' AND "UserTopic"."issuedAt" = '2021-03-06 10:31:17.000 +00:00' LIMIT 1;
Executing (0ac65f12-e418-43a4-a85c-15c493fcebb1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_752c95b3b996470e9018815133aaf48a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to atomised content','2022-02-15 06:26:09.000 +00:00','f15c3598-11e2-4c1f-8cda-d714a5c36867','2024-08-31 20:47:13.077 +00:00','2024-08-31 20:47:13.077 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_752c95b3b996470e9018815133aaf48a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Rakesh singh
Executing (3b9e8f3e-1c7c-42ef-aad5-5a7eba64f66f): START TRANSACTION;
Executing (c68e8c4a-8d95-4f36-aa69-36f916f357dd): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_95b9c226fd8046c2a0493a27e73753f6$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Concepts and development of Base map,Landuse map and Geo-morphology maps','2021-03-06 10:31:17.000 +00:00','561f2614-a9a4-4fea-8f74-fd79e0a2854a','2024-08-31 20:47:13.079 +00:00','2024-08-31 20:47:13.079 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_95b9c226fd8046c2a0493a27e73753f6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c841448b-66d3-4755-ad6a-4cf84eb93bb5): COMMIT;
Executing (172fbaaa-ffd3-4412-8a7a-6749a667b72e): COMMIT;
Executing (3b9e8f3e-1c7c-42ef-aad5-5a7eba64f66f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '04d19f6e-f331-4630-a51a-5aa2ea55bdcc' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 06:56:04.000 +00:00' LIMIT 1;
Executing (0ac65f12-e418-43a4-a85c-15c493fcebb1): COMMIT;
topicName Community Participation-Why 2021-04-09T06:46:26.000+0000
Executing (c2091e78-fb1d-4b77-bd56-a400e45f2baf): START TRANSACTION;
Processed user: Rhishikesh Dange
Executing (83905a61-00fc-4614-825e-3d97dd07c134): START TRANSACTION;
Executing (c68e8c4a-8d95-4f36-aa69-36f916f357dd): COMMIT;
Executing (c2091e78-fb1d-4b77-bd56-a400e45f2baf): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8015b555-310f-4896-be19-6801c9d16a40' AND "UserTopic"."name" = 'Community Participation-Why' AND "UserTopic"."issuedAt" = '2021-04-09 06:49:01.000 +00:00' LIMIT 1;
Executing (83905a61-00fc-4614-825e-3d97dd07c134): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '1e7b369b-6485-42d8-b46f-4d93173de143' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 06:57:20.000 +00:00' LIMIT 1;
Executing (3b9e8f3e-1c7c-42ef-aad5-5a7eba64f66f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_be91c6fea5234ab3adbedc2ebdbc8b14$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 06:56:04.000 +00:00','04d19f6e-f331-4630-a51a-5aa2ea55bdcc','2024-08-31 20:47:13.085 +00:00','2024-08-31 20:47:13.085 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_be91c6fea5234ab3adbedc2ebdbc8b14$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Capacity Building @ Scale - Experiences from FES in Odisha 2021-06-04T11:23:52.000+0000
Executing (4a2b5dc6-c224-4cbf-9178-3ec302461b02): START TRANSACTION;
Executing (c2091e78-fb1d-4b77-bd56-a400e45f2baf): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3331e78a8b804cc2b9ab9146d54a5569$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Community Participation-Why','2021-04-09 06:49:01.000 +00:00','8015b555-310f-4896-be19-6801c9d16a40','2024-08-31 20:47:13.088 +00:00','2024-08-31 20:47:13.088 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3331e78a8b804cc2b9ab9146d54a5569$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (83905a61-00fc-4614-825e-3d97dd07c134): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a04dd85300704bcd9f379f07cba25ee6$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 06:57:20.000 +00:00','1e7b369b-6485-42d8-b46f-4d93173de143','2024-08-31 20:47:13.089 +00:00','2024-08-31 20:47:13.089 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a04dd85300704bcd9f379f07cba25ee6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Community Participation-Why 2021-04-09T06:51:59.000+0000
Executing (5b62585c-f89e-41a7-b410-274ba36edd02): START TRANSACTION;
Executing (c2091e78-fb1d-4b77-bd56-a400e45f2baf): COMMIT;
Executing (4a2b5dc6-c224-4cbf-9178-3ec302461b02): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '534ec60b-0deb-41a6-97f8-2b5477f9c3a3' AND "UserTopic"."name" = 'PDA - Program App' AND "UserTopic"."issuedAt" = '2019-12-05 06:58:53.000 +00:00' LIMIT 1;
Executing (3b9e8f3e-1c7c-42ef-aad5-5a7eba64f66f): COMMIT;
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-01-30T09:07:01.000+0000
Executing (ecd7dd58-542b-40aa-af14-8d9e7eb23a59): START TRANSACTION;
Executing (5b62585c-f89e-41a7-b410-274ba36edd02): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '978c03c9-6857-455f-b955-129c9f5d70e9' AND "UserTopic"."name" = 'Feedback and next steps' AND "UserTopic"."issuedAt" = '2022-01-25 07:26:01.000 +00:00' LIMIT 1;
Executing (83905a61-00fc-4614-825e-3d97dd07c134): COMMIT;
Executing (ecd7dd58-542b-40aa-af14-8d9e7eb23a59): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '672fb9f9-8ea1-4cc8-b905-a35e69ce645c' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 06:57:06.000 +00:00' LIMIT 1;
Executing (4a2b5dc6-c224-4cbf-9178-3ec302461b02): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a8a162e11b5c48eb97f442400e34de5b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Program App','2019-12-05 06:58:53.000 +00:00','534ec60b-0deb-41a6-97f8-2b5477f9c3a3','2024-08-31 20:47:13.095 +00:00','2024-08-31 20:47:13.095 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a8a162e11b5c48eb97f442400e34de5b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Prajapati Vishal Baldevbhai
Executing (8cbaf621-ecea-4ed6-a163-9024c4a9d5d2): START TRANSACTION;
Executing (ecd7dd58-542b-40aa-af14-8d9e7eb23a59): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3b5afc1cf15249a0874aa07e32440e59$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 06:57:06.000 +00:00','672fb9f9-8ea1-4cc8-b905-a35e69ce645c','2024-08-31 20:47:13.097 +00:00','2024-08-31 20:47:13.097 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3b5afc1cf15249a0874aa07e32440e59$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5b62585c-f89e-41a7-b410-274ba36edd02): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_79dcf0916f6048f68ce0d2186b921205$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Feedback and next steps','2022-01-25 07:26:01.000 +00:00','978c03c9-6857-455f-b955-129c9f5d70e9','2024-08-31 20:47:13.098 +00:00','2024-08-31 20:47:13.098 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_79dcf0916f6048f68ce0d2186b921205$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Pooja Prajapati 
Executing (cfcfbbac-a1e8-45bc-a5d4-ecf8ae109f7b): START TRANSACTION;
Executing (8cbaf621-ecea-4ed6-a163-9024c4a9d5d2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '49762a84-722e-4ae9-be16-ba5123bd74fa' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 07:23:33.000 +00:00' LIMIT 1;
Executing (4a2b5dc6-c224-4cbf-9178-3ec302461b02): COMMIT;
Executing (ecd7dd58-542b-40aa-af14-8d9e7eb23a59): COMMIT;
Executing (cfcfbbac-a1e8-45bc-a5d4-ecf8ae109f7b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e07661b3-b906-4829-aa72-c5c2d4b6cff5' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 07:21:08.000 +00:00' LIMIT 1;
Executing (5b62585c-f89e-41a7-b410-274ba36edd02): COMMIT;
Processed user: Anupama patel
Executing (31ebf44a-8d5d-47d5-bc89-1371fe1f23d3): START TRANSACTION;
Executing (8cbaf621-ecea-4ed6-a163-9024c4a9d5d2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_674c03bb056e4909bff00a93a65d5c15$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 07:23:33.000 +00:00','49762a84-722e-4ae9-be16-ba5123bd74fa','2024-08-31 20:47:13.103 +00:00','2024-08-31 20:47:13.103 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_674c03bb056e4909bff00a93a65d5c15$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA - Trainer App 2019-12-05T07:25:57+0000
Executing (de0b7ac1-73ae-4e6c-a44f-df755506d26f): START TRANSACTION;
Executing (31ebf44a-8d5d-47d5-bc89-1371fe1f23d3): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e91cf5ba-cf27-4a89-8cec-dc7423a1fac5' AND "UserTopic"."name" = 'Data collection and Monitoring' AND "UserTopic"."issuedAt" = '2021-01-06 07:53:31.000 +00:00' LIMIT 1;
Executing (cfcfbbac-a1e8-45bc-a5d4-ecf8ae109f7b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bef778ff67dc4372a53eee072f3c5c6a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 07:21:08.000 +00:00','e07661b3-b906-4829-aa72-c5c2d4b6cff5','2024-08-31 20:47:13.107 +00:00','2024-08-31 20:47:13.107 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bef778ff67dc4372a53eee072f3c5c6a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Recap and potential next steps with the learning experience 2022-02-01T06:44:15.000+0000
Executing (be47548c-18f0-44e5-aeb5-27c01c28889b): START TRANSACTION;
Executing (31ebf44a-8d5d-47d5-bc89-1371fe1f23d3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6268e8d6b83b4d3fba7f136d9de106c5$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Data collection and Monitoring','2021-01-06 07:53:31.000 +00:00','e91cf5ba-cf27-4a89-8cec-dc7423a1fac5','2024-08-31 20:47:13.110 +00:00','2024-08-31 20:47:13.110 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6268e8d6b83b4d3fba7f136d9de106c5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (de0b7ac1-73ae-4e6c-a44f-df755506d26f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f64f98b3-8680-4e4f-8978-a94781c6fb94' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 06:57:13.000 +00:00' LIMIT 1;
Executing (8cbaf621-ecea-4ed6-a163-9024c4a9d5d2): COMMIT;
Executing (31ebf44a-8d5d-47d5-bc89-1371fe1f23d3): COMMIT;
Executing (de0b7ac1-73ae-4e6c-a44f-df755506d26f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_22d1c957eb0642e2a2b29e7743948bef$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 06:57:13.000 +00:00','f64f98b3-8680-4e4f-8978-a94781c6fb94','2024-08-31 20:47:13.114 +00:00','2024-08-31 20:47:13.114 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_22d1c957eb0642e2a2b29e7743948bef$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (be47548c-18f0-44e5-aeb5-27c01c28889b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b5796159-916b-4366-8cda-b3bc91f214ec' AND "UserTopic"."name" = 'Wheat Crop Training' AND "UserTopic"."issuedAt" = '2020-12-31 10:28:36.000 +00:00' LIMIT 1;
Executing (cfcfbbac-a1e8-45bc-a5d4-ecf8ae109f7b): COMMIT;
topicName Data collection and Analysis 2021-01-06T12:38:36.000+0000
Executing (53554054-c966-4477-b20a-5bb2a971ad2e): START TRANSACTION;
Executing (de0b7ac1-73ae-4e6c-a44f-df755506d26f): COMMIT;
Executing (be47548c-18f0-44e5-aeb5-27c01c28889b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9d304fd09d134e6999fbbc3d2676296a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Wheat Crop Training','2020-12-31 10:28:36.000 +00:00','b5796159-916b-4366-8cda-b3bc91f214ec','2024-08-31 20:47:13.119 +00:00','2024-08-31 20:47:13.119 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9d304fd09d134e6999fbbc3d2676296a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Dashrathsinh Rathod
Executing (4ad86b7b-f220-4b3b-81e8-e69c57d5eb5e): START TRANSACTION;
Executing (53554054-c966-4477-b20a-5bb2a971ad2e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '623772f6-e951-4704-ad07-d8e1b852bee3' AND "UserTopic"."name" = 'Site Selection of Desilting work Process of Government Approval and data Collection of its work' AND "UserTopic"."issuedAt" = '2021-02-06 12:41:22.000 +00:00' LIMIT 1;
Processed user: Rinkal manubhai patel
Executing (bc9c82bf-e0a5-403e-ab67-bcecfaf3112d): START TRANSACTION;
Processed user: PARMAR mahipa 
Executing (da88f33d-49a9-429b-9943-70836480a9ef): START TRANSACTION;
Executing (53554054-c966-4477-b20a-5bb2a971ad2e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_62c4ba415c0340b69805cd9bfa0d3e2f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Site Selection of Desilting work Process of Government Approval and data Collection of its work','2021-02-06 12:41:22.000 +00:00','623772f6-e951-4704-ad07-d8e1b852bee3','2024-08-31 20:47:13.122 +00:00','2024-08-31 20:47:13.122 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_62c4ba415c0340b69805cd9bfa0d3e2f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bc9c82bf-e0a5-403e-ab67-bcecfaf3112d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '7819afc7-9754-4b53-976c-722417249f0f' AND "UserTopic"."name" = 'PMT Functions & CBP Training Calendar' AND "UserTopic"."issuedAt" = '2020-10-13 10:35:49.000 +00:00' LIMIT 1;
Executing (4ad86b7b-f220-4b3b-81e8-e69c57d5eb5e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '249f141b-3fd0-4d6b-8fdb-c68de7aca819' AND "UserTopic"."name" = 'PDA Demo and Deployment Training for Trainers | ACT' AND "UserTopic"."issuedAt" = '2020-12-11 12:41:50.000 +00:00' LIMIT 1;
Executing (be47548c-18f0-44e5-aeb5-27c01c28889b): COMMIT;
Executing (53554054-c966-4477-b20a-5bb2a971ad2e): COMMIT;
Executing (bc9c82bf-e0a5-403e-ab67-bcecfaf3112d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_109f18199d4c432dab598e6f84f0fc25$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PMT Functions & CBP Training Calendar','2020-10-13 10:35:49.000 +00:00','7819afc7-9754-4b53-976c-722417249f0f','2024-08-31 20:47:13.126 +00:00','2024-08-31 20:47:13.126 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_109f18199d4c432dab598e6f84f0fc25$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (da88f33d-49a9-429b-9943-70836480a9ef): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '95a04b38-85ea-4d1a-a65f-cbcd05be181e' AND "UserTopic"."name" = 'PDA Hand-on' AND "UserTopic"."issuedAt" = '2021-08-30 11:11:55.000 +00:00' LIMIT 1;
topicName Content Development | T1.01 | DG 2020-11-26T11:45:07.000+0000
Executing (05ed7461-0701-46a8-aa5e-2e0484f7c528): START TRANSACTION;
Executing (4ad86b7b-f220-4b3b-81e8-e69c57d5eb5e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9bab6c714fed4086a74e24ff64a80771$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo and Deployment Training for Trainers | ACT','2020-12-11 12:41:50.000 +00:00','249f141b-3fd0-4d6b-8fdb-c68de7aca819','2024-08-31 20:47:13.128 +00:00','2024-08-31 20:47:13.128 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9bab6c714fed4086a74e24ff64a80771$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Refresher Training for ACT and DSC 2021-10-07T11:59:16.000+0000
Executing (9e6393fe-1960-4611-9fba-26458e269793): START TRANSACTION;
Executing (05ed7461-0701-46a8-aa5e-2e0484f7c528): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4084a65c-8c7b-4f94-bf3f-cb5c6f9d7947' AND "UserTopic"."name" = 'Hub Roles for Virtual Interactions' AND "UserTopic"."issuedAt" = '2020-12-10 05:59:47.000 +00:00' LIMIT 1;
Executing (bc9c82bf-e0a5-403e-ab67-bcecfaf3112d): COMMIT;
Executing (da88f33d-49a9-429b-9943-70836480a9ef): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7b4b95e1a2ae40a68bf261e62d94eb1a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Hand-on','2021-08-30 11:11:55.000 +00:00','95a04b38-85ea-4d1a-a65f-cbcd05be181e','2024-08-31 20:47:13.130 +00:00','2024-08-31 20:47:13.130 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7b4b95e1a2ae40a68bf261e62d94eb1a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (05ed7461-0701-46a8-aa5e-2e0484f7c528): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fa95496eb0474276b13fbdf1cf826ca8$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Hub Roles for Virtual Interactions','2020-12-10 05:59:47.000 +00:00','4084a65c-8c7b-4f94-bf3f-cb5c6f9d7947','2024-08-31 20:47:13.131 +00:00','2024-08-31 20:47:13.131 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fa95496eb0474276b13fbdf1cf826ca8$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname PDA - Assisted Scan
Executing (cd548589-ab51-4cfb-b4b1-e566955d08e7): START TRANSACTION;
Executing (9e6393fe-1960-4611-9fba-26458e269793): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8443fea0-a160-4b2e-be83-604f9184622f' AND "UserTopic"."name" = 'PDA Demo Test fr content' AND "UserTopic"."issuedAt" = '2021-06-17 11:21:09.000 +00:00' LIMIT 1;
Executing (4ad86b7b-f220-4b3b-81e8-e69c57d5eb5e): COMMIT;
Executing (05ed7461-0701-46a8-aa5e-2e0484f7c528): COMMIT;
Executing (cd548589-ab51-4cfb-b4b1-e566955d08e7): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '7108b369-0740-47e3-a6c6-ff551de5b1a7' AND "UserTopic"."name" = 'Hub Roles for Virtual Interactions' AND "UserTopic"."issuedAt" = '2020-12-10 08:24:30.000 +00:00' LIMIT 1;
Executing (da88f33d-49a9-429b-9943-70836480a9ef): COMMIT;
Processed user: Arpita Das PRASARI
Executing (b5387834-1f73-4eef-966c-648ce5b7457e): START TRANSACTION;
Executing (9e6393fe-1960-4611-9fba-26458e269793): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fde3ccf5fd7f45028a23e628f07db6e9$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo Test fr content','2021-06-17 11:21:09.000 +00:00','8443fea0-a160-4b2e-be83-604f9184622f','2024-08-31 20:47:13.138 +00:00','2024-08-31 20:47:13.138 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fde3ccf5fd7f45028a23e628f07db6e9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Scripts Review | T1.02 | DG 2020-12-02T11:39:06.000+0000
Executing (d7b04cab-c6c0-42e7-bc0f-9bfd886abb28): START TRANSACTION;
Executing (b5387834-1f73-4eef-966c-648ce5b7457e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'da44a0db-c91c-4437-8604-8bd05e2703dc' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM' AND "UserTopic"."issuedAt" = '2021-08-14 07:22:28.000 +00:00' LIMIT 1;
Executing (cd548589-ab51-4cfb-b4b1-e566955d08e7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9193040f0c61455eb605f1fc40ce1172$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Hub Roles for Virtual Interactions','2020-12-10 08:24:30.000 +00:00','7108b369-0740-47e3-a6c6-ff551de5b1a7','2024-08-31 20:47:13.141 +00:00','2024-08-31 20:47:13.141 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9193040f0c61455eb605f1fc40ce1172$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Uma
Executing (9760a04a-092d-4399-ae2f-7a606b65e0de): START TRANSACTION;
Executing (b5387834-1f73-4eef-966c-648ce5b7457e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1b6f8144d9d64f8dab3fb20094e80f0f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM','2021-08-14 07:22:28.000 +00:00','da44a0db-c91c-4437-8604-8bd05e2703dc','2024-08-31 20:47:13.144 +00:00','2024-08-31 20:47:13.144 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1b6f8144d9d64f8dab3fb20094e80f0f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d7b04cab-c6c0-42e7-bc0f-9bfd886abb28): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'eabded96-d1c0-4ec9-a932-4b57b466a34c' AND "UserTopic"."name" = 'Feedback and next steps' AND "UserTopic"."issuedAt" = '2022-01-25 07:34:42.000 +00:00' LIMIT 1;
Executing (9e6393fe-1960-4611-9fba-26458e269793): COMMIT;
Executing (b5387834-1f73-4eef-966c-648ce5b7457e): COMMIT;
Executing (d7b04cab-c6c0-42e7-bc0f-9bfd886abb28): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7e26a64a1bde40369038b5641dbfe549$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Feedback and next steps','2022-01-25 07:34:42.000 +00:00','eabded96-d1c0-4ec9-a932-4b57b466a34c','2024-08-31 20:47:13.148 +00:00','2024-08-31 20:47:13.148 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7e26a64a1bde40369038b5641dbfe549$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9760a04a-092d-4399-ae2f-7a606b65e0de): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'fd95ee30-3ab4-4c79-a54d-225162900383' AND "UserTopic"."name" = 'Community Participation-Why' AND "UserTopic"."issuedAt" = '2021-04-09 06:47:24.000 +00:00' LIMIT 1;
Executing (cd548589-ab51-4cfb-b4b1-e566955d08e7): COMMIT;
topicName Crop Water Budgeting Overview 2020-12-16T07:15:49.000+0000
Executing (683aa596-a872-41de-9988-4a47130f833b): START TRANSACTION;
Executing (d7b04cab-c6c0-42e7-bc0f-9bfd886abb28): COMMIT;
Executing (9760a04a-092d-4399-ae2f-7a606b65e0de): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_98fae9f416cb406d8d54687b93c96289$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Community Participation-Why','2021-04-09 06:47:24.000 +00:00','fd95ee30-3ab4-4c79-a54d-225162900383','2024-08-31 20:47:13.153 +00:00','2024-08-31 20:47:13.153 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_98fae9f416cb406d8d54687b93c96289$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Sudeep
Executing (3271187a-2bc8-40d1-9f11-851a4e36836f): START TRANSACTION;
Executing (683aa596-a872-41de-9988-4a47130f833b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e84e38c5-38bc-47e9-b5f1-a6c47d653c1e' AND "UserTopic"."name" = 'Concepts and development of Base map,Landuse map and Geo-morphology maps' AND "UserTopic"."issuedAt" = '2021-03-06 11:18:06.000 +00:00' LIMIT 1;
topicName Recap and potential next steps with the learning experience 2022-02-01T07:29:51.000+0000
Executing (779c5265-c32b-40ca-9494-8eaf30610a88): START TRANSACTION;
Processed user: Debarati Mondal
Executing (83bbc03b-879f-44b0-aadb-7935e2041784): START TRANSACTION;
Executing (683aa596-a872-41de-9988-4a47130f833b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7b1ddf39bca14a28ac7ced61b49d02d2$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Concepts and development of Base map,Landuse map and Geo-morphology maps','2021-03-06 11:18:06.000 +00:00','e84e38c5-38bc-47e9-b5f1-a6c47d653c1e','2024-08-31 20:47:13.157 +00:00','2024-08-31 20:47:13.157 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7b1ddf39bca14a28ac7ced61b49d02d2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (779c5265-c32b-40ca-9494-8eaf30610a88): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '04512cf0-6175-4c6f-a757-a792934cc3ae' AND "UserTopic"."name" = 'Recap and potential next steps with the learning experience' AND "UserTopic"."issuedAt" = '2022-02-01 06:44:41.000 +00:00' LIMIT 1;
Executing (3271187a-2bc8-40d1-9f11-851a4e36836f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8534ca90-db07-4871-9011-4d41455f192c' AND "UserTopic"."name" = 'Community Participation-Why' AND "UserTopic"."issuedAt" = '2021-04-09 06:48:22.000 +00:00' LIMIT 1;
Executing (9760a04a-092d-4399-ae2f-7a606b65e0de): COMMIT;
Executing (683aa596-a872-41de-9988-4a47130f833b): COMMIT;
Executing (779c5265-c32b-40ca-9494-8eaf30610a88): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_888404cfb6ca4c69b7cf45b07dd85836$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Recap and potential next steps with the learning experience','2022-02-01 06:44:41.000 +00:00','04512cf0-6175-4c6f-a757-a792934cc3ae','2024-08-31 20:47:13.160 +00:00','2024-08-31 20:47:13.160 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_888404cfb6ca4c69b7cf45b07dd85836$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (83bbc03b-879f-44b0-aadb-7935e2041784): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9c993b60-1289-4c9c-a4cc-5b34e3a4c330' AND "UserTopic"."name" = 'PDA Hand-on' AND "UserTopic"."issuedAt" = '2021-08-30 11:11:51.000 +00:00' LIMIT 1;
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-01-30T09:08:32.000+0000
Executing (964c33a0-428b-4d23-88e3-31ac7c086d0a): START TRANSACTION;
Executing (3271187a-2bc8-40d1-9f11-851a4e36836f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_261aba4f23e54183b0af05181d41c43d$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Community Participation-Why','2021-04-09 06:48:22.000 +00:00','8534ca90-db07-4871-9011-4d41455f192c','2024-08-31 20:47:13.163 +00:00','2024-08-31 20:47:13.163 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_261aba4f23e54183b0af05181d41c43d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-01-30T09:06:33.000+0000
Executing (58dc8371-9d57-4efe-a325-e4c25c567d2c): START TRANSACTION;
Executing (964c33a0-428b-4d23-88e3-31ac7c086d0a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e6afff30-727b-4d6a-9a0f-a21ce2ac628c' AND "UserTopic"."name" = 'Introduction to atomised content' AND "UserTopic"."issuedAt" = '2022-02-15 06:38:35.000 +00:00' LIMIT 1;
Executing (83bbc03b-879f-44b0-aadb-7935e2041784): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bec2e267a5b34b52b973fb01434da8bb$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Hand-on','2021-08-30 11:11:51.000 +00:00','9c993b60-1289-4c9c-a4cc-5b34e3a4c330','2024-08-31 20:47:13.165 +00:00','2024-08-31 20:47:13.165 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bec2e267a5b34b52b973fb01434da8bb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (779c5265-c32b-40ca-9494-8eaf30610a88): COMMIT;
Executing (964c33a0-428b-4d23-88e3-31ac7c086d0a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6dd78b9bb9794b3cb149f4dcca5a1784$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to atomised content','2022-02-15 06:38:35.000 +00:00','e6afff30-727b-4d6a-9a0f-a21ce2ac628c','2024-08-31 20:47:13.166 +00:00','2024-08-31 20:47:13.166 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6dd78b9bb9794b3cb149f4dcca5a1784$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (58dc8371-9d57-4efe-a325-e4c25c567d2c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e97fd0ba-3afc-46e6-a51a-d46194af9fe2' AND "UserTopic"."name" = 'PDA - Trainer App' AND "UserTopic"."issuedAt" = '2020-04-07 10:41:09.000 +00:00' LIMIT 1;
Executing (3271187a-2bc8-40d1-9f11-851a4e36836f): COMMIT;
topicName Introduction to Simplified Functional Grid Format 2022-01-11T07:21:23.000+0000
Executing (60c03ba9-0428-4767-9fee-4b62b222e68e): START TRANSACTION;
Executing (83bbc03b-879f-44b0-aadb-7935e2041784): COMMIT;
Executing (60c03ba9-0428-4767-9fee-4b62b222e68e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '3da1ae03-ee8f-4739-b245-d477b387772d' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 07:04:20.000 +00:00' LIMIT 1;
Executing (964c33a0-428b-4d23-88e3-31ac7c086d0a): COMMIT;
Executing (58dc8371-9d57-4efe-a325-e4c25c567d2c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fc67f2305cdf42a9ad0fd794e64cbd2a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Trainer App','2020-04-07 10:41:09.000 +00:00','e97fd0ba-3afc-46e6-a51a-d46194af9fe2','2024-08-31 20:47:13.170 +00:00','2024-08-31 20:47:13.170 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fc67f2305cdf42a9ad0fd794e64cbd2a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-01-30T09:05:00.000+0000
Executing (0acc1d2a-0cd6-4c7b-8b89-b4956424bb83): START TRANSACTION;
Executing (60c03ba9-0428-4767-9fee-4b62b222e68e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_83c5f987d3904455823916a109764f1f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 07:04:20.000 +00:00','3da1ae03-ee8f-4739-b245-d477b387772d','2024-08-31 20:47:13.172 +00:00','2024-08-31 20:47:13.172 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_83c5f987d3904455823916a109764f1f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Introduction to Visual Design LL3 2022-03-22T07:40:35.000+0000
Executing (1085079d-5fb6-47d6-aaf0-13e9300f9b62): START TRANSACTION;
trainertopicname भूजलाची ओळख व भूजल व्यवस्थापनाची गरज | Introduction to groundwater -Need for GW management
Executing (a624b660-b2e2-4c81-a1da-49dc3d682f2c): START TRANSACTION;
Executing (1085079d-5fb6-47d6-aaf0-13e9300f9b62): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '01f6c773-65a6-4875-a9e1-3c649ba6c333' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 06:56:55.000 +00:00' LIMIT 1;
Executing (0acc1d2a-0cd6-4c7b-8b89-b4956424bb83): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'd3ad7842-a5a6-462c-8a5d-b693bfd2cf89' AND "UserTopic"."name" = 'PDA Hand-on' AND "UserTopic"."issuedAt" = '2021-08-30 11:11:53.000 +00:00' LIMIT 1;
Executing (58dc8371-9d57-4efe-a325-e4c25c567d2c): COMMIT;
Executing (1085079d-5fb6-47d6-aaf0-13e9300f9b62): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8159ecb150b1425da1076b71ae709deb$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 06:56:55.000 +00:00','01f6c773-65a6-4875-a9e1-3c649ba6c333','2024-08-31 20:47:13.176 +00:00','2024-08-31 20:47:13.176 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8159ecb150b1425da1076b71ae709deb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (60c03ba9-0428-4767-9fee-4b62b222e68e): COMMIT;
Executing (a624b660-b2e2-4c81-a1da-49dc3d682f2c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '518c58b9-1081-495d-8c06-520a0f127641' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 07:22:54.000 +00:00' LIMIT 1;
Processed user: Thakor mukeshkumar
Executing (29c85942-3ef4-4033-94b2-6ff1bc331803): START TRANSACTION;
Executing (0acc1d2a-0cd6-4c7b-8b89-b4956424bb83): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ed10beb390ee4e8491a19e59328c5f4d$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Hand-on','2021-08-30 11:11:53.000 +00:00','d3ad7842-a5a6-462c-8a5d-b693bfd2cf89','2024-08-31 20:47:13.179 +00:00','2024-08-31 20:47:13.179 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ed10beb390ee4e8491a19e59328c5f4d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA - Program App 2020-04-07T10:49:18.000+0000
Executing (505692bd-96e0-4e93-a3df-193dba20a28d): START TRANSACTION;
Executing (29c85942-3ef4-4033-94b2-6ff1bc331803): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '84eef6b9-3acb-40f3-a8b3-f9ad7a2fb257' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 06:56:37.000 +00:00' LIMIT 1;
Executing (a624b660-b2e2-4c81-a1da-49dc3d682f2c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2ac76624e6c64934992bc86b29aa0164$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 07:22:54.000 +00:00','518c58b9-1081-495d-8c06-520a0f127641','2024-08-31 20:47:13.181 +00:00','2024-08-31 20:47:13.181 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2ac76624e6c64934992bc86b29aa0164$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1085079d-5fb6-47d6-aaf0-13e9300f9b62): COMMIT;
Executing (29c85942-3ef4-4033-94b2-6ff1bc331803): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c51196ddc9574e8ca4e008bc4b76e6b4$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 06:56:37.000 +00:00','84eef6b9-3acb-40f3-a8b3-f9ad7a2fb257','2024-08-31 20:47:13.183 +00:00','2024-08-31 20:47:13.183 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c51196ddc9574e8ca4e008bc4b76e6b4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (505692bd-96e0-4e93-a3df-193dba20a28d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e7ca78b7-9578-4795-ae25-a860c3976649' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 06:56:51.000 +00:00' LIMIT 1;
Executing (0acc1d2a-0cd6-4c7b-8b89-b4956424bb83): COMMIT;
Processed user: Ratansinh jagusinh chauhan
Executing (31f1bb5e-aef8-4b90-b38b-0631e3b99eb1): START TRANSACTION;
Executing (a624b660-b2e2-4c81-a1da-49dc3d682f2c): COMMIT;
Executing (31f1bb5e-aef8-4b90-b38b-0631e3b99eb1): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'a342759f-5fbb-42dd-804b-f8875e53362f' AND "UserTopic"."name" = 'PDA mock session - Churu' AND "UserTopic"."issuedAt" = '2020-12-15 15:10:10.000 +00:00' LIMIT 1;
Executing (505692bd-96e0-4e93-a3df-193dba20a28d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4ab611232a454995ac5584fc6ec06061$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 06:56:51.000 +00:00','e7ca78b7-9578-4795-ae25-a860c3976649','2024-08-31 20:47:13.187 +00:00','2024-08-31 20:47:13.187 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4ab611232a454995ac5584fc6ec06061$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (29c85942-3ef4-4033-94b2-6ff1bc331803): COMMIT;
Processed user: Manoj Bhagwat
Executing (d6cb5b83-9757-4363-b876-084af508b893): START TRANSACTION;
Executing (31f1bb5e-aef8-4b90-b38b-0631e3b99eb1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b449af4fda7d41128c035fc55e7fc73b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA mock session - Churu','2020-12-15 15:10:10.000 +00:00','a342759f-5fbb-42dd-804b-f8875e53362f','2024-08-31 20:47:13.189 +00:00','2024-08-31 20:47:13.189 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b449af4fda7d41128c035fc55e7fc73b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Ashvinkumar Prajapati 
Executing (aec1c2e4-cc0b-4433-a826-0a8d6c63f354): START TRANSACTION;
Processed user: Rathod  Gajendrasinh javansinh 
Executing (46335c11-550f-4dae-9bb1-f5df7bcf6c8a): START TRANSACTION;
Executing (31f1bb5e-aef8-4b90-b38b-0631e3b99eb1): COMMIT;
Executing (aec1c2e4-cc0b-4433-a826-0a8d6c63f354): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'd71b934c-81c3-47d1-8a1b-bfa821e53873' AND "UserTopic"."name" = 'Introduction to Process of planning a lesson flow' AND "UserTopic"."issuedAt" = '2022-03-02 06:58:23.000 +00:00' LIMIT 1;
Executing (505692bd-96e0-4e93-a3df-193dba20a28d): COMMIT;
Executing (d6cb5b83-9757-4363-b876-084af508b893): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '1da12f92-cab3-4f8b-b8c7-4c9baf5a32f9' AND "UserTopic"."name" = 'Concepts and development of Base map,Landuse map and Geo-morphology maps' AND "UserTopic"."issuedAt" = '2021-03-06 10:31:09.000 +00:00' LIMIT 1;
trainertopicname PDA mock session - Churu
Executing (36bc81e0-870e-4dec-8aa5-6109c9a2de9d): START TRANSACTION;
Executing (aec1c2e4-cc0b-4433-a826-0a8d6c63f354): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f1959ed2fef145ccaad3dcf6c24bfd0b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Process of planning a lesson flow','2022-03-02 06:58:23.000 +00:00','d71b934c-81c3-47d1-8a1b-bfa821e53873','2024-08-31 20:47:13.195 +00:00','2024-08-31 20:47:13.195 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f1959ed2fef145ccaad3dcf6c24bfd0b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Jagrutiben Thakor
Executing (31e3a579-7aa7-4d8f-ba99-7634b41c81c7): START TRANSACTION;
Executing (46335c11-550f-4dae-9bb1-f5df7bcf6c8a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b16b7c59-7de2-41e9-9a24-d63e33c0a825' AND "UserTopic"."name" = 'Introduction to atomised content' AND "UserTopic"."issuedAt" = '2022-02-15 06:23:45.000 +00:00' LIMIT 1;
Executing (36bc81e0-870e-4dec-8aa5-6109c9a2de9d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f838dac6-0aca-4a3c-a686-f4e012303539' AND "UserTopic"."name" = 'PDA Demo' AND "UserTopic"."issuedAt" = '2021-07-13 05:16:42.000 +00:00' LIMIT 1;
Executing (31e3a579-7aa7-4d8f-ba99-7634b41c81c7): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '0f021e0f-b508-4fbf-91a2-e256ffde7de3' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 06:47:05.000 +00:00' LIMIT 1;
Executing (d6cb5b83-9757-4363-b876-084af508b893): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d213aa22348347b0b04c7f2aab773f98$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Concepts and development of Base map,Landuse map and Geo-morphology maps','2021-03-06 10:31:09.000 +00:00','1da12f92-cab3-4f8b-b8c7-4c9baf5a32f9','2024-08-31 20:47:13.199 +00:00','2024-08-31 20:47:13.199 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d213aa22348347b0b04c7f2aab773f98$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (36bc81e0-870e-4dec-8aa5-6109c9a2de9d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_33eb67eaa5b24a12b6be0b8def6f4231$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo','2021-07-13 05:16:42.000 +00:00','f838dac6-0aca-4a3c-a686-f4e012303539','2024-08-31 20:47:13.200 +00:00','2024-08-31 20:47:13.200 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_33eb67eaa5b24a12b6be0b8def6f4231$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (31e3a579-7aa7-4d8f-ba99-7634b41c81c7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6b9ddc70de854fe39fc7f9f968f54e39$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 06:47:05.000 +00:00','0f021e0f-b508-4fbf-91a2-e256ffde7de3','2024-08-31 20:47:13.201 +00:00','2024-08-31 20:47:13.201 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6b9ddc70de854fe39fc7f9f968f54e39$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (aec1c2e4-cc0b-4433-a826-0a8d6c63f354): COMMIT;
Executing (46335c11-550f-4dae-9bb1-f5df7bcf6c8a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a0277fe1444a4ce3b67c280b1a69729c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to atomised content','2022-02-15 06:23:45.000 +00:00','b16b7c59-7de2-41e9-9a24-d63e33c0a825','2024-08-31 20:47:13.202 +00:00','2024-08-31 20:47:13.202 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a0277fe1444a4ce3b67c280b1a69729c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (36bc81e0-870e-4dec-8aa5-6109c9a2de9d): COMMIT;
Executing (31e3a579-7aa7-4d8f-ba99-7634b41c81c7): COMMIT;
topicName Introduction to atomised content 2022-02-15T06:38:27.000+0000
Executing (bf53b0fe-8850-418c-8d09-7903c1c8faaf): START TRANSACTION;
Executing (d6cb5b83-9757-4363-b876-084af508b893): COMMIT;
trainertopicname Manu Test Topic
Executing (907d9769-e1c9-409b-aad7-ad490d1ee175): START TRANSACTION;
Processed user: Patel vipul
Executing (5dec7c4e-2e3d-4450-a828-b86341d8aeb3): START TRANSACTION;
Executing (bf53b0fe-8850-418c-8d09-7903c1c8faaf): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '24116eb6-0d95-472a-befc-206e7e1f787c' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2020-08-19 09:59:58.000 +00:00' LIMIT 1;
Executing (907d9769-e1c9-409b-aad7-ad490d1ee175): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '32669155-14ca-462e-b187-55304716c91a' AND "UserTopic"."name" = 'Guided Mentoring Format' AND "UserTopic"."issuedAt" = '2020-11-04 10:39:09.000 +00:00' LIMIT 1;
Executing (5dec7c4e-2e3d-4450-a828-b86341d8aeb3): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b93fb22c-4617-4d60-a38e-8718ad7b228f' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 06:58:58.000 +00:00' LIMIT 1;
Executing (46335c11-550f-4dae-9bb1-f5df7bcf6c8a): COMMIT;
topicName Community Participation-Why 2021-04-09T06:55:19.000+0000
Executing (584d641c-6d2a-4279-b0b7-d30d65424919): START TRANSACTION;
Executing (907d9769-e1c9-409b-aad7-ad490d1ee175): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1bdb9906c1574d85a32bf354dcffd98a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Guided Mentoring Format','2020-11-04 10:39:09.000 +00:00','32669155-14ca-462e-b187-55304716c91a','2024-08-31 20:47:13.209 +00:00','2024-08-31 20:47:13.209 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1bdb9906c1574d85a32bf354dcffd98a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5dec7c4e-2e3d-4450-a828-b86341d8aeb3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1184b0efc46542ac9a57e773a6231051$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 06:58:58.000 +00:00','b93fb22c-4617-4d60-a38e-8718ad7b228f','2024-08-31 20:47:13.209 +00:00','2024-08-31 20:47:13.209 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1184b0efc46542ac9a57e773a6231051$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bf53b0fe-8850-418c-8d09-7903c1c8faaf): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_290bacc179c2432d827e7c1a2e4ce3fc$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2020-08-19 09:59:58.000 +00:00','24116eb6-0d95-472a-befc-206e7e1f787c','2024-08-31 20:47:13.210 +00:00','2024-08-31 20:47:13.210 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_290bacc179c2432d827e7c1a2e4ce3fc$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (907d9769-e1c9-409b-aad7-ad490d1ee175): COMMIT;
topicName Recap and potential next steps with the learning experience 2022-02-01T06:45:28.000+0000
Executing (ce886497-de13-443f-9304-c22e09596671): START TRANSACTION;
Executing (584d641c-6d2a-4279-b0b7-d30d65424919): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'ffb16e31-3fd8-4fc3-94e1-63c6b68c451e' AND "UserTopic"."name" = 'CBP Orientation' AND "UserTopic"."issuedAt" = '2020-08-25 06:11:13.000 +00:00' LIMIT 1;
topicName Hub Roles for Virtual Interactions 2020-12-10T05:58:05.000+0000
Executing (a90fd85a-ec98-43f6-8f25-cb91b22eb3aa): START TRANSACTION;
Executing (ce886497-de13-443f-9304-c22e09596671): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c55bd79b-042e-46bf-9e18-f4dd8e383e5d' AND "UserTopic"."name" = 'TOT of Bhujal Janakar' AND "UserTopic"."issuedAt" = '2021-02-05 07:24:06.000 +00:00' LIMIT 1;
Executing (5dec7c4e-2e3d-4450-a828-b86341d8aeb3): COMMIT;
Executing (bf53b0fe-8850-418c-8d09-7903c1c8faaf): COMMIT;
Executing (a90fd85a-ec98-43f6-8f25-cb91b22eb3aa): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '452450c8-d384-4c61-83f8-4faf11a6d8ef' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2019-12-26 10:41:05.000 +00:00' LIMIT 1;
Executing (ce886497-de13-443f-9304-c22e09596671): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a8692f51db2f4f6d8463d24065857678$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'TOT of Bhujal Janakar','2021-02-05 07:24:06.000 +00:00','c55bd79b-042e-46bf-9e18-f4dd8e383e5d','2024-08-31 20:47:13.217 +00:00','2024-08-31 20:47:13.217 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a8692f51db2f4f6d8463d24065857678$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (584d641c-6d2a-4279-b0b7-d30d65424919): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_24f02b78e7d74eaab9056991f39c1c49$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'CBP Orientation','2020-08-25 06:11:13.000 +00:00','ffb16e31-3fd8-4fc3-94e1-63c6b68c451e','2024-08-31 20:47:13.218 +00:00','2024-08-31 20:47:13.218 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_24f02b78e7d74eaab9056991f39c1c49$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a90fd85a-ec98-43f6-8f25-cb91b22eb3aa): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5c0cf5b0fb4d4ffb853864c87857e125$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2019-12-26 10:41:05.000 +00:00','452450c8-d384-4c61-83f8-4faf11a6d8ef','2024-08-31 20:47:13.219 +00:00','2024-08-31 20:47:13.219 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5c0cf5b0fb4d4ffb853864c87857e125$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Charmi modi
Executing (d9aa31d8-0f41-4b3a-a00d-a82a1edcbf3c): START TRANSACTION;
topicName Hub Roles for Virtual Interactions 2020-12-10T05:58:51.000+0000
Executing (d8e1cdbb-aa4d-4e3c-a8ff-1da782a7f4d8): START TRANSACTION;
Executing (a90fd85a-ec98-43f6-8f25-cb91b22eb3aa): COMMIT;
Executing (d9aa31d8-0f41-4b3a-a00d-a82a1edcbf3c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4f3f5e8e-de1b-411a-9454-9038cca34335' AND "UserTopic"."name" = 'Concepts and development of Base map,Landuse map and Geo-morphology maps' AND "UserTopic"."issuedAt" = '2021-03-06 10:30:09.000 +00:00' LIMIT 1;
Executing (ce886497-de13-443f-9304-c22e09596671): COMMIT;
Executing (584d641c-6d2a-4279-b0b7-d30d65424919): COMMIT;
topicName PDA - Program App 2019-12-26T11:48:16+0000
Executing (9d26e41d-1f2b-4a4c-a595-1556475ddc71): START TRANSACTION;
Executing (d9aa31d8-0f41-4b3a-a00d-a82a1edcbf3c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8010c7e7094440d6ac8be49c0b55cdcf$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Concepts and development of Base map,Landuse map and Geo-morphology maps','2021-03-06 10:30:09.000 +00:00','4f3f5e8e-de1b-411a-9454-9038cca34335','2024-08-31 20:47:13.223 +00:00','2024-08-31 20:47:13.223 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8010c7e7094440d6ac8be49c0b55cdcf$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d8e1cdbb-aa4d-4e3c-a8ff-1da782a7f4d8): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2cbe0329-07a4-481a-bf7a-22b814a464e5' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2019-12-26 10:41:19.000 +00:00' LIMIT 1;
Executing (9d26e41d-1f2b-4a4c-a595-1556475ddc71): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'e6f9c8f7-019e-4d38-b18a-5acf5900c008' AND "UserTrainer"."name" = 'Image composition and layouts LL3' AND "UserTrainer"."issueDate" = '2022-03-29 07:30:00.000 +00:00' LIMIT 1;
topicName Data collection and Monitoring 2021-01-06T07:53:26.000+0000
Executing (2baef173-604d-4e51-9268-f5c0da7192ca): START TRANSACTION;
Processed user: Nilay Wankhade
Executing (17d72bfa-62e1-4d80-9511-c299330de5cd): START TRANSACTION;
Executing (9d26e41d-1f2b-4a4c-a595-1556475ddc71): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_66de596795e545b4a4ef9922eaf32b81$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Image composition and layouts LL3','2022-03-29 07:30:00.000 +00:00','e6f9c8f7-019e-4d38-b18a-5acf5900c008','2024-08-31 20:47:13.229 +00:00','2024-08-31 20:47:13.229 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_66de596795e545b4a4ef9922eaf32b81$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2baef173-604d-4e51-9268-f5c0da7192ca): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '0c28fe58-1af0-44b9-8d42-d25138965205' AND "UserTopic"."name" = 'Introduction to Visual Design LL3' AND "UserTopic"."issuedAt" = '2022-03-22 07:24:30.000 +00:00' LIMIT 1;
Executing (17d72bfa-62e1-4d80-9511-c299330de5cd): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'a6241a20-9982-4041-a67d-7e2a2e43f6b9' AND "UserTrainer"."name" = 'Image composition and layouts LL3' AND "UserTrainer"."issueDate" = '2022-03-29 07:30:00.000 +00:00' LIMIT 1;
Executing (d9aa31d8-0f41-4b3a-a00d-a82a1edcbf3c): COMMIT;
Executing (d8e1cdbb-aa4d-4e3c-a8ff-1da782a7f4d8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_98fca0ad509f45df9e807052ca024591$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2019-12-26 10:41:19.000 +00:00','2cbe0329-07a4-481a-bf7a-22b814a464e5','2024-08-31 20:47:13.232 +00:00','2024-08-31 20:47:13.232 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_98fca0ad509f45df9e807052ca024591$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9d26e41d-1f2b-4a4c-a595-1556475ddc71): COMMIT;
Executing (2baef173-604d-4e51-9268-f5c0da7192ca): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_adaf9c5239b4484f950686d6d731f270$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Visual Design LL3','2022-03-22 07:24:30.000 +00:00','0c28fe58-1af0-44b9-8d42-d25138965205','2024-08-31 20:47:13.233 +00:00','2024-08-31 20:47:13.233 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_adaf9c5239b4484f950686d6d731f270$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (17d72bfa-62e1-4d80-9511-c299330de5cd): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5fdcb2f4af854a4f9c57cf08a0ae2e3c$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Image composition and layouts LL3','2022-03-29 07:30:00.000 +00:00','a6241a20-9982-4041-a67d-7e2a2e43f6b9','2024-08-31 20:47:13.234 +00:00','2024-08-31 20:47:13.234 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5fdcb2f4af854a4f9c57cf08a0ae2e3c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Community Participation-Why 2021-04-09T06:33:27.000+0000
Executing (f8b593d3-6902-47cc-8fe4-80eedfcdb6f6): START TRANSACTION;
trainertopicname Introduction to Process of planning a lesson flow
Executing (f0896df8-2021-4bed-a0d3-220b234e8052): START TRANSACTION;
Executing (2baef173-604d-4e51-9268-f5c0da7192ca): COMMIT;
Executing (d8e1cdbb-aa4d-4e3c-a8ff-1da782a7f4d8): COMMIT;
Executing (f0896df8-2021-4bed-a0d3-220b234e8052): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '59921a3a-49f8-482e-9cab-dd64ad59a839' AND "UserTopic"."name" = 'Understanding the Functional Grid' AND "UserTopic"."issuedAt" = '2022-09-15 04:47:28.000 +00:00' LIMIT 1;
Executing (f8b593d3-6902-47cc-8fe4-80eedfcdb6f6): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '305c306d-64cc-45eb-b51c-6bcb69c00291' AND "UserTopic"."name" = 'Image composition and layouts LL3' AND "UserTopic"."issuedAt" = '2022-03-29 07:40:23.000 +00:00' LIMIT 1;
Executing (17d72bfa-62e1-4d80-9511-c299330de5cd): COMMIT;
Executing (f0896df8-2021-4bed-a0d3-220b234e8052): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d8b8cb6c2cff46cfb99b003dae7b874f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Understanding the Functional Grid','2022-09-15 04:47:28.000 +00:00','59921a3a-49f8-482e-9cab-dd64ad59a839','2024-08-31 20:47:13.238 +00:00','2024-08-31 20:47:13.238 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d8b8cb6c2cff46cfb99b003dae7b874f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Rashika Pullam Chetti
Executing (a3bf11d7-d96f-43a5-8253-4e058f6b040b): START TRANSACTION;
topicName PDA - Program App 2019-12-26T11:48:30+0000
Executing (244f5d61-4450-4ca6-a163-f84ea0e94376): START TRANSACTION;
Executing (a3bf11d7-d96f-43a5-8253-4e058f6b040b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '192c494b-39ec-4cdc-b0b0-e4322d336e69' AND "UserTopic"."name" = 'PDA mock session - Churu' AND "UserTopic"."issuedAt" = '2020-12-15 15:10:05.000 +00:00' LIMIT 1;
Executing (f8b593d3-6902-47cc-8fe4-80eedfcdb6f6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7c5d2f8bc3bb41ac96e91e6bc9453135$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Image composition and layouts LL3','2022-03-29 07:40:23.000 +00:00','305c306d-64cc-45eb-b51c-6bcb69c00291','2024-08-31 20:47:13.241 +00:00','2024-08-31 20:47:13.241 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7c5d2f8bc3bb41ac96e91e6bc9453135$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Introduction to Process of planning a lesson flow
Executing (20f856eb-ac88-4db4-96bd-9938f1f25080): START TRANSACTION;
Executing (a3bf11d7-d96f-43a5-8253-4e058f6b040b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b5ee3cfbbfdd4456be7e994fab1fad98$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA mock session - Churu','2020-12-15 15:10:05.000 +00:00','192c494b-39ec-4cdc-b0b0-e4322d336e69','2024-08-31 20:47:13.242 +00:00','2024-08-31 20:47:13.242 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b5ee3cfbbfdd4456be7e994fab1fad98$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (244f5d61-4450-4ca6-a163-f84ea0e94376): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '945619e0-0d9c-435a-ad20-c4d392b263bd' AND "UserTopic"."name" = 'Data collection and Monitoring' AND "UserTopic"."issuedAt" = '2021-01-06 07:52:58.000 +00:00' LIMIT 1;
Executing (f0896df8-2021-4bed-a0d3-220b234e8052): COMMIT;
Executing (20f856eb-ac88-4db4-96bd-9938f1f25080): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'fb03a265-7824-49ee-a49d-fbe0c9e82564' AND "UserTopic"."name" = 'TOT of Bhujal Janakar' AND "UserTopic"."issuedAt" = '2021-02-05 07:23:46.000 +00:00' LIMIT 1;
Executing (f8b593d3-6902-47cc-8fe4-80eedfcdb6f6): COMMIT;
Executing (244f5d61-4450-4ca6-a163-f84ea0e94376): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b7acd6b7a9da4352a6466706e1d1897a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Data collection and Monitoring','2021-01-06 07:52:58.000 +00:00','945619e0-0d9c-435a-ad20-c4d392b263bd','2024-08-31 20:47:13.245 +00:00','2024-08-31 20:47:13.245 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b7acd6b7a9da4352a6466706e1d1897a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Priya Sankar
Executing (d1d10cce-6892-4df5-9473-547b008456c6): START TRANSACTION;
Executing (a3bf11d7-d96f-43a5-8253-4e058f6b040b): COMMIT;
Executing (d1d10cce-6892-4df5-9473-547b008456c6): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4e526a75-c8d4-436b-8245-b7f7dd485186' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM - III' AND "UserTopic"."issuedAt" = '2021-08-18 11:28:31.000 +00:00' LIMIT 1;
Executing (20f856eb-ac88-4db4-96bd-9938f1f25080): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3ebae52efd6949dd94c3067ee89c6f56$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'TOT of Bhujal Janakar','2021-02-05 07:23:46.000 +00:00','fb03a265-7824-49ee-a49d-fbe0c9e82564','2024-08-31 20:47:13.248 +00:00','2024-08-31 20:47:13.248 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3ebae52efd6949dd94c3067ee89c6f56$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Introduction to Process of planning a lesson flow 2022-03-02T06:59:03.000+0000
Executing (fb988d92-b716-4727-9b85-8f5bd4ef619c): START TRANSACTION;
Executing (d1d10cce-6892-4df5-9473-547b008456c6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_746fc3bd58f44c46a901d211e550144a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM - III','2021-08-18 11:28:31.000 +00:00','4e526a75-c8d4-436b-8245-b7f7dd485186','2024-08-31 20:47:13.249 +00:00','2024-08-31 20:47:13.249 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_746fc3bd58f44c46a901d211e550144a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname PDA mock session - Churu
Executing (63fe3e59-b71a-41b9-aad7-b776dc97a8af): START TRANSACTION;
Executing (244f5d61-4450-4ca6-a163-f84ea0e94376): COMMIT;
Executing (63fe3e59-b71a-41b9-aad7-b776dc97a8af): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'fe2cf7fe-c2da-42ff-bc9b-0bd9169b1f37' AND "UserTrainer"."name" = 'Test run for Assisted Scanning' AND "UserTrainer"."issueDate" = '2020-08-06 10:55:00.000 +00:00' LIMIT 1;
Executing (fb988d92-b716-4727-9b85-8f5bd4ef619c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6df4face-5699-4fa1-bd64-0c565ee7440d' AND "UserTopic"."name" = 'TOT of Bhujal Janakar' AND "UserTopic"."issuedAt" = '2021-02-05 07:24:27.000 +00:00' LIMIT 1;
Executing (20f856eb-ac88-4db4-96bd-9938f1f25080): COMMIT;
Executing (63fe3e59-b71a-41b9-aad7-b776dc97a8af): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_135f17527aa646a4a11cdcee1855fae3$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Test run for Assisted Scanning','2020-08-06 10:55:00.000 +00:00','fe2cf7fe-c2da-42ff-bc9b-0bd9169b1f37','2024-08-31 20:47:13.253 +00:00','2024-08-31 20:47:13.253 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_135f17527aa646a4a11cdcee1855fae3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (fb988d92-b716-4727-9b85-8f5bd4ef619c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1a2025bde3154e6e956004234cd98c93$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'TOT of Bhujal Janakar','2021-02-05 07:24:27.000 +00:00','6df4face-5699-4fa1-bd64-0c565ee7440d','2024-08-31 20:47:13.254 +00:00','2024-08-31 20:47:13.254 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1a2025bde3154e6e956004234cd98c93$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Data collection and Analysis 2021-01-06T12:34:34.000+0000
Executing (cd331c35-d6e1-4555-a4ed-961ef482a053): START TRANSACTION;
Executing (d1d10cce-6892-4df5-9473-547b008456c6): COMMIT;
Executing (63fe3e59-b71a-41b9-aad7-b776dc97a8af): COMMIT;
Executing (cd331c35-d6e1-4555-a4ed-961ef482a053): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '78fb6721-9eb2-4099-98f7-75340a08c883' AND "UserTopic"."name" = 'Concepts and development of Base map,Landuse map and Geo-morphology maps' AND "UserTopic"."issuedAt" = '2021-03-06 10:31:04.000 +00:00' LIMIT 1;
topicName Data collection and Monitoring 2021-01-06T07:52:58.000+0000
Executing (4aae9cdd-36b6-46b8-b7e2-edd6eac61664): START TRANSACTION;
trainertopicname 11
Executing (7d04d74e-9207-4be2-a38b-6b69a7670413): START TRANSACTION;
Executing (fb988d92-b716-4727-9b85-8f5bd4ef619c): COMMIT;
topicName Content Development | T1.01 | DG 2020-11-26T11:44:58.000+0000
Executing (f8d30320-a81f-4f67-9ee3-35f5056afabb): START TRANSACTION;
Executing (7d04d74e-9207-4be2-a38b-6b69a7670413): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c4f487d3-f35f-4aaa-9e17-e8486db834c2' AND "UserTopic"."name" = 'PMT Functions & CBP Training Calendar' AND "UserTopic"."issuedAt" = '2020-10-13 10:35:42.000 +00:00' LIMIT 1;
topicName Data collection and Monitoring 2021-01-06T07:53:09.000+0000
Executing (e75a90c7-1af6-49c4-81cd-67eec7e265ff): START TRANSACTION;
Executing (cd331c35-d6e1-4555-a4ed-961ef482a053): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3984219d902c4ca0b8762953564505a0$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Concepts and development of Base map,Landuse map and Geo-morphology maps','2021-03-06 10:31:04.000 +00:00','78fb6721-9eb2-4099-98f7-75340a08c883','2024-08-31 20:47:13.260 +00:00','2024-08-31 20:47:13.260 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3984219d902c4ca0b8762953564505a0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4aae9cdd-36b6-46b8-b7e2-edd6eac61664): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5264b284-4789-4883-81a1-0f7233e0c848' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-01-30 09:06:45.000 +00:00' LIMIT 1;
Executing (7d04d74e-9207-4be2-a38b-6b69a7670413): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2ac1580664ec43c88324255a09059d5a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PMT Functions & CBP Training Calendar','2020-10-13 10:35:42.000 +00:00','c4f487d3-f35f-4aaa-9e17-e8486db834c2','2024-08-31 20:47:13.262 +00:00','2024-08-31 20:47:13.262 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2ac1580664ec43c88324255a09059d5a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e75a90c7-1af6-49c4-81cd-67eec7e265ff): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'd2a695e3-5d1c-49ba-adab-671dab6d81fa' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2020-03-18 06:49:05.000 +00:00' LIMIT 1;
Executing (f8d30320-a81f-4f67-9ee3-35f5056afabb): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'a7756c59-d51a-4cff-af34-75b0403432f1' AND "UserTopic"."name" = 'PDA - Trainer App' AND "UserTopic"."issuedAt" = '2019-12-05 07:26:09.000 +00:00' LIMIT 1;
Executing (7d04d74e-9207-4be2-a38b-6b69a7670413): COMMIT;
Executing (e75a90c7-1af6-49c4-81cd-67eec7e265ff): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b3d96b79306f45b7b134c218b12cabc9$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2020-03-18 06:49:05.000 +00:00','d2a695e3-5d1c-49ba-adab-671dab6d81fa','2024-08-31 20:47:13.267 +00:00','2024-08-31 20:47:13.267 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b3d96b79306f45b7b134c218b12cabc9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cd331c35-d6e1-4555-a4ed-961ef482a053): COMMIT;
Executing (4aae9cdd-36b6-46b8-b7e2-edd6eac61664): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_37d39b0ebc2c4a119a99b8d44f5c5331$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-01-30 09:06:45.000 +00:00','5264b284-4789-4883-81a1-0f7233e0c848','2024-08-31 20:47:13.269 +00:00','2024-08-31 20:47:13.269 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_37d39b0ebc2c4a119a99b8d44f5c5331$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Partik Kumar
Executing (f0620122-5712-4bbc-bb21-c8aee73ffeea): START TRANSACTION;
Executing (e75a90c7-1af6-49c4-81cd-67eec7e265ff): COMMIT;
topicName Community Participation-Why 2021-04-09T06:46:24.000+0000
Executing (4a751524-edea-4cbd-94a2-14750a8151af): START TRANSACTION;
Executing (f8d30320-a81f-4f67-9ee3-35f5056afabb): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9dd6007c201747168ac9bb4f853d0c09$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Trainer App','2019-12-05 07:26:09.000 +00:00','a7756c59-d51a-4cff-af34-75b0403432f1','2024-08-31 20:47:13.272 +00:00','2024-08-31 20:47:13.272 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9dd6007c201747168ac9bb4f853d0c09$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f0620122-5712-4bbc-bb21-c8aee73ffeea): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '67f6ffd9-0d75-4c92-8909-7c0f78daf8b7' AND "UserTopic"."name" = 'PDA - Program App' AND "UserTopic"."issuedAt" = '2019-12-05 07:39:38.000 +00:00' LIMIT 1;
topicName ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯ       ಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs 21-12-2022
Executing (25efc4f1-0e0b-410d-ac69-9899ceb9464e): START TRANSACTION;
Executing (4a751524-edea-4cbd-94a2-14750a8151af): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '919b177f-2a3d-4883-8060-149bf84012b4' AND "UserTopic"."name" = 'JD test - Completing the self assessment course ' AND "UserTopic"."issuedAt" = '2023-01-21 07:40:38.000 +00:00' LIMIT 1;
Executing (4aae9cdd-36b6-46b8-b7e2-edd6eac61664): COMMIT;
Executing (f0620122-5712-4bbc-bb21-c8aee73ffeea): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a8195f4fe1f84c99930ca413acca1005$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Program App','2019-12-05 07:39:38.000 +00:00','67f6ffd9-0d75-4c92-8909-7c0f78daf8b7','2024-08-31 20:47:13.276 +00:00','2024-08-31 20:47:13.276 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a8195f4fe1f84c99930ca413acca1005$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (25efc4f1-0e0b-410d-ac69-9899ceb9464e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e931ea86-989b-4188-aa8b-8052253f14ce' AND "UserTopic"."name" = 'ವಿ   ವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs' AND "UserTopic"."issuedAt" = '2023-01-02 11:35:23.000 +00:00' LIMIT 1;
Executing (4a751524-edea-4cbd-94a2-14750a8151af): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3f1f8ea3d9cb4eb8b1e858c67698d323$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD test - Completing the self assessment course ','2023-01-21 07:40:38.000 +00:00','919b177f-2a3d-4883-8060-149bf84012b4','2024-08-31 20:47:13.278 +00:00','2024-08-31 20:47:13.278 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3f1f8ea3d9cb4eb8b1e858c67698d323$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f8d30320-a81f-4f67-9ee3-35f5056afabb): COMMIT;
Executing (f0620122-5712-4bbc-bb21-c8aee73ffeea): COMMIT;
Executing (25efc4f1-0e0b-410d-ac69-9899ceb9464e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_12e5d17375484d9b9e29e4e42a62d9ff$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'ವಿ   ವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs','2023-01-02 11:35:23.000 +00:00','e931ea86-989b-4188-aa8b-8052253f14ce','2024-08-31 20:47:13.280 +00:00','2024-08-31 20:47:13.280 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_12e5d17375484d9b9e29e4e42a62d9ff$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Capacity building of Jaldoots on MGNREGA schemes provisions 2021-01-11T07:36:50.000+0000
Executing (f16ab49b-c794-4d5f-af58-3771819549fb): START TRANSACTION;
topicName PDA - Trainer App 2020-01-08T08:56:31+0000
Executing (533669c8-0bb8-4a7e-bec0-fa3e173b279e): START TRANSACTION;
topicName Test run for Assisted Scanning 2020-08-07T07:15:13.000+0000
Executing (bc61b4c6-1668-4e25-b299-c31ea60a8504): START TRANSACTION;
Executing (4a751524-edea-4cbd-94a2-14750a8151af): COMMIT;
Executing (533669c8-0bb8-4a7e-bec0-fa3e173b279e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5a9679fe-6c56-4e22-aa0a-14adb9703410' AND "UserTopic"."name" = 'PDA - Program App' AND "UserTopic"."issuedAt" = '2019-12-26 11:49:08.000 +00:00' LIMIT 1;
Executing (bc61b4c6-1668-4e25-b299-c31ea60a8504): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'f7e93313-2909-4493-9a53-fadfd033201b' AND "UserTrainer"."name" = 'ಅಂತರ್ಜಲ ಚೇತನ - ಮಾದರಿ ವಿಷಯ (Antarajala Chetana - Example Topic)' AND "UserTrainer"."issueDate" = '2021-09-02 09:30:00.000 +00:00' LIMIT 1;
Executing (f16ab49b-c794-4d5f-af58-3771819549fb): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '0c193e5f-d189-464b-82cf-443317306d87' AND "UserTopic"."name" = 'स्वच्छ पानी को पाने की जंग' AND "UserTopic"."issuedAt" = '2019-12-02 10:50:15.000 +00:00' LIMIT 1;
Executing (25efc4f1-0e0b-410d-ac69-9899ceb9464e): COMMIT;
Executing (533669c8-0bb8-4a7e-bec0-fa3e173b279e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_53e053df19824b1c840fa3692d906f87$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Program App','2019-12-26 11:49:08.000 +00:00','5a9679fe-6c56-4e22-aa0a-14adb9703410','2024-08-31 20:47:13.286 +00:00','2024-08-31 20:47:13.286 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_53e053df19824b1c840fa3692d906f87$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bc61b4c6-1668-4e25-b299-c31ea60a8504): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cc16bb6adb284da5811b9f6c32ad0717$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'ಅಂತರ್ಜಲ ಚೇತನ - ಮಾದರಿ ವಿಷಯ (Antarajala Chetana - Example Topic)','2021-09-02 09:30:00.000 +00:00','f7e93313-2909-4493-9a53-fadfd033201b','2024-08-31 20:47:13.288 +00:00','2024-08-31 20:47:13.288 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cc16bb6adb284da5811b9f6c32ad0717$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName JD test - Making a JalShala Plan 2023-01-21T07:44:47.000+0000
Executing (22b2f98f-c38f-4350-890f-c9864e9c99e3): START TRANSACTION;
Executing (f16ab49b-c794-4d5f-af58-3771819549fb): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7702581288ba4392aa69c296166b0717$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'स्वच्छ पानी को पाने की जंग','2019-12-02 10:50:15.000 +00:00','0c193e5f-d189-464b-82cf-443317306d87','2024-08-31 20:47:13.289 +00:00','2024-08-31 20:47:13.289 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7702581288ba4392aa69c296166b0717$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Orientation on Jala Sanjeevini /ಓರಿಯೆಂಟೇಷನ್ ಓನ್ ಜಲ     ಸಂಜೀವಿನೀ/Elected members/ಚುನಾಯಿತ ಸದಸ್ಯರು
Executing (55f572e7-e35d-422a-b850-4ab0c589ce22): START TRANSACTION;
Executing (533669c8-0bb8-4a7e-bec0-fa3e173b279e): COMMIT;
Executing (22b2f98f-c38f-4350-890f-c9864e9c99e3): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'bf9b2448-f718-4224-96d4-06bdb59034a3' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-04-25 07:46:36.000 +00:00' LIMIT 1;
Executing (bc61b4c6-1668-4e25-b299-c31ea60a8504): COMMIT;
topicName Virtual Interactions - Needs and Benefits 2020-11-19T10:12:20.000+0000
Executing (1efbf3a3-3beb-42fe-9b43-05cb3d7af2ca): START TRANSACTION;
Executing (55f572e7-e35d-422a-b850-4ab0c589ce22): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '7dd8cae2-8102-44ca-b042-6a1d51b97504' AND "UserTopic"."name" = 'Taking good photos and making posters' AND "UserTopic"."issuedAt" = '2022-04-05 07:38:37.000 +00:00' LIMIT 1;
Executing (f16ab49b-c794-4d5f-af58-3771819549fb): COMMIT;
Executing (1efbf3a3-3beb-42fe-9b43-05cb3d7af2ca): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f5bda8c8-9b5d-4f02-aefc-e2ecf01d710c' AND "UserTopic"."name" = 'JD test -  Training of Block Trainers for JalDoot Program ' AND "UserTopic"."issuedAt" = '2023-01-19 07:21:39.000 +00:00' LIMIT 1;
Executing (22b2f98f-c38f-4350-890f-c9864e9c99e3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_957e6e37b6184518965e1e57e9cb8178$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-04-25 07:46:36.000 +00:00','bf9b2448-f718-4224-96d4-06bdb59034a3','2024-08-31 20:47:13.294 +00:00','2024-08-31 20:47:13.294 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_957e6e37b6184518965e1e57e9cb8178$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: RK kalluri
Executing (770ada43-c734-45bf-b109-d51a9d7ffb2e): START TRANSACTION;
Executing (1efbf3a3-3beb-42fe-9b43-05cb3d7af2ca): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7da890f13c0f4839bd55a719f2b7508f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD test -  Training of Block Trainers for JalDoot Program ','2023-01-19 07:21:39.000 +00:00','f5bda8c8-9b5d-4f02-aefc-e2ecf01d710c','2024-08-31 20:47:13.296 +00:00','2024-08-31 20:47:13.296 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7da890f13c0f4839bd55a719f2b7508f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (55f572e7-e35d-422a-b850-4ab0c589ce22): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b367afaa62ec403b8ddce0b6bc157ba5$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Taking good photos and making posters','2022-04-05 07:38:37.000 +00:00','7dd8cae2-8102-44ca-b042-6a1d51b97504','2024-08-31 20:47:13.296 +00:00','2024-08-31 20:47:13.296 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b367afaa62ec403b8ddce0b6bc157ba5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Manu Test Topic 2019-12-03T18:09:31+0000
Executing (0a70f638-cfe0-4881-b783-6128415aafcb): START TRANSACTION;
Executing (770ada43-c734-45bf-b109-d51a9d7ffb2e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b7031ba5-8d50-43d4-82db-b63e173db13c' AND "UserTopic"."name" = 'JD test - Making of a block plan' AND "UserTopic"."issuedAt" = '2023-01-27 07:45:51.000 +00:00' LIMIT 1;
Executing (22b2f98f-c38f-4350-890f-c9864e9c99e3): COMMIT;
Executing (770ada43-c734-45bf-b109-d51a9d7ffb2e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e8f263769da940a29c4c38ba26774fa4$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD test - Making of a block plan','2023-01-27 07:45:51.000 +00:00','b7031ba5-8d50-43d4-82db-b63e173db13c','2024-08-31 20:47:13.299 +00:00','2024-08-31 20:47:13.299 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e8f263769da940a29c4c38ba26774fa4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1efbf3a3-3beb-42fe-9b43-05cb3d7af2ca): COMMIT;
Executing (0a70f638-cfe0-4881-b783-6128415aafcb): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '42740f34-6ea7-41e2-be0e-7ea2a846b001' AND "UserTopic"."name" = 'Capacity Building @ Scale - Experiences from FES in Odisha' AND "UserTopic"."issuedAt" = '2021-06-04 11:24:28.000 +00:00' LIMIT 1;
Executing (55f572e7-e35d-422a-b850-4ab0c589ce22): COMMIT;
Executing (770ada43-c734-45bf-b109-d51a9d7ffb2e): COMMIT;
topicName JD test - Monitoring of the Block Plan 2023-01-21T10:28:11.000+0000
Executing (8caa61b0-ef38-41eb-8a1a-0cced5694297): START TRANSACTION;
topicName Planning the Jalshala 2023-04-28T05:58:40.000+0000
Executing (0fb27767-a09c-41a3-9aea-56c95f4451ef): START TRANSACTION;
topicName JD test - Conducting a block trainers TOT 2023-01-27T07:49:09.000+0000
Executing (55aa8214-91a0-4ef6-be78-9c5b4c4c086f): START TRANSACTION;
Executing (8caa61b0-ef38-41eb-8a1a-0cced5694297): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'a7db7bf8-9af9-440d-aab9-ced9b308ead4' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-15 10:05:54.000 +00:00' LIMIT 1;
Executing (0a70f638-cfe0-4881-b783-6128415aafcb): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fdf527a9d3454ecea949afca80bc6cd7$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity Building @ Scale - Experiences from FES in Odisha','2021-06-04 11:24:28.000 +00:00','42740f34-6ea7-41e2-be0e-7ea2a846b001','2024-08-31 20:47:13.304 +00:00','2024-08-31 20:47:13.304 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fdf527a9d3454ecea949afca80bc6cd7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Introduction to Visual Design LL3 2022-03-22T07:25:39.000+0000
Executing (501f06c5-047e-4ea3-8ce4-b071080b90d3): START TRANSACTION;
Executing (55aa8214-91a0-4ef6-be78-9c5b4c4c086f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '867b20fb-b6bd-418d-91c6-aa5ef686e629' AND "UserTopic"."name" = 'CBP Orientation' AND "UserTopic"."issuedAt" = '2020-08-28 10:19:52.000 +00:00' LIMIT 1;
Executing (8caa61b0-ef38-41eb-8a1a-0cced5694297): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8f458f33041b46d581dfd7d4454e5b6c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-05-15 10:05:54.000 +00:00','a7db7bf8-9af9-440d-aab9-ced9b308ead4','2024-08-31 20:47:13.306 +00:00','2024-08-31 20:47:13.306 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8f458f33041b46d581dfd7d4454e5b6c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0fb27767-a09c-41a3-9aea-56c95f4451ef): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '5a4310d0-06b8-4b03-aefd-a36d29cc94b4' AND "UserTrainer"."name" = 'Test run for Assisted Scanning' AND "UserTrainer"."issueDate" = '2020-08-06 10:55:00.000 +00:00' LIMIT 1;
Executing (55aa8214-91a0-4ef6-be78-9c5b4c4c086f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0587949fd1554ec5a089ab2857206349$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'CBP Orientation','2020-08-28 10:19:52.000 +00:00','867b20fb-b6bd-418d-91c6-aa5ef686e629','2024-08-31 20:47:13.307 +00:00','2024-08-31 20:47:13.307 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0587949fd1554ec5a089ab2857206349$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (501f06c5-047e-4ea3-8ce4-b071080b90d3): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'fa1e92ec-093e-4b52-b2df-8f16d10203e2' AND "UserTrainer"."name" = 'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ   ಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs' AND "UserTrainer"."issueDate" = '2022-12-21 12:40:00.000 +00:00' LIMIT 1;
Executing (0a70f638-cfe0-4881-b783-6128415aafcb): COMMIT;
Executing (8caa61b0-ef38-41eb-8a1a-0cced5694297): COMMIT;
Executing (0fb27767-a09c-41a3-9aea-56c95f4451ef): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d685b7b621c847bcb972c349e9b626ac$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Test run for Assisted Scanning','2020-08-06 10:55:00.000 +00:00','5a4310d0-06b8-4b03-aefd-a36d29cc94b4','2024-08-31 20:47:13.310 +00:00','2024-08-31 20:47:13.310 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d685b7b621c847bcb972c349e9b626ac$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Jolly Changmai Kalita 
Executing (7e993a2f-1081-40b9-87d7-78a0b8fd8774): START TRANSACTION;
Executing (501f06c5-047e-4ea3-8ce4-b071080b90d3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3fc09abaf87c4265badbbff8539e96c0$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ   ಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs','2022-12-21 12:40:00.000 +00:00','fa1e92ec-093e-4b52-b2df-8f16d10203e2','2024-08-31 20:47:13.311 +00:00','2024-08-31 20:47:13.311 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3fc09abaf87c4265badbbff8539e96c0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (55aa8214-91a0-4ef6-be78-9c5b4c4c086f): COMMIT;
topicName PDA Updates 2020-10-06T06:27:07.000+0000
Executing (7ce8ad91-4cd4-488e-aab1-a5b9ccb29b42): START TRANSACTION;
Executing (7e993a2f-1081-40b9-87d7-78a0b8fd8774): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c0072a31-91df-48a0-b79e-5d19c7d29d27' AND "UserTopic"."name" = 'Virtual Training Format' AND "UserTopic"."issuedAt" = '2020-10-14 06:56:55.000 +00:00' LIMIT 1;
Executing (0fb27767-a09c-41a3-9aea-56c95f4451ef): COMMIT;
Executing (7e993a2f-1081-40b9-87d7-78a0b8fd8774): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d1335e38568c436db5843559fa3adc98$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Virtual Training Format','2020-10-14 06:56:55.000 +00:00','c0072a31-91df-48a0-b79e-5d19c7d29d27','2024-08-31 20:47:13.314 +00:00','2024-08-31 20:47:13.314 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d1335e38568c436db5843559fa3adc98$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Demo 2021-06-15T05:24:01.000+0000
Executing (962f6e73-392f-433f-9828-b6743b719c59): START TRANSACTION;
Executing (7ce8ad91-4cd4-488e-aab1-a5b9ccb29b42): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2cbf38a3-d533-4451-9b58-f523baba5fe5' AND "UserTopic"."name" = 'Crop Water Budgeting' AND "UserTopic"."issuedAt" = '2020-12-15 10:36:02.000 +00:00' LIMIT 1;
Executing (501f06c5-047e-4ea3-8ce4-b071080b90d3): COMMIT;
Executing (7e993a2f-1081-40b9-87d7-78a0b8fd8774): COMMIT;
Executing (962f6e73-392f-433f-9828-b6743b719c59): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '8610e640-1fe5-43f1-8552-f0964cc48dc4' AND "UserTrainer"."name" = 'ಅಂತರ್ಜಲ ಚೇತನ - ಮಾದರಿ ವಿಷಯ (Antarajala Chetana - Example Topic)' AND "UserTrainer"."issueDate" = '2021-09-02 09:30:00.000 +00:00' LIMIT 1;
Processed user: Satyam Parida
Executing (a07c1282-342f-40eb-bd8d-00c15d0ffe8b): START TRANSACTION;
topicName Virtual Interactions - Needs and Benefits 2020-10-14T05:52:46.000+0000
Executing (a9ccd14c-db3d-45d9-af58-75904beaebdf): START TRANSACTION;
Executing (7ce8ad91-4cd4-488e-aab1-a5b9ccb29b42): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fc23a304c9ab489cb037f405cb052281$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Crop Water Budgeting','2020-12-15 10:36:02.000 +00:00','2cbf38a3-d533-4451-9b58-f523baba5fe5','2024-08-31 20:47:13.319 +00:00','2024-08-31 20:47:13.319 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fc23a304c9ab489cb037f405cb052281$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: J Tulasi Devi
Executing (581ae74a-b991-436c-a16c-40bfaf8ce3c2): START TRANSACTION;
Executing (a9ccd14c-db3d-45d9-af58-75904beaebdf): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5bfd7f81-ec88-422a-9f71-fbc75f3ace63' AND "UserTopic"."name" = 'Community Participation-Why' AND "UserTopic"."issuedAt" = '2021-04-09 06:49:34.000 +00:00' LIMIT 1;
Executing (962f6e73-392f-433f-9828-b6743b719c59): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_02fc37f2dc5846d884ed702e85377758$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'ಅಂತರ್ಜಲ ಚೇತನ - ಮಾದರಿ ವಿಷಯ (Antarajala Chetana - Example Topic)','2021-09-02 09:30:00.000 +00:00','8610e640-1fe5-43f1-8552-f0964cc48dc4','2024-08-31 20:47:13.321 +00:00','2024-08-31 20:47:13.321 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_02fc37f2dc5846d884ed702e85377758$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a07c1282-342f-40eb-bd8d-00c15d0ffe8b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '840282c7-4246-44db-a1f6-d753c1913547' AND "UserTopic"."name" = 'Introduction to Visual Design LL3' AND "UserTopic"."issuedAt" = '2022-03-22 07:25:58.000 +00:00' LIMIT 1;
Executing (a9ccd14c-db3d-45d9-af58-75904beaebdf): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_33484c978cfa4d90ad1fd02d07036a0c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Community Participation-Why','2021-04-09 06:49:34.000 +00:00','5bfd7f81-ec88-422a-9f71-fbc75f3ace63','2024-08-31 20:47:13.323 +00:00','2024-08-31 20:47:13.323 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_33484c978cfa4d90ad1fd02d07036a0c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (581ae74a-b991-436c-a16c-40bfaf8ce3c2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'db52891b-977c-429d-ad2c-9258b81a7ba4' AND "UserTopic"."name" = 'Scripts Review | T1.02 | DG' AND "UserTopic"."issuedAt" = '2020-12-02 11:39:51.000 +00:00' LIMIT 1;
Executing (7ce8ad91-4cd4-488e-aab1-a5b9ccb29b42): COMMIT;
Executing (a9ccd14c-db3d-45d9-af58-75904beaebdf): COMMIT;
Executing (581ae74a-b991-436c-a16c-40bfaf8ce3c2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9c98897dba174f53b8701d7f5575c74c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Scripts Review | T1.02 | DG','2020-12-02 11:39:51.000 +00:00','db52891b-977c-429d-ad2c-9258b81a7ba4','2024-08-31 20:47:13.329 +00:00','2024-08-31 20:47:13.329 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9c98897dba174f53b8701d7f5575c74c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a07c1282-342f-40eb-bd8d-00c15d0ffe8b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a75cd927f8fb4429b1a6e5cab43a8437$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Visual Design LL3','2022-03-22 07:25:58.000 +00:00','840282c7-4246-44db-a1f6-d753c1913547','2024-08-31 20:47:13.331 +00:00','2024-08-31 20:47:13.331 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a75cd927f8fb4429b1a6e5cab43a8437$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (962f6e73-392f-433f-9828-b6743b719c59): COMMIT;
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-01-30T09:07:30.000+0000
Executing (0c3e8f75-364a-4b5d-a0a6-1fd5889392af): START TRANSACTION;
Executing (581ae74a-b991-436c-a16c-40bfaf8ce3c2): COMMIT;
topicName PDA Dash Board checks 2020-12-02T08:57:08.000+0000
Executing (5d4dc26b-9fce-4cca-bd2a-6ad148a4863c): START TRANSACTION;
Executing (0c3e8f75-364a-4b5d-a0a6-1fd5889392af): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'eafa5769-776e-421f-bdce-03326a065f7e' AND "UserTopic"."name" = 'Community Participation-Why' AND "UserTopic"."issuedAt" = '2021-04-09 06:46:51.000 +00:00' LIMIT 1;
topicName PDA Hands on 2021-01-02T06:56:21.000+0000
Executing (dbb1098b-9222-472b-9e57-9e8c60e479fd): START TRANSACTION;
Processed user: Ramakrishna Kalluri
Executing (174d0cbe-ae3f-4fa5-aa76-bdb40a8de56b): START TRANSACTION;
Executing (a07c1282-342f-40eb-bd8d-00c15d0ffe8b): COMMIT;
Executing (0c3e8f75-364a-4b5d-a0a6-1fd5889392af): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cb52162b0fdc4e2980da24c6e9ce64d9$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Community Participation-Why','2021-04-09 06:46:51.000 +00:00','eafa5769-776e-421f-bdce-03326a065f7e','2024-08-31 20:47:13.340 +00:00','2024-08-31 20:47:13.340 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cb52162b0fdc4e2980da24c6e9ce64d9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (dbb1098b-9222-472b-9e57-9e8c60e479fd): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '85bce1bf-2a8b-4862-8a13-80758d68c6e0' AND "UserTopic"."name" = 'Crop Water Budgeting Overview' AND "UserTopic"."issuedAt" = '2020-12-16 07:15:47.000 +00:00' LIMIT 1;
Executing (174d0cbe-ae3f-4fa5-aa76-bdb40a8de56b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c9e258a0-5300-4461-b505-2ac5ff98636e' AND "UserTopic"."name" = 'Data collection and Analysis' AND "UserTopic"."issuedAt" = '2021-01-06 12:40:20.000 +00:00' LIMIT 1;
Executing (5d4dc26b-9fce-4cca-bd2a-6ad148a4863c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'a7c83a7f-e4bd-4fa8-9c2a-914c38352ec0' AND "UserTopic"."name" = 'Introduction to atomised content' AND "UserTopic"."issuedAt" = '2022-02-15 06:38:15.000 +00:00' LIMIT 1;
Executing (0c3e8f75-364a-4b5d-a0a6-1fd5889392af): COMMIT;
Executing (dbb1098b-9222-472b-9e57-9e8c60e479fd): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4069c0326faa4acd8e36b3694cc29f07$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Crop Water Budgeting Overview','2020-12-16 07:15:47.000 +00:00','85bce1bf-2a8b-4862-8a13-80758d68c6e0','2024-08-31 20:47:13.345 +00:00','2024-08-31 20:47:13.345 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4069c0326faa4acd8e36b3694cc29f07$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Introduction to Simplified Functional Grid Format 2022-01-11T07:21:23.000+0000
Executing (2c37b2db-4121-4eed-8821-e5ef4c2df585): START TRANSACTION;
topicName Content Development | T1.01 | DG 2020-11-26T11:45:16.000+0000
Executing (6bf953f1-5cf6-4ba0-9e3d-64020bcc9532): START TRANSACTION;
Executing (174d0cbe-ae3f-4fa5-aa76-bdb40a8de56b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1525695ec47c41f0a535ad85702417e7$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Data collection and Analysis','2021-01-06 12:40:20.000 +00:00','c9e258a0-5300-4461-b505-2ac5ff98636e','2024-08-31 20:47:13.347 +00:00','2024-08-31 20:47:13.347 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1525695ec47c41f0a535ad85702417e7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5d4dc26b-9fce-4cca-bd2a-6ad148a4863c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b8d2cf8073fc4887a8e7ada5fa6282fd$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to atomised content','2022-02-15 06:38:15.000 +00:00','a7c83a7f-e4bd-4fa8-9c2a-914c38352ec0','2024-08-31 20:47:13.348 +00:00','2024-08-31 20:47:13.348 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b8d2cf8073fc4887a8e7ada5fa6282fd$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6bf953f1-5cf6-4ba0-9e3d-64020bcc9532): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '321375b5-ae91-4d01-8378-5eb311e2ff02' AND "UserTopic"."name" = 'Guided Mentoring Format' AND "UserTopic"."issuedAt" = '2020-11-04 12:41:42.000 +00:00' LIMIT 1;
Executing (2c37b2db-4121-4eed-8821-e5ef4c2df585): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8866902d-32f0-4d36-a6d3-eeef2072405c' AND "UserTopic"."name" = 'Wheat Crop Training' AND "UserTopic"."issuedAt" = '2020-12-31 10:15:02.000 +00:00' LIMIT 1;
Executing (dbb1098b-9222-472b-9e57-9e8c60e479fd): COMMIT;
Executing (6bf953f1-5cf6-4ba0-9e3d-64020bcc9532): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9244fc671d0c46979360866594f0777c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Guided Mentoring Format','2020-11-04 12:41:42.000 +00:00','321375b5-ae91-4d01-8378-5eb311e2ff02','2024-08-31 20:47:13.351 +00:00','2024-08-31 20:47:13.351 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9244fc671d0c46979360866594f0777c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (174d0cbe-ae3f-4fa5-aa76-bdb40a8de56b): COMMIT;
Executing (5d4dc26b-9fce-4cca-bd2a-6ad148a4863c): COMMIT;
Processed user: Savan
Executing (bb738837-4d1f-4f28-87f3-a46802e8c4c7): START TRANSACTION;
Executing (2c37b2db-4121-4eed-8821-e5ef4c2df585): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9351ac182e6d46ed82f6686757f332cc$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Wheat Crop Training','2020-12-31 10:15:02.000 +00:00','8866902d-32f0-4d36-a6d3-eeef2072405c','2024-08-31 20:47:13.353 +00:00','2024-08-31 20:47:13.353 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9351ac182e6d46ed82f6686757f332cc$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Orientation on Abhy and PGWM
Executing (9c05fd77-1c6d-44fa-aed2-1ed6febf1417): START TRANSACTION;
Executing (bb738837-4d1f-4f28-87f3-a46802e8c4c7): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '941579b3-5b8d-43eb-88b1-80e87fa6a840' AND "UserTopic"."name" = 'Guided Mentoring Format' AND "UserTopic"."issuedAt" = '2020-11-04 10:39:39.000 +00:00' LIMIT 1;
Executing (6bf953f1-5cf6-4ba0-9e3d-64020bcc9532): COMMIT;
topicName Feedback and next steps LL2 2022-03-08T06:49:15.000+0000
Executing (874708b5-1808-4564-8c71-ab1871710948): START TRANSACTION;
Executing (bb738837-4d1f-4f28-87f3-a46802e8c4c7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0c28b4a008fa40c48946e2e23bd52d93$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Guided Mentoring Format','2020-11-04 10:39:39.000 +00:00','941579b3-5b8d-43eb-88b1-80e87fa6a840','2024-08-31 20:47:13.357 +00:00','2024-08-31 20:47:13.357 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0c28b4a008fa40c48946e2e23bd52d93$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Paramita Roy
Executing (05fe4f80-681b-42f2-bd1a-c705e9a9e228): START TRANSACTION;
Executing (9c05fd77-1c6d-44fa-aed2-1ed6febf1417): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9ca87890-0726-4909-9ebd-92fab6ce4a20' AND "UserTopic"."name" = 'Virtual Interactions - Needs and Benefits' AND "UserTopic"."issuedAt" = '2020-10-14 05:52:44.000 +00:00' LIMIT 1;
Executing (2c37b2db-4121-4eed-8821-e5ef4c2df585): COMMIT;
Executing (bb738837-4d1f-4f28-87f3-a46802e8c4c7): COMMIT;
Executing (05fe4f80-681b-42f2-bd1a-c705e9a9e228): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c919ec69-7f36-4a98-a6e7-a7733764d137' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-01-30 09:06:36.000 +00:00' LIMIT 1;
Executing (874708b5-1808-4564-8c71-ab1871710948): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5db4d93e-0440-4889-aede-7c3540cc5831' AND "UserTopic"."name" = 'Scripts Review | T1.02 | DG' AND "UserTopic"."issuedAt" = '2020-12-02 11:40:38.000 +00:00' LIMIT 1;
topicName Hub Roles for Virtual Interactions 2020-12-10T05:57:42.000+0000
Executing (bdf8c721-f7bc-4cfb-bfe0-61d584b71da1): START TRANSACTION;
Executing (05fe4f80-681b-42f2-bd1a-c705e9a9e228): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5baf485185ee4f0ab3448cc58430a939$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-01-30 09:06:36.000 +00:00','c919ec69-7f36-4a98-a6e7-a7733764d137','2024-08-31 20:47:13.363 +00:00','2024-08-31 20:47:13.363 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5baf485185ee4f0ab3448cc58430a939$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9c05fd77-1c6d-44fa-aed2-1ed6febf1417): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e7400a2d2c904406982f6e511df398df$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Virtual Interactions - Needs and Benefits','2020-10-14 05:52:44.000 +00:00','9ca87890-0726-4909-9ebd-92fab6ce4a20','2024-08-31 20:47:13.364 +00:00','2024-08-31 20:47:13.364 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e7400a2d2c904406982f6e511df398df$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T06:56:38.000+0000
Executing (909bb5a9-8cdc-443e-9e2c-72457d4f2c5d): START TRANSACTION;
Executing (bdf8c721-f7bc-4cfb-bfe0-61d584b71da1): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5a7898e7-5779-4b5b-b345-0e67cd8ea9c2' AND "UserTopic"."name" = 'Introduction to Simplified Functional Grid Format' AND "UserTopic"."issuedAt" = '2022-01-11 07:21:22.000 +00:00' LIMIT 1;
Executing (05fe4f80-681b-42f2-bd1a-c705e9a9e228): COMMIT;
Executing (909bb5a9-8cdc-443e-9e2c-72457d4f2c5d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9c782be5-e423-49f9-8b28-613ccc87fc3a' AND "UserTopic"."name" = 'Introduction to atomised content' AND "UserTopic"."issuedAt" = '2022-02-15 06:24:13.000 +00:00' LIMIT 1;
Executing (874708b5-1808-4564-8c71-ab1871710948): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_10327740ec1e4ca9ab90f6766ff34b66$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Scripts Review | T1.02 | DG','2020-12-02 11:40:38.000 +00:00','5db4d93e-0440-4889-aede-7c3540cc5831','2024-08-31 20:47:13.369 +00:00','2024-08-31 20:47:13.369 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_10327740ec1e4ca9ab90f6766ff34b66$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bdf8c721-f7bc-4cfb-bfe0-61d584b71da1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b5d0ec18ed634dc1992b9f6529b8b324$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Simplified Functional Grid Format','2022-01-11 07:21:22.000 +00:00','5a7898e7-5779-4b5b-b345-0e67cd8ea9c2','2024-08-31 20:47:13.371 +00:00','2024-08-31 20:47:13.371 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b5d0ec18ed634dc1992b9f6529b8b324$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Capacity building of Jaldoots on MGNREGA schemes provisions 2021-01-11T07:37:05.000+0000
Executing (06ce776d-1c92-45e7-850e-1c0869f898d2): START TRANSACTION;
Executing (909bb5a9-8cdc-443e-9e2c-72457d4f2c5d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1fc2c968d56c47b2a01dd7b33bc5d104$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to atomised content','2022-02-15 06:24:13.000 +00:00','9c782be5-e423-49f9-8b28-613ccc87fc3a','2024-08-31 20:47:13.374 +00:00','2024-08-31 20:47:13.374 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1fc2c968d56c47b2a01dd7b33bc5d104$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9c05fd77-1c6d-44fa-aed2-1ed6febf1417): COMMIT;
Executing (bdf8c721-f7bc-4cfb-bfe0-61d584b71da1): COMMIT;
Executing (06ce776d-1c92-45e7-850e-1c0869f898d2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4c86587a-893e-4d75-9881-965d8fdab183' AND "UserTopic"."name" = 'PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra.' AND "UserTopic"."issuedAt" = '2020-12-23 10:06:21.000 +00:00' LIMIT 1;
Executing (874708b5-1808-4564-8c71-ab1871710948): COMMIT;
Processed user: Nrusingh Charan Sutar
Executing (ed2a0234-c36b-427b-a6f7-71eadea3edcb): START TRANSACTION;
topicName Hub Roles for Virtual Interactions 2020-10-14T09:46:33.000+0000
Executing (8287b1c8-0000-45e7-a8cd-fa5bfa88b882): START TRANSACTION;
Executing (909bb5a9-8cdc-443e-9e2c-72457d4f2c5d): COMMIT;
Executing (ed2a0234-c36b-427b-a6f7-71eadea3edcb): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6afb2b3b-3e1c-4e13-9bd9-b1e2e77810c9' AND "UserTopic"."name" = 'Scripts Review | T1.02 | DG' AND "UserTopic"."issuedAt" = '2020-12-02 11:40:35.000 +00:00' LIMIT 1;
Executing (8287b1c8-0000-45e7-a8cd-fa5bfa88b882): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b912e843-b03e-4f84-8133-82016c8dd2a8' AND "UserTopic"."name" = 'Scripts Review | T1.02 | DG' AND "UserTopic"."issuedAt" = '2020-12-02 11:40:32.000 +00:00' LIMIT 1;
Executing (06ce776d-1c92-45e7-850e-1c0869f898d2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e4ea21a51b44482395ad5d44277fce55$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra.','2020-12-23 10:06:21.000 +00:00','4c86587a-893e-4d75-9881-965d8fdab183','2024-08-31 20:47:13.380 +00:00','2024-08-31 20:47:13.380 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e4ea21a51b44482395ad5d44277fce55$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Observations and Feedback | T1.03 | DG 2020-12-10T12:18:05.000+0000
Executing (a5385aaa-1393-4fd4-8647-fdbbc88db7df): START TRANSACTION;
Executing (ed2a0234-c36b-427b-a6f7-71eadea3edcb): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1ccfb00cab854bb09d08edd24c7541ba$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Scripts Review | T1.02 | DG','2020-12-02 11:40:35.000 +00:00','6afb2b3b-3e1c-4e13-9bd9-b1e2e77810c9','2024-08-31 20:47:13.382 +00:00','2024-08-31 20:47:13.382 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1ccfb00cab854bb09d08edd24c7541ba$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8287b1c8-0000-45e7-a8cd-fa5bfa88b882): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e4c400f8cccc492590fccfc318849ea2$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Scripts Review | T1.02 | DG','2020-12-02 11:40:32.000 +00:00','b912e843-b03e-4f84-8133-82016c8dd2a8','2024-08-31 20:47:13.383 +00:00','2024-08-31 20:47:13.383 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e4c400f8cccc492590fccfc318849ea2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Introduction to Learning Experience Framework 2022-01-18T07:46:45.000+0000
Executing (deee72c4-edec-4725-954e-296a34cec32e): START TRANSACTION;
Executing (ed2a0234-c36b-427b-a6f7-71eadea3edcb): COMMIT;
Executing (8287b1c8-0000-45e7-a8cd-fa5bfa88b882): COMMIT;
Executing (a5385aaa-1393-4fd4-8647-fdbbc88db7df): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'ff97766a-e506-49df-9522-8efa994ff324' AND "UserTrainer"."name" = 'CBP Orientation' AND "UserTrainer"."issueDate" = '2020-08-28 11:00:00.000 +00:00' LIMIT 1;
Executing (06ce776d-1c92-45e7-850e-1c0869f898d2): COMMIT;
topicName Observations and Feedback | T1.03 | DG 2020-12-10T12:18:15.000+0000
Executing (035209fe-969e-4bc0-b7e6-8ded09065172): START TRANSACTION;
topicName Observations and Feedback | T1.03 | DG 2020-12-10T12:18:14.000+0000
Executing (1bcd797a-7611-49e3-a312-cc3b82a218ba): START TRANSACTION;
Executing (a5385aaa-1393-4fd4-8647-fdbbc88db7df): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2db4be85b43d4425b6c423e567da0d16$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'CBP Orientation','2020-08-28 11:00:00.000 +00:00','ff97766a-e506-49df-9522-8efa994ff324','2024-08-31 20:47:13.390 +00:00','2024-08-31 20:47:13.390 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2db4be85b43d4425b6c423e567da0d16$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (deee72c4-edec-4725-954e-296a34cec32e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8ed9ff54-4090-4a47-9bfb-443b3dafc139' AND "UserTopic"."name" = 'Recap and potential next steps with the learning experience' AND "UserTopic"."issuedAt" = '2022-02-01 06:45:26.000 +00:00' LIMIT 1;
Executing (035209fe-969e-4bc0-b7e6-8ded09065172): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2e400362-1635-47e4-99c8-72b00dd38b19' AND "UserTopic"."name" = 'CBP Orientation' AND "UserTopic"."issuedAt" = '2020-08-25 06:11:51.000 +00:00' LIMIT 1;
Executing (1bcd797a-7611-49e3-a312-cc3b82a218ba): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9bb07b4d-1f9a-46ff-abff-29ec483b7763' AND "UserTopic"."name" = 'test' AND "UserTopic"."issuedAt" = '2022-02-24 11:24:35.000 +00:00' LIMIT 1;
topicName Data collection and Analysis 2021-01-06T12:34:26.000+0000
Executing (2f7a3454-22e8-489e-bbfe-2a2a5e8f752f): START TRANSACTION;
Executing (035209fe-969e-4bc0-b7e6-8ded09065172): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_492c0f3088304c36b04cbe2f3128b0c2$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'CBP Orientation','2020-08-25 06:11:51.000 +00:00','2e400362-1635-47e4-99c8-72b00dd38b19','2024-08-31 20:47:13.395 +00:00','2024-08-31 20:47:13.395 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_492c0f3088304c36b04cbe2f3128b0c2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1bcd797a-7611-49e3-a312-cc3b82a218ba): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0fea7cfa71bf45b2b0d2467e958be4ab$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'test','2022-02-24 11:24:35.000 +00:00','9bb07b4d-1f9a-46ff-abff-29ec483b7763','2024-08-31 20:47:13.397 +00:00','2024-08-31 20:47:13.397 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0fea7cfa71bf45b2b0d2467e958be4ab$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a5385aaa-1393-4fd4-8647-fdbbc88db7df): COMMIT;
Executing (deee72c4-edec-4725-954e-296a34cec32e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_91e2862effac4b249d92e3cb88c37924$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Recap and potential next steps with the learning experience','2022-02-01 06:45:26.000 +00:00','8ed9ff54-4090-4a47-9bfb-443b3dafc139','2024-08-31 20:47:13.399 +00:00','2024-08-31 20:47:13.399 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_91e2862effac4b249d92e3cb88c37924$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (035209fe-969e-4bc0-b7e6-8ded09065172): COMMIT;
Executing (1bcd797a-7611-49e3-a312-cc3b82a218ba): COMMIT;
trainertopicname Manu Test Topic
Executing (46b832fd-6264-4879-8ae5-697fcf467c80): START TRANSACTION;
Executing (2f7a3454-22e8-489e-bbfe-2a2a5e8f752f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '88acf595-35dd-4ee8-87aa-924166be5859' AND "UserTopic"."name" = 'Site Selection of Desilting work Process of Government Approval and data Collection of its work' AND "UserTopic"."issuedAt" = '2021-02-06 11:51:50.000 +00:00' LIMIT 1;
topicName Water management 2020-09-02T10:19:53.000+0000
Executing (2480f5e8-84fc-436f-8ca7-d5b2c8e100a8): START TRANSACTION;
topicName Test for Content 2022-02-24T11:16:31.000+0000
Executing (2068f3e3-316f-4a8f-8616-1022668f31ec): START TRANSACTION;
Executing (46b832fd-6264-4879-8ae5-697fcf467c80): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f07d7b79-7244-4b9d-92d5-ba1ddcbf4d6f' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-01-30 09:05:34.000 +00:00' LIMIT 1;
Executing (deee72c4-edec-4725-954e-296a34cec32e): COMMIT;
Executing (2480f5e8-84fc-436f-8ca7-d5b2c8e100a8): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8a499587-62a8-4f73-a20d-23cd31ee58f2' AND "UserTopic"."name" = 'PDA - Program App' AND "UserTopic"."issuedAt" = '2019-12-26 11:48:50.000 +00:00' LIMIT 1;
Executing (2068f3e3-316f-4a8f-8616-1022668f31ec): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '025233ee-51b5-443f-af66-4aca4590614d' AND "UserTopic"."name" = 'Hub Roles for Virtual Interactions' AND "UserTopic"."issuedAt" = '2020-12-10 05:56:58.000 +00:00' LIMIT 1;
Executing (46b832fd-6264-4879-8ae5-697fcf467c80): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_917c6a1863434673854ea665595f344c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-01-30 09:05:34.000 +00:00','f07d7b79-7244-4b9d-92d5-ba1ddcbf4d6f','2024-08-31 20:47:13.407 +00:00','2024-08-31 20:47:13.407 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_917c6a1863434673854ea665595f344c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2f7a3454-22e8-489e-bbfe-2a2a5e8f752f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e7697d3f9cb141939e48f3ad21648043$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Site Selection of Desilting work Process of Government Approval and data Collection of its work','2021-02-06 11:51:50.000 +00:00','88acf595-35dd-4ee8-87aa-924166be5859','2024-08-31 20:47:13.408 +00:00','2024-08-31 20:47:13.408 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e7697d3f9cb141939e48f3ad21648043$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2480f5e8-84fc-436f-8ca7-d5b2c8e100a8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9a811922830940679e9ac63ae36be4e1$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Program App','2019-12-26 11:48:50.000 +00:00','8a499587-62a8-4f73-a20d-23cd31ee58f2','2024-08-31 20:47:13.409 +00:00','2024-08-31 20:47:13.409 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9a811922830940679e9ac63ae36be4e1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2068f3e3-316f-4a8f-8616-1022668f31ec): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_dd0a4f634dd6481489ac2ec5fc1ed519$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Hub Roles for Virtual Interactions','2020-12-10 05:56:58.000 +00:00','025233ee-51b5-443f-af66-4aca4590614d','2024-08-31 20:47:13.409 +00:00','2024-08-31 20:47:13.409 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_dd0a4f634dd6481489ac2ec5fc1ed519$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Sankarsan Behera
Executing (95b139d8-6567-4576-b87c-39f0280498a8): START TRANSACTION;
Executing (46b832fd-6264-4879-8ae5-697fcf467c80): COMMIT;
Executing (2f7a3454-22e8-489e-bbfe-2a2a5e8f752f): COMMIT;
Executing (2480f5e8-84fc-436f-8ca7-d5b2c8e100a8): COMMIT;
Executing (95b139d8-6567-4576-b87c-39f0280498a8): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6e95d2e7-e874-4076-9412-17aeeb8ea5c3' AND "UserTopic"."name" = 'Introduction to atomised content' AND "UserTopic"."issuedAt" = '2022-02-15 06:47:55.000 +00:00' LIMIT 1;
Processed user: Harsh Dave
Executing (ecb38dc3-a8b9-40b6-8db1-b1961348969a): START TRANSACTION;
Executing (2068f3e3-316f-4a8f-8616-1022668f31ec): COMMIT;
Processed user: SAJID RAUMA
Executing (28654ee3-9f70-4432-9371-50e949450822): START TRANSACTION;
topicName PDA Hands on 2021-01-02T06:56:35.000+0000
Executing (7c450c0e-5d57-4bb3-9cbb-20bb39ca252d): START TRANSACTION;
Executing (ecb38dc3-a8b9-40b6-8db1-b1961348969a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '891f8b91-199c-4a29-bb5c-59c067279273' AND "UserTopic"."name" = 'Wheat Crop Training' AND "UserTopic"."issuedAt" = '2020-12-31 10:11:42.000 +00:00' LIMIT 1;
Processed user: Subhash Ghosh
Executing (0b2c7124-0f14-4863-8bb0-46cd937d5577): START TRANSACTION;
Executing (28654ee3-9f70-4432-9371-50e949450822): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '07c9dc3e-7f5b-44f2-9e77-db2626100a1f' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-01-30 09:05:50.000 +00:00' LIMIT 1;
Executing (95b139d8-6567-4576-b87c-39f0280498a8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2410221b65ca49daa0b31f0f0cf2241f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to atomised content','2022-02-15 06:47:55.000 +00:00','6e95d2e7-e874-4076-9412-17aeeb8ea5c3','2024-08-31 20:47:13.417 +00:00','2024-08-31 20:47:13.417 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2410221b65ca49daa0b31f0f0cf2241f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ecb38dc3-a8b9-40b6-8db1-b1961348969a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8dbd15ebf765460a9b49b9344ab6f326$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Wheat Crop Training','2020-12-31 10:11:42.000 +00:00','891f8b91-199c-4a29-bb5c-59c067279273','2024-08-31 20:47:13.418 +00:00','2024-08-31 20:47:13.418 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8dbd15ebf765460a9b49b9344ab6f326$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0b2c7124-0f14-4863-8bb0-46cd937d5577): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '15834b56-cfac-4d93-ba91-1dcf7785ad19' AND "UserTopic"."name" = 'Virtual Training Format' AND "UserTopic"."issuedAt" = '2020-10-14 06:57:06.000 +00:00' LIMIT 1;
Executing (28654ee3-9f70-4432-9371-50e949450822): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0e6fe41ef8db443a9ac0d6c036b4077d$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-01-30 09:05:50.000 +00:00','07c9dc3e-7f5b-44f2-9e77-db2626100a1f','2024-08-31 20:47:13.420 +00:00','2024-08-31 20:47:13.420 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0e6fe41ef8db443a9ac0d6c036b4077d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7c450c0e-5d57-4bb3-9cbb-20bb39ca252d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '25b9db1a-07dc-4c73-9ead-a9ab493821fb' AND "UserTopic"."name" = 'Recap and potential next steps with the learning experience' AND "UserTopic"."issuedAt" = '2022-02-01 06:43:50.000 +00:00' LIMIT 1;
Executing (ecb38dc3-a8b9-40b6-8db1-b1961348969a): COMMIT;
Executing (0b2c7124-0f14-4863-8bb0-46cd937d5577): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a73c4e650abf497d95f0e8d7ad0617d2$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Virtual Training Format','2020-10-14 06:57:06.000 +00:00','15834b56-cfac-4d93-ba91-1dcf7785ad19','2024-08-31 20:47:13.422 +00:00','2024-08-31 20:47:13.422 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a73c4e650abf497d95f0e8d7ad0617d2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (95b139d8-6567-4576-b87c-39f0280498a8): COMMIT;
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI PUs Staff 2021-05-05T06:56:49.000+0000
Executing (b9053b4a-9153-48d6-a478-1f4388ce0d16): START TRANSACTION;
Executing (7c450c0e-5d57-4bb3-9cbb-20bb39ca252d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8ff88c428974433aa26fa1b17be8357f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Recap and potential next steps with the learning experience','2022-02-01 06:43:50.000 +00:00','25b9db1a-07dc-4c73-9ead-a9ab493821fb','2024-08-31 20:47:13.424 +00:00','2024-08-31 20:47:13.424 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8ff88c428974433aa26fa1b17be8357f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (28654ee3-9f70-4432-9371-50e949450822): COMMIT;
Executing (b9053b4a-9153-48d6-a478-1f4388ce0d16): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2b80d0a9-7767-4f05-9037-719583d95b5c' AND "UserTopic"."name" = 'PDA Demo Hindi' AND "UserTopic"."issuedAt" = '2021-04-29 15:02:48.000 +00:00' LIMIT 1;
topicName Taking good photos and making posters 2022-04-05T07:37:20.000+0000
Executing (3969b1e6-375c-40f2-b819-52d829e2ddc2): START TRANSACTION;
Executing (0b2c7124-0f14-4863-8bb0-46cd937d5577): COMMIT;
Executing (b9053b4a-9153-48d6-a478-1f4388ce0d16): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3e6f3dce5b444e979abd305168c6bbf9$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo Hindi','2021-04-29 15:02:48.000 +00:00','2b80d0a9-7767-4f05-9037-719583d95b5c','2024-08-31 20:47:13.426 +00:00','2024-08-31 20:47:13.426 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3e6f3dce5b444e979abd305168c6bbf9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3969b1e6-375c-40f2-b819-52d829e2ddc2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '0fcdf556-7144-4bdf-a6b6-005b50b00f14' AND "UserTopic"."name" = 'Introduction to Visual Design LL3' AND "UserTopic"."issuedAt" = '2022-03-22 07:25:14.000 +00:00' LIMIT 1;
topicName Capacity building of Jaldoots on MGNREGA schemes provisions 2021-01-11T07:36:54.000+0000
Executing (a1c2b7b6-6283-4a7f-b8ee-676b0880f6ff): START TRANSACTION;
Executing (7c450c0e-5d57-4bb3-9cbb-20bb39ca252d): COMMIT;
Executing (3969b1e6-375c-40f2-b819-52d829e2ddc2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4b8dc3dcecfc4e17972195076a41db7f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Visual Design LL3','2022-03-22 07:25:14.000 +00:00','0fcdf556-7144-4bdf-a6b6-005b50b00f14','2024-08-31 20:47:13.429 +00:00','2024-08-31 20:47:13.429 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4b8dc3dcecfc4e17972195076a41db7f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a1c2b7b6-6283-4a7f-b8ee-676b0880f6ff): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8ec3b98a-9b06-40e1-9029-f3541fe9a640' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-01-30 09:04:51.000 +00:00' LIMIT 1;
topicName Virtual Interactions - Needs and Benefits 2020-10-14T05:53:30.000+0000
Executing (eef24431-1874-4015-94d9-191bdee2a4d7): START TRANSACTION;
Executing (b9053b4a-9153-48d6-a478-1f4388ce0d16): COMMIT;
Processed user: K K Trivedi
Executing (a96a1d11-d432-46e3-909a-f2385b5291c6): START TRANSACTION;
Executing (a1c2b7b6-6283-4a7f-b8ee-676b0880f6ff): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d9e1e553eace4e04ae6a980e949e17b6$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-01-30 09:04:51.000 +00:00','8ec3b98a-9b06-40e1-9029-f3541fe9a640','2024-08-31 20:47:13.432 +00:00','2024-08-31 20:47:13.432 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d9e1e553eace4e04ae6a980e949e17b6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (eef24431-1874-4015-94d9-191bdee2a4d7): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'efd178d2-ffe6-4fdf-90ac-0df881271fb4' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-01-30 09:06:05.000 +00:00' LIMIT 1;
Executing (3969b1e6-375c-40f2-b819-52d829e2ddc2): COMMIT;
topicName PDA Additional features Tamil 2021-04-29T15:09:13.000+0000
Executing (39345ffc-6c87-4dab-a948-ace8704c8722): START TRANSACTION;
Executing (a96a1d11-d432-46e3-909a-f2385b5291c6): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '805f8115-7fc6-481c-ae59-9a635ed92038' AND "UserTopic"."name" = 'Introduction to atomised content' AND "UserTopic"."issuedAt" = '2022-02-15 06:23:31.000 +00:00' LIMIT 1;
Executing (39345ffc-6c87-4dab-a948-ace8704c8722): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2854f4ff-cf55-4f19-b9a6-f61947bbd907' AND "UserTopic"."name" = 'Introduction to atomised content' AND "UserTopic"."issuedAt" = '2022-02-15 06:25:21.000 +00:00' LIMIT 1;
Executing (eef24431-1874-4015-94d9-191bdee2a4d7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bd3072a3f0f140d68e19571a7a67d806$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-01-30 09:06:05.000 +00:00','efd178d2-ffe6-4fdf-90ac-0df881271fb4','2024-08-31 20:47:13.436 +00:00','2024-08-31 20:47:13.436 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bd3072a3f0f140d68e19571a7a67d806$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Demo 2021-08-27T06:49:07.000+0000
Executing (035b6d07-eea0-4847-8240-ad5858a44927): START TRANSACTION;
Executing (a1c2b7b6-6283-4a7f-b8ee-676b0880f6ff): COMMIT;
Executing (39345ffc-6c87-4dab-a948-ace8704c8722): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_605f5674c2d54285adcdaab918f24199$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to atomised content','2022-02-15 06:25:21.000 +00:00','2854f4ff-cf55-4f19-b9a6-f61947bbd907','2024-08-31 20:47:13.438 +00:00','2024-08-31 20:47:13.438 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_605f5674c2d54285adcdaab918f24199$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (035b6d07-eea0-4847-8240-ad5858a44927): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b791b39b-25d7-4e24-a280-9cd6d4870c90' AND "UserTopic"."name" = 'Community Participation-Why' AND "UserTopic"."issuedAt" = '2021-04-09 06:47:39.000 +00:00' LIMIT 1;
Executing (a96a1d11-d432-46e3-909a-f2385b5291c6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_034dbe2e3883481cbbd5731561420c1e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to atomised content','2022-02-15 06:23:31.000 +00:00','805f8115-7fc6-481c-ae59-9a635ed92038','2024-08-31 20:47:13.439 +00:00','2024-08-31 20:47:13.439 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_034dbe2e3883481cbbd5731561420c1e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (035b6d07-eea0-4847-8240-ad5858a44927): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_836b1fac317346e6bcf60e38acaf9136$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Community Participation-Why','2021-04-09 06:47:39.000 +00:00','b791b39b-25d7-4e24-a280-9cd6d4870c90','2024-08-31 20:47:13.440 +00:00','2024-08-31 20:47:13.440 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_836b1fac317346e6bcf60e38acaf9136$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Capacity building of Jaldoots on MGNREGA schemes provisions 2021-01-11T07:36:50.000+0000
Executing (fc9456ee-1935-4df0-9586-c64a4a270d94): START TRANSACTION;
Executing (eef24431-1874-4015-94d9-191bdee2a4d7): COMMIT;
Executing (fc9456ee-1935-4df0-9586-c64a4a270d94): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '7a99e279-a9dd-48ff-9424-a7c478b238b2' AND "UserTopic"."name" = 'PDA - Program App' AND "UserTopic"."issuedAt" = '2020-04-07 10:49:42.000 +00:00' LIMIT 1;
Executing (39345ffc-6c87-4dab-a948-ace8704c8722): COMMIT;
Executing (a96a1d11-d432-46e3-909a-f2385b5291c6): COMMIT;
topicName Capacity building of Jaldoots on MGNREGA schemes provisions 2021-01-11T07:39:12.000+0000
Executing (36e93bb4-f070-4ff4-81b3-52481dd5451e): START TRANSACTION;
Executing (035b6d07-eea0-4847-8240-ad5858a44927): COMMIT;
Executing (36e93bb4-f070-4ff4-81b3-52481dd5451e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8d96ee1c-383e-4573-84c2-5c4c5cb73b82' AND "UserTopic"."name" = 'Virtual Interactions - Needs and Benefits' AND "UserTopic"."issuedAt" = '2020-11-19 10:12:36.000 +00:00' LIMIT 1;
Executing (fc9456ee-1935-4df0-9586-c64a4a270d94): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6447fa401b3745659631c30719f384ea$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Program App','2020-04-07 10:49:42.000 +00:00','7a99e279-a9dd-48ff-9424-a7c478b238b2','2024-08-31 20:47:13.444 +00:00','2024-08-31 20:47:13.444 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6447fa401b3745659631c30719f384ea$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Tanisha chandra
Executing (b1f80576-1b41-48a7-8a78-4e973bfbc11d): START TRANSACTION;
topicName Introduction to Learning Experience Framework 2022-01-18T07:45:11.000+0000
Executing (c0158ce5-182b-46b6-abf9-408ae0f87bee): START TRANSACTION;
Executing (36e93bb4-f070-4ff4-81b3-52481dd5451e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7b2f7630ab65429e805378e78dca8bbb$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Virtual Interactions - Needs and Benefits','2020-11-19 10:12:36.000 +00:00','8d96ee1c-383e-4573-84c2-5c4c5cb73b82','2024-08-31 20:47:13.447 +00:00','2024-08-31 20:47:13.447 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7b2f7630ab65429e805378e78dca8bbb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b1f80576-1b41-48a7-8a78-4e973bfbc11d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '48cb496f-d8ea-4a2d-ad8f-394c45a57566' AND "UserTopic"."name" = 'PDA - Program App' AND "UserTopic"."issuedAt" = '2020-04-07 10:49:17.000 +00:00' LIMIT 1;
topicName PDA Hands on 2021-01-08T07:14:13.000+0000
Executing (643ee2dc-d226-4b55-b11b-992c1255535d): START TRANSACTION;
Executing (c0158ce5-182b-46b6-abf9-408ae0f87bee): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6beec966-3a66-4621-9ff6-6fd5c20e8787' AND "UserTopic"."name" = 'PDA - Program App' AND "UserTopic"."issuedAt" = '2020-04-07 10:49:34.000 +00:00' LIMIT 1;
Executing (fc9456ee-1935-4df0-9586-c64a4a270d94): COMMIT;
Executing (b1f80576-1b41-48a7-8a78-4e973bfbc11d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_51c45a59a45b4704acf07705f32baf3e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Program App','2020-04-07 10:49:17.000 +00:00','48cb496f-d8ea-4a2d-ad8f-394c45a57566','2024-08-31 20:47:13.450 +00:00','2024-08-31 20:47:13.450 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_51c45a59a45b4704acf07705f32baf3e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (36e93bb4-f070-4ff4-81b3-52481dd5451e): COMMIT;
Executing (643ee2dc-d226-4b55-b11b-992c1255535d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'bf4d2b2b-645e-464d-a4c2-3d3bf682a1d6' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-01-30 09:06:45.000 +00:00' LIMIT 1;
topicName Virtual Interactions - Needs and Benefits 2020-11-04T10:07:28.000+0000
Executing (9876232d-f8a4-4036-8ab9-6d76bfc5bc6d): START TRANSACTION;
Executing (c0158ce5-182b-46b6-abf9-408ae0f87bee): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_53faef2c6dc144f195073f027c150384$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Program App','2020-04-07 10:49:34.000 +00:00','6beec966-3a66-4621-9ff6-6fd5c20e8787','2024-08-31 20:47:13.452 +00:00','2024-08-31 20:47:13.452 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_53faef2c6dc144f195073f027c150384$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Umesh
Executing (9117a7a2-6f0c-4df2-b887-fb8922e0c355): START TRANSACTION;
Executing (9876232d-f8a4-4036-8ab9-6d76bfc5bc6d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'ae945fe6-9a36-4989-8485-0684b9deddec' AND "UserTopic"."name" = 'Recap and potential next steps with the learning experience' AND "UserTopic"."issuedAt" = '2022-02-01 06:43:31.000 +00:00' LIMIT 1;
Executing (643ee2dc-d226-4b55-b11b-992c1255535d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4bd5f7d0035d40149ede17af2d6d0adb$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-01-30 09:06:45.000 +00:00','bf4d2b2b-645e-464d-a4c2-3d3bf682a1d6','2024-08-31 20:47:13.455 +00:00','2024-08-31 20:47:13.455 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4bd5f7d0035d40149ede17af2d6d0adb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b1f80576-1b41-48a7-8a78-4e973bfbc11d): COMMIT;
Executing (9876232d-f8a4-4036-8ab9-6d76bfc5bc6d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_339df1068e7f4b1aa8c4494c02b31908$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Recap and potential next steps with the learning experience','2022-02-01 06:43:31.000 +00:00','ae945fe6-9a36-4989-8485-0684b9deddec','2024-08-31 20:47:13.456 +00:00','2024-08-31 20:47:13.456 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_339df1068e7f4b1aa8c4494c02b31908$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9117a7a2-6f0c-4df2-b887-fb8922e0c355): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '1b150e3f-f854-4a66-9e73-3e8d856706a1' AND "UserTopic"."name" = 'Guided Mentoring Format' AND "UserTopic"."issuedAt" = '2020-12-10 11:37:49.000 +00:00' LIMIT 1;
Executing (c0158ce5-182b-46b6-abf9-408ae0f87bee): COMMIT;
Executing (9876232d-f8a4-4036-8ab9-6d76bfc5bc6d): COMMIT;
Executing (9117a7a2-6f0c-4df2-b887-fb8922e0c355): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8bf96931b65f4253a799a79412274d8b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Guided Mentoring Format','2020-12-10 11:37:49.000 +00:00','1b150e3f-f854-4a66-9e73-3e8d856706a1','2024-08-31 20:47:13.460 +00:00','2024-08-31 20:47:13.460 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8bf96931b65f4253a799a79412274d8b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA - Participant App 2020-03-18T06:49:14+0000
Executing (9d1eba38-0ce5-4f68-a797-c60869086a71): START TRANSACTION;
Executing (643ee2dc-d226-4b55-b11b-992c1255535d): COMMIT;
Processed user: Saumya 
Executing (d7afe871-673e-4917-82bc-b58cc61a7096): START TRANSACTION;
Executing (9d1eba38-0ce5-4f68-a797-c60869086a71): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c5d35819-2105-4cef-8c0a-af367a875971' AND "UserTopic"."name" = 'PDA Updates' AND "UserTopic"."issuedAt" = '2020-10-06 06:26:41.000 +00:00' LIMIT 1;
topicName PDA - Participant App 2020-03-18T06:48:40+0000
Executing (9c84497d-df30-4b5b-8a5d-b151db20c1da): START TRANSACTION;
Executing (d7afe871-673e-4917-82bc-b58cc61a7096): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '387aedcd-c84e-409b-8067-b1d0e5444975' AND "UserTopic"."name" = 'Content Development | T1.01 | DG' AND "UserTopic"."issuedAt" = '2020-11-26 11:45:16.000 +00:00' LIMIT 1;
Processed user: Deviben Rabari
Executing (27650aeb-6289-4391-b235-f8c950c1710d): START TRANSACTION;
Executing (9117a7a2-6f0c-4df2-b887-fb8922e0c355): COMMIT;
Executing (d7afe871-673e-4917-82bc-b58cc61a7096): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_38c3e37e45de42ddaf57aad77bd6613c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Content Development | T1.01 | DG','2020-11-26 11:45:16.000 +00:00','387aedcd-c84e-409b-8067-b1d0e5444975','2024-08-31 20:47:13.466 +00:00','2024-08-31 20:47:13.466 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_38c3e37e45de42ddaf57aad77bd6613c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (27650aeb-6289-4391-b235-f8c950c1710d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '971f2670-d929-4a00-a697-f5e19fa95fff' AND "UserTopic"."name" = 'Data collection and Analysis' AND "UserTopic"."issuedAt" = '2021-01-06 12:49:05.000 +00:00' LIMIT 1;
Executing (9c84497d-df30-4b5b-8a5d-b151db20c1da): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '60c6a9c3-268e-4b5c-9939-d0efdcaa04cb' AND "UserTopic"."name" = 'Data collection and Monitoring' AND "UserTopic"."issuedAt" = '2021-01-06 07:53:06.000 +00:00' LIMIT 1;
Executing (9d1eba38-0ce5-4f68-a797-c60869086a71): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0e603c4ce88d4e3bbfd7d11d15816808$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Updates','2020-10-06 06:26:41.000 +00:00','c5d35819-2105-4cef-8c0a-af367a875971','2024-08-31 20:47:13.469 +00:00','2024-08-31 20:47:13.469 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0e603c4ce88d4e3bbfd7d11d15816808$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d7afe871-673e-4917-82bc-b58cc61a7096): COMMIT;
Executing (27650aeb-6289-4391-b235-f8c950c1710d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1cdcfa97eca04e3c90fbdbaac4b2d390$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Data collection and Analysis','2021-01-06 12:49:05.000 +00:00','971f2670-d929-4a00-a697-f5e19fa95fff','2024-08-31 20:47:13.470 +00:00','2024-08-31 20:47:13.470 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1cdcfa97eca04e3c90fbdbaac4b2d390$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9c84497d-df30-4b5b-8a5d-b151db20c1da): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6ae6d820be1c4dd0937122903926a13e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Data collection and Monitoring','2021-01-06 07:53:06.000 +00:00','60c6a9c3-268e-4b5c-9939-d0efdcaa04cb','2024-08-31 20:47:13.471 +00:00','2024-08-31 20:47:13.471 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6ae6d820be1c4dd0937122903926a13e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Codes instead of Scans 2021-02-04T06:06:15.000+0000
Executing (ca1a9bda-071d-4aa3-bb54-224bce465c34): START TRANSACTION;
topicName PDA Updates 2020-10-06T06:26:45.000+0000
Executing (9ea41f0c-6683-49f2-8862-0a0505172108): START TRANSACTION;
Executing (9d1eba38-0ce5-4f68-a797-c60869086a71): COMMIT;
Executing (9ea41f0c-6683-49f2-8862-0a0505172108): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '3a089d0b-0cea-42c8-a60a-dd9fb54e25d4' AND "UserTopic"."name" = 'Community Participation-Why' AND "UserTopic"."issuedAt" = '2021-04-09 06:47:29.000 +00:00' LIMIT 1;
Executing (ca1a9bda-071d-4aa3-bb54-224bce465c34): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f5c71709-8bfc-4fe9-a633-559aeff445e6' AND "UserTopic"."name" = 'Crop Water Budgeting Overview' AND "UserTopic"."issuedAt" = '2020-12-16 07:15:56.000 +00:00' LIMIT 1;
Executing (27650aeb-6289-4391-b235-f8c950c1710d): COMMIT;
Executing (9ea41f0c-6683-49f2-8862-0a0505172108): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c360fb4c4f2c4603bc9a41f7abc27913$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Community Participation-Why','2021-04-09 06:47:29.000 +00:00','3a089d0b-0cea-42c8-a60a-dd9fb54e25d4','2024-08-31 20:47:13.475 +00:00','2024-08-31 20:47:13.475 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c360fb4c4f2c4603bc9a41f7abc27913$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9c84497d-df30-4b5b-8a5d-b151db20c1da): COMMIT;
topicName PDA Demo and Deployment Training for Trainers | ACT 2020-12-11T12:41:35.000+0000
Executing (faf35cde-b675-47f8-b968-4847f32f1911): START TRANSACTION;
topicName Data collection and Analysis 2021-01-06T12:49:11.000+0000
Executing (b26c40c3-d435-47db-a996-d335742a7724): START TRANSACTION;
Executing (ca1a9bda-071d-4aa3-bb54-224bce465c34): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e2fe83ebb9374c4bb3afcd275d2d0c48$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Crop Water Budgeting Overview','2020-12-16 07:15:56.000 +00:00','f5c71709-8bfc-4fe9-a633-559aeff445e6','2024-08-31 20:47:13.479 +00:00','2024-08-31 20:47:13.479 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e2fe83ebb9374c4bb3afcd275d2d0c48$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Crop Water Budgeting Overview 2020-12-16T09:07:18.000+0000
Executing (3c62071e-fc33-41ee-b0da-412ba1d99839): START TRANSACTION;
Executing (b26c40c3-d435-47db-a996-d335742a7724): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f8ac18cb-5476-4655-b1b7-6459e8047e4d' AND "UserTopic"."name" = 'Community Participation-Why' AND "UserTopic"."issuedAt" = '2021-04-09 06:32:01.000 +00:00' LIMIT 1;
Executing (faf35cde-b675-47f8-b968-4847f32f1911): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '441fc2a7-b992-46e0-951f-2a58ae3bdf32' AND "UserTopic"."name" = 'PDA Hands on' AND "UserTopic"."issuedAt" = '2021-01-08 07:51:10.000 +00:00' LIMIT 1;
Executing (9ea41f0c-6683-49f2-8862-0a0505172108): COMMIT;
Executing (b26c40c3-d435-47db-a996-d335742a7724): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_626d768f45b84e73a414a02d7bddb428$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Community Participation-Why','2021-04-09 06:32:01.000 +00:00','f8ac18cb-5476-4655-b1b7-6459e8047e4d','2024-08-31 20:47:13.484 +00:00','2024-08-31 20:47:13.484 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_626d768f45b84e73a414a02d7bddb428$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (faf35cde-b675-47f8-b968-4847f32f1911): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_348b2c895d1749e39c185db67a01dd43$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Hands on','2021-01-08 07:51:10.000 +00:00','441fc2a7-b992-46e0-951f-2a58ae3bdf32','2024-08-31 20:47:13.486 +00:00','2024-08-31 20:47:13.486 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_348b2c895d1749e39c185db67a01dd43$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3c62071e-fc33-41ee-b0da-412ba1d99839): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'aa8b852d-d69b-4341-a0fa-b8926901b4e9' AND "UserTopic"."name" = 'PDA - Program App' AND "UserTopic"."issuedAt" = '2020-04-07 10:49:28.000 +00:00' LIMIT 1;
Executing (ca1a9bda-071d-4aa3-bb54-224bce465c34): COMMIT;
Executing (b26c40c3-d435-47db-a996-d335742a7724): COMMIT;
Executing (faf35cde-b675-47f8-b968-4847f32f1911): COMMIT;
Executing (3c62071e-fc33-41ee-b0da-412ba1d99839): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6e6ac898aff340429c44038fbc410c84$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Program App','2020-04-07 10:49:28.000 +00:00','aa8b852d-d69b-4341-a0fa-b8926901b4e9','2024-08-31 20:47:13.490 +00:00','2024-08-31 20:47:13.490 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6e6ac898aff340429c44038fbc410c84$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Hands on 2021-01-08T07:14:07.000+0000
Executing (f1f8e978-3125-4a07-a628-6e4fc4029b38): START TRANSACTION;
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-01-30T09:11:08.000+0000
Executing (16298c4c-65c9-47fe-8bce-fd791ddbb297): START TRANSACTION;
topicName Scripts Review | T1.02 | DG 2020-12-02T11:39:04.000+0000
Executing (05435e71-7e28-4884-819b-c7574ae9f29c): START TRANSACTION;
trainertopicname Orientation on Abhy and PGWM - II
Executing (1ace30e9-0e94-42ec-bbc3-a498b27a12bb): START TRANSACTION;
Executing (16298c4c-65c9-47fe-8bce-fd791ddbb297): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c37080b4-1d4c-4a2c-98fd-8c7d6b78e36a' AND "UserTopic"."name" = 'Jaldoots capacity building on Geo-hydrology' AND "UserTopic"."issuedAt" = '2021-01-08 16:47:53.000 +00:00' LIMIT 1;
Executing (05435e71-7e28-4884-819b-c7574ae9f29c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6db52b87-7d08-4b7a-98da-0ab423f15330' AND "UserTopic"."name" = 'Community Participation-Why' AND "UserTopic"."issuedAt" = '2021-04-09 06:46:26.000 +00:00' LIMIT 1;
Executing (f1f8e978-3125-4a07-a628-6e4fc4029b38): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'cf25e048-3020-4503-a358-dd9be7c7c117' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 06:55:16.000 +00:00' LIMIT 1;
Executing (16298c4c-65c9-47fe-8bce-fd791ddbb297): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_73fb5e3be4c843d59c12978d968528bb$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Jaldoots capacity building on Geo-hydrology','2021-01-08 16:47:53.000 +00:00','c37080b4-1d4c-4a2c-98fd-8c7d6b78e36a','2024-08-31 20:47:13.495 +00:00','2024-08-31 20:47:13.495 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_73fb5e3be4c843d59c12978d968528bb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (05435e71-7e28-4884-819b-c7574ae9f29c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_845582d4343e4ea1890375cdbe2bd0d0$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Community Participation-Why','2021-04-09 06:46:26.000 +00:00','6db52b87-7d08-4b7a-98da-0ab423f15330','2024-08-31 20:47:13.496 +00:00','2024-08-31 20:47:13.496 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_845582d4343e4ea1890375cdbe2bd0d0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3c62071e-fc33-41ee-b0da-412ba1d99839): COMMIT;
Executing (1ace30e9-0e94-42ec-bbc3-a498b27a12bb): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f15c3598-11e2-4c1f-8cda-d714a5c36867' AND "UserTopic"."name" = 'Capacity Building @ Scale - Experiences from FES in Odisha' AND "UserTopic"."issuedAt" = '2021-06-04 11:23:52.000 +00:00' LIMIT 1;
Executing (16298c4c-65c9-47fe-8bce-fd791ddbb297): COMMIT;
Executing (05435e71-7e28-4884-819b-c7574ae9f29c): COMMIT;
topicName PDA - Participant App 2020-03-18T06:49:10+0000
Executing (e8f173a3-c0f1-48a1-aa51-1d5273a32b06): START TRANSACTION;
Executing (f1f8e978-3125-4a07-a628-6e4fc4029b38): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bde79675538640bd91b711ac928f8766$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 06:55:16.000 +00:00','cf25e048-3020-4503-a358-dd9be7c7c117','2024-08-31 20:47:13.503 +00:00','2024-08-31 20:47:13.503 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bde79675538640bd91b711ac928f8766$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Capacity building of Jaldoots on MGNREGA schemes provisions 2021-01-11T07:37:19.000+0000
Executing (a6825f1d-1bab-4ba1-8d4b-135a52a1a422): START TRANSACTION;
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-01-30T09:11:52.000+0000
Executing (bb398e32-8159-46bd-91e6-5aa2ebea5a74): START TRANSACTION;
Executing (e8f173a3-c0f1-48a1-aa51-1d5273a32b06): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '561f2614-a9a4-4fea-8f74-fd79e0a2854a' AND "UserTopic"."name" = 'Community Participation-Why' AND "UserTopic"."issuedAt" = '2021-04-09 06:51:59.000 +00:00' LIMIT 1;
Executing (1ace30e9-0e94-42ec-bbc3-a498b27a12bb): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c5892a5269a5414d906c604fa365426f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity Building @ Scale - Experiences from FES in Odisha','2021-06-04 11:23:52.000 +00:00','f15c3598-11e2-4c1f-8cda-d714a5c36867','2024-08-31 20:47:13.505 +00:00','2024-08-31 20:47:13.505 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c5892a5269a5414d906c604fa365426f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a6825f1d-1bab-4ba1-8d4b-135a52a1a422): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8015b555-310f-4896-be19-6801c9d16a40' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-01-30 09:07:01.000 +00:00' LIMIT 1;
Executing (bb398e32-8159-46bd-91e6-5aa2ebea5a74): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '534ec60b-0deb-41a6-97f8-2b5477f9c3a3' AND "UserTopic"."name" = 'PDA - Trainer App' AND "UserTopic"."issuedAt" = '2019-12-05 07:25:57.000 +00:00' LIMIT 1;
Executing (e8f173a3-c0f1-48a1-aa51-1d5273a32b06): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_48ad69e7bec748559d2e52b7829ae375$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Community Participation-Why','2021-04-09 06:51:59.000 +00:00','561f2614-a9a4-4fea-8f74-fd79e0a2854a','2024-08-31 20:47:13.507 +00:00','2024-08-31 20:47:13.507 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_48ad69e7bec748559d2e52b7829ae375$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f1f8e978-3125-4a07-a628-6e4fc4029b38): COMMIT;
Executing (a6825f1d-1bab-4ba1-8d4b-135a52a1a422): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5cec3b0c26564baa80be6228ee807645$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-01-30 09:07:01.000 +00:00','8015b555-310f-4896-be19-6801c9d16a40','2024-08-31 20:47:13.509 +00:00','2024-08-31 20:47:13.509 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5cec3b0c26564baa80be6228ee807645$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bb398e32-8159-46bd-91e6-5aa2ebea5a74): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e107e5edcf3046b6bcf86913353be940$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Trainer App','2019-12-05 07:25:57.000 +00:00','534ec60b-0deb-41a6-97f8-2b5477f9c3a3','2024-08-31 20:47:13.509 +00:00','2024-08-31 20:47:13.509 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e107e5edcf3046b6bcf86913353be940$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1ace30e9-0e94-42ec-bbc3-a498b27a12bb): COMMIT;
Processed user: Thakor gandaji
Executing (8b028e59-4251-4a2d-bc6d-04257688f5eb): START TRANSACTION;
Executing (e8f173a3-c0f1-48a1-aa51-1d5273a32b06): COMMIT;
Executing (8b028e59-4251-4a2d-bc6d-04257688f5eb): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '978c03c9-6857-455f-b955-129c9f5d70e9' AND "UserTopic"."name" = 'Recap and potential next steps with the learning experience' AND "UserTopic"."issuedAt" = '2022-02-01 06:44:15.000 +00:00' LIMIT 1;
Executing (a6825f1d-1bab-4ba1-8d4b-135a52a1a422): COMMIT;
Processed user: Jay prakash singh
Executing (47c5f40a-f2a9-4da5-b0b1-8126be739295): START TRANSACTION;
Executing (bb398e32-8159-46bd-91e6-5aa2ebea5a74): COMMIT;
Executing (8b028e59-4251-4a2d-bc6d-04257688f5eb): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8b06c34454534bda8125f1954ac65e76$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Recap and potential next steps with the learning experience','2022-02-01 06:44:15.000 +00:00','978c03c9-6857-455f-b955-129c9f5d70e9','2024-08-31 20:47:13.514 +00:00','2024-08-31 20:47:13.514 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8b06c34454534bda8125f1954ac65e76$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Capacity building of Jaldoots on MGNREGA schemes provisions 2021-01-11T07:37:06.000+0000
Executing (f95fbea4-c581-4195-a40a-e17327caf55f): START TRANSACTION;
Executing (47c5f40a-f2a9-4da5-b0b1-8126be739295): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e91cf5ba-cf27-4a89-8cec-dc7423a1fac5' AND "UserTopic"."name" = 'Data collection and Analysis' AND "UserTopic"."issuedAt" = '2021-01-06 12:38:36.000 +00:00' LIMIT 1;
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-01-30T09:07:29.000+0000
Executing (8ef5df03-a5a7-4ee6-ae08-0c3ff9be39f0): START TRANSACTION;
Executing (f95fbea4-c581-4195-a40a-e17327caf55f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '623772f6-e951-4704-ad07-d8e1b852bee3' AND "UserTopic"."name" = 'Content Development | T1.01 | DG' AND "UserTopic"."issuedAt" = '2020-11-26 11:45:07.000 +00:00' LIMIT 1;
topicName ಅಟಲ್ ಭೂಜಲ್ ಯೋಜನೆಯ ಅವಲೋಕನ 2021-05-25T11:26:31.000+0000
Executing (36eb30b3-9beb-45f0-85ca-e9ec31c1fa3a): START TRANSACTION;
Executing (8b028e59-4251-4a2d-bc6d-04257688f5eb): COMMIT;
Executing (47c5f40a-f2a9-4da5-b0b1-8126be739295): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9a6d2c2d1e9347d3b352339165d0c66b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Data collection and Analysis','2021-01-06 12:38:36.000 +00:00','e91cf5ba-cf27-4a89-8cec-dc7423a1fac5','2024-08-31 20:47:13.519 +00:00','2024-08-31 20:47:13.519 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9a6d2c2d1e9347d3b352339165d0c66b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8ef5df03-a5a7-4ee6-ae08-0c3ff9be39f0): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b5796159-916b-4366-8cda-b3bc91f214ec' AND "UserTopic"."name" = 'PDA Refresher Training for ACT and DSC' AND "UserTopic"."issuedAt" = '2021-10-07 11:59:16.000 +00:00' LIMIT 1;
topicName Introduction to Simplified Functional Grid Format 2022-01-11T07:21:16.000+0000
Executing (98172904-c7c3-4915-a569-0d70b0c073b5): START TRANSACTION;
Executing (f95fbea4-c581-4195-a40a-e17327caf55f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_15802b2215c94363a5d07819727f771f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Content Development | T1.01 | DG','2020-11-26 11:45:07.000 +00:00','623772f6-e951-4704-ad07-d8e1b852bee3','2024-08-31 20:47:13.522 +00:00','2024-08-31 20:47:13.522 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_15802b2215c94363a5d07819727f771f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (36eb30b3-9beb-45f0-85ca-e9ec31c1fa3a): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '7819afc7-9754-4b53-976c-722417249f0f' AND "UserTrainer"."name" = 'PDA - Assisted Scan' AND "UserTrainer"."issueDate" = '2021-03-08 08:12:00.000 +00:00' LIMIT 1;
Executing (98172904-c7c3-4915-a569-0d70b0c073b5): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '249f141b-3fd0-4d6b-8fdb-c68de7aca819' AND "UserTopic"."name" = 'Scripts Review | T1.02 | DG' AND "UserTopic"."issuedAt" = '2020-12-02 11:39:06.000 +00:00' LIMIT 1;
Executing (8ef5df03-a5a7-4ee6-ae08-0c3ff9be39f0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ff6cbe8423894d2ead0dc80648d18e16$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Refresher Training for ACT and DSC','2021-10-07 11:59:16.000 +00:00','b5796159-916b-4366-8cda-b3bc91f214ec','2024-08-31 20:47:13.526 +00:00','2024-08-31 20:47:13.526 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ff6cbe8423894d2ead0dc80648d18e16$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (47c5f40a-f2a9-4da5-b0b1-8126be739295): COMMIT;
Executing (98172904-c7c3-4915-a569-0d70b0c073b5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7925695977494fc295b37a12a58a4dd5$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Scripts Review | T1.02 | DG','2020-12-02 11:39:06.000 +00:00','249f141b-3fd0-4d6b-8fdb-c68de7aca819','2024-08-31 20:47:13.528 +00:00','2024-08-31 20:47:13.528 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7925695977494fc295b37a12a58a4dd5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (36eb30b3-9beb-45f0-85ca-e9ec31c1fa3a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_66d9f7ea575c47ba949fd035a62bfda6$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Assisted Scan','2021-03-08 08:12:00.000 +00:00','7819afc7-9754-4b53-976c-722417249f0f','2024-08-31 20:47:13.530 +00:00','2024-08-31 20:47:13.530 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_66d9f7ea575c47ba949fd035a62bfda6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f95fbea4-c581-4195-a40a-e17327caf55f): COMMIT;
Executing (98172904-c7c3-4915-a569-0d70b0c073b5): COMMIT;
Executing (8ef5df03-a5a7-4ee6-ae08-0c3ff9be39f0): COMMIT;
topicName Crop Water Budgeting Overview 2020-12-16T07:23:50.000+0000
Executing (099a402a-518f-4f6f-8943-1492f23613bb): START TRANSACTION;
topicName PDA Demo and Deployment Training | ACT 2020-12-11T13:54:18.000+0000
Executing (badda5a2-3842-41e6-b28e-1fac2ef2f206): START TRANSACTION;
topicName PDA Dashboard Demo 2021-11-26T05:29:40.000+0000
Executing (0f55473c-455f-468c-8119-4d195b97b9ea): START TRANSACTION;
Executing (36eb30b3-9beb-45f0-85ca-e9ec31c1fa3a): COMMIT;
topicName Scripts Review | T1.02 | DG 2020-12-02T11:39:07.000+0000
Executing (39206082-b978-4275-86f6-686226f2791d): START TRANSACTION;
Executing (badda5a2-3842-41e6-b28e-1fac2ef2f206): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'eabded96-d1c0-4ec9-a932-4b57b466a34c' AND "UserTopic"."name" = 'Recap and potential next steps with the learning experience' AND "UserTopic"."issuedAt" = '2022-02-01 07:29:51.000 +00:00' LIMIT 1;
Executing (0f55473c-455f-468c-8119-4d195b97b9ea): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e84e38c5-38bc-47e9-b5f1-a6c47d653c1e' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-01-30 09:08:32.000 +00:00' LIMIT 1;
Processed user: Anupriya Banerjee
Executing (a56115f1-c357-4b05-8ddd-9d064be8bb80): START TRANSACTION;
Executing (099a402a-518f-4f6f-8943-1492f23613bb): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'da44a0db-c91c-4437-8604-8bd05e2703dc' AND "UserTopic"."name" = 'Crop Water Budgeting Overview' AND "UserTopic"."issuedAt" = '2020-12-16 07:15:49.000 +00:00' LIMIT 1;
Executing (badda5a2-3842-41e6-b28e-1fac2ef2f206): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d3c9eb943e24461193d23569048687e8$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Recap and potential next steps with the learning experience','2022-02-01 07:29:51.000 +00:00','eabded96-d1c0-4ec9-a932-4b57b466a34c','2024-08-31 20:47:13.541 +00:00','2024-08-31 20:47:13.541 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d3c9eb943e24461193d23569048687e8$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0f55473c-455f-468c-8119-4d195b97b9ea): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9f629e6c49d34da8bf708f2cbee84449$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-01-30 09:08:32.000 +00:00','e84e38c5-38bc-47e9-b5f1-a6c47d653c1e','2024-08-31 20:47:13.543 +00:00','2024-08-31 20:47:13.543 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9f629e6c49d34da8bf708f2cbee84449$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a56115f1-c357-4b05-8ddd-9d064be8bb80): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '04512cf0-6175-4c6f-a757-a792934cc3ae' AND "UserTopic"."name" = 'Introduction to Simplified Functional Grid Format' AND "UserTopic"."issuedAt" = '2022-01-11 07:21:23.000 +00:00' LIMIT 1;
Executing (39206082-b978-4275-86f6-686226f2791d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'fd95ee30-3ab4-4c79-a54d-225162900383' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-01-30 09:06:33.000 +00:00' LIMIT 1;
Executing (badda5a2-3842-41e6-b28e-1fac2ef2f206): COMMIT;
Executing (0f55473c-455f-468c-8119-4d195b97b9ea): COMMIT;
Executing (a56115f1-c357-4b05-8ddd-9d064be8bb80): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cc3b3c2158b84963af20d075c505444b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Simplified Functional Grid Format','2022-01-11 07:21:23.000 +00:00','04512cf0-6175-4c6f-a757-a792934cc3ae','2024-08-31 20:47:13.548 +00:00','2024-08-31 20:47:13.548 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cc3b3c2158b84963af20d075c505444b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (099a402a-518f-4f6f-8943-1492f23613bb): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_463f998c62ee47ee8913d90b371c4809$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Crop Water Budgeting Overview','2020-12-16 07:15:49.000 +00:00','da44a0db-c91c-4437-8604-8bd05e2703dc','2024-08-31 20:47:13.550 +00:00','2024-08-31 20:47:13.550 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_463f998c62ee47ee8913d90b371c4809$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Introduction to Simplified Functional Grid Format 2022-01-11T07:28:55.000+0000
Executing (54e788f2-3afc-4665-ac1a-bfe6224dd5c4): START TRANSACTION;
topicName Capacity building of Jaldoots on MGNREGA schemes provisions 2021-01-11T07:56:59.000+0000
Executing (ddf56996-1ea9-4a66-adcb-8f5db08a364e): START TRANSACTION;
Executing (39206082-b978-4275-86f6-686226f2791d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f09f49e3fb2e464ab063e6654ec53c5b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-01-30 09:06:33.000 +00:00','fd95ee30-3ab4-4c79-a54d-225162900383','2024-08-31 20:47:13.552 +00:00','2024-08-31 20:47:13.552 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f09f49e3fb2e464ab063e6654ec53c5b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (54e788f2-3afc-4665-ac1a-bfe6224dd5c4): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8534ca90-db07-4871-9011-4d41455f192c' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-01-30 09:05:00.000 +00:00' LIMIT 1;
Executing (ddf56996-1ea9-4a66-adcb-8f5db08a364e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e6afff30-727b-4d6a-9a0f-a21ce2ac628c' AND "UserTopic"."name" = 'Introduction to Visual Design LL3' AND "UserTopic"."issuedAt" = '2022-03-22 07:40:35.000 +00:00' LIMIT 1;
Executing (a56115f1-c357-4b05-8ddd-9d064be8bb80): COMMIT;
Executing (099a402a-518f-4f6f-8943-1492f23613bb): COMMIT;
Executing (54e788f2-3afc-4665-ac1a-bfe6224dd5c4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b5026624631d47ff8c11b9d119589a2f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-01-30 09:05:00.000 +00:00','8534ca90-db07-4871-9011-4d41455f192c','2024-08-31 20:47:13.555 +00:00','2024-08-31 20:47:13.555 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b5026624631d47ff8c11b9d119589a2f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ddf56996-1ea9-4a66-adcb-8f5db08a364e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d623907377f449c7a78caf9a6894aea7$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Visual Design LL3','2022-03-22 07:40:35.000 +00:00','e6afff30-727b-4d6a-9a0f-a21ce2ac628c','2024-08-31 20:47:13.557 +00:00','2024-08-31 20:47:13.557 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d623907377f449c7a78caf9a6894aea7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (39206082-b978-4275-86f6-686226f2791d): COMMIT;
Executing (54e788f2-3afc-4665-ac1a-bfe6224dd5c4): COMMIT;
Processed user: Pintu Kumar Gupta
Executing (078bc3c5-d044-472b-a70c-595523040e80): START TRANSACTION;
Processed user: Kanika Pokhariya
Executing (25cdde78-b115-4262-8236-9246c25b902d): START TRANSACTION;
topicName Capacity building of Jaldoots on MGNREGA schemes provisions 2021-01-11T07:36:48.000+0000
Executing (d1af9904-a0b0-4aa0-b422-3bad9cc6090f): START TRANSACTION;
Executing (078bc3c5-d044-472b-a70c-595523040e80): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '9c993b60-1289-4c9c-a4cc-5b34e3a4c330' AND "UserTrainer"."name" = 'भूजलाची ओळख व भूजल व्यवस्थापनाची गरज | Introduction to groundwater -Need for GW management' AND "UserTrainer"."issueDate" = '2021-08-30 14:30:00.000 +00:00' LIMIT 1;
Executing (ddf56996-1ea9-4a66-adcb-8f5db08a364e): COMMIT;
topicName Capacity building of Jaldoots on MGNREGA schemes provisions 2021-01-11T07:39:28.000+0000
Executing (3eba663c-41c3-4830-9d2b-7a62bebf48f5): START TRANSACTION;
Executing (d1af9904-a0b0-4aa0-b422-3bad9cc6090f): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'a342759f-5fbb-42dd-804b-f8875e53362f' AND "UserTrainer"."name" = 'PDA mock session - Churu' AND "UserTrainer"."issueDate" = '2020-12-18 15:25:00.000 +00:00' LIMIT 1;
Executing (078bc3c5-d044-472b-a70c-595523040e80): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_75620dac0acc4b56b0e09cf8f341d174$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'भूजलाची ओळख व भूजल व्यवस्थापनाची गरज | Introduction to groundwater -Need for GW management','2021-08-30 14:30:00.000 +00:00','9c993b60-1289-4c9c-a4cc-5b34e3a4c330','2024-08-31 20:47:13.566 +00:00','2024-08-31 20:47:13.566 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_75620dac0acc4b56b0e09cf8f341d174$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Feedback and next steps LL2 2022-03-08T07:10:43.000+0000
Executing (798f7c50-205b-4da3-873d-c1f90d487481): START TRANSACTION;
Executing (25cdde78-b115-4262-8236-9246c25b902d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e97fd0ba-3afc-46e6-a51a-d46194af9fe2' AND "UserTopic"."name" = 'PDA - Program App' AND "UserTopic"."issuedAt" = '2020-04-07 10:49:18.000 +00:00' LIMIT 1;
Executing (d1af9904-a0b0-4aa0-b422-3bad9cc6090f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_69907308772f4eaeaf159f9ac19fae65$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA mock session - Churu','2020-12-18 15:25:00.000 +00:00','a342759f-5fbb-42dd-804b-f8875e53362f','2024-08-31 20:47:13.570 +00:00','2024-08-31 20:47:13.570 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_69907308772f4eaeaf159f9ac19fae65$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (078bc3c5-d044-472b-a70c-595523040e80): COMMIT;
Executing (798f7c50-205b-4da3-873d-c1f90d487481): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'f838dac6-0aca-4a3c-a686-f4e012303539' AND "UserTrainer"."name" = 'Manu Test Topic' AND "UserTrainer"."issueDate" = '2019-12-03 05:19:00.000 +00:00' LIMIT 1;
Executing (3eba663c-41c3-4830-9d2b-7a62bebf48f5): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'd71b934c-81c3-47d1-8a1b-bfa821e53873' AND "UserTopic"."name" = 'Introduction to atomised content' AND "UserTopic"."issuedAt" = '2022-02-15 06:38:27.000 +00:00' LIMIT 1;
Executing (d1af9904-a0b0-4aa0-b422-3bad9cc6090f): COMMIT;
Processed user: Rucha Deshmukh
Executing (45ed08cf-2d35-4d65-b764-aa176b8cc882): START TRANSACTION;
Executing (798f7c50-205b-4da3-873d-c1f90d487481): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a6112218470d4fbb957eaaf7019e78c8$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Manu Test Topic','2019-12-03 05:19:00.000 +00:00','f838dac6-0aca-4a3c-a686-f4e012303539','2024-08-31 20:47:13.575 +00:00','2024-08-31 20:47:13.575 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a6112218470d4fbb957eaaf7019e78c8$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (25cdde78-b115-4262-8236-9246c25b902d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c0993e214dfc45499f186b8a8611dd81$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Program App','2020-04-07 10:49:18.000 +00:00','e97fd0ba-3afc-46e6-a51a-d46194af9fe2','2024-08-31 20:47:13.576 +00:00','2024-08-31 20:47:13.576 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c0993e214dfc45499f186b8a8611dd81$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Bhatta Ram
Executing (9a0d2dfd-b1a0-46f7-8c6c-5a782a0d343b): START TRANSACTION;
Executing (45ed08cf-2d35-4d65-b764-aa176b8cc882): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '1da12f92-cab3-4f8b-b8c7-4c9baf5a32f9' AND "UserTopic"."name" = 'Community Participation-Why' AND "UserTopic"."issuedAt" = '2021-04-09 06:55:19.000 +00:00' LIMIT 1;
Executing (798f7c50-205b-4da3-873d-c1f90d487481): COMMIT;
Executing (3eba663c-41c3-4830-9d2b-7a62bebf48f5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_990e7725c23444cba1810a59aec1ee4a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to atomised content','2022-02-15 06:38:27.000 +00:00','d71b934c-81c3-47d1-8a1b-bfa821e53873','2024-08-31 20:47:13.580 +00:00','2024-08-31 20:47:13.580 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_990e7725c23444cba1810a59aec1ee4a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9a0d2dfd-b1a0-46f7-8c6c-5a782a0d343b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b16b7c59-7de2-41e9-9a24-d63e33c0a825' AND "UserTopic"."name" = 'Recap and potential next steps with the learning experience' AND "UserTopic"."issuedAt" = '2022-02-01 06:45:28.000 +00:00' LIMIT 1;
Executing (45ed08cf-2d35-4d65-b764-aa176b8cc882): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e8f1e611d1bc43e5954e7121c83dc0e2$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Community Participation-Why','2021-04-09 06:55:19.000 +00:00','1da12f92-cab3-4f8b-b8c7-4c9baf5a32f9','2024-08-31 20:47:13.583 +00:00','2024-08-31 20:47:13.583 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e8f1e611d1bc43e5954e7121c83dc0e2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Content and PDA - Capacity Building Package
Executing (09d8c74f-03be-4368-ae0c-6272c2cfab6c): START TRANSACTION;
Executing (25cdde78-b115-4262-8236-9246c25b902d): COMMIT;
Executing (9a0d2dfd-b1a0-46f7-8c6c-5a782a0d343b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a812c11b2754439892033963834f5a9d$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Recap and potential next steps with the learning experience','2022-02-01 06:45:28.000 +00:00','b16b7c59-7de2-41e9-9a24-d63e33c0a825','2024-08-31 20:47:13.586 +00:00','2024-08-31 20:47:13.586 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a812c11b2754439892033963834f5a9d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (45ed08cf-2d35-4d65-b764-aa176b8cc882): COMMIT;
Executing (09d8c74f-03be-4368-ae0c-6272c2cfab6c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '32669155-14ca-462e-b187-55304716c91a' AND "UserTopic"."name" = 'Hub Roles for Virtual Interactions' AND "UserTopic"."issuedAt" = '2020-12-10 05:58:05.000 +00:00' LIMIT 1;
Executing (3eba663c-41c3-4830-9d2b-7a62bebf48f5): COMMIT;
Executing (9a0d2dfd-b1a0-46f7-8c6c-5a782a0d343b): COMMIT;
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-01-30T09:05:33.000+0000
Executing (2e3b5ad5-57d6-40b0-84a9-7939416c18cd): START TRANSACTION;
Executing (09d8c74f-03be-4368-ae0c-6272c2cfab6c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6be3f449972f4ac290affa9fb9ccba33$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Hub Roles for Virtual Interactions','2020-12-10 05:58:05.000 +00:00','32669155-14ca-462e-b187-55304716c91a','2024-08-31 20:47:13.590 +00:00','2024-08-31 20:47:13.590 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6be3f449972f4ac290affa9fb9ccba33$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Snenesh
Executing (06433497-b019-4006-a458-fe6561ba67c3): START TRANSACTION;
topicName Introduction to Simplified Functional Grid Format 2022-01-11T07:21:12.000+0000
Executing (cef1e33b-65e3-4403-ab6e-3946b353ade2): START TRANSACTION;
Executing (2e3b5ad5-57d6-40b0-84a9-7939416c18cd): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '24116eb6-0d95-472a-befc-206e7e1f787c' AND "UserTopic"."name" = 'Hub Roles for Virtual Interactions' AND "UserTopic"."issuedAt" = '2020-12-10 05:58:51.000 +00:00' LIMIT 1;
Processed user: sandip
Executing (22bffcc9-233e-4800-9a59-c5bfbb20bcb4): START TRANSACTION;
Executing (cef1e33b-65e3-4403-ab6e-3946b353ade2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c55bd79b-042e-46bf-9e18-f4dd8e383e5d' AND "UserTopic"."name" = 'Data collection and Monitoring' AND "UserTopic"."issuedAt" = '2021-01-06 07:53:26.000 +00:00' LIMIT 1;
Executing (06433497-b019-4006-a458-fe6561ba67c3): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '452450c8-d384-4c61-83f8-4faf11a6d8ef' AND "UserTopic"."name" = 'PDA - Program App' AND "UserTopic"."issuedAt" = '2019-12-26 11:48:16.000 +00:00' LIMIT 1;
Executing (09d8c74f-03be-4368-ae0c-6272c2cfab6c): COMMIT;
Executing (cef1e33b-65e3-4403-ab6e-3946b353ade2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c55e5033ebaf400e9af44192dd3941a0$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Data collection and Monitoring','2021-01-06 07:53:26.000 +00:00','c55bd79b-042e-46bf-9e18-f4dd8e383e5d','2024-08-31 20:47:13.596 +00:00','2024-08-31 20:47:13.596 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c55e5033ebaf400e9af44192dd3941a0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2e3b5ad5-57d6-40b0-84a9-7939416c18cd): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f91a56da3be14b459a9150a759bd5cb1$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Hub Roles for Virtual Interactions','2020-12-10 05:58:51.000 +00:00','24116eb6-0d95-472a-befc-206e7e1f787c','2024-08-31 20:47:13.597 +00:00','2024-08-31 20:47:13.597 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f91a56da3be14b459a9150a759bd5cb1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (22bffcc9-233e-4800-9a59-c5bfbb20bcb4): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4f3f5e8e-de1b-411a-9454-9038cca34335' AND "UserTopic"."name" = 'Community Participation-Why' AND "UserTopic"."issuedAt" = '2021-04-09 06:33:27.000 +00:00' LIMIT 1;
Executing (06433497-b019-4006-a458-fe6561ba67c3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4d3b27d6aa53453b874df8804762e8c5$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Program App','2019-12-26 11:48:16.000 +00:00','452450c8-d384-4c61-83f8-4faf11a6d8ef','2024-08-31 20:47:13.598 +00:00','2024-08-31 20:47:13.598 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4d3b27d6aa53453b874df8804762e8c5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Twinkle Mukherjee 
Executing (a6d8b373-88f0-4132-953a-8e54f89e5de1): START TRANSACTION;
Executing (cef1e33b-65e3-4403-ab6e-3946b353ade2): COMMIT;
Executing (22bffcc9-233e-4800-9a59-c5bfbb20bcb4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6c678951b39a41c0b13b376ac1908856$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Community Participation-Why','2021-04-09 06:33:27.000 +00:00','4f3f5e8e-de1b-411a-9454-9038cca34335','2024-08-31 20:47:13.600 +00:00','2024-08-31 20:47:13.600 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6c678951b39a41c0b13b376ac1908856$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2e3b5ad5-57d6-40b0-84a9-7939416c18cd): COMMIT;
topicName Data collection and Analysis 2021-01-06T12:32:22.000+0000
Executing (73aedadb-a03e-4b00-97a4-e01a0fbc29bf): START TRANSACTION;
Executing (a6d8b373-88f0-4132-953a-8e54f89e5de1): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'e6f9c8f7-019e-4d38-b18a-5acf5900c008' AND "UserTrainer"."name" = 'Introduction to Process of planning a lesson flow' AND "UserTrainer"."issueDate" = '2022-03-02 07:30:00.000 +00:00' LIMIT 1;
Executing (06433497-b019-4006-a458-fe6561ba67c3): COMMIT;
Executing (73aedadb-a03e-4b00-97a4-e01a0fbc29bf): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2cbe0329-07a4-481a-bf7a-22b814a464e5' AND "UserTopic"."name" = 'PDA - Program App' AND "UserTopic"."issuedAt" = '2019-12-26 11:48:30.000 +00:00' LIMIT 1;
Processed user: Binita Chowdhury
Executing (24be8b0f-10db-4ca6-95e0-d0444df2ca41): START TRANSACTION;
Executing (22bffcc9-233e-4800-9a59-c5bfbb20bcb4): COMMIT;
Executing (73aedadb-a03e-4b00-97a4-e01a0fbc29bf): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_41b18911ddee43a68c39cbd297d7ce5c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Program App','2019-12-26 11:48:30.000 +00:00','2cbe0329-07a4-481a-bf7a-22b814a464e5','2024-08-31 20:47:13.605 +00:00','2024-08-31 20:47:13.605 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_41b18911ddee43a68c39cbd297d7ce5c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (24be8b0f-10db-4ca6-95e0-d0444df2ca41): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'a6241a20-9982-4041-a67d-7e2a2e43f6b9' AND "UserTrainer"."name" = 'Introduction to Process of planning a lesson flow' AND "UserTrainer"."issueDate" = '2022-03-02 07:30:00.000 +00:00' LIMIT 1;
Executing (a6d8b373-88f0-4132-953a-8e54f89e5de1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_629650d221be402b9509ee24be23dd7f$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Process of planning a lesson flow','2022-03-02 07:30:00.000 +00:00','e6f9c8f7-019e-4d38-b18a-5acf5900c008','2024-08-31 20:47:13.606 +00:00','2024-08-31 20:47:13.606 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_629650d221be402b9509ee24be23dd7f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Churu Fluorosis PDA demo 2020-10-21T09:34:50.000+0000
Executing (da1c9293-be12-4b49-882d-4f8f5230a755): START TRANSACTION;
Executing (73aedadb-a03e-4b00-97a4-e01a0fbc29bf): COMMIT;
Executing (24be8b0f-10db-4ca6-95e0-d0444df2ca41): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_086db310728340b5a22af2afad482a9e$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Process of planning a lesson flow','2022-03-02 07:30:00.000 +00:00','a6241a20-9982-4041-a67d-7e2a2e43f6b9','2024-08-31 20:47:13.608 +00:00','2024-08-31 20:47:13.608 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_086db310728340b5a22af2afad482a9e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Hands on 2021-01-08T07:57:01.000+0000
Executing (95c21eef-4850-47f8-aa7d-4b133a8e1720): START TRANSACTION;
trainertopicname Demonstration of PDA - ICDS Supervisors Training
Executing (c45a0ace-ae36-41ec-af3e-0aca90107dd9): START TRANSACTION;
Executing (da1c9293-be12-4b49-882d-4f8f5230a755): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '305c306d-64cc-45eb-b51c-6bcb69c00291' AND "UserTopic"."name" = 'Introduction to Process of planning a lesson flow' AND "UserTopic"."issuedAt" = '2022-03-02 06:59:03.000 +00:00' LIMIT 1;
Executing (a6d8b373-88f0-4132-953a-8e54f89e5de1): COMMIT;
Executing (c45a0ace-ae36-41ec-af3e-0aca90107dd9): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '945619e0-0d9c-435a-ad20-c4d392b263bd' AND "UserTopic"."name" = 'Data collection and Analysis' AND "UserTopic"."issuedAt" = '2021-01-06 12:34:34.000 +00:00' LIMIT 1;
Executing (95c21eef-4850-47f8-aa7d-4b133a8e1720): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '192c494b-39ec-4cdc-b0b0-e4322d336e69' AND "UserTrainer"."name" = 'PDA mock session - Churu' AND "UserTrainer"."issueDate" = '2020-12-18 15:25:00.000 +00:00' LIMIT 1;
Executing (24be8b0f-10db-4ca6-95e0-d0444df2ca41): COMMIT;
Executing (c45a0ace-ae36-41ec-af3e-0aca90107dd9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5b390432ac09447c8d983a3430c65714$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Data collection and Analysis','2021-01-06 12:34:34.000 +00:00','945619e0-0d9c-435a-ad20-c4d392b263bd','2024-08-31 20:47:13.613 +00:00','2024-08-31 20:47:13.613 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5b390432ac09447c8d983a3430c65714$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (da1c9293-be12-4b49-882d-4f8f5230a755): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4c6454b852774befb51877bfef8f03a9$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Process of planning a lesson flow','2022-03-02 06:59:03.000 +00:00','305c306d-64cc-45eb-b51c-6bcb69c00291','2024-08-31 20:47:13.614 +00:00','2024-08-31 20:47:13.614 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4c6454b852774befb51877bfef8f03a9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Introduction to Visual Design LL3
Executing (759d59ba-c7be-4805-bc84-4d8f110af4a5): START TRANSACTION;
Executing (95c21eef-4850-47f8-aa7d-4b133a8e1720): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bd782b19f3fd474fb8b7ad05ab88328b$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA mock session - Churu','2020-12-18 15:25:00.000 +00:00','192c494b-39ec-4cdc-b0b0-e4322d336e69','2024-08-31 20:47:13.616 +00:00','2024-08-31 20:47:13.616 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bd782b19f3fd474fb8b7ad05ab88328b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Introduction to Visual Design LL3
Executing (4d96c6d1-6e72-4330-8095-189e5299dad1): START TRANSACTION;
Executing (759d59ba-c7be-4805-bc84-4d8f110af4a5): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'fb03a265-7824-49ee-a49d-fbe0c9e82564' AND "UserTopic"."name" = 'Data collection and Monitoring' AND "UserTopic"."issuedAt" = '2021-01-06 07:52:58.000 +00:00' LIMIT 1;
Executing (c45a0ace-ae36-41ec-af3e-0aca90107dd9): COMMIT;
Executing (da1c9293-be12-4b49-882d-4f8f5230a755): COMMIT;
Executing (759d59ba-c7be-4805-bc84-4d8f110af4a5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_49de1968921e45fa90549c928f3fea1f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Data collection and Monitoring','2021-01-06 07:52:58.000 +00:00','fb03a265-7824-49ee-a49d-fbe0c9e82564','2024-08-31 20:47:13.619 +00:00','2024-08-31 20:47:13.619 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_49de1968921e45fa90549c928f3fea1f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4d96c6d1-6e72-4330-8095-189e5299dad1): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'fe2cf7fe-c2da-42ff-bc9b-0bd9169b1f37' AND "UserTrainer"."name" = '11' AND "UserTrainer"."issueDate" = '2020-01-22 09:03:00.000 +00:00' LIMIT 1;
Executing (95c21eef-4850-47f8-aa7d-4b133a8e1720): COMMIT;
topicName Crop Water Budgeting Overview 2020-12-16T07:29:20.000+0000
Executing (66b76d46-a290-4fc6-99da-3dae4e433cc1): START TRANSACTION;
topicName Introduction to atomised content 2022-02-15T06:22:57.000+0000
Executing (4b8da36a-adbe-47c2-a7a4-509337f67b82): START TRANSACTION;
Executing (66b76d46-a290-4fc6-99da-3dae4e433cc1): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4e526a75-c8d4-436b-8245-b7f7dd485186' AND "UserTopic"."name" = 'Content Development | T1.01 | DG' AND "UserTopic"."issuedAt" = '2020-11-26 11:44:58.000 +00:00' LIMIT 1;
Executing (4d96c6d1-6e72-4330-8095-189e5299dad1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b575ae431b5b4895877f01ffe136d5dd$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'11','2020-01-22 09:03:00.000 +00:00','fe2cf7fe-c2da-42ff-bc9b-0bd9169b1f37','2024-08-31 20:47:13.622 +00:00','2024-08-31 20:47:13.622 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b575ae431b5b4895877f01ffe136d5dd$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Navneet
Executing (0bc19b6f-2841-4954-bb42-0c9887fb6f30): START TRANSACTION;
Executing (759d59ba-c7be-4805-bc84-4d8f110af4a5): COMMIT;
Executing (66b76d46-a290-4fc6-99da-3dae4e433cc1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_273d35d9ab914745bcd146dc251c080d$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Content Development | T1.01 | DG','2020-11-26 11:44:58.000 +00:00','4e526a75-c8d4-436b-8245-b7f7dd485186','2024-08-31 20:47:13.624 +00:00','2024-08-31 20:47:13.624 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_273d35d9ab914745bcd146dc251c080d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0bc19b6f-2841-4954-bb42-0c9887fb6f30): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '78fb6721-9eb2-4099-98f7-75340a08c883' AND "UserTopic"."name" = 'Community Participation-Why' AND "UserTopic"."issuedAt" = '2021-04-09 06:46:24.000 +00:00' LIMIT 1;
Executing (4b8da36a-adbe-47c2-a7a4-509337f67b82): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6df4face-5699-4fa1-bd64-0c565ee7440d' AND "UserTopic"."name" = 'Data collection and Monitoring' AND "UserTopic"."issuedAt" = '2021-01-06 07:53:09.000 +00:00' LIMIT 1;
Executing (4d96c6d1-6e72-4330-8095-189e5299dad1): COMMIT;
topicName Data collection and Analysis 2021-01-06T12:32:14.000+0000
Executing (0d7021c6-4108-4fea-acf8-4de0a09be7a1): START TRANSACTION;
Processed user: ParulSk
Executing (10c531de-f983-4b1e-9405-77113a429990): START TRANSACTION;
Executing (0bc19b6f-2841-4954-bb42-0c9887fb6f30): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cd98f40c6e334823aa676339b4da6422$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Community Participation-Why','2021-04-09 06:46:24.000 +00:00','78fb6721-9eb2-4099-98f7-75340a08c883','2024-08-31 20:47:13.628 +00:00','2024-08-31 20:47:13.628 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cd98f40c6e334823aa676339b4da6422$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (66b76d46-a290-4fc6-99da-3dae4e433cc1): COMMIT;
Executing (4b8da36a-adbe-47c2-a7a4-509337f67b82): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b0254435e9ff42ca8f35b40505b67813$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Data collection and Monitoring','2021-01-06 07:53:09.000 +00:00','6df4face-5699-4fa1-bd64-0c565ee7440d','2024-08-31 20:47:13.629 +00:00','2024-08-31 20:47:13.629 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b0254435e9ff42ca8f35b40505b67813$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (10c531de-f983-4b1e-9405-77113a429990): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5264b284-4789-4883-81a1-0f7233e0c848' AND "UserTopic"."name" = 'Capacity building of Jaldoots on MGNREGA schemes provisions' AND "UserTopic"."issuedAt" = '2021-01-11 07:36:50.000 +00:00' LIMIT 1;
topicName PDA Demo and Deployment Training for Trainers | ACT 2020-12-11T12:41:36.000+0000
Executing (f3752372-7df5-47b5-bbde-5dac4f4925b1): START TRANSACTION;
Executing (0d7021c6-4108-4fea-acf8-4de0a09be7a1): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'd2a695e3-5d1c-49ba-adab-671dab6d81fa' AND "UserTopic"."name" = 'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯ       ಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs' AND "UserTopic"."issuedAt" = 'Invalid date' LIMIT 1;
Executing (10c531de-f983-4b1e-9405-77113a429990): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b3fd7164f39f4a0d82f59d37a3bc8a09$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots on MGNREGA schemes provisions','2021-01-11 07:36:50.000 +00:00','5264b284-4789-4883-81a1-0f7233e0c848','2024-08-31 20:47:13.633 +00:00','2024-08-31 20:47:13.633 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b3fd7164f39f4a0d82f59d37a3bc8a09$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f3752372-7df5-47b5-bbde-5dac4f4925b1): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '67f6ffd9-0d75-4c92-8909-7c0f78daf8b7' AND "UserTopic"."name" = 'PDA - Trainer App' AND "UserTopic"."issuedAt" = '2020-01-08 08:56:31.000 +00:00' LIMIT 1;
Executing (0bc19b6f-2841-4954-bb42-0c9887fb6f30): COMMIT;
Executing (4b8da36a-adbe-47c2-a7a4-509337f67b82): COMMIT;
Executing (10c531de-f983-4b1e-9405-77113a429990): COMMIT;
Executing (f3752372-7df5-47b5-bbde-5dac4f4925b1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6dc68006051b45ca89ca0fc5949036a3$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Trainer App','2020-01-08 08:56:31.000 +00:00','67f6ffd9-0d75-4c92-8909-7c0f78daf8b7','2024-08-31 20:47:13.636 +00:00','2024-08-31 20:47:13.636 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6dc68006051b45ca89ca0fc5949036a3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0d7021c6-4108-4fea-acf8-4de0a09be7a1): COMMIT;
Processed user: Hamir Rana Bhai koli
Executing (c9c87249-1186-446f-9d0a-aba379f2f559): START TRANSACTION;
topicName PDA Hands on 2021-01-08T07:15:18.000+0000
Executing (a3a2758f-7c81-4fb4-be58-dd31ab8711ad): START TRANSACTION;
topicName Data collection and Analysis 2021-01-06T12:32:33.000+0000
Executing (fb5b9f87-03ff-43a2-a75e-0039d85c2dd3): START TRANSACTION;
Executing (c9c87249-1186-446f-9d0a-aba379f2f559): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'a7756c59-d51a-4cff-af34-75b0403432f1' AND "UserTopic"."name" = 'Test run for Assisted Scanning' AND "UserTopic"."issuedAt" = '2020-08-07 07:15:13.000 +00:00' LIMIT 1;
Executing (a3a2758f-7c81-4fb4-be58-dd31ab8711ad): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '919b177f-2a3d-4883-8060-149bf84012b4' AND "UserTopic"."name" = 'JD test - Making a JalShala Plan' AND "UserTopic"."issuedAt" = '2023-01-21 07:44:47.000 +00:00' LIMIT 1;
Executing (f36db771-3ee5-4db8-84e6-eb46a60a48d3): START TRANSACTION;
Executing (f3752372-7df5-47b5-bbde-5dac4f4925b1): COMMIT;
Executing (c9c87249-1186-446f-9d0a-aba379f2f559): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4be940b0045d4eb6837fd8c62ba7aa03$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Test run for Assisted Scanning','2020-08-07 07:15:13.000 +00:00','a7756c59-d51a-4cff-af34-75b0403432f1','2024-08-31 20:47:13.642 +00:00','2024-08-31 20:47:13.642 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4be940b0045d4eb6837fd8c62ba7aa03$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a3a2758f-7c81-4fb4-be58-dd31ab8711ad): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_27696d6d773c47be87c8d910eeacc515$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD test - Making a JalShala Plan','2023-01-21 07:44:47.000 +00:00','919b177f-2a3d-4883-8060-149bf84012b4','2024-08-31 20:47:13.643 +00:00','2024-08-31 20:47:13.643 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_27696d6d773c47be87c8d910eeacc515$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f36db771-3ee5-4db8-84e6-eb46a60a48d3): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5a9679fe-6c56-4e22-aa0a-14adb9703410' AND "UserTopic"."name" = 'Virtual Interactions - Needs and Benefits' AND "UserTopic"."issuedAt" = '2020-11-19 10:12:20.000 +00:00' LIMIT 1;
Executing (fb5b9f87-03ff-43a2-a75e-0039d85c2dd3): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'e931ea86-989b-4188-aa8b-8052253f14ce' AND "UserTrainer"."name" = 'Orientation on Jala Sanjeevini /ಓರಿಯೆಂಟೇಷನ್ ಓನ್ ಜಲ     ಸಂಜೀವಿನೀ/Elected members/ಚುನಾಯಿತ ಸದಸ್ಯರು' AND "UserTrainer"."issueDate" = '2022-12-02 09:00:00.000 +00:00' LIMIT 1;
Executing (c9c87249-1186-446f-9d0a-aba379f2f559): COMMIT;
Executing (f36db771-3ee5-4db8-84e6-eb46a60a48d3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_062b28ce78084a3fb201ac91c06dfe2a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Virtual Interactions - Needs and Benefits','2020-11-19 10:12:20.000 +00:00','5a9679fe-6c56-4e22-aa0a-14adb9703410','2024-08-31 20:47:13.645 +00:00','2024-08-31 20:47:13.645 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_062b28ce78084a3fb201ac91c06dfe2a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Manu Test Topic 2019-11-27T09:11:58+0000
Executing (d926f1e0-3ab1-47b9-8aa0-09410538fc6f): START TRANSACTION;
trainertopicname Manu Test Topic
Executing (5f3c6215-e593-4412-ac6b-f5d72add5171): START TRANSACTION;
Executing (fb5b9f87-03ff-43a2-a75e-0039d85c2dd3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9912cb423b9b4a75a9ca125175e87bce$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Jala Sanjeevini /ಓರಿಯೆಂಟೇಷನ್ ಓನ್ ಜಲ     ಸಂಜೀವಿನೀ/Elected members/ಚುನಾಯಿತ ಸದಸ್ಯರು','2022-12-02 09:00:00.000 +00:00','e931ea86-989b-4188-aa8b-8052253f14ce','2024-08-31 20:47:13.647 +00:00','2024-08-31 20:47:13.647 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9912cb423b9b4a75a9ca125175e87bce$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a3a2758f-7c81-4fb4-be58-dd31ab8711ad): COMMIT;
Executing (5f3c6215-e593-4412-ac6b-f5d72add5171): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f5bda8c8-9b5d-4f02-aefc-e2ecf01d710c' AND "UserTopic"."name" = 'JD test - Monitoring of the Block Plan' AND "UserTopic"."issuedAt" = '2023-01-21 10:28:11.000 +00:00' LIMIT 1;
Executing (d926f1e0-3ab1-47b9-8aa0-09410538fc6f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '0c193e5f-d189-464b-82cf-443317306d87' AND "UserTopic"."name" = 'Manu Test Topic' AND "UserTopic"."issuedAt" = '2019-12-03 18:09:31.000 +00:00' LIMIT 1;
Executing (f36db771-3ee5-4db8-84e6-eb46a60a48d3): COMMIT;
Executing (5f3c6215-e593-4412-ac6b-f5d72add5171): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a0a53212932c4ae685a0a7e4420139db$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD test - Monitoring of the Block Plan','2023-01-21 10:28:11.000 +00:00','f5bda8c8-9b5d-4f02-aefc-e2ecf01d710c','2024-08-31 20:47:13.651 +00:00','2024-08-31 20:47:13.651 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a0a53212932c4ae685a0a7e4420139db$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d926f1e0-3ab1-47b9-8aa0-09410538fc6f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1e40c834e1154a54b18d30fd44d749b3$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Manu Test Topic','2019-12-03 18:09:31.000 +00:00','0c193e5f-d189-464b-82cf-443317306d87','2024-08-31 20:47:13.652 +00:00','2024-08-31 20:47:13.652 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1e40c834e1154a54b18d30fd44d749b3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName JD test - Executing the JalShala  2023-01-21T07:50:15.000+0000
Executing (4ab2ce45-9f75-41f9-a10d-fcac683a9263): START TRANSACTION;
Executing (fb5b9f87-03ff-43a2-a75e-0039d85c2dd3): COMMIT;
Executing (5f3c6215-e593-4412-ac6b-f5d72add5171): COMMIT;
Executing (4ab2ce45-9f75-41f9-a10d-fcac683a9263): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'bf9b2448-f718-4224-96d4-06bdb59034a3' AND "UserTopic"."name" = 'Planning the Jalshala' AND "UserTopic"."issuedAt" = '2023-04-28 05:58:40.000 +00:00' LIMIT 1;
topicName PDA mock session - Churu 2020-12-15T14:35:39.000+0000
Executing (e97004a5-acc7-41db-b186-bd4459bc8286): START TRANSACTION;
topicName JD test - Training of Block Coordinators for JalDoot Program  2023-01-31T10:32:56.000+0000
Executing (f57d6550-43f2-4794-9550-914aec895686): START TRANSACTION;
Executing (d926f1e0-3ab1-47b9-8aa0-09410538fc6f): COMMIT;
trainertopicname ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂ      ಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs
Executing (d334527d-b2dd-48c2-8ed6-f7c684db0084): START TRANSACTION;
Executing (f57d6550-43f2-4794-9550-914aec895686): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '7dd8cae2-8102-44ca-b042-6a1d51b97504' AND "UserTopic"."name" = 'Introduction to Visual Design LL3' AND "UserTopic"."issuedAt" = '2022-03-22 07:25:39.000 +00:00' LIMIT 1;
topicName ಇದು ಒಂದು ಮಾದರಿ 2019-12-02T005:27:20+0000
Executing (532660af-13ad-475f-a233-aef97b882283): START TRANSACTION;
Executing (4ab2ce45-9f75-41f9-a10d-fcac683a9263): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1ef351a6853c429e81c34e30524b96c4$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Planning the Jalshala','2023-04-28 05:58:40.000 +00:00','bf9b2448-f718-4224-96d4-06bdb59034a3','2024-08-31 20:47:13.659 +00:00','2024-08-31 20:47:13.659 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1ef351a6853c429e81c34e30524b96c4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e97004a5-acc7-41db-b186-bd4459bc8286): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b7031ba5-8d50-43d4-82db-b63e173db13c' AND "UserTopic"."name" = 'JD test - Conducting a block trainers TOT' AND "UserTopic"."issuedAt" = '2023-01-27 07:49:09.000 +00:00' LIMIT 1;
Executing (f57d6550-43f2-4794-9550-914aec895686): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_65296c7888304fcd8ade5506a4e3883b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Visual Design LL3','2022-03-22 07:25:39.000 +00:00','7dd8cae2-8102-44ca-b042-6a1d51b97504','2024-08-31 20:47:13.661 +00:00','2024-08-31 20:47:13.661 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_65296c7888304fcd8ade5506a4e3883b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (532660af-13ad-475f-a233-aef97b882283): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '867b20fb-b6bd-418d-91c6-aa5ef686e629' AND "UserTopic"."name" = 'PDA Demo' AND "UserTopic"."issuedAt" = '2021-06-15 05:24:01.000 +00:00' LIMIT 1;
Executing (d334527d-b2dd-48c2-8ed6-f7c684db0084): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '42740f34-6ea7-41e2-be0e-7ea2a846b001' AND "UserTopic"."name" = 'PDA Updates' AND "UserTopic"."issuedAt" = '2020-10-06 06:27:07.000 +00:00' LIMIT 1;
Executing (532660af-13ad-475f-a233-aef97b882283): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1a708c8002ee465aa54cd7f1563064b1$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo','2021-06-15 05:24:01.000 +00:00','867b20fb-b6bd-418d-91c6-aa5ef686e629','2024-08-31 20:47:13.663 +00:00','2024-08-31 20:47:13.663 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1a708c8002ee465aa54cd7f1563064b1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e97004a5-acc7-41db-b186-bd4459bc8286): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5a63abdf704b4d3f8c12aff63caa2c09$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD test - Conducting a block trainers TOT','2023-01-27 07:49:09.000 +00:00','b7031ba5-8d50-43d4-82db-b63e173db13c','2024-08-31 20:47:13.664 +00:00','2024-08-31 20:47:13.664 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5a63abdf704b4d3f8c12aff63caa2c09$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4ab2ce45-9f75-41f9-a10d-fcac683a9263): COMMIT;
Executing (532660af-13ad-475f-a233-aef97b882283): COMMIT;
Executing (d334527d-b2dd-48c2-8ed6-f7c684db0084): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a03c2b85971a45dfae988144d8ab0a75$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Updates','2020-10-06 06:27:07.000 +00:00','42740f34-6ea7-41e2-be0e-7ea2a846b001','2024-08-31 20:47:13.666 +00:00','2024-08-31 20:47:13.666 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a03c2b85971a45dfae988144d8ab0a75$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f57d6550-43f2-4794-9550-914aec895686): COMMIT;
topicName PDA - Program App 2019-12-05T07:00:11+0000
Executing (21bcefad-d615-4aa8-846c-5276e54aafe5): START TRANSACTION;
topicName Execution of the JalShala 2023-05-22T13:53:07.000+0000
Executing (554bb648-de3d-4955-9dbf-681d6cfbfc97): START TRANSACTION;
Executing (e97004a5-acc7-41db-b186-bd4459bc8286): COMMIT;
Executing (21bcefad-d615-4aa8-846c-5276e54aafe5): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c0072a31-91df-48a0-b79e-5d19c7d29d27' AND "UserTopic"."name" = 'Virtual Interactions - Needs and Benefits' AND "UserTopic"."issuedAt" = '2020-10-14 05:52:46.000 +00:00' LIMIT 1;
Executing (554bb648-de3d-4955-9dbf-681d6cfbfc97): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5bfd7f81-ec88-422a-9f71-fbc75f3ace63' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-01-30 09:07:30.000 +00:00' LIMIT 1;
topicName JD test - Assam 2022-12-12T12:21:46.000+0000
Executing (eebcd6ca-c4dc-4840-87f3-11edfec69a8b): START TRANSACTION;
Executing (d334527d-b2dd-48c2-8ed6-f7c684db0084): COMMIT;
Executing (21bcefad-d615-4aa8-846c-5276e54aafe5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fbf6cf580f054e56acd0cc9f3c68a7c7$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Virtual Interactions - Needs and Benefits','2020-10-14 05:52:46.000 +00:00','c0072a31-91df-48a0-b79e-5d19c7d29d27','2024-08-31 20:47:13.672 +00:00','2024-08-31 20:47:13.672 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fbf6cf580f054e56acd0cc9f3c68a7c7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (554bb648-de3d-4955-9dbf-681d6cfbfc97): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ccdac028e6c349448dd163f0664113dc$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-01-30 09:07:30.000 +00:00','5bfd7f81-ec88-422a-9f71-fbc75f3ace63','2024-08-31 20:47:13.674 +00:00','2024-08-31 20:47:13.674 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ccdac028e6c349448dd163f0664113dc$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (eebcd6ca-c4dc-4840-87f3-11edfec69a8b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2cbf38a3-d533-4451-9b58-f523baba5fe5' AND "UserTopic"."name" = 'PDA Dash Board checks' AND "UserTopic"."issuedAt" = '2020-12-02 08:57:08.000 +00:00' LIMIT 1;
topicName JD Test - Reporting on block plan 2023-01-27T07:52:16.000+0000
Executing (ffaa32cb-6c71-4c27-899a-8001559ed798): START TRANSACTION;
Executing (21bcefad-d615-4aa8-846c-5276e54aafe5): COMMIT;
topicName Virtual Interactions - Needs and Benefits 2020-11-19T10:13:13.000+0000
Executing (9781b652-4d9c-41ea-9f35-0ece80a168dc): START TRANSACTION;
Executing (554bb648-de3d-4955-9dbf-681d6cfbfc97): COMMIT;
Executing (eebcd6ca-c4dc-4840-87f3-11edfec69a8b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8185827c81b345c4a3accf61788ee112$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Dash Board checks','2020-12-02 08:57:08.000 +00:00','2cbf38a3-d533-4451-9b58-f523baba5fe5','2024-08-31 20:47:13.678 +00:00','2024-08-31 20:47:13.678 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8185827c81b345c4a3accf61788ee112$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ffaa32cb-6c71-4c27-899a-8001559ed798): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'db52891b-977c-429d-ad2c-9258b81a7ba4' AND "UserTopic"."name" = 'PDA Hands on' AND "UserTopic"."issuedAt" = '2021-01-02 06:56:21.000 +00:00' LIMIT 1;
topicName Capacity building of Jaldoots on MGNREGA schemes provisions 2021-01-11T07:37:03.000+0000
Executing (c76c6b30-7225-44ca-a964-65b2a35f6ae7): START TRANSACTION;
topicName Guided Mentoring Format 2020-10-14T06:49:28.000+0000
Executing (357a304d-b2fc-47db-96c4-c6669b844436): START TRANSACTION;
Executing (9781b652-4d9c-41ea-9f35-0ece80a168dc): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '840282c7-4246-44db-a1f6-d753c1913547' AND "UserTopic"."name" = 'Introduction to Simplified Functional Grid Format' AND "UserTopic"."issuedAt" = '2022-01-11 07:21:23.000 +00:00' LIMIT 1;
Executing (c76c6b30-7225-44ca-a964-65b2a35f6ae7): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'eafa5769-776e-421f-bdce-03326a065f7e' AND "UserTopic"."name" = 'Content Development | T1.01 | DG' AND "UserTopic"."issuedAt" = '2020-11-26 11:45:16.000 +00:00' LIMIT 1;
Executing (357a304d-b2fc-47db-96c4-c6669b844436): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '85bce1bf-2a8b-4862-8a13-80758d68c6e0' AND "UserTrainer"."name" = 'Orientation on Abhy and PGWM' AND "UserTrainer"."issueDate" = '2021-08-14 07:30:00.000 +00:00' LIMIT 1;
Executing (ffaa32cb-6c71-4c27-899a-8001559ed798): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ada49cf7955646f0bbdba57cc34cf333$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Hands on','2021-01-02 06:56:21.000 +00:00','db52891b-977c-429d-ad2c-9258b81a7ba4','2024-08-31 20:47:13.683 +00:00','2024-08-31 20:47:13.683 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ada49cf7955646f0bbdba57cc34cf333$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (eebcd6ca-c4dc-4840-87f3-11edfec69a8b): COMMIT;
Executing (c76c6b30-7225-44ca-a964-65b2a35f6ae7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_055205c700f54ef8a24807063e79ce7d$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Content Development | T1.01 | DG','2020-11-26 11:45:16.000 +00:00','eafa5769-776e-421f-bdce-03326a065f7e','2024-08-31 20:47:13.684 +00:00','2024-08-31 20:47:13.684 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_055205c700f54ef8a24807063e79ce7d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (357a304d-b2fc-47db-96c4-c6669b844436): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d6efeb635a764cbe80d24b81e9da4425$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM','2021-08-14 07:30:00.000 +00:00','85bce1bf-2a8b-4862-8a13-80758d68c6e0','2024-08-31 20:47:13.685 +00:00','2024-08-31 20:47:13.685 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d6efeb635a764cbe80d24b81e9da4425$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9781b652-4d9c-41ea-9f35-0ece80a168dc): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7d11a8912aef4fcda52b2572e359aa59$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Simplified Functional Grid Format','2022-01-11 07:21:23.000 +00:00','840282c7-4246-44db-a1f6-d753c1913547','2024-08-31 20:47:13.686 +00:00','2024-08-31 20:47:13.686 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7d11a8912aef4fcda52b2572e359aa59$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c76c6b30-7225-44ca-a964-65b2a35f6ae7): COMMIT;
Processed user: Abhi
Executing (cca9a9e5-dee2-4558-b657-9844d1625194): START TRANSACTION;
Executing (ffaa32cb-6c71-4c27-899a-8001559ed798): COMMIT;
topicName PDA Hands on 2021-01-08T07:48:14.000+0000
Executing (c69cecc1-f398-4eee-9169-2f700035d26c): START TRANSACTION;
Executing (cca9a9e5-dee2-4558-b657-9844d1625194): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'a7c83a7f-e4bd-4fa8-9c2a-914c38352ec0' AND "UserTopic"."name" = 'Feedback and next steps LL2' AND "UserTopic"."issuedAt" = '2022-03-08 06:49:15.000 +00:00' LIMIT 1;
Executing (357a304d-b2fc-47db-96c4-c6669b844436): COMMIT;
Executing (c69cecc1-f398-4eee-9169-2f700035d26c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '941579b3-5b8d-43eb-88b1-80e87fa6a840' AND "UserTopic"."name" = 'Hub Roles for Virtual Interactions' AND "UserTopic"."issuedAt" = '2020-12-10 05:57:42.000 +00:00' LIMIT 1;
Executing (9781b652-4d9c-41ea-9f35-0ece80a168dc): COMMIT;
topicName Observations and Feedback | T1.03 | DG 2020-12-10T12:18:51.000+0000
Executing (98e26804-0c60-438a-aa0d-f2e5d0ba7065): START TRANSACTION;
Executing (c69cecc1-f398-4eee-9169-2f700035d26c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_39b8e795580b4725817dc169919a8108$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Hub Roles for Virtual Interactions','2020-12-10 05:57:42.000 +00:00','941579b3-5b8d-43eb-88b1-80e87fa6a840','2024-08-31 20:47:13.692 +00:00','2024-08-31 20:47:13.692 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_39b8e795580b4725817dc169919a8108$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cca9a9e5-dee2-4558-b657-9844d1625194): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_dcc8ae2f0b0949919ce385f8b713c588$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Feedback and next steps LL2','2022-03-08 06:49:15.000 +00:00','a7c83a7f-e4bd-4fa8-9c2a-914c38352ec0','2024-08-31 20:47:13.693 +00:00','2024-08-31 20:47:13.693 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_dcc8ae2f0b0949919ce385f8b713c588$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Crop Water Budgeting Overview
Executing (3e1c3b7f-8a9f-4d8d-bd0c-381071db3386): START TRANSACTION;
Executing (c69cecc1-f398-4eee-9169-2f700035d26c): COMMIT;
topicName Feedback and next steps 2022-01-25T07:26:12.000+0000
Executing (2128ea47-9669-42bf-8565-4f8e35f71ccb): START TRANSACTION;
Executing (98e26804-0c60-438a-aa0d-f2e5d0ba7065): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8866902d-32f0-4d36-a6d3-eeef2072405c' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 06:56:38.000 +00:00' LIMIT 1;
Processed user: Pritam ghosh
Executing (f414c6ed-273f-4d10-930c-82d413a11208): START TRANSACTION;
Executing (2128ea47-9669-42bf-8565-4f8e35f71ccb): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9ca87890-0726-4909-9ebd-92fab6ce4a20' AND "UserTopic"."name" = 'Hub Roles for Virtual Interactions' AND "UserTopic"."issuedAt" = '2020-10-14 09:46:33.000 +00:00' LIMIT 1;
Executing (3e1c3b7f-8a9f-4d8d-bd0c-381071db3386): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c919ec69-7f36-4a98-a6e7-a7733764d137' AND "UserTopic"."name" = 'Capacity building of Jaldoots on MGNREGA schemes provisions' AND "UserTopic"."issuedAt" = '2021-01-11 07:37:05.000 +00:00' LIMIT 1;
Executing (cca9a9e5-dee2-4558-b657-9844d1625194): COMMIT;
Executing (f414c6ed-273f-4d10-930c-82d413a11208): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5db4d93e-0440-4889-aede-7c3540cc5831' AND "UserTopic"."name" = 'Observations and Feedback | T1.03 | DG' AND "UserTopic"."issuedAt" = '2020-12-10 12:18:05.000 +00:00' LIMIT 1;
Executing (2128ea47-9669-42bf-8565-4f8e35f71ccb): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e60de489f2424c818db9815180e3a9e4$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Hub Roles for Virtual Interactions','2020-10-14 09:46:33.000 +00:00','9ca87890-0726-4909-9ebd-92fab6ce4a20','2024-08-31 20:47:13.700 +00:00','2024-08-31 20:47:13.700 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e60de489f2424c818db9815180e3a9e4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (98e26804-0c60-438a-aa0d-f2e5d0ba7065): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2a7ae1de380643fabc00aca36bbd2df9$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 06:56:38.000 +00:00','8866902d-32f0-4d36-a6d3-eeef2072405c','2024-08-31 20:47:13.702 +00:00','2024-08-31 20:47:13.702 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2a7ae1de380643fabc00aca36bbd2df9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f414c6ed-273f-4d10-930c-82d413a11208): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4fd04948f1e14c4e999edba68f907912$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Observations and Feedback | T1.03 | DG','2020-12-10 12:18:05.000 +00:00','5db4d93e-0440-4889-aede-7c3540cc5831','2024-08-31 20:47:13.703 +00:00','2024-08-31 20:47:13.703 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4fd04948f1e14c4e999edba68f907912$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3e1c3b7f-8a9f-4d8d-bd0c-381071db3386): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e5d1fd48d7264b81b444408697ff947f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots on MGNREGA schemes provisions','2021-01-11 07:37:05.000 +00:00','c919ec69-7f36-4a98-a6e7-a7733764d137','2024-08-31 20:47:13.705 +00:00','2024-08-31 20:47:13.705 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e5d1fd48d7264b81b444408697ff947f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Tejashree Sadhana Balaso
Executing (87338441-25f8-4a01-9cf6-d310b21e7848): START TRANSACTION;
Executing (f414c6ed-273f-4d10-930c-82d413a11208): COMMIT;
Executing (2128ea47-9669-42bf-8565-4f8e35f71ccb): COMMIT;
Executing (98e26804-0c60-438a-aa0d-f2e5d0ba7065): COMMIT;
topicName PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra. 2020-12-23T10:04:34.000+0000
Executing (a22a5137-7d6b-4017-a8a6-1fe3ffc0b868): START TRANSACTION;
topicName Guided Mentoring Format 2020-10-14T06:49:59.000+0000
Executing (98fca5f4-8998-4316-9003-984afe9fcdea): START TRANSACTION;
Executing (87338441-25f8-4a01-9cf6-d310b21e7848): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9c782be5-e423-49f9-8b28-613ccc87fc3a' AND "UserTopic"."name" = 'Introduction to Learning Experience Framework' AND "UserTopic"."issuedAt" = '2022-01-18 07:46:45.000 +00:00' LIMIT 1;
Executing (3e1c3b7f-8a9f-4d8d-bd0c-381071db3386): COMMIT;
Executing (a22a5137-7d6b-4017-a8a6-1fe3ffc0b868): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6afb2b3b-3e1c-4e13-9bd9-b1e2e77810c9' AND "UserTopic"."name" = 'Observations and Feedback | T1.03 | DG' AND "UserTopic"."issuedAt" = '2020-12-10 12:18:15.000 +00:00' LIMIT 1;
Executing (98fca5f4-8998-4316-9003-984afe9fcdea): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b912e843-b03e-4f84-8133-82016c8dd2a8' AND "UserTopic"."name" = 'Observations and Feedback | T1.03 | DG' AND "UserTopic"."issuedAt" = '2020-12-10 12:18:14.000 +00:00' LIMIT 1;
topicName PDA - Hands on 2020-12-28T07:28:59.000+0000
Executing (04e7ddd8-c691-4dc4-93ae-01267079d726): START TRANSACTION;
Executing (a22a5137-7d6b-4017-a8a6-1fe3ffc0b868): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0cca4ea4e24f4ab8964291e2992e3b17$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Observations and Feedback | T1.03 | DG','2020-12-10 12:18:15.000 +00:00','6afb2b3b-3e1c-4e13-9bd9-b1e2e77810c9','2024-08-31 20:47:13.715 +00:00','2024-08-31 20:47:13.715 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0cca4ea4e24f4ab8964291e2992e3b17$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (87338441-25f8-4a01-9cf6-d310b21e7848): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6acfa8dab88d4e6c9ff1e83512975486$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Learning Experience Framework','2022-01-18 07:46:45.000 +00:00','9c782be5-e423-49f9-8b28-613ccc87fc3a','2024-08-31 20:47:13.716 +00:00','2024-08-31 20:47:13.716 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6acfa8dab88d4e6c9ff1e83512975486$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Vaghela Ramesh B
Executing (6aa5ae9e-7d28-4bf3-8fdd-cb8d24ecb4d9): START TRANSACTION;
Executing (98fca5f4-8998-4316-9003-984afe9fcdea): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f01a4f510c954a6d84a1ed0a681e0267$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Observations and Feedback | T1.03 | DG','2020-12-10 12:18:14.000 +00:00','b912e843-b03e-4f84-8133-82016c8dd2a8','2024-08-31 20:47:13.718 +00:00','2024-08-31 20:47:13.718 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f01a4f510c954a6d84a1ed0a681e0267$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (04e7ddd8-c691-4dc4-93ae-01267079d726): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4c86587a-893e-4d75-9881-965d8fdab183' AND "UserTopic"."name" = 'Data collection and Analysis' AND "UserTopic"."issuedAt" = '2021-01-06 12:34:26.000 +00:00' LIMIT 1;
Executing (6aa5ae9e-7d28-4bf3-8fdd-cb8d24ecb4d9): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'ff97766a-e506-49df-9522-8efa994ff324' AND "UserTrainer"."name" = 'Manu Test Topic' AND "UserTrainer"."issueDate" = '2019-11-27 09:10:00.000 +00:00' LIMIT 1;
Executing (a22a5137-7d6b-4017-a8a6-1fe3ffc0b868): COMMIT;
Executing (87338441-25f8-4a01-9cf6-d310b21e7848): COMMIT;
Executing (6aa5ae9e-7d28-4bf3-8fdd-cb8d24ecb4d9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2a602fef5229474ca688a5095bf538d1$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Manu Test Topic','2019-11-27 09:10:00.000 +00:00','ff97766a-e506-49df-9522-8efa994ff324','2024-08-31 20:47:13.721 +00:00','2024-08-31 20:47:13.721 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2a602fef5229474ca688a5095bf538d1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (04e7ddd8-c691-4dc4-93ae-01267079d726): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ab3355752f14451fa4261b72a2e9b2c3$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Data collection and Analysis','2021-01-06 12:34:26.000 +00:00','4c86587a-893e-4d75-9881-965d8fdab183','2024-08-31 20:47:13.722 +00:00','2024-08-31 20:47:13.722 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ab3355752f14451fa4261b72a2e9b2c3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (98fca5f4-8998-4316-9003-984afe9fcdea): COMMIT;
Executing (6aa5ae9e-7d28-4bf3-8fdd-cb8d24ecb4d9): COMMIT;
topicName PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra. 2020-12-23T10:03:30.000+0000
Executing (a4d1035a-c108-4539-b6a4-8f7d3577fe66): START TRANSACTION;
topicName Feedback and next steps 2022-01-25T07:26:23.000+0000
Executing (1aee33a1-b35d-45b9-ac80-e1d6e8b6ca25): START TRANSACTION;
trainertopicname Experience of deploying CB solutions in Meghalaya
Executing (88e5ff4e-ac25-4381-8b91-96b55949ac92): START TRANSACTION;
Executing (a4d1035a-c108-4539-b6a4-8f7d3577fe66): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2e400362-1635-47e4-99c8-72b00dd38b19' AND "UserTopic"."name" = 'Water management' AND "UserTopic"."issuedAt" = '2020-09-02 10:19:53.000 +00:00' LIMIT 1;
topicName Getting Started with PDA 2020-11-25T09:34:23.000+0000
Executing (8ecc245e-389a-45a2-b5fa-40e7b003b838): START TRANSACTION;
Executing (04e7ddd8-c691-4dc4-93ae-01267079d726): COMMIT;
Executing (88e5ff4e-ac25-4381-8b91-96b55949ac92): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '88acf595-35dd-4ee8-87aa-924166be5859' AND "UserTopic"."name" = 'PDA Hands on' AND "UserTopic"."issuedAt" = '2021-01-02 06:56:35.000 +00:00' LIMIT 1;
Executing (a4d1035a-c108-4539-b6a4-8f7d3577fe66): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_263cb8ddcb894403a5ca9cf0a833a555$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Water management','2020-09-02 10:19:53.000 +00:00','2e400362-1635-47e4-99c8-72b00dd38b19','2024-08-31 20:47:13.730 +00:00','2024-08-31 20:47:13.730 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_263cb8ddcb894403a5ca9cf0a833a555$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8ecc245e-389a-45a2-b5fa-40e7b003b838): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '891f8b91-199c-4a29-bb5c-59c067279273' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 06:56:49.000 +00:00' LIMIT 1;
Executing (1aee33a1-b35d-45b9-ac80-e1d6e8b6ca25): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9bb07b4d-1f9a-46ff-abff-29ec483b7763' AND "UserTopic"."name" = 'Test for Content' AND "UserTopic"."issuedAt" = '2022-02-24 11:16:31.000 +00:00' LIMIT 1;
Executing (88e5ff4e-ac25-4381-8b91-96b55949ac92): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ac2cc8f25b68445ca5cb49eb053cd78e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Hands on','2021-01-02 06:56:35.000 +00:00','88acf595-35dd-4ee8-87aa-924166be5859','2024-08-31 20:47:13.732 +00:00','2024-08-31 20:47:13.732 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ac2cc8f25b68445ca5cb49eb053cd78e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8ecc245e-389a-45a2-b5fa-40e7b003b838): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8461c331d0224b9ea75e000d5c4fb1e4$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI PUs Staff','2021-05-05 06:56:49.000 +00:00','891f8b91-199c-4a29-bb5c-59c067279273','2024-08-31 20:47:13.733 +00:00','2024-08-31 20:47:13.733 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8461c331d0224b9ea75e000d5c4fb1e4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Getting Started with PDA 2020-11-25T09:34:21.000+0000
Executing (aa67e60d-9291-4bad-ac66-a8c5d7a9bce8): START TRANSACTION;
Executing (a4d1035a-c108-4539-b6a4-8f7d3577fe66): COMMIT;
Executing (1aee33a1-b35d-45b9-ac80-e1d6e8b6ca25): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b7fa69fd2a834a69924c3fd32ff19b0f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Test for Content','2022-02-24 11:16:31.000 +00:00','9bb07b4d-1f9a-46ff-abff-29ec483b7763','2024-08-31 20:47:13.735 +00:00','2024-08-31 20:47:13.735 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b7fa69fd2a834a69924c3fd32ff19b0f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName 3 Fold Program 2020-09-26T04:40:01.000+0000
Executing (1edb0894-d374-47cd-ac79-24651b373300): START TRANSACTION;
Executing (aa67e60d-9291-4bad-ac66-a8c5d7a9bce8): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6e95d2e7-e874-4076-9412-17aeeb8ea5c3' AND "UserTopic"."name" = 'Taking good photos and making posters' AND "UserTopic"."issuedAt" = '2022-04-05 07:37:20.000 +00:00' LIMIT 1;
Executing (88e5ff4e-ac25-4381-8b91-96b55949ac92): COMMIT;
Executing (8ecc245e-389a-45a2-b5fa-40e7b003b838): COMMIT;
Executing (1edb0894-d374-47cd-ac79-24651b373300): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '07c9dc3e-7f5b-44f2-9e77-db2626100a1f' AND "UserTopic"."name" = 'Capacity building of Jaldoots on MGNREGA schemes provisions' AND "UserTopic"."issuedAt" = '2021-01-11 07:36:54.000 +00:00' LIMIT 1;
Executing (aa67e60d-9291-4bad-ac66-a8c5d7a9bce8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_af9e868630314344ae3ea2e54ffbc784$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Taking good photos and making posters','2022-04-05 07:37:20.000 +00:00','6e95d2e7-e874-4076-9412-17aeeb8ea5c3','2024-08-31 20:47:13.740 +00:00','2024-08-31 20:47:13.740 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_af9e868630314344ae3ea2e54ffbc784$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Water Literacy Campaign 2021-01-05T12:40:45.000+0000
Executing (3a1380fc-90ed-4b68-8785-9af1cb373fe5): START TRANSACTION;
Executing (1aee33a1-b35d-45b9-ac80-e1d6e8b6ca25): COMMIT;
Executing (1edb0894-d374-47cd-ac79-24651b373300): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_dc238a3625fc4702a0e22ff442d3bfad$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots on MGNREGA schemes provisions','2021-01-11 07:36:54.000 +00:00','07c9dc3e-7f5b-44f2-9e77-db2626100a1f','2024-08-31 20:47:13.743 +00:00','2024-08-31 20:47:13.743 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_dc238a3625fc4702a0e22ff442d3bfad$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (aa67e60d-9291-4bad-ac66-a8c5d7a9bce8): COMMIT;
Executing (3a1380fc-90ed-4b68-8785-9af1cb373fe5): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '15834b56-cfac-4d93-ba91-1dcf7785ad19' AND "UserTopic"."name" = 'Virtual Interactions - Needs and Benefits' AND "UserTopic"."issuedAt" = '2020-10-14 05:53:30.000 +00:00' LIMIT 1;
Processed user: Jigneshkumar pravinbhai patel
Executing (273d0911-99da-4515-99e9-21071ca6c56d): START TRANSACTION;
topicName Introduction to Visual Design LL3 2022-03-22T07:24:24.000+0000
Executing (9d66ee5e-1ce9-4af0-9e48-ff665fab764b): START TRANSACTION;
topicName test 2022-02-25T04:41:29.000+0000
Executing (53b5053c-ae5e-4adf-b4d0-0a4778478d28): START TRANSACTION;
Executing (9d66ee5e-1ce9-4af0-9e48-ff665fab764b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '0fcdf556-7144-4bdf-a6b6-005b50b00f14' AND "UserTopic"."name" = 'PDA Demo' AND "UserTopic"."issuedAt" = '2021-08-27 06:49:07.000 +00:00' LIMIT 1;
Executing (1edb0894-d374-47cd-ac79-24651b373300): COMMIT;
Executing (3a1380fc-90ed-4b68-8785-9af1cb373fe5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cdb8d0529e86437f834cd2224eef54f3$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Virtual Interactions - Needs and Benefits','2020-10-14 05:53:30.000 +00:00','15834b56-cfac-4d93-ba91-1dcf7785ad19','2024-08-31 20:47:13.748 +00:00','2024-08-31 20:47:13.748 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cdb8d0529e86437f834cd2224eef54f3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (273d0911-99da-4515-99e9-21071ca6c56d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2b80d0a9-7767-4f05-9037-719583d95b5c' AND "UserTopic"."name" = 'PDA Additional features Tamil' AND "UserTopic"."issuedAt" = '2021-04-29 15:09:13.000 +00:00' LIMIT 1;
Executing (9d66ee5e-1ce9-4af0-9e48-ff665fab764b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ccfcd135982941a1bc10b1995e5ad145$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo','2021-08-27 06:49:07.000 +00:00','0fcdf556-7144-4bdf-a6b6-005b50b00f14','2024-08-31 20:47:13.749 +00:00','2024-08-31 20:47:13.749 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ccfcd135982941a1bc10b1995e5ad145$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Dharmendrbhai hothi
Executing (8e7d9eb8-726c-438b-8f20-07ba4e8df019): START TRANSACTION;
Executing (53b5053c-ae5e-4adf-b4d0-0a4778478d28): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8ec3b98a-9b06-40e1-9029-f3541fe9a640' AND "UserTopic"."name" = 'Capacity building of Jaldoots on MGNREGA schemes provisions' AND "UserTopic"."issuedAt" = '2021-01-11 07:36:50.000 +00:00' LIMIT 1;
Executing (9d66ee5e-1ce9-4af0-9e48-ff665fab764b): COMMIT;
Executing (8e7d9eb8-726c-438b-8f20-07ba4e8df019): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'efd178d2-ffe6-4fdf-90ac-0df881271fb4' AND "UserTopic"."name" = 'Capacity building of Jaldoots on MGNREGA schemes provisions' AND "UserTopic"."issuedAt" = '2021-01-11 07:39:12.000 +00:00' LIMIT 1;
Executing (273d0911-99da-4515-99e9-21071ca6c56d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9ef85436320546a1a9046b634fcfe386$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Additional features Tamil','2021-04-29 15:09:13.000 +00:00','2b80d0a9-7767-4f05-9037-719583d95b5c','2024-08-31 20:47:13.753 +00:00','2024-08-31 20:47:13.753 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9ef85436320546a1a9046b634fcfe386$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3a1380fc-90ed-4b68-8785-9af1cb373fe5): COMMIT;
topicName PDA Hand-on 2021-08-30T11:11:58.000+0000
Executing (b8692cab-c8cf-4ffb-8795-0527c94fffbf): START TRANSACTION;
Executing (8e7d9eb8-726c-438b-8f20-07ba4e8df019): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1cc8ed5fdc4c494ab548694a485cd337$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots on MGNREGA schemes provisions','2021-01-11 07:39:12.000 +00:00','efd178d2-ffe6-4fdf-90ac-0df881271fb4','2024-08-31 20:47:13.756 +00:00','2024-08-31 20:47:13.756 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1cc8ed5fdc4c494ab548694a485cd337$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (53b5053c-ae5e-4adf-b4d0-0a4778478d28): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_84c7eb15e3cc4e2ab56e22ed4f84d90d$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots on MGNREGA schemes provisions','2021-01-11 07:36:50.000 +00:00','8ec3b98a-9b06-40e1-9029-f3541fe9a640','2024-08-31 20:47:13.757 +00:00','2024-08-31 20:47:13.757 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_84c7eb15e3cc4e2ab56e22ed4f84d90d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b8692cab-c8cf-4ffb-8795-0527c94fffbf): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '805f8115-7fc6-481c-ae59-9a635ed92038' AND "UserTopic"."name" = 'Introduction to Learning Experience Framework' AND "UserTopic"."issuedAt" = '2022-01-18 07:45:11.000 +00:00' LIMIT 1;
topicName Hub Roles for Virtual Interactions 2020-10-14T10:40:39.000+0000
Executing (62499127-96cf-4f2a-9a2a-ff13e0c629d5): START TRANSACTION;
Executing (273d0911-99da-4515-99e9-21071ca6c56d): COMMIT;
Executing (b8692cab-c8cf-4ffb-8795-0527c94fffbf): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d908532763c4403aa5efb89089ba4bdf$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Learning Experience Framework','2022-01-18 07:45:11.000 +00:00','805f8115-7fc6-481c-ae59-9a635ed92038','2024-08-31 20:47:13.764 +00:00','2024-08-31 20:47:13.764 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d908532763c4403aa5efb89089ba4bdf$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (62499127-96cf-4f2a-9a2a-ff13e0c629d5): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b791b39b-25d7-4e24-a280-9cd6d4870c90' AND "UserTopic"."name" = 'PDA Hands on' AND "UserTopic"."issuedAt" = '2021-01-08 07:14:13.000 +00:00' LIMIT 1;
topicName Techniques of Irrigation 2021-05-19T12:03:05.000+0000
Executing (785fdd9d-600b-4764-8eb1-b689eb876de1): START TRANSACTION;
Executing (8e7d9eb8-726c-438b-8f20-07ba4e8df019): COMMIT;
Executing (53b5053c-ae5e-4adf-b4d0-0a4778478d28): COMMIT;
Executing (b8692cab-c8cf-4ffb-8795-0527c94fffbf): COMMIT;
Executing (62499127-96cf-4f2a-9a2a-ff13e0c629d5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_785223da5aba47b489b39ae2ed0a1741$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Hands on','2021-01-08 07:14:13.000 +00:00','b791b39b-25d7-4e24-a280-9cd6d4870c90','2024-08-31 20:47:13.768 +00:00','2024-08-31 20:47:13.768 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_785223da5aba47b489b39ae2ed0a1741$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (785fdd9d-600b-4764-8eb1-b689eb876de1): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8d96ee1c-383e-4573-84c2-5c4c5cb73b82' AND "UserTopic"."name" = 'Virtual Interactions - Needs and Benefits' AND "UserTopic"."issuedAt" = '2020-11-04 10:07:28.000 +00:00' LIMIT 1;
topicName Feedback and next steps 2022-01-25T07:27:00.000+0000
Executing (fa29acc3-ab18-43ec-b543-d65b722340b3): START TRANSACTION;
Processed user: JIVANBHAI B AHIR
Executing (3ae101d6-1750-4341-8866-18620dcaf1ad): START TRANSACTION;
Processed user: Prem vaghela
Executing (670bce3b-d5e8-46b3-8244-dc3a75488ee0): START TRANSACTION;
Executing (fa29acc3-ab18-43ec-b543-d65b722340b3): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '48cb496f-d8ea-4a2d-ad8f-394c45a57566' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2020-03-18 06:49:14.000 +00:00' LIMIT 1;
Executing (3ae101d6-1750-4341-8866-18620dcaf1ad): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6beec966-3a66-4621-9ff6-6fd5c20e8787' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2020-03-18 06:48:40.000 +00:00' LIMIT 1;
Executing (62499127-96cf-4f2a-9a2a-ff13e0c629d5): COMMIT;
Executing (785fdd9d-600b-4764-8eb1-b689eb876de1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8c0ec41e4c134a288cfbe68acc29da69$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Virtual Interactions - Needs and Benefits','2020-11-04 10:07:28.000 +00:00','8d96ee1c-383e-4573-84c2-5c4c5cb73b82','2024-08-31 20:47:13.775 +00:00','2024-08-31 20:47:13.775 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8c0ec41e4c134a288cfbe68acc29da69$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (fa29acc3-ab18-43ec-b543-d65b722340b3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a8d664deb11a423abfa2f2f4f594e581$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2020-03-18 06:49:14.000 +00:00','48cb496f-d8ea-4a2d-ad8f-394c45a57566','2024-08-31 20:47:13.777 +00:00','2024-08-31 20:47:13.777 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a8d664deb11a423abfa2f2f4f594e581$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3ae101d6-1750-4341-8866-18620dcaf1ad): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_95a8c87ecb5d4ec9a490a3c17d08dea3$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2020-03-18 06:48:40.000 +00:00','6beec966-3a66-4621-9ff6-6fd5c20e8787','2024-08-31 20:47:13.778 +00:00','2024-08-31 20:47:13.778 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_95a8c87ecb5d4ec9a490a3c17d08dea3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra. 2020-12-23T10:03:45.000+0000
Executing (b5c5fc79-dcc6-4e67-aa88-c226e0dfefb2): START TRANSACTION;
Executing (670bce3b-d5e8-46b3-8244-dc3a75488ee0): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '1b150e3f-f854-4a66-9e73-3e8d856706a1' AND "UserTopic"."name" = 'Codes instead of Scans' AND "UserTopic"."issuedAt" = '2021-02-04 06:06:15.000 +00:00' LIMIT 1;
Executing (fa29acc3-ab18-43ec-b543-d65b722340b3): COMMIT;
Executing (3ae101d6-1750-4341-8866-18620dcaf1ad): COMMIT;
Executing (b5c5fc79-dcc6-4e67-aa88-c226e0dfefb2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '387aedcd-c84e-409b-8067-b1d0e5444975' AND "UserTopic"."name" = 'PDA Updates' AND "UserTopic"."issuedAt" = '2020-10-06 06:26:45.000 +00:00' LIMIT 1;
Executing (785fdd9d-600b-4764-8eb1-b689eb876de1): COMMIT;
Processed user: Girdhari 
Executing (9206fea9-3879-4052-9439-dbf8256874c5): START TRANSACTION;
Processed user: Dimpal kumari
Executing (f0beecaf-d5f0-4c8e-aa69-cebbce19b2d6): START TRANSACTION;
Executing (b5c5fc79-dcc6-4e67-aa88-c226e0dfefb2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9e811faf686a490883d54b1ab2e0acd4$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Updates','2020-10-06 06:26:45.000 +00:00','387aedcd-c84e-409b-8067-b1d0e5444975','2024-08-31 20:47:13.786 +00:00','2024-08-31 20:47:13.786 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9e811faf686a490883d54b1ab2e0acd4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (670bce3b-d5e8-46b3-8244-dc3a75488ee0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c3d1a062693645389366d09f4a0c3faa$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Codes instead of Scans','2021-02-04 06:06:15.000 +00:00','1b150e3f-f854-4a66-9e73-3e8d856706a1','2024-08-31 20:47:13.787 +00:00','2024-08-31 20:47:13.787 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c3d1a062693645389366d09f4a0c3faa$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9206fea9-3879-4052-9439-dbf8256874c5): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c5d35819-2105-4cef-8c0a-af367a875971' AND "UserTopic"."name" = 'PDA Demo and Deployment Training for Trainers | ACT' AND "UserTopic"."issuedAt" = '2020-12-11 12:41:35.000 +00:00' LIMIT 1;
Executing (f0beecaf-d5f0-4c8e-aa69-cebbce19b2d6): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '60c6a9c3-268e-4b5c-9939-d0efdcaa04cb' AND "UserTopic"."name" = 'Data collection and Analysis' AND "UserTopic"."issuedAt" = '2021-01-06 12:49:11.000 +00:00' LIMIT 1;
Executing (b5c5fc79-dcc6-4e67-aa88-c226e0dfefb2): COMMIT;
topicName Guided Mentoring Format 2020-11-04T10:39:19.000+0000
Executing (a439ffc4-d795-480b-a32d-dca15a692039): START TRANSACTION;
Executing (9206fea9-3879-4052-9439-dbf8256874c5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2b7b2b0bb0dd4e9aa1af669078c79dfe$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo and Deployment Training for Trainers | ACT','2020-12-11 12:41:35.000 +00:00','c5d35819-2105-4cef-8c0a-af367a875971','2024-08-31 20:47:13.792 +00:00','2024-08-31 20:47:13.792 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2b7b2b0bb0dd4e9aa1af669078c79dfe$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f0beecaf-d5f0-4c8e-aa69-cebbce19b2d6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5d64c7147b1f403aa38461179a3d9d63$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Data collection and Analysis','2021-01-06 12:49:11.000 +00:00','60c6a9c3-268e-4b5c-9939-d0efdcaa04cb','2024-08-31 20:47:13.793 +00:00','2024-08-31 20:47:13.793 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5d64c7147b1f403aa38461179a3d9d63$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Well Monitoring - Example 2022-06-16T09:26:43.000+0000
Executing (10654c7d-59ff-4724-9c63-7ff38ca9a0e6): START TRANSACTION;
Executing (670bce3b-d5e8-46b3-8244-dc3a75488ee0): COMMIT;
Executing (9206fea9-3879-4052-9439-dbf8256874c5): COMMIT;
Executing (f0beecaf-d5f0-4c8e-aa69-cebbce19b2d6): COMMIT;
Executing (10654c7d-59ff-4724-9c63-7ff38ca9a0e6): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '3a089d0b-0cea-42c8-a60a-dd9fb54e25d4' AND "UserTopic"."name" = 'PDA Hands on' AND "UserTopic"."issuedAt" = '2021-01-08 07:14:07.000 +00:00' LIMIT 1;
Executing (a439ffc4-d795-480b-a32d-dca15a692039): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '971f2670-d929-4a00-a697-f5e19fa95fff' AND "UserTopic"."name" = 'Crop Water Budgeting Overview' AND "UserTopic"."issuedAt" = '2020-12-16 09:07:18.000 +00:00' LIMIT 1;
topicName Scripts Review | T1.02 | DG 2020-12-02T11:40:45.000+0000
Executing (a053bebe-061a-41b4-91c4-fd5a9c9adf99): START TRANSACTION;
Processed user: Raghuvirsinh Jadeja
Executing (8ec240ac-72cb-48c9-aa73-2ae56a21c8e0): START TRANSACTION;
Executing (10654c7d-59ff-4724-9c63-7ff38ca9a0e6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d2eab865618348119366b82f85a5d04e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Hands on','2021-01-08 07:14:07.000 +00:00','3a089d0b-0cea-42c8-a60a-dd9fb54e25d4','2024-08-31 20:47:13.799 +00:00','2024-08-31 20:47:13.799 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d2eab865618348119366b82f85a5d04e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Well Monitoring - Example 2022-06-16T09:26:06.000+0000
Executing (6c50adea-2b37-4bbd-8025-a17fdc2f758d): START TRANSACTION;
Executing (a053bebe-061a-41b4-91c4-fd5a9c9adf99): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f8ac18cb-5476-4655-b1b7-6459e8047e4d' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-01-30 09:11:08.000 +00:00' LIMIT 1;
Executing (8ec240ac-72cb-48c9-aa73-2ae56a21c8e0): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '441fc2a7-b992-46e0-951f-2a58ae3bdf32' AND "UserTopic"."name" = 'Scripts Review | T1.02 | DG' AND "UserTopic"."issuedAt" = '2020-12-02 11:39:04.000 +00:00' LIMIT 1;
Executing (a439ffc4-d795-480b-a32d-dca15a692039): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a04101fac3174ac88760491eeb7a9842$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Crop Water Budgeting Overview','2020-12-16 09:07:18.000 +00:00','971f2670-d929-4a00-a697-f5e19fa95fff','2024-08-31 20:47:13.802 +00:00','2024-08-31 20:47:13.802 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a04101fac3174ac88760491eeb7a9842$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a053bebe-061a-41b4-91c4-fd5a9c9adf99): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9d20b8c0408d4915badae6bfe789f19e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-01-30 09:11:08.000 +00:00','f8ac18cb-5476-4655-b1b7-6459e8047e4d','2024-08-31 20:47:13.803 +00:00','2024-08-31 20:47:13.803 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9d20b8c0408d4915badae6bfe789f19e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8ec240ac-72cb-48c9-aa73-2ae56a21c8e0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4b149b9be32648a29496d2086c3d4dd4$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Scripts Review | T1.02 | DG','2020-12-02 11:39:04.000 +00:00','441fc2a7-b992-46e0-951f-2a58ae3bdf32','2024-08-31 20:47:13.803 +00:00','2024-08-31 20:47:13.803 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4b149b9be32648a29496d2086c3d4dd4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6c50adea-2b37-4bbd-8025-a17fdc2f758d): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'f5c71709-8bfc-4fe9-a633-559aeff445e6' AND "UserTrainer"."name" = 'Orientation on Abhy and PGWM - II' AND "UserTrainer"."issueDate" = '2021-08-14 12:30:00.000 +00:00' LIMIT 1;
Executing (10654c7d-59ff-4724-9c63-7ff38ca9a0e6): COMMIT;
Executing (a053bebe-061a-41b4-91c4-fd5a9c9adf99): COMMIT;
Executing (6c50adea-2b37-4bbd-8025-a17fdc2f758d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_76e77064df2d4d3aacb10534a3fb02d5$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM - II','2021-08-14 12:30:00.000 +00:00','f5c71709-8bfc-4fe9-a633-559aeff445e6','2024-08-31 20:47:13.806 +00:00','2024-08-31 20:47:13.806 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_76e77064df2d4d3aacb10534a3fb02d5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a439ffc4-d795-480b-a32d-dca15a692039): COMMIT;
topicName Capacity building of Jaldoots on MGNREGA schemes provisions 2021-01-11T07:54:01.000+0000
Executing (f30ea13f-813e-41c6-8336-5454d9e83a90): START TRANSACTION;
Executing (8ec240ac-72cb-48c9-aa73-2ae56a21c8e0): COMMIT;
topicName PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra. 2020-12-23T10:03:31.000+0000
Executing (2f31dd92-920c-40ac-b422-05ab8c6cfb74): START TRANSACTION;
Executing (f30ea13f-813e-41c6-8336-5454d9e83a90): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'aa8b852d-d69b-4341-a0fa-b8926901b4e9' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2020-03-18 06:49:10.000 +00:00' LIMIT 1;
topicName Observations and Feedback | T1.03 | DG 2020-12-10T12:21:44.000+0000
Executing (627daae7-a2ae-4165-bb3e-9c84a3a24474): START TRANSACTION;
trainertopicname Data collection and Monitoring
Executing (e31daef5-b2b3-4ddb-bbbe-004f5f0486b8): START TRANSACTION;
Executing (f30ea13f-813e-41c6-8336-5454d9e83a90): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f6489126b68b49878fb23945c569d211$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2020-03-18 06:49:10.000 +00:00','aa8b852d-d69b-4341-a0fa-b8926901b4e9','2024-08-31 20:47:13.809 +00:00','2024-08-31 20:47:13.809 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f6489126b68b49878fb23945c569d211$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (627daae7-a2ae-4165-bb3e-9c84a3a24474): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6db52b87-7d08-4b7a-98da-0ab423f15330' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-01-30 09:11:52.000 +00:00' LIMIT 1;
Executing (2f31dd92-920c-40ac-b422-05ab8c6cfb74): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c37080b4-1d4c-4a2c-98fd-8c7d6b78e36a' AND "UserTopic"."name" = 'Capacity building of Jaldoots on MGNREGA schemes provisions' AND "UserTopic"."issuedAt" = '2021-01-11 07:37:19.000 +00:00' LIMIT 1;
Executing (6c50adea-2b37-4bbd-8025-a17fdc2f758d): COMMIT;
Executing (627daae7-a2ae-4165-bb3e-9c84a3a24474): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_537240c352484e1ea45c4782ed3bfa0d$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-01-30 09:11:52.000 +00:00','6db52b87-7d08-4b7a-98da-0ab423f15330','2024-08-31 20:47:13.812 +00:00','2024-08-31 20:47:13.812 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_537240c352484e1ea45c4782ed3bfa0d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e31daef5-b2b3-4ddb-bbbe-004f5f0486b8): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8015b555-310f-4896-be19-6801c9d16a40' AND "UserTopic"."name" = 'Capacity building of Jaldoots on MGNREGA schemes provisions' AND "UserTopic"."issuedAt" = '2021-01-11 07:37:06.000 +00:00' LIMIT 1;
Executing (f30ea13f-813e-41c6-8336-5454d9e83a90): COMMIT;
Executing (2f31dd92-920c-40ac-b422-05ab8c6cfb74): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ee9e71d3716143a1a36b4447b33cdcbf$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots on MGNREGA schemes provisions','2021-01-11 07:37:19.000 +00:00','c37080b4-1d4c-4a2c-98fd-8c7d6b78e36a','2024-08-31 20:47:13.814 +00:00','2024-08-31 20:47:13.814 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ee9e71d3716143a1a36b4447b33cdcbf$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Orientation on Abhy and PGWM
Executing (db992437-0a9c-452c-92d3-983d885cdd13): START TRANSACTION;
Processed user: Arvind Agarwal
Executing (e098abdd-32cf-40e5-8e65-381b8365c16a): START TRANSACTION;
Executing (e31daef5-b2b3-4ddb-bbbe-004f5f0486b8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e905a65fe0594985afb1f31080f59ccd$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots on MGNREGA schemes provisions','2021-01-11 07:37:06.000 +00:00','8015b555-310f-4896-be19-6801c9d16a40','2024-08-31 20:47:13.815 +00:00','2024-08-31 20:47:13.815 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e905a65fe0594985afb1f31080f59ccd$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (627daae7-a2ae-4165-bb3e-9c84a3a24474): COMMIT;
Executing (e098abdd-32cf-40e5-8e65-381b8365c16a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '534ec60b-0deb-41a6-97f8-2b5477f9c3a3' AND "UserTopic"."name" = 'ಅಟಲ್ ಭೂಜಲ್ ಯೋಜನೆಯ ಅವಲೋಕನ' AND "UserTopic"."issuedAt" = '2021-05-25 11:26:31.000 +00:00' LIMIT 1;
Executing (db992437-0a9c-452c-92d3-983d885cdd13): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '561f2614-a9a4-4fea-8f74-fd79e0a2854a' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-01-30 09:07:29.000 +00:00' LIMIT 1;
Executing (2f31dd92-920c-40ac-b422-05ab8c6cfb74): COMMIT;
Executing (e098abdd-32cf-40e5-8e65-381b8365c16a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_50d4ac2b6a8e4bb1b87c882a493ba686$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'ಅಟಲ್ ಭೂಜಲ್ ಯೋಜನೆಯ ಅವಲೋಕನ','2021-05-25 11:26:31.000 +00:00','534ec60b-0deb-41a6-97f8-2b5477f9c3a3','2024-08-31 20:47:13.818 +00:00','2024-08-31 20:47:13.818 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_50d4ac2b6a8e4bb1b87c882a493ba686$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Capacity building of Jaldoots on MGNREGA schemes provisions 2021-01-11T07:54:35.000+0000
Executing (37da75cd-6e8b-49f2-bc8c-14e07167377a): START TRANSACTION;
Executing (e31daef5-b2b3-4ddb-bbbe-004f5f0486b8): COMMIT;
Executing (37da75cd-6e8b-49f2-bc8c-14e07167377a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '978c03c9-6857-455f-b955-129c9f5d70e9' AND "UserTopic"."name" = 'Introduction to Simplified Functional Grid Format' AND "UserTopic"."issuedAt" = '2022-01-11 07:21:16.000 +00:00' LIMIT 1;
Processed user: Dinesh Oza
Executing (6cdace53-fc4e-4104-ba11-f7ce65b8d535): START TRANSACTION;
Executing (db992437-0a9c-452c-92d3-983d885cdd13): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c20a74dc3a51469a82b23b3366d1334f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-01-30 09:07:29.000 +00:00','561f2614-a9a4-4fea-8f74-fd79e0a2854a','2024-08-31 20:47:13.821 +00:00','2024-08-31 20:47:13.821 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c20a74dc3a51469a82b23b3366d1334f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (37da75cd-6e8b-49f2-bc8c-14e07167377a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9dc7a4909c9244a38ac0bfc084d95052$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Simplified Functional Grid Format','2022-01-11 07:21:16.000 +00:00','978c03c9-6857-455f-b955-129c9f5d70e9','2024-08-31 20:47:13.822 +00:00','2024-08-31 20:47:13.822 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9dc7a4909c9244a38ac0bfc084d95052$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6cdace53-fc4e-4104-ba11-f7ce65b8d535): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e91cf5ba-cf27-4a89-8cec-dc7423a1fac5' AND "UserTopic"."name" = 'Crop Water Budgeting Overview' AND "UserTopic"."issuedAt" = '2020-12-16 07:23:50.000 +00:00' LIMIT 1;
Processed user: Balavantbhai
Executing (3a0deb01-ace6-4ff5-a102-1b086029102d): START TRANSACTION;
Executing (e098abdd-32cf-40e5-8e65-381b8365c16a): COMMIT;
Executing (6cdace53-fc4e-4104-ba11-f7ce65b8d535): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_87738f99f3bd462cb73e27d4b90e9cd4$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Crop Water Budgeting Overview','2020-12-16 07:23:50.000 +00:00','e91cf5ba-cf27-4a89-8cec-dc7423a1fac5','2024-08-31 20:47:13.824 +00:00','2024-08-31 20:47:13.824 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_87738f99f3bd462cb73e27d4b90e9cd4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3a0deb01-ace6-4ff5-a102-1b086029102d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '249f141b-3fd0-4d6b-8fdb-c68de7aca819' AND "UserTopic"."name" = 'PDA Demo and Deployment Training | ACT' AND "UserTopic"."issuedAt" = '2020-12-11 13:54:18.000 +00:00' LIMIT 1;
Executing (db992437-0a9c-452c-92d3-983d885cdd13): COMMIT;
Executing (37da75cd-6e8b-49f2-bc8c-14e07167377a): COMMIT;
topicName Test run for Assisted Scanning 2020-08-07T07:11:07.000+0000
Executing (32c8badc-d2c3-4f65-bae1-ab2ac2f587d6): START TRANSACTION;
Processed user: Nitesh Kumar
Executing (43610d1f-cff6-430a-a8b4-b8a99c642f3c): START TRANSACTION;
Executing (3a0deb01-ace6-4ff5-a102-1b086029102d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_48ac913a882f49d9b9818f536214339f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo and Deployment Training | ACT','2020-12-11 13:54:18.000 +00:00','249f141b-3fd0-4d6b-8fdb-c68de7aca819','2024-08-31 20:47:13.827 +00:00','2024-08-31 20:47:13.827 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_48ac913a882f49d9b9818f536214339f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6cdace53-fc4e-4104-ba11-f7ce65b8d535): COMMIT;
topicName Capacity building of Jaldoots on MGNREGA schemes provisions 2021-01-11T07:39:52.000+0000
Executing (b2160471-54fb-4b07-a347-afd64e54846f): START TRANSACTION;
Executing (43610d1f-cff6-430a-a8b4-b8a99c642f3c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '623772f6-e951-4704-ad07-d8e1b852bee3' AND "UserTopic"."name" = 'Scripts Review | T1.02 | DG' AND "UserTopic"."issuedAt" = '2020-12-02 11:39:07.000 +00:00' LIMIT 1;
Executing (32c8badc-d2c3-4f65-bae1-ab2ac2f587d6): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b5796159-916b-4366-8cda-b3bc91f214ec' AND "UserTopic"."name" = 'PDA Dashboard Demo' AND "UserTopic"."issuedAt" = '2021-11-26 05:29:40.000 +00:00' LIMIT 1;
Executing (b2160471-54fb-4b07-a347-afd64e54846f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'eabded96-d1c0-4ec9-a932-4b57b466a34c' AND "UserTopic"."name" = 'Introduction to Simplified Functional Grid Format' AND "UserTopic"."issuedAt" = '2022-01-11 07:28:55.000 +00:00' LIMIT 1;
Processed user: Ramesh gor
Executing (6e20c3c2-20e8-4e13-8689-12fe920e5770): START TRANSACTION;
Executing (3a0deb01-ace6-4ff5-a102-1b086029102d): COMMIT;
Executing (b2160471-54fb-4b07-a347-afd64e54846f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3b71074de22b44eba16a0704d4874474$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Simplified Functional Grid Format','2022-01-11 07:28:55.000 +00:00','eabded96-d1c0-4ec9-a932-4b57b466a34c','2024-08-31 20:47:13.832 +00:00','2024-08-31 20:47:13.832 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3b71074de22b44eba16a0704d4874474$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6e20c3c2-20e8-4e13-8689-12fe920e5770): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e84e38c5-38bc-47e9-b5f1-a6c47d653c1e' AND "UserTopic"."name" = 'Capacity building of Jaldoots on MGNREGA schemes provisions' AND "UserTopic"."issuedAt" = '2021-01-11 07:56:59.000 +00:00' LIMIT 1;
Executing (43610d1f-cff6-430a-a8b4-b8a99c642f3c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c89ebfdc79c048d4821b63963c0ea2ad$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Scripts Review | T1.02 | DG','2020-12-02 11:39:07.000 +00:00','623772f6-e951-4704-ad07-d8e1b852bee3','2024-08-31 20:47:13.833 +00:00','2024-08-31 20:47:13.833 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c89ebfdc79c048d4821b63963c0ea2ad$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (32c8badc-d2c3-4f65-bae1-ab2ac2f587d6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a955c334badf463e853d15e39a85f9fa$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Dashboard Demo','2021-11-26 05:29:40.000 +00:00','b5796159-916b-4366-8cda-b3bc91f214ec','2024-08-31 20:47:13.834 +00:00','2024-08-31 20:47:13.834 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a955c334badf463e853d15e39a85f9fa$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b2160471-54fb-4b07-a347-afd64e54846f): COMMIT;
Executing (6e20c3c2-20e8-4e13-8689-12fe920e5770): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c8953bd33c6d448b85b859beba4a3fde$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots on MGNREGA schemes provisions','2021-01-11 07:56:59.000 +00:00','e84e38c5-38bc-47e9-b5f1-a6c47d653c1e','2024-08-31 20:47:13.836 +00:00','2024-08-31 20:47:13.836 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c8953bd33c6d448b85b859beba4a3fde$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Observations and Feedback | T1.03 | DG 2020-12-10T12:18:11.000+0000
Executing (3f987344-44dd-414b-9981-4b79108ea444): START TRANSACTION;
Processed user: Sunil Kumar Pandey
Executing (d063024a-b870-4059-bbeb-ce92a350d457): START TRANSACTION;
Executing (43610d1f-cff6-430a-a8b4-b8a99c642f3c): COMMIT;
Executing (32c8badc-d2c3-4f65-bae1-ab2ac2f587d6): COMMIT;
Executing (d063024a-b870-4059-bbeb-ce92a350d457): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'fd95ee30-3ab4-4c79-a54d-225162900383' AND "UserTopic"."name" = 'Capacity building of Jaldoots on MGNREGA schemes provisions' AND "UserTopic"."issuedAt" = '2021-01-11 07:39:28.000 +00:00' LIMIT 1;
Executing (3f987344-44dd-414b-9981-4b79108ea444): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8534ca90-db07-4871-9011-4d41455f192c' AND "UserTopic"."name" = 'Capacity building of Jaldoots on MGNREGA schemes provisions' AND "UserTopic"."issuedAt" = '2021-01-11 07:36:48.000 +00:00' LIMIT 1;
Executing (6e20c3c2-20e8-4e13-8689-12fe920e5770): COMMIT;
Executing (d063024a-b870-4059-bbeb-ce92a350d457): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f41947a1b24f4ab7a9f6e82daa55eb0e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots on MGNREGA schemes provisions','2021-01-11 07:39:28.000 +00:00','fd95ee30-3ab4-4c79-a54d-225162900383','2024-08-31 20:47:13.840 +00:00','2024-08-31 20:47:13.840 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f41947a1b24f4ab7a9f6e82daa55eb0e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Hands on 2021-01-02T06:57:06.000+0000
Executing (8be359ae-e34d-4ce1-b563-04a98f89666c): START TRANSACTION;
Processed user: Vasim Matadar
Executing (c717b61d-f49a-4c99-a026-a92f60692001): START TRANSACTION;
Executing (8be359ae-e34d-4ce1-b563-04a98f89666c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e6afff30-727b-4d6a-9a0f-a21ce2ac628c' AND "UserTopic"."name" = 'Feedback and next steps LL2' AND "UserTopic"."issuedAt" = '2022-03-08 07:10:43.000 +00:00' LIMIT 1;
Executing (3f987344-44dd-414b-9981-4b79108ea444): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_112b3256cfe14eca839c0dca39dc29fc$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots on MGNREGA schemes provisions','2021-01-11 07:36:48.000 +00:00','8534ca90-db07-4871-9011-4d41455f192c','2024-08-31 20:47:13.843 +00:00','2024-08-31 20:47:13.843 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_112b3256cfe14eca839c0dca39dc29fc$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Navghan bharvad
Executing (1eec1c8c-520f-4d1c-a3cc-b1ac55417bf9): START TRANSACTION;
Executing (8be359ae-e34d-4ce1-b563-04a98f89666c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_376a3f62e91f400c9cc553ec2d1fc193$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Feedback and next steps LL2','2022-03-08 07:10:43.000 +00:00','e6afff30-727b-4d6a-9a0f-a21ce2ac628c','2024-08-31 20:47:13.844 +00:00','2024-08-31 20:47:13.844 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_376a3f62e91f400c9cc553ec2d1fc193$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c717b61d-f49a-4c99-a026-a92f60692001): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'f838dac6-0aca-4a3c-a686-f4e012303539' AND "UserTrainer"."name" = 'Content and PDA - Capacity Building Package' AND "UserTrainer"."issueDate" = '2020-12-21 11:30:00.000 +00:00' LIMIT 1;
Executing (d063024a-b870-4059-bbeb-ce92a350d457): COMMIT;
Executing (c717b61d-f49a-4c99-a026-a92f60692001): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_48b4bf65d7844397a33335e9c33c78af$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Content and PDA - Capacity Building Package','2020-12-21 11:30:00.000 +00:00','f838dac6-0aca-4a3c-a686-f4e012303539','2024-08-31 20:47:13.846 +00:00','2024-08-31 20:47:13.846 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_48b4bf65d7844397a33335e9c33c78af$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1eec1c8c-520f-4d1c-a3cc-b1ac55417bf9): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '1da12f92-cab3-4f8b-b8c7-4c9baf5a32f9' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-01-30 09:05:33.000 +00:00' LIMIT 1;
Executing (3f987344-44dd-414b-9981-4b79108ea444): COMMIT;
Executing (8be359ae-e34d-4ce1-b563-04a98f89666c): COMMIT;
Processed user: Dinesh tarsi 
Executing (a70a6099-ba39-42a8-897b-4033bcf49d87): START TRANSACTION;
Executing (1eec1c8c-520f-4d1c-a3cc-b1ac55417bf9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_648b0a41f6ab4a5c866c0b7aaefbd548$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-01-30 09:05:33.000 +00:00','1da12f92-cab3-4f8b-b8c7-4c9baf5a32f9','2024-08-31 20:47:13.849 +00:00','2024-08-31 20:47:13.849 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_648b0a41f6ab4a5c866c0b7aaefbd548$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a70a6099-ba39-42a8-897b-4033bcf49d87): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b16b7c59-7de2-41e9-9a24-d63e33c0a825' AND "UserTopic"."name" = 'Introduction to Simplified Functional Grid Format' AND "UserTopic"."issuedAt" = '2022-01-11 07:21:12.000 +00:00' LIMIT 1;
Processed user: Vashram desai
Executing (f4ab3ade-760c-4555-a5d1-a51a024f9a9f): START TRANSACTION;
Executing (c717b61d-f49a-4c99-a026-a92f60692001): COMMIT;
topicName Feedback and next steps 2022-01-25T07:51:26.000+0000
Executing (384313f1-e43a-428a-a675-b3d04296f506): START TRANSACTION;
Executing (a70a6099-ba39-42a8-897b-4033bcf49d87): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5b833bb6512347609a0854c4f86ce61e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Simplified Functional Grid Format','2022-01-11 07:21:12.000 +00:00','b16b7c59-7de2-41e9-9a24-d63e33c0a825','2024-08-31 20:47:13.853 +00:00','2024-08-31 20:47:13.853 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5b833bb6512347609a0854c4f86ce61e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f4ab3ade-760c-4555-a5d1-a51a024f9a9f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c55bd79b-042e-46bf-9e18-f4dd8e383e5d' AND "UserTopic"."name" = 'Data collection and Analysis' AND "UserTopic"."issuedAt" = '2021-01-06 12:32:22.000 +00:00' LIMIT 1;
Processed user: Amrtha Kasturi Rangan
Executing (98d44e35-344b-414b-a8fd-dc602e448c7b): START TRANSACTION;
Executing (384313f1-e43a-428a-a675-b3d04296f506): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '452450c8-d384-4c61-83f8-4faf11a6d8ef' AND "UserTopic"."name" = 'Churu Fluorosis PDA demo' AND "UserTopic"."issuedAt" = '2020-10-21 09:34:50.000 +00:00' LIMIT 1;
Executing (1eec1c8c-520f-4d1c-a3cc-b1ac55417bf9): COMMIT;
Executing (a70a6099-ba39-42a8-897b-4033bcf49d87): COMMIT;
Executing (f4ab3ade-760c-4555-a5d1-a51a024f9a9f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5e284eb5ca10422384894f5289e716f6$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Data collection and Analysis','2021-01-06 12:32:22.000 +00:00','c55bd79b-042e-46bf-9e18-f4dd8e383e5d','2024-08-31 20:47:13.857 +00:00','2024-08-31 20:47:13.857 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5e284eb5ca10422384894f5289e716f6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (98d44e35-344b-414b-a8fd-dc602e448c7b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4f3f5e8e-de1b-411a-9454-9038cca34335' AND "UserTopic"."name" = 'PDA Hands on' AND "UserTopic"."issuedAt" = '2021-01-08 07:57:01.000 +00:00' LIMIT 1;
Processed user: Jitendra Sonawane
Executing (c1f408e4-3aae-460b-888c-51051ae84181): START TRANSACTION;
Executing (f4ab3ade-760c-4555-a5d1-a51a024f9a9f): COMMIT;
Executing (384313f1-e43a-428a-a675-b3d04296f506): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2712b7b1ec164c8684ca738afac3d913$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Churu Fluorosis PDA demo','2020-10-21 09:34:50.000 +00:00','452450c8-d384-4c61-83f8-4faf11a6d8ef','2024-08-31 20:47:13.861 +00:00','2024-08-31 20:47:13.861 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2712b7b1ec164c8684ca738afac3d913$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Capacity building of Jaldoots on MGNREGA schemes provisions 2021-01-11T07:37:00.000+0000
Executing (69132bf9-ff93-4788-aa77-89c6bec36314): START TRANSACTION;
Executing (c1f408e4-3aae-460b-888c-51051ae84181): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '2cbe0329-07a4-481a-bf7a-22b814a464e5' AND "UserTrainer"."name" = 'Demonstration of PDA - ICDS Supervisors Training' AND "UserTrainer"."issueDate" = '2021-06-13 06:30:00.000 +00:00' LIMIT 1;
topicName Orientation on Abhy and PGWM - II 2021-08-14T11:58:36.000+0000
Executing (190d04d7-8a59-46e7-ad8e-0b3809e5afc8): START TRANSACTION;
Executing (98d44e35-344b-414b-a8fd-dc602e448c7b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_07632fd2acf34ba2b9320083776b67af$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Hands on','2021-01-08 07:57:01.000 +00:00','4f3f5e8e-de1b-411a-9454-9038cca34335','2024-08-31 20:47:13.865 +00:00','2024-08-31 20:47:13.865 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_07632fd2acf34ba2b9320083776b67af$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c1f408e4-3aae-460b-888c-51051ae84181): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_894a0ef048c74c8fbfc377d81bf75441$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Demonstration of PDA - ICDS Supervisors Training','2021-06-13 06:30:00.000 +00:00','2cbe0329-07a4-481a-bf7a-22b814a464e5','2024-08-31 20:47:13.867 +00:00','2024-08-31 20:47:13.867 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_894a0ef048c74c8fbfc377d81bf75441$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (190d04d7-8a59-46e7-ad8e-0b3809e5afc8): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'a6241a20-9982-4041-a67d-7e2a2e43f6b9' AND "UserTrainer"."name" = 'Introduction to Visual Design LL3' AND "UserTrainer"."issueDate" = '2022-03-22 07:30:00.000 +00:00' LIMIT 1;
Executing (69132bf9-ff93-4788-aa77-89c6bec36314): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'e6f9c8f7-019e-4d38-b18a-5acf5900c008' AND "UserTrainer"."name" = 'Introduction to Visual Design LL3' AND "UserTrainer"."issueDate" = '2022-03-22 07:30:00.000 +00:00' LIMIT 1;
Executing (384313f1-e43a-428a-a675-b3d04296f506): COMMIT;
Executing (c1f408e4-3aae-460b-888c-51051ae84181): COMMIT;
Executing (190d04d7-8a59-46e7-ad8e-0b3809e5afc8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6a303d53648c43338266ed318ec27d04$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Visual Design LL3','2022-03-22 07:30:00.000 +00:00','a6241a20-9982-4041-a67d-7e2a2e43f6b9','2024-08-31 20:47:13.871 +00:00','2024-08-31 20:47:13.871 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6a303d53648c43338266ed318ec27d04$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (69132bf9-ff93-4788-aa77-89c6bec36314): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_968ffcb304f4426e9b63a8e9bfcf4008$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Visual Design LL3','2022-03-22 07:30:00.000 +00:00','e6f9c8f7-019e-4d38-b18a-5acf5900c008','2024-08-31 20:47:13.873 +00:00','2024-08-31 20:47:13.873 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_968ffcb304f4426e9b63a8e9bfcf4008$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (98d44e35-344b-414b-a8fd-dc602e448c7b): COMMIT;
trainertopicname PDA mock session - Churu
Executing (a794fbc6-4c60-456a-9113-66f249199a4a): START TRANSACTION;
Executing (190d04d7-8a59-46e7-ad8e-0b3809e5afc8): COMMIT;
topicName JD test - Assam 2023-01-10T06:21:33.000+0000
Executing (f1ab0419-545c-4213-8902-c80c0b7c5f67): START TRANSACTION;
Executing (a794fbc6-4c60-456a-9113-66f249199a4a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '945619e0-0d9c-435a-ad20-c4d392b263bd' AND "UserTopic"."name" = 'Crop Water Budgeting Overview' AND "UserTopic"."issuedAt" = '2020-12-16 07:29:20.000 +00:00' LIMIT 1;
trainertopicname Feedback and next steps LL2
Executing (45538f91-2ade-45c9-9083-bbabb96ff050): START TRANSACTION;
Executing (69132bf9-ff93-4788-aa77-89c6bec36314): COMMIT;
topicName Jaldoots capacity building on Geo-hydrology 2021-01-08T16:52:34.000+0000
Executing (64a0f319-f6ee-403d-87e9-23fc1104c635): START TRANSACTION;
Executing (a794fbc6-4c60-456a-9113-66f249199a4a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_be8adc226e264ad487f2be358ceeef25$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Crop Water Budgeting Overview','2020-12-16 07:29:20.000 +00:00','945619e0-0d9c-435a-ad20-c4d392b263bd','2024-08-31 20:47:13.879 +00:00','2024-08-31 20:47:13.879 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_be8adc226e264ad487f2be358ceeef25$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (45538f91-2ade-45c9-9083-bbabb96ff050): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'fb03a265-7824-49ee-a49d-fbe0c9e82564' AND "UserTopic"."name" = 'Data collection and Analysis' AND "UserTopic"."issuedAt" = '2021-01-06 12:32:14.000 +00:00' LIMIT 1;
trainertopicname Feedback and next steps LL2
Executing (4c9c2be3-013d-423c-9245-b4318a35502f): START TRANSACTION;
Executing (f1ab0419-545c-4213-8902-c80c0b7c5f67): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '305c306d-64cc-45eb-b51c-6bcb69c00291' AND "UserTopic"."name" = 'Introduction to atomised content' AND "UserTopic"."issuedAt" = '2022-02-15 06:22:57.000 +00:00' LIMIT 1;
Executing (45538f91-2ade-45c9-9083-bbabb96ff050): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_06d231c6da1b4e819f5823ba8fde470e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Data collection and Analysis','2021-01-06 12:32:14.000 +00:00','fb03a265-7824-49ee-a49d-fbe0c9e82564','2024-08-31 20:47:13.882 +00:00','2024-08-31 20:47:13.882 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_06d231c6da1b4e819f5823ba8fde470e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4c9c2be3-013d-423c-9245-b4318a35502f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '78fb6721-9eb2-4099-98f7-75340a08c883' AND "UserTopic"."name" = 'PDA Hands on' AND "UserTopic"."issuedAt" = '2021-01-08 07:15:18.000 +00:00' LIMIT 1;
Executing (64a0f319-f6ee-403d-87e9-23fc1104c635): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4e526a75-c8d4-436b-8245-b7f7dd485186' AND "UserTopic"."name" = 'PDA Demo and Deployment Training for Trainers | ACT' AND "UserTopic"."issuedAt" = '2020-12-11 12:41:36.000 +00:00' LIMIT 1;
Executing (4c9c2be3-013d-423c-9245-b4318a35502f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_16e4cd62a7a243a2a72e3d005a627ec0$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Hands on','2021-01-08 07:15:18.000 +00:00','78fb6721-9eb2-4099-98f7-75340a08c883','2024-08-31 20:47:13.884 +00:00','2024-08-31 20:47:13.884 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_16e4cd62a7a243a2a72e3d005a627ec0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a794fbc6-4c60-456a-9113-66f249199a4a): COMMIT;
Executing (f1ab0419-545c-4213-8902-c80c0b7c5f67): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9ae1a1bfbd3341fcbd1b7aa4b35cc898$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to atomised content','2022-02-15 06:22:57.000 +00:00','305c306d-64cc-45eb-b51c-6bcb69c00291','2024-08-31 20:47:13.885 +00:00','2024-08-31 20:47:13.885 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9ae1a1bfbd3341fcbd1b7aa4b35cc898$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Kerai harish
Executing (8bb6bbaa-de21-482b-9907-3c213c866343): START TRANSACTION;
Executing (45538f91-2ade-45c9-9083-bbabb96ff050): COMMIT;
Executing (64a0f319-f6ee-403d-87e9-23fc1104c635): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1d6cc3304dcd4621bbc40c5e203cc940$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo and Deployment Training for Trainers | ACT','2020-12-11 12:41:36.000 +00:00','4e526a75-c8d4-436b-8245-b7f7dd485186','2024-08-31 20:47:13.887 +00:00','2024-08-31 20:47:13.887 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1d6cc3304dcd4621bbc40c5e203cc940$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8bb6bbaa-de21-482b-9907-3c213c866343): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6df4face-5699-4fa1-bd64-0c565ee7440d' AND "UserTopic"."name" = 'Data collection and Analysis' AND "UserTopic"."issuedAt" = '2021-01-06 12:32:33.000 +00:00' LIMIT 1;
topicName Orientation on Abhy and PGWM - II 2021-08-14T11:56:41.000+0000
Executing (53683e20-f28e-4371-b461-0b6d96e69231): START TRANSACTION;
Executing (4c9c2be3-013d-423c-9245-b4318a35502f): COMMIT;
Executing (8bb6bbaa-de21-482b-9907-3c213c866343): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_33d4b9c0a8474c07928bcf67972d053c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Data collection and Analysis','2021-01-06 12:32:33.000 +00:00','6df4face-5699-4fa1-bd64-0c565ee7440d','2024-08-31 20:47:13.889 +00:00','2024-08-31 20:47:13.889 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_33d4b9c0a8474c07928bcf67972d053c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (53683e20-f28e-4371-b461-0b6d96e69231): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '67f6ffd9-0d75-4c92-8909-7c0f78daf8b7' AND "UserTopic"."name" = 'Manu Test Topic' AND "UserTopic"."issuedAt" = '2019-11-27 09:11:58.000 +00:00' LIMIT 1;
Executing (f1ab0419-545c-4213-8902-c80c0b7c5f67): COMMIT;
Executing (64a0f319-f6ee-403d-87e9-23fc1104c635): COMMIT;
Executing (53683e20-f28e-4371-b461-0b6d96e69231): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bed8e739ea914c1d8375c18db287d8ea$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Manu Test Topic','2019-11-27 09:11:58.000 +00:00','67f6ffd9-0d75-4c92-8909-7c0f78daf8b7','2024-08-31 20:47:13.891 +00:00','2024-08-31 20:47:13.891 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bed8e739ea914c1d8375c18db287d8ea$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-01-30T09:06:32.000+0000
Executing (cf04644f-1112-4ba5-ab96-7f05d000997e): START TRANSACTION;
topicName Taking good photos and making posters 2022-04-05T07:34:54.000+0000
Executing (7871aced-325d-4a81-b907-1663feb8bff6): START TRANSACTION;
Executing (8bb6bbaa-de21-482b-9907-3c213c866343): COMMIT;
topicName Scripts Review | T1.02 | DG 2020-12-02T11:39:32.000+0000
Executing (39f624df-ac13-4d6c-b28d-2c7eb56ee8ea): START TRANSACTION;
Executing (7871aced-325d-4a81-b907-1663feb8bff6): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '919b177f-2a3d-4883-8060-149bf84012b4' AND "UserTopic"."name" = 'JD test - Executing the JalShala ' AND "UserTopic"."issuedAt" = '2023-01-21 07:50:15.000 +00:00' LIMIT 1;
Executing (cf04644f-1112-4ba5-ab96-7f05d000997e): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'a7756c59-d51a-4cff-af34-75b0403432f1' AND "UserTrainer"."name" = 'Manu Test Topic' AND "UserTrainer"."issueDate" = '2019-11-27 09:10:00.000 +00:00' LIMIT 1;
topicName Orientation on Abhy and PGWM - II 2021-08-14T11:57:32.000+0000
Executing (4a2d52c9-b780-44c8-8875-f76842873348): START TRANSACTION;
Executing (39f624df-ac13-4d6c-b28d-2c7eb56ee8ea): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5a9679fe-6c56-4e22-aa0a-14adb9703410' AND "UserTopic"."name" = 'PDA mock session - Churu' AND "UserTopic"."issuedAt" = '2020-12-15 14:35:39.000 +00:00' LIMIT 1;
Executing (53683e20-f28e-4371-b461-0b6d96e69231): COMMIT;
Executing (4a2d52c9-b780-44c8-8875-f76842873348): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f5bda8c8-9b5d-4f02-aefc-e2ecf01d710c' AND "UserTopic"."name" = 'JD test - Training of Block Coordinators for JalDoot Program ' AND "UserTopic"."issuedAt" = '2023-01-31 10:32:56.000 +00:00' LIMIT 1;
Executing (7871aced-325d-4a81-b907-1663feb8bff6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6caa7a070afb4b42aeceb1e261f5b961$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD test - Executing the JalShala ','2023-01-21 07:50:15.000 +00:00','919b177f-2a3d-4883-8060-149bf84012b4','2024-08-31 20:47:13.897 +00:00','2024-08-31 20:47:13.897 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6caa7a070afb4b42aeceb1e261f5b961$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cf04644f-1112-4ba5-ab96-7f05d000997e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f9495be67bf8426a9cc88176c7be08b4$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Manu Test Topic','2019-11-27 09:10:00.000 +00:00','a7756c59-d51a-4cff-af34-75b0403432f1','2024-08-31 20:47:13.897 +00:00','2024-08-31 20:47:13.897 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f9495be67bf8426a9cc88176c7be08b4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4a2d52c9-b780-44c8-8875-f76842873348): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fb0aebfb076f402d9029218b105a128a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD test - Training of Block Coordinators for JalDoot Program ','2023-01-31 10:32:56.000 +00:00','f5bda8c8-9b5d-4f02-aefc-e2ecf01d710c','2024-08-31 20:47:13.898 +00:00','2024-08-31 20:47:13.898 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fb0aebfb076f402d9029218b105a128a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (39f624df-ac13-4d6c-b28d-2c7eb56ee8ea): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c359b89a6fd0462399cbca3e4e87cf3e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA mock session - Churu','2020-12-15 14:35:39.000 +00:00','5a9679fe-6c56-4e22-aa0a-14adb9703410','2024-08-31 20:47:13.899 +00:00','2024-08-31 20:47:13.899 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c359b89a6fd0462399cbca3e4e87cf3e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Test run for Assisted Scanning 2020-08-07T07:11:07.000+0000
Executing (c9469c45-12f1-4cc3-8b1e-f8296955495b): START TRANSACTION;
Executing (7871aced-325d-4a81-b907-1663feb8bff6): COMMIT;
Executing (cf04644f-1112-4ba5-ab96-7f05d000997e): COMMIT;
Executing (c9469c45-12f1-4cc3-8b1e-f8296955495b): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'e931ea86-989b-4188-aa8b-8052253f14ce' AND "UserTrainer"."name" = 'ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂ      ಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs' AND "UserTrainer"."issueDate" = 'Invalid date' LIMIT 1;
Executing (4a2d52c9-b780-44c8-8875-f76842873348): COMMIT;
topicName District Workshop training for block team 2023-04-20T12:25:54.000+0000
Executing (6000fd13-4c0f-476e-9a45-caf7a58887e2): START TRANSACTION;
Executing (39f624df-ac13-4d6c-b28d-2c7eb56ee8ea): COMMIT;
Processed user: Bishwadeep Ghose
Executing (cc4cd6e0-39ea-401d-a6e5-9967f9d7f73e): START TRANSACTION;
Executing (6000fd13-4c0f-476e-9a45-caf7a58887e2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '0c193e5f-d189-464b-82cf-443317306d87' AND "UserTopic"."name" = 'ಇದು ಒಂದು ಮಾದರಿ' AND "UserTopic"."issuedAt" = 'Invalid date' LIMIT 1;
Executing (c9469c45-12f1-4cc3-8b1e-f8296955495b): COMMIT;
topicName JD test - Training of District Coordinators for JalDoot Program Execution 2023-01-31T11:36:14.000+0000
Executing (2d65b8e4-efe9-4660-9fe0-b4848ee4c5a6): START TRANSACTION;
Executing (6000fd13-4c0f-476e-9a45-caf7a58887e2): COMMIT;
Executing (bbcca490-73bb-4970-9ad1-569401a17110): START TRANSACTION;
topicName JD test - Assam 2023-01-10T06:20:06.000+0000
Executing (35109618-494f-4d74-bbbc-e5e033f5ae10): START TRANSACTION;
Executing (cc4cd6e0-39ea-401d-a6e5-9967f9d7f73e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '867b20fb-b6bd-418d-91c6-aa5ef686e629' AND "UserTopic"."name" = 'PDA - Program App' AND "UserTopic"."issuedAt" = '2019-12-05 07:00:11.000 +00:00' LIMIT 1;
Executing (e69a03bc-40c9-48ad-97c8-312366a6ea44): START TRANSACTION;
Executing (bbcca490-73bb-4970-9ad1-569401a17110): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '7dd8cae2-8102-44ca-b042-6a1d51b97504' AND "UserTopic"."name" = 'JD test - Assam' AND "UserTopic"."issuedAt" = '2022-12-12 12:21:46.000 +00:00' LIMIT 1;
Executing (35109618-494f-4d74-bbbc-e5e033f5ae10): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b7031ba5-8d50-43d4-82db-b63e173db13c' AND "UserTopic"."name" = 'JD Test - Reporting on block plan' AND "UserTopic"."issuedAt" = '2023-01-27 07:52:16.000 +00:00' LIMIT 1;
Executing (2d65b8e4-efe9-4660-9fe0-b4848ee4c5a6): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'bf9b2448-f718-4224-96d4-06bdb59034a3' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-22 13:53:07.000 +00:00' LIMIT 1;
Executing (e69a03bc-40c9-48ad-97c8-312366a6ea44): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '42740f34-6ea7-41e2-be0e-7ea2a846b001' AND "UserTopic"."name" = 'Virtual Interactions - Needs and Benefits' AND "UserTopic"."issuedAt" = '2020-11-19 10:13:13.000 +00:00' LIMIT 1;
Executing (bbcca490-73bb-4970-9ad1-569401a17110): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e62a7ae5fd054e3f8babd5add9e563d5$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD test - Assam','2022-12-12 12:21:46.000 +00:00','7dd8cae2-8102-44ca-b042-6a1d51b97504','2024-08-31 20:47:13.910 +00:00','2024-08-31 20:47:13.910 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e62a7ae5fd054e3f8babd5add9e563d5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (35109618-494f-4d74-bbbc-e5e033f5ae10): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7ea3376886b940f4a7aabf170f659552$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD Test - Reporting on block plan','2023-01-27 07:52:16.000 +00:00','b7031ba5-8d50-43d4-82db-b63e173db13c','2024-08-31 20:47:13.911 +00:00','2024-08-31 20:47:13.911 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7ea3376886b940f4a7aabf170f659552$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cc4cd6e0-39ea-401d-a6e5-9967f9d7f73e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6bf6251ae2c340f09d027086ba654cc3$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Program App','2019-12-05 07:00:11.000 +00:00','867b20fb-b6bd-418d-91c6-aa5ef686e629','2024-08-31 20:47:13.911 +00:00','2024-08-31 20:47:13.911 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6bf6251ae2c340f09d027086ba654cc3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e69a03bc-40c9-48ad-97c8-312366a6ea44): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d69725c343284669991c37accabfa41f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Virtual Interactions - Needs and Benefits','2020-11-19 10:13:13.000 +00:00','42740f34-6ea7-41e2-be0e-7ea2a846b001','2024-08-31 20:47:13.912 +00:00','2024-08-31 20:47:13.912 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d69725c343284669991c37accabfa41f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bbcca490-73bb-4970-9ad1-569401a17110): COMMIT;
Executing (2d65b8e4-efe9-4660-9fe0-b4848ee4c5a6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f3a98584acde42639975848864138507$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-05-22 13:53:07.000 +00:00','bf9b2448-f718-4224-96d4-06bdb59034a3','2024-08-31 20:47:13.914 +00:00','2024-08-31 20:47:13.914 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f3a98584acde42639975848864138507$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName JD - Facilitate two practical JalShalas for training of Block trainers - 2  2023-03-09T03:38:36.000+0000
Executing (f7462231-cbf4-4a7d-9777-b81b58d67192): START TRANSACTION;
Executing (35109618-494f-4d74-bbbc-e5e033f5ae10): COMMIT;
Executing (cc4cd6e0-39ea-401d-a6e5-9967f9d7f73e): COMMIT;
Executing (f7462231-cbf4-4a7d-9777-b81b58d67192): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5bfd7f81-ec88-422a-9f71-fbc75f3ace63' AND "UserTopic"."name" = 'Capacity building of Jaldoots on MGNREGA schemes provisions' AND "UserTopic"."issuedAt" = '2021-01-11 07:37:03.000 +00:00' LIMIT 1;
Executing (e69a03bc-40c9-48ad-97c8-312366a6ea44): COMMIT;
topicName JD test - Report on Progress post JalShala with field work Data 2023-01-27T07:53:43.000+0000
Executing (a93c2705-78d1-4961-8eb4-ee706f43c298): START TRANSACTION;
Executing (2d65b8e4-efe9-4660-9fe0-b4848ee4c5a6): COMMIT;
topicName PDA - Trainer App 2019-12-05T07:26:08+0000
Executing (382921c9-6f6b-429f-9c86-85a57c77b58d): START TRANSACTION;
Executing (a93c2705-78d1-4961-8eb4-ee706f43c298): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c0072a31-91df-48a0-b79e-5d19c7d29d27' AND "UserTopic"."name" = 'Guided Mentoring Format' AND "UserTopic"."issuedAt" = '2020-10-14 06:49:28.000 +00:00' LIMIT 1;
Executing (f7462231-cbf4-4a7d-9777-b81b58d67192): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9576af217db740ce9c19929d79bb08f0$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots on MGNREGA schemes provisions','2021-01-11 07:37:03.000 +00:00','5bfd7f81-ec88-422a-9f71-fbc75f3ace63','2024-08-31 20:47:13.920 +00:00','2024-08-31 20:47:13.920 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9576af217db740ce9c19929d79bb08f0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Dashboard Demo 2021-11-26T05:27:49.000+0000
Executing (aef9a0ba-9f6e-420e-a1c7-72010f93b952): START TRANSACTION;
Executing (a93c2705-78d1-4961-8eb4-ee706f43c298): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_57746196c72d41eaa65502fb69162805$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Guided Mentoring Format','2020-10-14 06:49:28.000 +00:00','c0072a31-91df-48a0-b79e-5d19c7d29d27','2024-08-31 20:47:13.921 +00:00','2024-08-31 20:47:13.921 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_57746196c72d41eaa65502fb69162805$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Planning of the JalShala
Executing (445687ea-f3f7-4071-93f9-198dee4f03f0): START TRANSACTION;
Executing (382921c9-6f6b-429f-9c86-85a57c77b58d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'eafa5769-776e-421f-bdce-03326a065f7e' AND "UserTopic"."name" = 'PDA Hands on' AND "UserTopic"."issuedAt" = '2021-01-08 07:48:14.000 +00:00' LIMIT 1;
Executing (445687ea-f3f7-4071-93f9-198dee4f03f0): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '85bce1bf-2a8b-4862-8a13-80758d68c6e0' AND "UserTrainer"."name" = 'Crop Water Budgeting Overview' AND "UserTrainer"."issueDate" = '2020-12-16 08:00:00.000 +00:00' LIMIT 1;
Executing (aef9a0ba-9f6e-420e-a1c7-72010f93b952): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'db52891b-977c-429d-ad2c-9258b81a7ba4' AND "UserTopic"."name" = 'Observations and Feedback | T1.03 | DG' AND "UserTopic"."issuedAt" = '2020-12-10 12:18:51.000 +00:00' LIMIT 1;
Executing (f7462231-cbf4-4a7d-9777-b81b58d67192): COMMIT;
Executing (445687ea-f3f7-4071-93f9-198dee4f03f0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6f4b58bb44794ac6b89aa78a3100dee8$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Crop Water Budgeting Overview','2020-12-16 08:00:00.000 +00:00','85bce1bf-2a8b-4862-8a13-80758d68c6e0','2024-08-31 20:47:13.925 +00:00','2024-08-31 20:47:13.925 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6f4b58bb44794ac6b89aa78a3100dee8$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a93c2705-78d1-4961-8eb4-ee706f43c298): COMMIT;
Executing (382921c9-6f6b-429f-9c86-85a57c77b58d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c0ba54e444a749da8cf30c49609277f7$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Hands on','2021-01-08 07:48:14.000 +00:00','eafa5769-776e-421f-bdce-03326a065f7e','2024-08-31 20:47:13.926 +00:00','2024-08-31 20:47:13.926 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c0ba54e444a749da8cf30c49609277f7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Virtual Interactions - Needs and Benefits 2020-11-04T10:07:06.000+0000
Executing (1df91ee1-9f89-4301-b00d-0afaaa248aa2): START TRANSACTION;
Executing (aef9a0ba-9f6e-420e-a1c7-72010f93b952): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c2230ed9106b47c7bf3f39b581f06703$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Observations and Feedback | T1.03 | DG','2020-12-10 12:18:51.000 +00:00','db52891b-977c-429d-ad2c-9258b81a7ba4','2024-08-31 20:47:13.928 +00:00','2024-08-31 20:47:13.928 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c2230ed9106b47c7bf3f39b581f06703$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Ravi somani
Executing (44d9267c-6cdb-40c7-950b-9e02704a4e6d): START TRANSACTION;
Executing (1df91ee1-9f89-4301-b00d-0afaaa248aa2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '840282c7-4246-44db-a1f6-d753c1913547' AND "UserTopic"."name" = 'Feedback and next steps' AND "UserTopic"."issuedAt" = '2022-01-25 07:26:12.000 +00:00' LIMIT 1;
Executing (445687ea-f3f7-4071-93f9-198dee4f03f0): COMMIT;
Executing (382921c9-6f6b-429f-9c86-85a57c77b58d): COMMIT;
Executing (1df91ee1-9f89-4301-b00d-0afaaa248aa2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2655d37633c6496492933038843b77fd$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Feedback and next steps','2022-01-25 07:26:12.000 +00:00','840282c7-4246-44db-a1f6-d753c1913547','2024-08-31 20:47:13.932 +00:00','2024-08-31 20:47:13.932 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2655d37633c6496492933038843b77fd$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (44d9267c-6cdb-40c7-950b-9e02704a4e6d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5db4d93e-0440-4889-aede-7c3540cc5831' AND "UserTopic"."name" = 'PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra.' AND "UserTopic"."issuedAt" = '2020-12-23 10:04:34.000 +00:00' LIMIT 1;
Executing (aef9a0ba-9f6e-420e-a1c7-72010f93b952): COMMIT;
Processed user: Sahdev
Executing (3e3c24eb-360d-4a52-ac35-476ebe3468cb): START TRANSACTION;
topicName Scripts Review | T1.02 | DG 2020-12-02T11:39:06.000+0000
Executing (edf8930a-1945-41b6-bc4c-8ebbac4e6c43): START TRANSACTION;
Executing (3e3c24eb-360d-4a52-ac35-476ebe3468cb): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9ca87890-0726-4909-9ebd-92fab6ce4a20' AND "UserTopic"."name" = 'Guided Mentoring Format' AND "UserTopic"."issuedAt" = '2020-10-14 06:49:59.000 +00:00' LIMIT 1;
Executing (1df91ee1-9f89-4301-b00d-0afaaa248aa2): COMMIT;
Executing (44d9267c-6cdb-40c7-950b-9e02704a4e6d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8d933cb70d6648338134071b44d323d2$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra.','2020-12-23 10:04:34.000 +00:00','5db4d93e-0440-4889-aede-7c3540cc5831','2024-08-31 20:47:13.937 +00:00','2024-08-31 20:47:13.937 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8d933cb70d6648338134071b44d323d2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra. 2020-12-23T10:08:12.000+0000
Executing (4eae81a1-8126-4745-8410-f18977ac5f70): START TRANSACTION;
Executing (3e3c24eb-360d-4a52-ac35-476ebe3468cb): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1bba3623f9214556b92bdae19fbc2e57$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Guided Mentoring Format','2020-10-14 06:49:59.000 +00:00','9ca87890-0726-4909-9ebd-92fab6ce4a20','2024-08-31 20:47:13.938 +00:00','2024-08-31 20:47:13.938 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1bba3623f9214556b92bdae19fbc2e57$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Recap and potential next steps with the learning experience 2022-02-01T08:04:52.000+0000
Executing (d87358cd-11af-4bb3-ae7e-ab2de105bc1e): START TRANSACTION;
Executing (edf8930a-1945-41b6-bc4c-8ebbac4e6c43): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8866902d-32f0-4d36-a6d3-eeef2072405c' AND "UserTopic"."name" = 'PDA - Hands on' AND "UserTopic"."issuedAt" = '2020-12-28 07:28:59.000 +00:00' LIMIT 1;
Executing (d87358cd-11af-4bb3-ae7e-ab2de105bc1e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9c782be5-e423-49f9-8b28-613ccc87fc3a' AND "UserTopic"."name" = 'Feedback and next steps' AND "UserTopic"."issuedAt" = '2022-01-25 07:26:23.000 +00:00' LIMIT 1;
Executing (4eae81a1-8126-4745-8410-f18977ac5f70): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6afb2b3b-3e1c-4e13-9bd9-b1e2e77810c9' AND "UserTopic"."name" = 'PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra.' AND "UserTopic"."issuedAt" = '2020-12-23 10:03:30.000 +00:00' LIMIT 1;
Executing (44d9267c-6cdb-40c7-950b-9e02704a4e6d): COMMIT;
Executing (d87358cd-11af-4bb3-ae7e-ab2de105bc1e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_848b074287734756ba41ad3f98b3f568$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Feedback and next steps','2022-01-25 07:26:23.000 +00:00','9c782be5-e423-49f9-8b28-613ccc87fc3a','2024-08-31 20:47:13.943 +00:00','2024-08-31 20:47:13.943 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_848b074287734756ba41ad3f98b3f568$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3e3c24eb-360d-4a52-ac35-476ebe3468cb): COMMIT;
Executing (edf8930a-1945-41b6-bc4c-8ebbac4e6c43): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_64a09c13096b4f248539253697e77fdc$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Hands on','2020-12-28 07:28:59.000 +00:00','8866902d-32f0-4d36-a6d3-eeef2072405c','2024-08-31 20:47:13.944 +00:00','2024-08-31 20:47:13.944 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_64a09c13096b4f248539253697e77fdc$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Virtual Interactions - Needs and Benefits 2020-11-04T10:07:13.000+0000
Executing (a8200e22-1c1f-40bc-8e4f-05676cc0cd90): START TRANSACTION;
Executing (4eae81a1-8126-4745-8410-f18977ac5f70): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a9a3684b3c884427bf55575ed543c711$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra.','2020-12-23 10:03:30.000 +00:00','6afb2b3b-3e1c-4e13-9bd9-b1e2e77810c9','2024-08-31 20:47:13.945 +00:00','2024-08-31 20:47:13.945 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a9a3684b3c884427bf55575ed543c711$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Wheat Crop Training 2020-12-31T11:11:04.000+0000
Executing (0f45705d-d039-48b4-b0e4-b2ecef6d53e9): START TRANSACTION;
Executing (a8200e22-1c1f-40bc-8e4f-05676cc0cd90): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'ff97766a-e506-49df-9522-8efa994ff324' AND "UserTrainer"."name" = 'Experience of deploying CB solutions in Meghalaya' AND "UserTrainer"."issueDate" = '2020-03-02 09:00:00.000 +00:00' LIMIT 1;
Executing (d87358cd-11af-4bb3-ae7e-ab2de105bc1e): COMMIT;
Executing (a8200e22-1c1f-40bc-8e4f-05676cc0cd90): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e1a8155b3f14465f873070f9f93b689f$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Experience of deploying CB solutions in Meghalaya','2020-03-02 09:00:00.000 +00:00','ff97766a-e506-49df-9522-8efa994ff324','2024-08-31 20:47:13.948 +00:00','2024-08-31 20:47:13.948 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e1a8155b3f14465f873070f9f93b689f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (edf8930a-1945-41b6-bc4c-8ebbac4e6c43): COMMIT;
Executing (0f45705d-d039-48b4-b0e4-b2ecef6d53e9): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b912e843-b03e-4f84-8133-82016c8dd2a8' AND "UserTopic"."name" = 'Getting Started with PDA' AND "UserTopic"."issuedAt" = '2020-11-25 09:34:23.000 +00:00' LIMIT 1;
Executing (4eae81a1-8126-4745-8410-f18977ac5f70): COMMIT;
trainertopicname PDA Rollout Demo
Executing (92c48a61-8740-4046-9c05-60610495c3db): START TRANSACTION;
topicName Recap and potential next steps with the learning experience 2022-02-01T06:44:35.000+0000
Executing (4f299ac7-4d65-4b62-9952-02c50c788a0a): START TRANSACTION;
Executing (92c48a61-8740-4046-9c05-60610495c3db): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4c86587a-893e-4d75-9881-965d8fdab183' AND "UserTopic"."name" = 'Getting Started with PDA' AND "UserTopic"."issuedAt" = '2020-11-25 09:34:21.000 +00:00' LIMIT 1;
Executing (a8200e22-1c1f-40bc-8e4f-05676cc0cd90): COMMIT;
Executing (0f45705d-d039-48b4-b0e4-b2ecef6d53e9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_093345c8b4b34a16ab05f1a6bdd34963$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Getting Started with PDA','2020-11-25 09:34:23.000 +00:00','b912e843-b03e-4f84-8133-82016c8dd2a8','2024-08-31 20:47:13.952 +00:00','2024-08-31 20:47:13.952 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_093345c8b4b34a16ab05f1a6bdd34963$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Wheat Crop Training 2020-12-31T10:14:55.000+0000
Executing (1fbf8217-9352-4266-a39d-501a2506522a): START TRANSACTION;
Executing (92c48a61-8740-4046-9c05-60610495c3db): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5257b9ff4c594feab4f045cd42b8a567$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Getting Started with PDA','2020-11-25 09:34:21.000 +00:00','4c86587a-893e-4d75-9881-965d8fdab183','2024-08-31 20:47:13.954 +00:00','2024-08-31 20:47:13.954 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5257b9ff4c594feab4f045cd42b8a567$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Uzra Sultana
Executing (dfac59a3-c314-4ded-a6ea-c46a3b850917): START TRANSACTION;
Executing (4f299ac7-4d65-4b62-9952-02c50c788a0a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2e400362-1635-47e4-99c8-72b00dd38b19' AND "UserTopic"."name" = '3 Fold Program' AND "UserTopic"."issuedAt" = '2020-09-26 04:40:01.000 +00:00' LIMIT 1;
Executing (dfac59a3-c314-4ded-a6ea-c46a3b850917): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6e95d2e7-e874-4076-9412-17aeeb8ea5c3' AND "UserTopic"."name" = 'Introduction to Visual Design LL3' AND "UserTopic"."issuedAt" = '2022-03-22 07:24:24.000 +00:00' LIMIT 1;
Executing (1fbf8217-9352-4266-a39d-501a2506522a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '88acf595-35dd-4ee8-87aa-924166be5859' AND "UserTopic"."name" = 'Water Literacy Campaign' AND "UserTopic"."issuedAt" = '2021-01-05 12:40:45.000 +00:00' LIMIT 1;
Executing (0f45705d-d039-48b4-b0e4-b2ecef6d53e9): COMMIT;
Executing (dfac59a3-c314-4ded-a6ea-c46a3b850917): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0c2dae7afd064986b822e776dba2de94$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Visual Design LL3','2022-03-22 07:24:24.000 +00:00','6e95d2e7-e874-4076-9412-17aeeb8ea5c3','2024-08-31 20:47:13.959 +00:00','2024-08-31 20:47:13.959 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0c2dae7afd064986b822e776dba2de94$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (92c48a61-8740-4046-9c05-60610495c3db): COMMIT;
Executing (4f299ac7-4d65-4b62-9952-02c50c788a0a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9dd31b053a004961917311d83b774963$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'3 Fold Program','2020-09-26 04:40:01.000 +00:00','2e400362-1635-47e4-99c8-72b00dd38b19','2024-08-31 20:47:13.960 +00:00','2024-08-31 20:47:13.960 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9dd31b053a004961917311d83b774963$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Jayantilal Gorsiya
Executing (9adcbfed-8081-4722-b13f-7e11eb4f9aba): START TRANSACTION;
Executing (1fbf8217-9352-4266-a39d-501a2506522a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c145faa8fbb6420faefac6701cc4c05c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Water Literacy Campaign','2021-01-05 12:40:45.000 +00:00','88acf595-35dd-4ee8-87aa-924166be5859','2024-08-31 20:47:13.962 +00:00','2024-08-31 20:47:13.962 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c145faa8fbb6420faefac6701cc4c05c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Content Development | T1.01 | DG
Executing (b386d854-c977-4e7d-a7e6-e0db7d512c80): START TRANSACTION;
Executing (9adcbfed-8081-4722-b13f-7e11eb4f9aba): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9bb07b4d-1f9a-46ff-abff-29ec483b7763' AND "UserTopic"."name" = 'test' AND "UserTopic"."issuedAt" = '2022-02-25 04:41:29.000 +00:00' LIMIT 1;
Executing (1fbf8217-9352-4266-a39d-501a2506522a): COMMIT;
Executing (dfac59a3-c314-4ded-a6ea-c46a3b850917): COMMIT;
Executing (4f299ac7-4d65-4b62-9952-02c50c788a0a): COMMIT;
Executing (9adcbfed-8081-4722-b13f-7e11eb4f9aba): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d4d4127df2da42eab2480c9f2c45a898$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'test','2022-02-25 04:41:29.000 +00:00','9bb07b4d-1f9a-46ff-abff-29ec483b7763','2024-08-31 20:47:13.969 +00:00','2024-08-31 20:47:13.969 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d4d4127df2da42eab2480c9f2c45a898$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Water User Association Training
Executing (80e97919-641b-471c-85c4-94103c6ffb80): START TRANSACTION;
topicName Feedback and next steps LL2 2022-03-08T06:49:09.000+0000
Executing (c25256f3-992e-42a1-947c-f8e658db1397): START TRANSACTION;
Executing (b386d854-c977-4e7d-a7e6-e0db7d512c80): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '0fcdf556-7144-4bdf-a6b6-005b50b00f14' AND "UserTopic"."name" = 'PDA Hand-on' AND "UserTopic"."issuedAt" = '2021-08-30 11:11:58.000 +00:00' LIMIT 1;
Executing (9adcbfed-8081-4722-b13f-7e11eb4f9aba): COMMIT;
Executing (80e97919-641b-471c-85c4-94103c6ffb80): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '15834b56-cfac-4d93-ba91-1dcf7785ad19' AND "UserTopic"."name" = 'Hub Roles for Virtual Interactions' AND "UserTopic"."issuedAt" = '2020-10-14 10:40:39.000 +00:00' LIMIT 1;
Executing (c25256f3-992e-42a1-947c-f8e658db1397): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2b80d0a9-7767-4f05-9037-719583d95b5c' AND "UserTopic"."name" = 'Techniques of Irrigation' AND "UserTopic"."issuedAt" = '2021-05-19 12:03:05.000 +00:00' LIMIT 1;
topicName Virtual Training Format 2020-10-14T06:57:13.000+0000
Executing (7ea10ec5-bb1b-43c3-848d-464498214ff7): START TRANSACTION;
topicName Testing Topic lock in time 2021-04-24T12:28:31.000+0000
Executing (d5caaa4c-51fa-4c71-b90d-122a54c663ad): START TRANSACTION;
Executing (80e97919-641b-471c-85c4-94103c6ffb80): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1c0b6028bd994bd18aa256bf69183479$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Hub Roles for Virtual Interactions','2020-10-14 10:40:39.000 +00:00','15834b56-cfac-4d93-ba91-1dcf7785ad19','2024-08-31 20:47:13.978 +00:00','2024-08-31 20:47:13.978 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1c0b6028bd994bd18aa256bf69183479$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c25256f3-992e-42a1-947c-f8e658db1397): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_773973de106a4c15ac299b4135d5fade$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Techniques of Irrigation','2021-05-19 12:03:05.000 +00:00','2b80d0a9-7767-4f05-9037-719583d95b5c','2024-08-31 20:47:13.979 +00:00','2024-08-31 20:47:13.979 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_773973de106a4c15ac299b4135d5fade$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b386d854-c977-4e7d-a7e6-e0db7d512c80): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4447a6e2cb834b318bb9407303ddda9b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Hand-on','2021-08-30 11:11:58.000 +00:00','0fcdf556-7144-4bdf-a6b6-005b50b00f14','2024-08-31 20:47:13.981 +00:00','2024-08-31 20:47:13.981 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4447a6e2cb834b318bb9407303ddda9b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d5caaa4c-51fa-4c71-b90d-122a54c663ad): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b791b39b-25d7-4e24-a280-9cd6d4870c90' AND "UserTopic"."name" = 'PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra.' AND "UserTopic"."issuedAt" = '2020-12-23 10:03:45.000 +00:00' LIMIT 1;
Executing (80e97919-641b-471c-85c4-94103c6ffb80): COMMIT;
Executing (c25256f3-992e-42a1-947c-f8e658db1397): COMMIT;
Executing (7ea10ec5-bb1b-43c3-848d-464498214ff7): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '805f8115-7fc6-481c-ae59-9a635ed92038' AND "UserTopic"."name" = 'Feedback and next steps' AND "UserTopic"."issuedAt" = '2022-01-25 07:27:00.000 +00:00' LIMIT 1;
Executing (d5caaa4c-51fa-4c71-b90d-122a54c663ad): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_36ee9845f7e0490b8f23cc8866d8ba08$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra.','2020-12-23 10:03:45.000 +00:00','b791b39b-25d7-4e24-a280-9cd6d4870c90','2024-08-31 20:47:13.985 +00:00','2024-08-31 20:47:13.985 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_36ee9845f7e0490b8f23cc8866d8ba08$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Guided Mentoring Format 2020-10-14T06:49:45.000+0000
Executing (0e90ca9a-dbad-44d9-af32-30f88eeff503): START TRANSACTION;
topicName Test 1 2021-04-18T08:06:11.000+0000
Executing (cbd7409d-ebd6-43e7-9bd4-8a52e31a32a1): START TRANSACTION;
Executing (b386d854-c977-4e7d-a7e6-e0db7d512c80): COMMIT;
Executing (d5caaa4c-51fa-4c71-b90d-122a54c663ad): COMMIT;
Executing (0e90ca9a-dbad-44d9-af32-30f88eeff503): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '8d96ee1c-383e-4573-84c2-5c4c5cb73b82' AND "UserTopic"."name" = 'Guided Mentoring Format' AND "UserTopic"."issuedAt" = '2020-11-04 10:39:19.000 +00:00' LIMIT 1;
Executing (cbd7409d-ebd6-43e7-9bd4-8a52e31a32a1): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '387aedcd-c84e-409b-8067-b1d0e5444975' AND "UserTopic"."name" = 'Well Monitoring - Example' AND "UserTopic"."issuedAt" = '2022-06-16 09:26:43.000 +00:00' LIMIT 1;
Executing (7ea10ec5-bb1b-43c3-848d-464498214ff7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d1dbf674b89244c98878c07c3dfda7d7$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Feedback and next steps','2022-01-25 07:27:00.000 +00:00','805f8115-7fc6-481c-ae59-9a635ed92038','2024-08-31 20:47:13.991 +00:00','2024-08-31 20:47:13.991 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d1dbf674b89244c98878c07c3dfda7d7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-01-30T09:04:58.000+0000
Executing (abc3f040-2aac-41dc-a7a2-ad1e5f15da1b): START TRANSACTION;
Executing (0e90ca9a-dbad-44d9-af32-30f88eeff503): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b966343c141546788f52d64e419d1f01$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Guided Mentoring Format','2020-11-04 10:39:19.000 +00:00','8d96ee1c-383e-4573-84c2-5c4c5cb73b82','2024-08-31 20:47:13.992 +00:00','2024-08-31 20:47:13.992 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b966343c141546788f52d64e419d1f01$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cbd7409d-ebd6-43e7-9bd4-8a52e31a32a1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1dbc02363e044022a6e138de760571ee$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Well Monitoring - Example','2022-06-16 09:26:43.000 +00:00','387aedcd-c84e-409b-8067-b1d0e5444975','2024-08-31 20:47:13.993 +00:00','2024-08-31 20:47:13.993 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1dbc02363e044022a6e138de760571ee$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Simran Sumbre
Executing (ee6dcd81-a83c-4c76-a69a-62b1b317199d): START TRANSACTION;
Executing (abc3f040-2aac-41dc-a7a2-ad1e5f15da1b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c5d35819-2105-4cef-8c0a-af367a875971' AND "UserTopic"."name" = 'Scripts Review | T1.02 | DG' AND "UserTopic"."issuedAt" = '2020-12-02 11:40:45.000 +00:00' LIMIT 1;
Executing (0e90ca9a-dbad-44d9-af32-30f88eeff503): COMMIT;
Executing (7ea10ec5-bb1b-43c3-848d-464498214ff7): COMMIT;
Executing (abc3f040-2aac-41dc-a7a2-ad1e5f15da1b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6be510808dac4d2ebfb736cc7434a34a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Scripts Review | T1.02 | DG','2020-12-02 11:40:45.000 +00:00','c5d35819-2105-4cef-8c0a-af367a875971','2024-08-31 20:47:13.999 +00:00','2024-08-31 20:47:13.999 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6be510808dac4d2ebfb736cc7434a34a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Zoom for Hubs & Spokes
Executing (ec11b818-cc9c-4855-ab9d-a5dce0e4096b): START TRANSACTION;
Executing (ee6dcd81-a83c-4c76-a69a-62b1b317199d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '1b150e3f-f854-4a66-9e73-3e8d856706a1' AND "UserTopic"."name" = 'Well Monitoring - Example' AND "UserTopic"."issuedAt" = '2022-06-16 09:26:06.000 +00:00' LIMIT 1;
Executing (cbd7409d-ebd6-43e7-9bd4-8a52e31a32a1): COMMIT;
Executing (abc3f040-2aac-41dc-a7a2-ad1e5f15da1b): COMMIT;
Executing (ec11b818-cc9c-4855-ab9d-a5dce0e4096b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f8ac18cb-5476-4655-b1b7-6459e8047e4d' AND "UserTopic"."name" = 'Capacity building of Jaldoots on MGNREGA schemes provisions' AND "UserTopic"."issuedAt" = '2021-01-11 07:54:01.000 +00:00' LIMIT 1;
Executing (ee6dcd81-a83c-4c76-a69a-62b1b317199d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_10e4d9857717447d8a1cc8c0231f0dfe$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Well Monitoring - Example','2022-06-16 09:26:06.000 +00:00','1b150e3f-f854-4a66-9e73-3e8d856706a1','2024-08-31 20:47:14.004 +00:00','2024-08-31 20:47:14.004 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_10e4d9857717447d8a1cc8c0231f0dfe$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Recap and potential next steps with the learning experience 2022-02-01T06:43:40.000+0000
Executing (7abdf93b-5cbb-400e-a138-5fb4b0f23db2): START TRANSACTION;
topicName PDA Demo and Deployment Training | ACT 2020-12-11T13:54:29.000+0000
Executing (1eae521b-f930-4861-885d-b5d5c3a7bfe1): START TRANSACTION;
Executing (ec11b818-cc9c-4855-ab9d-a5dce0e4096b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_136927af043449688acac1debbee58f1$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots on MGNREGA schemes provisions','2021-01-11 07:54:01.000 +00:00','f8ac18cb-5476-4655-b1b7-6459e8047e4d','2024-08-31 20:47:14.007 +00:00','2024-08-31 20:47:14.007 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_136927af043449688acac1debbee58f1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Rakhi mathai
Executing (a8073746-8456-4f05-a2b7-87e558a8d1b7): START TRANSACTION;
Executing (1eae521b-f930-4861-885d-b5d5c3a7bfe1): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '441fc2a7-b992-46e0-951f-2a58ae3bdf32' AND "UserTopic"."name" = 'Observations and Feedback | T1.03 | DG' AND "UserTopic"."issuedAt" = '2020-12-10 12:21:44.000 +00:00' LIMIT 1;
Executing (ee6dcd81-a83c-4c76-a69a-62b1b317199d): COMMIT;
Executing (7abdf93b-5cbb-400e-a138-5fb4b0f23db2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '3a089d0b-0cea-42c8-a60a-dd9fb54e25d4' AND "UserTopic"."name" = 'PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra.' AND "UserTopic"."issuedAt" = '2020-12-23 10:03:31.000 +00:00' LIMIT 1;
Executing (1eae521b-f930-4861-885d-b5d5c3a7bfe1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_636ee428a4f84c5b82b9a6fd07b5c6eb$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Observations and Feedback | T1.03 | DG','2020-12-10 12:21:44.000 +00:00','441fc2a7-b992-46e0-951f-2a58ae3bdf32','2024-08-31 20:47:14.011 +00:00','2024-08-31 20:47:14.011 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_636ee428a4f84c5b82b9a6fd07b5c6eb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a8073746-8456-4f05-a2b7-87e558a8d1b7): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '971f2670-d929-4a00-a697-f5e19fa95fff' AND "UserTrainer"."name" = 'Data collection and Monitoring' AND "UserTrainer"."issueDate" = '2021-01-06 07:30:00.000 +00:00' LIMIT 1;
Executing (ec11b818-cc9c-4855-ab9d-a5dce0e4096b): COMMIT;
Processed user: Abhishek srivastava 
Executing (11246fb0-6695-498a-a87a-14ea5311877b): START TRANSACTION;
Executing (7abdf93b-5cbb-400e-a138-5fb4b0f23db2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_60d92e9ed59149d0b159ad040f3491bc$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra.','2020-12-23 10:03:31.000 +00:00','3a089d0b-0cea-42c8-a60a-dd9fb54e25d4','2024-08-31 20:47:14.013 +00:00','2024-08-31 20:47:14.013 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_60d92e9ed59149d0b159ad040f3491bc$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (11246fb0-6695-498a-a87a-14ea5311877b): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'f5c71709-8bfc-4fe9-a633-559aeff445e6' AND "UserTrainer"."name" = 'Orientation on Abhy and PGWM' AND "UserTrainer"."issueDate" = '2021-08-14 07:30:00.000 +00:00' LIMIT 1;
Executing (1eae521b-f930-4861-885d-b5d5c3a7bfe1): COMMIT;
Executing (a8073746-8456-4f05-a2b7-87e558a8d1b7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cb3f6c9472cf4f0e938c9c4727133340$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Data collection and Monitoring','2021-01-06 07:30:00.000 +00:00','971f2670-d929-4a00-a697-f5e19fa95fff','2024-08-31 20:47:14.015 +00:00','2024-08-31 20:47:14.015 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cb3f6c9472cf4f0e938c9c4727133340$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Ramesh Gela
Executing (c5a598e4-8957-4b48-aeda-0a806f3e5dc6): START TRANSACTION;
Executing (11246fb0-6695-498a-a87a-14ea5311877b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_76685888e76848d6934c7862a8f82fca$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM','2021-08-14 07:30:00.000 +00:00','f5c71709-8bfc-4fe9-a633-559aeff445e6','2024-08-31 20:47:14.017 +00:00','2024-08-31 20:47:14.017 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_76685888e76848d6934c7862a8f82fca$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra. 2020-12-23T10:04:16.000+0000
Executing (1e9798d0-f250-48c4-807c-d46bf9ac400b): START TRANSACTION;
Executing (7abdf93b-5cbb-400e-a138-5fb4b0f23db2): COMMIT;
Executing (1e9798d0-f250-48c4-807c-d46bf9ac400b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '534ec60b-0deb-41a6-97f8-2b5477f9c3a3' AND "UserTopic"."name" = 'Test run for Assisted Scanning' AND "UserTopic"."issuedAt" = '2020-08-07 07:11:07.000 +00:00' LIMIT 1;
Executing (c5a598e4-8957-4b48-aeda-0a806f3e5dc6): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6db52b87-7d08-4b7a-98da-0ab423f15330' AND "UserTopic"."name" = 'Capacity building of Jaldoots on MGNREGA schemes provisions' AND "UserTopic"."issuedAt" = '2021-01-11 07:54:35.000 +00:00' LIMIT 1;
Executing (a8073746-8456-4f05-a2b7-87e558a8d1b7): COMMIT;
Executing (1e9798d0-f250-48c4-807c-d46bf9ac400b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ffa1bb11e34a47d7afd87997eb5b12bd$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Test run for Assisted Scanning','2020-08-07 07:11:07.000 +00:00','534ec60b-0deb-41a6-97f8-2b5477f9c3a3','2024-08-31 20:47:14.023 +00:00','2024-08-31 20:47:14.023 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ffa1bb11e34a47d7afd87997eb5b12bd$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c5a598e4-8957-4b48-aeda-0a806f3e5dc6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_55dc58879a3340dc8aa7341029bedc51$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots on MGNREGA schemes provisions','2021-01-11 07:54:35.000 +00:00','6db52b87-7d08-4b7a-98da-0ab423f15330','2024-08-31 20:47:14.024 +00:00','2024-08-31 20:47:14.024 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_55dc58879a3340dc8aa7341029bedc51$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Jaldoots capacity building on Geo-hydrology 2021-01-08T16:47:54.000+0000
Executing (3d7395f7-99eb-4f6d-9f24-c8de3578f6d3): START TRANSACTION;
Executing (11246fb0-6695-498a-a87a-14ea5311877b): COMMIT;
Executing (1e9798d0-f250-48c4-807c-d46bf9ac400b): COMMIT;
Executing (c5a598e4-8957-4b48-aeda-0a806f3e5dc6): COMMIT;
Executing (3d7395f7-99eb-4f6d-9f24-c8de3578f6d3): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '561f2614-a9a4-4fea-8f74-fd79e0a2854a' AND "UserTopic"."name" = 'Capacity building of Jaldoots on MGNREGA schemes provisions' AND "UserTopic"."issuedAt" = '2021-01-11 07:39:52.000 +00:00' LIMIT 1;
trainertopicname Data collection and Analysis
Executing (9dcc2f69-5778-4a34-b892-2e3a22dcfcd3): START TRANSACTION;
topicName PDA Additional features 2021-01-11T05:07:13.000+0000
Executing (87c772fe-8957-4b6d-97be-dfde7cbdb435): START TRANSACTION;
Processed user: Rabari rama soma
Executing (d3588ca2-d140-4e9f-af82-90b90b49a2c3): START TRANSACTION;
Processed user: Nita Khubchandani 
Executing (88971739-fe54-4a7f-bbd9-64ab33095952): START TRANSACTION;
Executing (87c772fe-8957-4b6d-97be-dfde7cbdb435): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '623772f6-e951-4704-ad07-d8e1b852bee3' AND "UserTopic"."name" = 'PDA Hands on' AND "UserTopic"."issuedAt" = '2021-01-02 06:57:06.000 +00:00' LIMIT 1;
Executing (d3588ca2-d140-4e9f-af82-90b90b49a2c3): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e6afff30-727b-4d6a-9a0f-a21ce2ac628c' AND "UserTopic"."name" = 'Feedback and next steps' AND "UserTopic"."issuedAt" = '2022-01-25 07:51:26.000 +00:00' LIMIT 1;
Executing (3d7395f7-99eb-4f6d-9f24-c8de3578f6d3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d5d4c7ce867c4c34ba91c4aca14cc11f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots on MGNREGA schemes provisions','2021-01-11 07:39:52.000 +00:00','561f2614-a9a4-4fea-8f74-fd79e0a2854a','2024-08-31 20:47:14.032 +00:00','2024-08-31 20:47:14.032 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d5d4c7ce867c4c34ba91c4aca14cc11f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9dcc2f69-5778-4a34-b892-2e3a22dcfcd3): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '249f141b-3fd0-4d6b-8fdb-c68de7aca819' AND "UserTopic"."name" = 'Observations and Feedback | T1.03 | DG' AND "UserTopic"."issuedAt" = '2020-12-10 12:18:11.000 +00:00' LIMIT 1;
Executing (87c772fe-8957-4b6d-97be-dfde7cbdb435): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bbff63087c69478db9d9e4e16460051e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Hands on','2021-01-02 06:57:06.000 +00:00','623772f6-e951-4704-ad07-d8e1b852bee3','2024-08-31 20:47:14.034 +00:00','2024-08-31 20:47:14.034 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bbff63087c69478db9d9e4e16460051e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d3588ca2-d140-4e9f-af82-90b90b49a2c3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_993a20b3edb84a2baff683c94acf8c1d$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Feedback and next steps','2022-01-25 07:51:26.000 +00:00','e6afff30-727b-4d6a-9a0f-a21ce2ac628c','2024-08-31 20:47:14.036 +00:00','2024-08-31 20:47:14.036 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_993a20b3edb84a2baff683c94acf8c1d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (88971739-fe54-4a7f-bbd9-64ab33095952): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '1da12f92-cab3-4f8b-b8c7-4c9baf5a32f9' AND "UserTopic"."name" = 'Capacity building of Jaldoots on MGNREGA schemes provisions' AND "UserTopic"."issuedAt" = '2021-01-11 07:37:00.000 +00:00' LIMIT 1;
Executing (87c772fe-8957-4b6d-97be-dfde7cbdb435): COMMIT;
Executing (9dcc2f69-5778-4a34-b892-2e3a22dcfcd3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0f5a168f79a64191b918fad314f67923$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Observations and Feedback | T1.03 | DG','2020-12-10 12:18:11.000 +00:00','249f141b-3fd0-4d6b-8fdb-c68de7aca819','2024-08-31 20:47:14.038 +00:00','2024-08-31 20:47:14.038 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0f5a168f79a64191b918fad314f67923$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3d7395f7-99eb-4f6d-9f24-c8de3578f6d3): COMMIT;
topicName PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra. 2020-12-23T10:18:20.000+0000
Executing (08ad453e-088e-4f3a-ad2d-f922936d485f): START TRANSACTION;
Executing (88971739-fe54-4a7f-bbd9-64ab33095952): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_aa9b3645309846c7bb242a59f4005e11$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots on MGNREGA schemes provisions','2021-01-11 07:37:00.000 +00:00','1da12f92-cab3-4f8b-b8c7-4c9baf5a32f9','2024-08-31 20:47:14.040 +00:00','2024-08-31 20:47:14.040 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_aa9b3645309846c7bb242a59f4005e11$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d3588ca2-d140-4e9f-af82-90b90b49a2c3): COMMIT;
Executing (08ad453e-088e-4f3a-ad2d-f922936d485f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c55bd79b-042e-46bf-9e18-f4dd8e383e5d' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM - II' AND "UserTopic"."issuedAt" = '2021-08-14 11:58:36.000 +00:00' LIMIT 1;
Processed user: Umed Makwana 
Executing (f3190a2d-d3bf-4a7d-ba8d-61877f031ba8): START TRANSACTION;
Executing (9dcc2f69-5778-4a34-b892-2e3a22dcfcd3): COMMIT;
Executing (08ad453e-088e-4f3a-ad2d-f922936d485f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3fbf31504d6b4ab5b45f446bc869d7e9$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM - II','2021-08-14 11:58:36.000 +00:00','c55bd79b-042e-46bf-9e18-f4dd8e383e5d','2024-08-31 20:47:14.044 +00:00','2024-08-31 20:47:14.044 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3fbf31504d6b4ab5b45f446bc869d7e9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f3190a2d-d3bf-4a7d-ba8d-61877f031ba8): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '2cbe0329-07a4-481a-bf7a-22b814a464e5' AND "UserTrainer"."name" = 'PDA mock session - Churu' AND "UserTrainer"."issueDate" = '2020-12-18 15:25:00.000 +00:00' LIMIT 1;
topicName Recap and potential next steps with the learning experience 2022-02-01T07:02:04.000+0000
Executing (0ffd6a50-36b2-4da9-a390-a42c5eb325dd): START TRANSACTION;
Executing (88971739-fe54-4a7f-bbd9-64ab33095952): COMMIT;
Executing (08ad453e-088e-4f3a-ad2d-f922936d485f): COMMIT;
Executing (f3190a2d-d3bf-4a7d-ba8d-61877f031ba8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e22475d46d894499abf2a9d018b5fc7a$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA mock session - Churu','2020-12-18 15:25:00.000 +00:00','2cbe0329-07a4-481a-bf7a-22b814a464e5','2024-08-31 20:47:14.049 +00:00','2024-08-31 20:47:14.049 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e22475d46d894499abf2a9d018b5fc7a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0ffd6a50-36b2-4da9-a390-a42c5eb325dd): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '452450c8-d384-4c61-83f8-4faf11a6d8ef' AND "UserTopic"."name" = 'JD test - Assam' AND "UserTopic"."issuedAt" = '2023-01-10 06:21:33.000 +00:00' LIMIT 1;
topicName TOT of Bhujal Janakar 2021-02-05T07:23:38.000+0000
Executing (5ca71088-3cc1-4c90-a86a-ab830d2e60ff): START TRANSACTION;
topicName Orientation on Abhy and PGWM 2021-08-14T07:16:08.000+0000
Executing (b2e3c902-e41f-42ef-9da8-d15c7475d5cf): START TRANSACTION;
Executing (0ffd6a50-36b2-4da9-a390-a42c5eb325dd): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e33ce3a6f6b3469090472c125b38a604$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD test - Assam','2023-01-10 06:21:33.000 +00:00','452450c8-d384-4c61-83f8-4faf11a6d8ef','2024-08-31 20:47:14.053 +00:00','2024-08-31 20:47:14.053 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e33ce3a6f6b3469090472c125b38a604$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: DHARAMSHI GOHIL
Executing (c4f14d3c-6708-47a6-b4f9-0d804ea9232d): START TRANSACTION;
Executing (b2e3c902-e41f-42ef-9da8-d15c7475d5cf): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4f3f5e8e-de1b-411a-9454-9038cca34335' AND "UserTopic"."name" = 'Jaldoots capacity building on Geo-hydrology' AND "UserTopic"."issuedAt" = '2021-01-08 16:52:34.000 +00:00' LIMIT 1;
Executing (0ffd6a50-36b2-4da9-a390-a42c5eb325dd): COMMIT;
Executing (5ca71088-3cc1-4c90-a86a-ab830d2e60ff): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'a6241a20-9982-4041-a67d-7e2a2e43f6b9' AND "UserTrainer"."name" = 'Feedback and next steps LL2' AND "UserTrainer"."issueDate" = '2022-03-08 07:30:00.000 +00:00' LIMIT 1;
Executing (f3190a2d-d3bf-4a7d-ba8d-61877f031ba8): COMMIT;
Executing (b2e3c902-e41f-42ef-9da8-d15c7475d5cf): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bfb5250fb57d4d3fafda28a76e4257a3$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Jaldoots capacity building on Geo-hydrology','2021-01-08 16:52:34.000 +00:00','4f3f5e8e-de1b-411a-9454-9038cca34335','2024-08-31 20:47:14.059 +00:00','2024-08-31 20:47:14.059 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bfb5250fb57d4d3fafda28a76e4257a3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname JD test - Assam
Executing (145714c8-59ad-464a-a26d-2ff67b012e22): START TRANSACTION;
Executing (5ca71088-3cc1-4c90-a86a-ab830d2e60ff): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_99b5647e7ecf4d5b913e7fac61392f44$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Feedback and next steps LL2','2022-03-08 07:30:00.000 +00:00','a6241a20-9982-4041-a67d-7e2a2e43f6b9','2024-08-31 20:47:14.061 +00:00','2024-08-31 20:47:14.061 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_99b5647e7ecf4d5b913e7fac61392f44$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c4f14d3c-6708-47a6-b4f9-0d804ea9232d): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'e6f9c8f7-019e-4d38-b18a-5acf5900c008' AND "UserTrainer"."name" = 'Feedback and next steps LL2' AND "UserTrainer"."issueDate" = '2022-03-08 07:30:00.000 +00:00' LIMIT 1;
Executing (b2e3c902-e41f-42ef-9da8-d15c7475d5cf): COMMIT;
Executing (145714c8-59ad-464a-a26d-2ff67b012e22): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'fb03a265-7824-49ee-a49d-fbe0c9e82564' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM - II' AND "UserTopic"."issuedAt" = '2021-08-14 11:56:41.000 +00:00' LIMIT 1;
trainertopicname JD test - Assam
Executing (28b461e2-b385-41e9-bd7a-6618051b0b76): START TRANSACTION;
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-01-30T09:07:17.000+0000
Executing (6271de6c-ff63-4d13-9483-086e552bc441): START TRANSACTION;
Executing (145714c8-59ad-464a-a26d-2ff67b012e22): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_defca22f8be9492a8eb129c25b852f8e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM - II','2021-08-14 11:56:41.000 +00:00','fb03a265-7824-49ee-a49d-fbe0c9e82564','2024-08-31 20:47:14.067 +00:00','2024-08-31 20:47:14.067 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_defca22f8be9492a8eb129c25b852f8e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5ca71088-3cc1-4c90-a86a-ab830d2e60ff): COMMIT;
Executing (c4f14d3c-6708-47a6-b4f9-0d804ea9232d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a1d43ca8e71a437dadcdbb30b32c0ed6$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Feedback and next steps LL2','2022-03-08 07:30:00.000 +00:00','e6f9c8f7-019e-4d38-b18a-5acf5900c008','2024-08-31 20:47:14.069 +00:00','2024-08-31 20:47:14.069 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a1d43ca8e71a437dadcdbb30b32c0ed6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6271de6c-ff63-4d13-9483-086e552bc441): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '305c306d-64cc-45eb-b51c-6bcb69c00291' AND "UserTopic"."name" = 'Taking good photos and making posters' AND "UserTopic"."issuedAt" = '2022-04-05 07:34:54.000 +00:00' LIMIT 1;
Executing (145714c8-59ad-464a-a26d-2ff67b012e22): COMMIT;
Processed user: Suchee
Executing (27a13830-3c64-49da-913c-5c386d19faf1): START TRANSACTION;
Executing (28b461e2-b385-41e9-bd7a-6618051b0b76): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '78fb6721-9eb2-4099-98f7-75340a08c883' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-01-30 09:06:32.000 +00:00' LIMIT 1;
Executing (6271de6c-ff63-4d13-9483-086e552bc441): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_05666b036b394d8f9f347645dec7e786$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Taking good photos and making posters','2022-04-05 07:34:54.000 +00:00','305c306d-64cc-45eb-b51c-6bcb69c00291','2024-08-31 20:47:14.072 +00:00','2024-08-31 20:47:14.072 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_05666b036b394d8f9f347645dec7e786$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Crop Water Budgeting Overview 2020-12-16T07:20:18.000+0000
Executing (974863bf-1415-4cc5-b275-7b28ca6a636d): START TRANSACTION;
Executing (27a13830-3c64-49da-913c-5c386d19faf1): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4e526a75-c8d4-436b-8245-b7f7dd485186' AND "UserTopic"."name" = 'Scripts Review | T1.02 | DG' AND "UserTopic"."issuedAt" = '2020-12-02 11:39:32.000 +00:00' LIMIT 1;
Executing (c4f14d3c-6708-47a6-b4f9-0d804ea9232d): COMMIT;
Executing (974863bf-1415-4cc5-b275-7b28ca6a636d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6df4face-5699-4fa1-bd64-0c565ee7440d' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM - II' AND "UserTopic"."issuedAt" = '2021-08-14 11:57:32.000 +00:00' LIMIT 1;
Executing (28b461e2-b385-41e9-bd7a-6618051b0b76): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f9b4b7178b964a07bae76021a3e3ca38$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-01-30 09:06:32.000 +00:00','78fb6721-9eb2-4099-98f7-75340a08c883','2024-08-31 20:47:14.075 +00:00','2024-08-31 20:47:14.075 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f9b4b7178b964a07bae76021a3e3ca38$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (974863bf-1415-4cc5-b275-7b28ca6a636d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3d122d35f3954fbe80874642807dad33$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM - II','2021-08-14 11:57:32.000 +00:00','6df4face-5699-4fa1-bd64-0c565ee7440d','2024-08-31 20:47:14.076 +00:00','2024-08-31 20:47:14.076 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3d122d35f3954fbe80874642807dad33$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (27a13830-3c64-49da-913c-5c386d19faf1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f3d0a7ee85634d55939c436f9e434e19$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Scripts Review | T1.02 | DG','2020-12-02 11:39:32.000 +00:00','4e526a75-c8d4-436b-8245-b7f7dd485186','2024-08-31 20:47:14.077 +00:00','2024-08-31 20:47:14.077 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f3d0a7ee85634d55939c436f9e434e19$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6271de6c-ff63-4d13-9483-086e552bc441): COMMIT;
Processed user: Saurav
Executing (290bf45b-325a-4028-9703-a64472157392): START TRANSACTION;
Executing (974863bf-1415-4cc5-b275-7b28ca6a636d): COMMIT;
Executing (28b461e2-b385-41e9-bd7a-6618051b0b76): COMMIT;
topicName Introduction to Visual Design LL3 2022-03-22T07:24:21.000+0000
Executing (984b4975-a0f8-484c-8c6b-5576cab87c92): START TRANSACTION;
Executing (290bf45b-325a-4028-9703-a64472157392): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '67f6ffd9-0d75-4c92-8909-7c0f78daf8b7' AND "UserTopic"."name" = 'Test run for Assisted Scanning' AND "UserTopic"."issuedAt" = '2020-08-07 07:11:07.000 +00:00' LIMIT 1;
Executing (984b4975-a0f8-484c-8c6b-5576cab87c92): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '919b177f-2a3d-4883-8060-149bf84012b4' AND "UserTopic"."name" = 'District Workshop training for block team' AND "UserTopic"."issuedAt" = '2023-04-20 12:25:54.000 +00:00' LIMIT 1;
Executing (27a13830-3c64-49da-913c-5c386d19faf1): COMMIT;
topicName Crop Water Budgeting Overview 2020-12-16T07:16:03.000+0000
Executing (74272ce4-f959-4871-86a2-eccb4f98692b): START TRANSACTION;
topicName Capacity building of Jaldoots on MGNREGA schemes provisions 2021-01-11T07:36:52.000+0000
Executing (4b7f8d8a-7e27-4644-a1eb-d5e83bdb5205): START TRANSACTION;
Executing (984b4975-a0f8-484c-8c6b-5576cab87c92): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7091f23997ed4b06bbb7f31637c7f589$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'District Workshop training for block team','2023-04-20 12:25:54.000 +00:00','919b177f-2a3d-4883-8060-149bf84012b4','2024-08-31 20:47:14.082 +00:00','2024-08-31 20:47:14.082 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7091f23997ed4b06bbb7f31637c7f589$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Demo and Deployment Training | ACT 2020-12-11T13:54:49.000+0000
Executing (3c2f5513-9b05-48f2-acad-a0d5a3186a83): START TRANSACTION;
Executing (74272ce4-f959-4871-86a2-eccb4f98692b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f5bda8c8-9b5d-4f02-aefc-e2ecf01d710c' AND "UserTopic"."name" = 'JD test - Training of District Coordinators for JalDoot Program Execution' AND "UserTopic"."issuedAt" = '2023-01-31 11:36:14.000 +00:00' LIMIT 1;
Executing (290bf45b-325a-4028-9703-a64472157392): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a17fe01fcee04fbf9eea03f18f61c971$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Test run for Assisted Scanning','2020-08-07 07:11:07.000 +00:00','67f6ffd9-0d75-4c92-8909-7c0f78daf8b7','2024-08-31 20:47:14.084 +00:00','2024-08-31 20:47:14.084 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a17fe01fcee04fbf9eea03f18f61c971$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (984b4975-a0f8-484c-8c6b-5576cab87c92): COMMIT;
Executing (3c2f5513-9b05-48f2-acad-a0d5a3186a83): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '7dd8cae2-8102-44ca-b042-6a1d51b97504' AND "UserTopic"."name" = 'JD - Facilitate two practical JalShalas for training of Block trainers - 2 ' AND "UserTopic"."issuedAt" = '2023-03-09 03:38:36.000 +00:00' LIMIT 1;
Executing (4b7f8d8a-7e27-4644-a1eb-d5e83bdb5205): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5a9679fe-6c56-4e22-aa0a-14adb9703410' AND "UserTopic"."name" = 'JD test - Assam' AND "UserTopic"."issuedAt" = '2023-01-10 06:20:06.000 +00:00' LIMIT 1;
topicName Execution of the JalShala 2023-04-20T12:28:09.000+0000
Executing (d4d11f98-2df6-4adf-bb4c-b09df0b08515): START TRANSACTION;
Executing (3c2f5513-9b05-48f2-acad-a0d5a3186a83): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c8063f8b5da24104a73f40cbbd7a1795$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD - Facilitate two practical JalShalas for training of Block trainers - 2 ','2023-03-09 03:38:36.000 +00:00','7dd8cae2-8102-44ca-b042-6a1d51b97504','2024-08-31 20:47:14.087 +00:00','2024-08-31 20:47:14.087 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c8063f8b5da24104a73f40cbbd7a1795$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (74272ce4-f959-4871-86a2-eccb4f98692b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_38d9996eb3f34c88b524ac20ea4af5c5$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD test - Training of District Coordinators for JalDoot Program Execution','2023-01-31 11:36:14.000 +00:00','f5bda8c8-9b5d-4f02-aefc-e2ecf01d710c','2024-08-31 20:47:14.088 +00:00','2024-08-31 20:47:14.088 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_38d9996eb3f34c88b524ac20ea4af5c5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (290bf45b-325a-4028-9703-a64472157392): COMMIT;
Executing (d4d11f98-2df6-4adf-bb4c-b09df0b08515): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b7031ba5-8d50-43d4-82db-b63e173db13c' AND "UserTopic"."name" = 'JD test - Report on Progress post JalShala with field work Data' AND "UserTopic"."issuedAt" = '2023-01-27 07:53:43.000 +00:00' LIMIT 1;
Executing (3c2f5513-9b05-48f2-acad-a0d5a3186a83): COMMIT;
Executing (4b7f8d8a-7e27-4644-a1eb-d5e83bdb5205): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e2e025025ba343338d49d2088675a8c6$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD test - Assam','2023-01-10 06:20:06.000 +00:00','5a9679fe-6c56-4e22-aa0a-14adb9703410','2024-08-31 20:47:14.091 +00:00','2024-08-31 20:47:14.091 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e2e025025ba343338d49d2088675a8c6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d4d11f98-2df6-4adf-bb4c-b09df0b08515): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f352880aceff4cc09af7861ac1cdbcd3$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD test - Report on Progress post JalShala with field work Data','2023-01-27 07:53:43.000 +00:00','b7031ba5-8d50-43d4-82db-b63e173db13c','2024-08-31 20:47:14.092 +00:00','2024-08-31 20:47:14.092 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f352880aceff4cc09af7861ac1cdbcd3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName JD - Facilitate two practical JalShalas for training of Block trainers - 1 2023-03-09T03:32:14.000+0000
Executing (e8f5e418-875c-4ede-9190-c8654647d102): START TRANSACTION;
topicName PDA Updates 2020-10-06T06:26:36.000+0000
Executing (6f0e9058-3621-4dbc-b10b-2bc66298d350): START TRANSACTION;
Executing (74272ce4-f959-4871-86a2-eccb4f98692b): COMMIT;
Executing (d4d11f98-2df6-4adf-bb4c-b09df0b08515): COMMIT;
Executing (e8f5e418-875c-4ede-9190-c8654647d102): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '867b20fb-b6bd-418d-91c6-aa5ef686e629' AND "UserTopic"."name" = 'PDA - Trainer App' AND "UserTopic"."issuedAt" = '2019-12-05 07:26:08.000 +00:00' LIMIT 1;
Executing (6f0e9058-3621-4dbc-b10b-2bc66298d350): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '42740f34-6ea7-41e2-be0e-7ea2a846b001' AND "UserTopic"."name" = 'PDA Dashboard Demo' AND "UserTopic"."issuedAt" = '2021-11-26 05:27:49.000 +00:00' LIMIT 1;
Executing (4b7f8d8a-7e27-4644-a1eb-d5e83bdb5205): COMMIT;
topicName Planning the Jalshala 2023-04-28T05:57:55.000+0000
Executing (898640f0-a448-4353-af67-fd5c187a79bf): START TRANSACTION;
Executing (e8f5e418-875c-4ede-9190-c8654647d102): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ee0185dc9663479986fea7c094b39a45$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Trainer App','2019-12-05 07:26:08.000 +00:00','867b20fb-b6bd-418d-91c6-aa5ef686e629','2024-08-31 20:47:14.099 +00:00','2024-08-31 20:47:14.099 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ee0185dc9663479986fea7c094b39a45$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName District Workshop training for block team 2023-04-20T12:01:40.000+0000
Executing (35bbb994-9826-46d2-af50-3900ad9368c7): START TRANSACTION;
Executing (898640f0-a448-4353-af67-fd5c187a79bf): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'bf9b2448-f718-4224-96d4-06bdb59034a3' AND "UserTrainer"."name" = 'Planning of the JalShala' AND "UserTrainer"."issueDate" = '2023-07-31 16:30:00.000 +00:00' LIMIT 1;
Executing (6f0e9058-3621-4dbc-b10b-2bc66298d350): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0b7f6425f2ad4dd0b7a293a665f4550f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Dashboard Demo','2021-11-26 05:27:49.000 +00:00','42740f34-6ea7-41e2-be0e-7ea2a846b001','2024-08-31 20:47:14.102 +00:00','2024-08-31 20:47:14.102 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0b7f6425f2ad4dd0b7a293a665f4550f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName JD test - Completing the self assessment course  2023-01-21T08:55:51.000+0000
Executing (b89193c7-24d6-4b44-8593-eec6aac3682f): START TRANSACTION;
Executing (898640f0-a448-4353-af67-fd5c187a79bf): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_85907f504b4145f286ffbf692a63f8d6$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Planning of the JalShala','2023-07-31 16:30:00.000 +00:00','bf9b2448-f718-4224-96d4-06bdb59034a3','2024-08-31 20:47:14.105 +00:00','2024-08-31 20:47:14.105 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_85907f504b4145f286ffbf692a63f8d6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (35bbb994-9826-46d2-af50-3900ad9368c7): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c0072a31-91df-48a0-b79e-5d19c7d29d27' AND "UserTopic"."name" = 'Virtual Interactions - Needs and Benefits' AND "UserTopic"."issuedAt" = '2020-11-04 10:07:06.000 +00:00' LIMIT 1;
Executing (e8f5e418-875c-4ede-9190-c8654647d102): COMMIT;
Executing (898640f0-a448-4353-af67-fd5c187a79bf): COMMIT;
Executing (35bbb994-9826-46d2-af50-3900ad9368c7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4d79448373594745a46b9eb3fd26f58f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Virtual Interactions - Needs and Benefits','2020-11-04 10:07:06.000 +00:00','c0072a31-91df-48a0-b79e-5d19c7d29d27','2024-08-31 20:47:14.109 +00:00','2024-08-31 20:47:14.109 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4d79448373594745a46b9eb3fd26f58f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b89193c7-24d6-4b44-8593-eec6aac3682f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'eafa5769-776e-421f-bdce-03326a065f7e' AND "UserTopic"."name" = 'Scripts Review | T1.02 | DG' AND "UserTopic"."issuedAt" = '2020-12-02 11:39:06.000 +00:00' LIMIT 1;
Executing (6f0e9058-3621-4dbc-b10b-2bc66298d350): COMMIT;
trainertopicname Execution of the JalShala
Executing (ca68f990-af29-4f92-815f-3aaaa1515bc0): START TRANSACTION;
Executing (35bbb994-9826-46d2-af50-3900ad9368c7): COMMIT;
Executing (b89193c7-24d6-4b44-8593-eec6aac3682f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5728ca7166494a6587a9e7f835b4007a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Scripts Review | T1.02 | DG','2020-12-02 11:39:06.000 +00:00','eafa5769-776e-421f-bdce-03326a065f7e','2024-08-31 20:47:14.113 +00:00','2024-08-31 20:47:14.113 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5728ca7166494a6587a9e7f835b4007a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA - Participant App 2019-12-26T11:14:27+0000
Executing (69560ff8-8e31-4b55-b4e6-952f26a8cc1c): START TRANSACTION;
Executing (ca68f990-af29-4f92-815f-3aaaa1515bc0): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'db52891b-977c-429d-ad2c-9258b81a7ba4' AND "UserTopic"."name" = 'PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra.' AND "UserTopic"."issuedAt" = '2020-12-23 10:08:12.000 +00:00' LIMIT 1;
topicName Guided Mentoring Format 2020-11-04T10:39:04.000+0000
Executing (b550cc49-606e-4e66-bf9c-2bca4f9d516d): START TRANSACTION;
topicName Well Monitoring - Example 2022-06-16T09:26:46.000+0000
Executing (afcdefb9-7404-4603-887a-7d4679236dad): START TRANSACTION;
Executing (ca68f990-af29-4f92-815f-3aaaa1515bc0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6eaa9fab894d45fcb74037c9694617f0$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra.','2020-12-23 10:08:12.000 +00:00','db52891b-977c-429d-ad2c-9258b81a7ba4','2024-08-31 20:47:14.117 +00:00','2024-08-31 20:47:14.117 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6eaa9fab894d45fcb74037c9694617f0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b550cc49-606e-4e66-bf9c-2bca4f9d516d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9ca87890-0726-4909-9ebd-92fab6ce4a20' AND "UserTopic"."name" = 'Virtual Interactions - Needs and Benefits' AND "UserTopic"."issuedAt" = '2020-11-04 10:07:13.000 +00:00' LIMIT 1;
Executing (69560ff8-8e31-4b55-b4e6-952f26a8cc1c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '840282c7-4246-44db-a1f6-d753c1913547' AND "UserTopic"."name" = 'Recap and potential next steps with the learning experience' AND "UserTopic"."issuedAt" = '2022-02-01 08:04:52.000 +00:00' LIMIT 1;
Executing (b89193c7-24d6-4b44-8593-eec6aac3682f): COMMIT;
Executing (ca68f990-af29-4f92-815f-3aaaa1515bc0): COMMIT;
Executing (b550cc49-606e-4e66-bf9c-2bca4f9d516d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_65b19046b7634e6a92832f6e980c1f63$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Virtual Interactions - Needs and Benefits','2020-11-04 10:07:13.000 +00:00','9ca87890-0726-4909-9ebd-92fab6ce4a20','2024-08-31 20:47:14.122 +00:00','2024-08-31 20:47:14.122 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_65b19046b7634e6a92832f6e980c1f63$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (69560ff8-8e31-4b55-b4e6-952f26a8cc1c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4176df37262b4081b18c4593d7a6898c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Recap and potential next steps with the learning experience','2022-02-01 08:04:52.000 +00:00','840282c7-4246-44db-a1f6-d753c1913547','2024-08-31 20:47:14.124 +00:00','2024-08-31 20:47:14.124 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4176df37262b4081b18c4593d7a6898c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (afcdefb9-7404-4603-887a-7d4679236dad): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5db4d93e-0440-4889-aede-7c3540cc5831' AND "UserTopic"."name" = 'Wheat Crop Training' AND "UserTopic"."issuedAt" = '2020-12-31 11:11:04.000 +00:00' LIMIT 1;
topicName Getting Started with PDA 2020-11-25T09:34:39.000+0000
Executing (1941f6fc-717b-4646-a4cd-b7c4a95f55c8): START TRANSACTION;
Executing (b550cc49-606e-4e66-bf9c-2bca4f9d516d): COMMIT;
topicName Observations and Feedback | T1.03 | DG 2020-12-10T12:18:08.000+0000
Executing (2712fa67-9eb8-4db9-a6a7-9f8622f06983): START TRANSACTION;
Executing (1941f6fc-717b-4646-a4cd-b7c4a95f55c8): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '8866902d-32f0-4d36-a6d3-eeef2072405c' AND "UserTrainer"."name" = 'PDA Rollout Demo' AND "UserTrainer"."issueDate" = '2021-05-04 05:30:00.000 +00:00' LIMIT 1;
Processed user: Izra Nawas
Executing (2efb3050-b343-4522-96d5-d4dcc513d80a): START TRANSACTION;
Executing (afcdefb9-7404-4603-887a-7d4679236dad): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_aa32bb7e47cf438e9f2cec7ace897f30$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Wheat Crop Training','2020-12-31 11:11:04.000 +00:00','5db4d93e-0440-4889-aede-7c3540cc5831','2024-08-31 20:47:14.130 +00:00','2024-08-31 20:47:14.130 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_aa32bb7e47cf438e9f2cec7ace897f30$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (69560ff8-8e31-4b55-b4e6-952f26a8cc1c): COMMIT;
Executing (1941f6fc-717b-4646-a4cd-b7c4a95f55c8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_27abdf71a7cf4da1979d89d5a66812ca$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:30:00.000 +00:00','8866902d-32f0-4d36-a6d3-eeef2072405c','2024-08-31 20:47:14.132 +00:00','2024-08-31 20:47:14.132 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_27abdf71a7cf4da1979d89d5a66812ca$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2efb3050-b343-4522-96d5-d4dcc513d80a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6afb2b3b-3e1c-4e13-9bd9-b1e2e77810c9' AND "UserTopic"."name" = 'Wheat Crop Training' AND "UserTopic"."issuedAt" = '2020-12-31 10:14:55.000 +00:00' LIMIT 1;
Executing (2712fa67-9eb8-4db9-a6a7-9f8622f06983): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9c782be5-e423-49f9-8b28-613ccc87fc3a' AND "UserTopic"."name" = 'Recap and potential next steps with the learning experience' AND "UserTopic"."issuedAt" = '2022-02-01 06:44:35.000 +00:00' LIMIT 1;
Executing (1941f6fc-717b-4646-a4cd-b7c4a95f55c8): COMMIT;
Executing (2efb3050-b343-4522-96d5-d4dcc513d80a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6287760962904dce848f83a3469c6e57$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Wheat Crop Training','2020-12-31 10:14:55.000 +00:00','6afb2b3b-3e1c-4e13-9bd9-b1e2e77810c9','2024-08-31 20:47:14.136 +00:00','2024-08-31 20:47:14.136 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6287760962904dce848f83a3469c6e57$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (afcdefb9-7404-4603-887a-7d4679236dad): COMMIT;
trainertopicname Introduction to Learning Objectives
Executing (53ccc263-e4bd-48f2-a8bf-0fd8219395b6): START TRANSACTION;
trainertopicname Post-Harvest Management and Value Addition in Spice Crops.
Executing (289876e9-4b35-4b0f-a2f6-fce9cba5d3ae): START TRANSACTION;
topicName Getting Started with PDA 2020-11-25T09:34:29.000+0000
Executing (8fad8a3f-1374-467a-8475-7c0aeddc6323): START TRANSACTION;
Executing (2712fa67-9eb8-4db9-a6a7-9f8622f06983): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1224fbfcc4eb46abafddebdad797bd60$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Recap and potential next steps with the learning experience','2022-02-01 06:44:35.000 +00:00','9c782be5-e423-49f9-8b28-613ccc87fc3a','2024-08-31 20:47:14.140 +00:00','2024-08-31 20:47:14.140 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1224fbfcc4eb46abafddebdad797bd60$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (289876e9-4b35-4b0f-a2f6-fce9cba5d3ae): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '88acf595-35dd-4ee8-87aa-924166be5859' AND "UserTrainer"."name" = 'Water User Association Training' AND "UserTrainer"."issueDate" = '2021-04-07 06:00:00.000 +00:00' LIMIT 1;
Executing (8fad8a3f-1374-467a-8475-7c0aeddc6323): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6e95d2e7-e874-4076-9412-17aeeb8ea5c3' AND "UserTopic"."name" = 'Feedback and next steps LL2' AND "UserTopic"."issuedAt" = '2022-03-08 06:49:09.000 +00:00' LIMIT 1;
Executing (2efb3050-b343-4522-96d5-d4dcc513d80a): COMMIT;
Executing (53ccc263-e4bd-48f2-a8bf-0fd8219395b6): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'b912e843-b03e-4f84-8133-82016c8dd2a8' AND "UserTrainer"."name" = 'Content Development | T1.01 | DG' AND "UserTrainer"."issueDate" = '2020-11-26 11:30:00.000 +00:00' LIMIT 1;
Executing (289876e9-4b35-4b0f-a2f6-fce9cba5d3ae): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3db4c89054294b348e057744c78fc8fb$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Water User Association Training','2021-04-07 06:00:00.000 +00:00','88acf595-35dd-4ee8-87aa-924166be5859','2024-08-31 20:47:14.145 +00:00','2024-08-31 20:47:14.145 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3db4c89054294b348e057744c78fc8fb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8fad8a3f-1374-467a-8475-7c0aeddc6323): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_200898fc81f34ef48a94a07489a7efeb$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Feedback and next steps LL2','2022-03-08 06:49:09.000 +00:00','6e95d2e7-e874-4076-9412-17aeeb8ea5c3','2024-08-31 20:47:14.146 +00:00','2024-08-31 20:47:14.146 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_200898fc81f34ef48a94a07489a7efeb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T07:06:04.000+0000
Executing (d83a4367-8ed0-477a-8e04-d7e7ff862185): START TRANSACTION;
Executing (2712fa67-9eb8-4db9-a6a7-9f8622f06983): COMMIT;
Executing (289876e9-4b35-4b0f-a2f6-fce9cba5d3ae): COMMIT;
Executing (d83a4367-8ed0-477a-8e04-d7e7ff862185): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2e400362-1635-47e4-99c8-72b00dd38b19' AND "UserTopic"."name" = 'Virtual Training Format' AND "UserTopic"."issuedAt" = '2020-10-14 06:57:13.000 +00:00' LIMIT 1;
Executing (53ccc263-e4bd-48f2-a8bf-0fd8219395b6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e7905c75ac354a88b8edd0a24228a9a6$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Content Development | T1.01 | DG','2020-11-26 11:30:00.000 +00:00','b912e843-b03e-4f84-8133-82016c8dd2a8','2024-08-31 20:47:14.150 +00:00','2024-08-31 20:47:14.150 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e7905c75ac354a88b8edd0a24228a9a6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Water Literacy Campaign
Executing (fc61d0db-7140-4b5f-a5fa-44582e8e3a3a): START TRANSACTION;
Executing (d83a4367-8ed0-477a-8e04-d7e7ff862185): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0330f626f9184a83accffa6b46561b34$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Virtual Training Format','2020-10-14 06:57:13.000 +00:00','2e400362-1635-47e4-99c8-72b00dd38b19','2024-08-31 20:47:14.151 +00:00','2024-08-31 20:47:14.151 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0330f626f9184a83accffa6b46561b34$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8fad8a3f-1374-467a-8475-7c0aeddc6323): COMMIT;
topicName Introduction to Simplified Functional Grid Format 2022-01-11T07:32:07.000+0000
Executing (1b58213a-0658-45e6-81c0-beb73b447901): START TRANSACTION;
Executing (fc61d0db-7140-4b5f-a5fa-44582e8e3a3a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9bb07b4d-1f9a-46ff-abff-29ec483b7763' AND "UserTopic"."name" = 'Testing Topic lock in time' AND "UserTopic"."issuedAt" = '2021-04-24 12:28:31.000 +00:00' LIMIT 1;
topicName PDA Rollout Demo 2021-05-04T05:45:54.000+0000
Executing (15dcc9cf-7a99-45bf-9243-bd5d71804c34): START TRANSACTION;
Executing (53ccc263-e4bd-48f2-a8bf-0fd8219395b6): COMMIT;
Executing (fc61d0db-7140-4b5f-a5fa-44582e8e3a3a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ce0cf8fc445b4c95a9d9c7dc48b8771e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Testing Topic lock in time','2021-04-24 12:28:31.000 +00:00','9bb07b4d-1f9a-46ff-abff-29ec483b7763','2024-08-31 20:47:14.155 +00:00','2024-08-31 20:47:14.155 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ce0cf8fc445b4c95a9d9c7dc48b8771e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (15dcc9cf-7a99-45bf-9243-bd5d71804c34): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2b80d0a9-7767-4f05-9037-719583d95b5c' AND "UserTopic"."name" = 'Test 1' AND "UserTopic"."issuedAt" = '2021-04-18 08:06:11.000 +00:00' LIMIT 1;
Executing (1b58213a-0658-45e6-81c0-beb73b447901): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '15834b56-cfac-4d93-ba91-1dcf7785ad19' AND "UserTopic"."name" = 'Guided Mentoring Format' AND "UserTopic"."issuedAt" = '2020-10-14 06:49:45.000 +00:00' LIMIT 1;
Executing (d83a4367-8ed0-477a-8e04-d7e7ff862185): COMMIT;
Executing (15dcc9cf-7a99-45bf-9243-bd5d71804c34): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2361fe71a1d444bc800b1db08b1b5ea2$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Test 1','2021-04-18 08:06:11.000 +00:00','2b80d0a9-7767-4f05-9037-719583d95b5c','2024-08-31 20:47:14.158 +00:00','2024-08-31 20:47:14.158 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2361fe71a1d444bc800b1db08b1b5ea2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Scripts Review | T1.02 | DG
Executing (51369505-141f-47fa-a689-517b7ccc6dc5): START TRANSACTION;
Executing (fc61d0db-7140-4b5f-a5fa-44582e8e3a3a): COMMIT;
Executing (1b58213a-0658-45e6-81c0-beb73b447901): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1fde93282a4e48f49b393f739d754c47$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Guided Mentoring Format','2020-10-14 06:49:45.000 +00:00','15834b56-cfac-4d93-ba91-1dcf7785ad19','2024-08-31 20:47:14.159 +00:00','2024-08-31 20:47:14.159 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1fde93282a4e48f49b393f739d754c47$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Updates 2020-10-06T06:27:14.000+0000
Executing (8c6e5a56-6aa9-4a0c-abc2-7a77e89e1cef): START TRANSACTION;
topicName Sign in through codes 2021-02-17T11:36:56.000+0000
Executing (24b6f3db-dbb4-4fbf-aafb-60833faf4d9e): START TRANSACTION;
Executing (51369505-141f-47fa-a689-517b7ccc6dc5): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b791b39b-25d7-4e24-a280-9cd6d4870c90' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-01-30 09:04:58.000 +00:00' LIMIT 1;
Executing (15dcc9cf-7a99-45bf-9243-bd5d71804c34): COMMIT;
Executing (24b6f3db-dbb4-4fbf-aafb-60833faf4d9e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '805f8115-7fc6-481c-ae59-9a635ed92038' AND "UserTopic"."name" = 'Recap and potential next steps with the learning experience' AND "UserTopic"."issuedAt" = '2022-02-01 06:43:40.000 +00:00' LIMIT 1;
Executing (8c6e5a56-6aa9-4a0c-abc2-7a77e89e1cef): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '8d96ee1c-383e-4573-84c2-5c4c5cb73b82' AND "UserTrainer"."name" = 'Zoom for Hubs & Spokes' AND "UserTrainer"."issueDate" = '2020-12-10 06:30:00.000 +00:00' LIMIT 1;
Executing (1b58213a-0658-45e6-81c0-beb73b447901): COMMIT;
Executing (24b6f3db-dbb4-4fbf-aafb-60833faf4d9e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_96bc7b970e824d6398bcc41a1e25923d$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Recap and potential next steps with the learning experience','2022-02-01 06:43:40.000 +00:00','805f8115-7fc6-481c-ae59-9a635ed92038','2024-08-31 20:47:14.164 +00:00','2024-08-31 20:47:14.164 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_96bc7b970e824d6398bcc41a1e25923d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (51369505-141f-47fa-a689-517b7ccc6dc5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1dd175c78bc84068b80a38e178a2b376$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-01-30 09:04:58.000 +00:00','b791b39b-25d7-4e24-a280-9cd6d4870c90','2024-08-31 20:47:14.165 +00:00','2024-08-31 20:47:14.165 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1dd175c78bc84068b80a38e178a2b376$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName भूजलाची ओळख व भूजल व्यवस्थापनाची गरज | Introduction to groundwater -Need for GW management 2021-09-12T09:53:16.000+0000
Executing (a463cd7f-2678-404e-910f-5b6c5bec28a1): START TRANSACTION;
Executing (8c6e5a56-6aa9-4a0c-abc2-7a77e89e1cef): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8b46f0d7e14f47848c4d24efddc8e59c$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Zoom for Hubs & Spokes','2020-12-10 06:30:00.000 +00:00','8d96ee1c-383e-4573-84c2-5c4c5cb73b82','2024-08-31 20:47:14.166 +00:00','2024-08-31 20:47:14.166 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8b46f0d7e14f47848c4d24efddc8e59c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Aveek
Executing (7ec12016-8b08-4461-b65e-7945070eac9d): START TRANSACTION;
Executing (24b6f3db-dbb4-4fbf-aafb-60833faf4d9e): COMMIT;
Executing (a463cd7f-2678-404e-910f-5b6c5bec28a1): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c5d35819-2105-4cef-8c0a-af367a875971' AND "UserTopic"."name" = 'PDA Demo and Deployment Training | ACT' AND "UserTopic"."issuedAt" = '2020-12-11 13:54:29.000 +00:00' LIMIT 1;
Executing (51369505-141f-47fa-a689-517b7ccc6dc5): COMMIT;
topicName Introduction to Simplified Functional Grid Format 2022-01-11T07:21:03.000+0000
Executing (6262f3fc-9d31-40a9-89e7-352669fee116): START TRANSACTION;
Executing (7ec12016-8b08-4461-b65e-7945070eac9d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '441fc2a7-b992-46e0-951f-2a58ae3bdf32' AND "UserTopic"."name" = 'PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra.' AND "UserTopic"."issuedAt" = '2020-12-23 10:04:16.000 +00:00' LIMIT 1;
Executing (8c6e5a56-6aa9-4a0c-abc2-7a77e89e1cef): COMMIT;
Executing (6262f3fc-9d31-40a9-89e7-352669fee116): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '3a089d0b-0cea-42c8-a60a-dd9fb54e25d4' AND "UserTopic"."name" = 'Jaldoots capacity building on Geo-hydrology' AND "UserTopic"."issuedAt" = '2021-01-08 16:47:54.000 +00:00' LIMIT 1;
Executing (a463cd7f-2678-404e-910f-5b6c5bec28a1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4f80bf4627c4448e9675dfba9ecc28b0$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo and Deployment Training | ACT','2020-12-11 13:54:29.000 +00:00','c5d35819-2105-4cef-8c0a-af367a875971','2024-08-31 20:47:14.171 +00:00','2024-08-31 20:47:14.171 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4f80bf4627c4448e9675dfba9ecc28b0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Capacity building of Jaldoots on MGNREGA schemes provisions 2021-01-11T07:36:47.000+0000
Executing (ef8b3005-5bb4-464e-9fc6-1c68ba380076): START TRANSACTION;
Executing (6262f3fc-9d31-40a9-89e7-352669fee116): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7a5c6c4c42c940b3bcbd56434f6ab046$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Jaldoots capacity building on Geo-hydrology','2021-01-08 16:47:54.000 +00:00','3a089d0b-0cea-42c8-a60a-dd9fb54e25d4','2024-08-31 20:47:14.173 +00:00','2024-08-31 20:47:14.173 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7a5c6c4c42c940b3bcbd56434f6ab046$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7ec12016-8b08-4461-b65e-7945070eac9d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2b6ec2b25a4a45ecb11198c17c41b4c6$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra.','2020-12-23 10:04:16.000 +00:00','441fc2a7-b992-46e0-951f-2a58ae3bdf32','2024-08-31 20:47:14.173 +00:00','2024-08-31 20:47:14.173 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2b6ec2b25a4a45ecb11198c17c41b4c6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Virtual Interactions - Needs and Benefits
Executing (53ba8085-e6f9-4d59-aee3-976d1df5a125): START TRANSACTION;
Executing (ef8b3005-5bb4-464e-9fc6-1c68ba380076): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '971f2670-d929-4a00-a697-f5e19fa95fff' AND "UserTrainer"."name" = 'Data collection and Analysis' AND "UserTrainer"."issueDate" = '2021-01-06 12:30:00.000 +00:00' LIMIT 1;
Executing (a463cd7f-2678-404e-910f-5b6c5bec28a1): COMMIT;
Executing (ef8b3005-5bb4-464e-9fc6-1c68ba380076): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_60bb2fbbb0ad4d0fbeca72417cb224a5$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Data collection and Analysis','2021-01-06 12:30:00.000 +00:00','971f2670-d929-4a00-a697-f5e19fa95fff','2024-08-31 20:47:14.176 +00:00','2024-08-31 20:47:14.176 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_60bb2fbbb0ad4d0fbeca72417cb224a5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6262f3fc-9d31-40a9-89e7-352669fee116): COMMIT;
Executing (53ba8085-e6f9-4d59-aee3-976d1df5a125): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '534ec60b-0deb-41a6-97f8-2b5477f9c3a3' AND "UserTopic"."name" = 'PDA Additional features' AND "UserTopic"."issuedAt" = '2021-01-11 05:07:13.000 +00:00' LIMIT 1;
Executing (7ec12016-8b08-4461-b65e-7945070eac9d): COMMIT;
Executing (ef8b3005-5bb4-464e-9fc6-1c68ba380076): COMMIT;
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-01-30T09:05:07.000+0000
Executing (0e15b131-25e8-47b1-98af-e0ff9fb3e834): START TRANSACTION;
topicName Observations and Feedback | T1.03 | DG 2020-12-10T12:18:07.000+0000
Executing (95f52360-5f5d-4ca8-8f24-1d60c412be20): START TRANSACTION;
trainertopicname Orientation on Abhy and PGWM - II
Executing (e8057bfd-527f-4681-b639-44c49509a475): START TRANSACTION;
Executing (0e15b131-25e8-47b1-98af-e0ff9fb3e834): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '623772f6-e951-4704-ad07-d8e1b852bee3' AND "UserTopic"."name" = 'PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra.' AND "UserTopic"."issuedAt" = '2020-12-23 10:18:20.000 +00:00' LIMIT 1;
topicName Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management) 2021-01-30T09:05:18.000+0000
Executing (adbf3a14-8349-4567-b234-a633a4f9cfc2): START TRANSACTION;
Executing (53ba8085-e6f9-4d59-aee3-976d1df5a125): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5692573261cf42fd80fba6db360bcec4$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Additional features','2021-01-11 05:07:13.000 +00:00','534ec60b-0deb-41a6-97f8-2b5477f9c3a3','2024-08-31 20:47:14.181 +00:00','2024-08-31 20:47:14.181 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5692573261cf42fd80fba6db360bcec4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e8057bfd-527f-4681-b639-44c49509a475): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '249f141b-3fd0-4d6b-8fdb-c68de7aca819' AND "UserTopic"."name" = 'TOT of Bhujal Janakar' AND "UserTopic"."issuedAt" = '2021-02-05 07:23:38.000 +00:00' LIMIT 1;
Executing (0e15b131-25e8-47b1-98af-e0ff9fb3e834): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b74b2f6b0ec2445fbf405289dd4e00cb$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra.','2020-12-23 10:18:20.000 +00:00','623772f6-e951-4704-ad07-d8e1b852bee3','2024-08-31 20:47:14.182 +00:00','2024-08-31 20:47:14.182 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b74b2f6b0ec2445fbf405289dd4e00cb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (adbf3a14-8349-4567-b234-a633a4f9cfc2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c55bd79b-042e-46bf-9e18-f4dd8e383e5d' AND "UserTopic"."name" = 'Orientation on Abhy and PGWM' AND "UserTopic"."issuedAt" = '2021-08-14 07:16:08.000 +00:00' LIMIT 1;
Executing (95f52360-5f5d-4ca8-8f24-1d60c412be20): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'e6afff30-727b-4d6a-9a0f-a21ce2ac628c' AND "UserTopic"."name" = 'Recap and potential next steps with the learning experience' AND "UserTopic"."issuedAt" = '2022-02-01 07:02:04.000 +00:00' LIMIT 1;
Executing (e8057bfd-527f-4681-b639-44c49509a475): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a9ed5475e44f44828bc67af67bc9ef3a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'TOT of Bhujal Janakar','2021-02-05 07:23:38.000 +00:00','249f141b-3fd0-4d6b-8fdb-c68de7aca819','2024-08-31 20:47:14.184 +00:00','2024-08-31 20:47:14.184 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a9ed5475e44f44828bc67af67bc9ef3a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (53ba8085-e6f9-4d59-aee3-976d1df5a125): COMMIT;
Executing (adbf3a14-8349-4567-b234-a633a4f9cfc2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e4fecf57c1714dc3bfc0a781e15987f0$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM','2021-08-14 07:16:08.000 +00:00','c55bd79b-042e-46bf-9e18-f4dd8e383e5d','2024-08-31 20:47:14.186 +00:00','2024-08-31 20:47:14.186 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e4fecf57c1714dc3bfc0a781e15987f0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0e15b131-25e8-47b1-98af-e0ff9fb3e834): COMMIT;
Executing (95f52360-5f5d-4ca8-8f24-1d60c412be20): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_073636845f87452a896e7ae6bd2ef8f3$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Recap and potential next steps with the learning experience','2022-02-01 07:02:04.000 +00:00','e6afff30-727b-4d6a-9a0f-a21ce2ac628c','2024-08-31 20:47:14.187 +00:00','2024-08-31 20:47:14.187 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_073636845f87452a896e7ae6bd2ef8f3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Getting Started with PDA 2020-11-25T09:34:31.000+0000
Executing (307c47b2-9bab-41a0-9361-735ecfa38403): START TRANSACTION;
topicName Codes instead of Scans 2021-02-04T06:06:42.000+0000
Executing (52315573-2c7c-4424-b0a2-95f9e057069a): START TRANSACTION;
Executing (e8057bfd-527f-4681-b639-44c49509a475): COMMIT;
Executing (307c47b2-9bab-41a0-9361-735ecfa38403): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '452450c8-d384-4c61-83f8-4faf11a6d8ef' AND "UserTrainer"."name" = 'JD test - Assam' AND "UserTrainer"."issueDate" = '2023-01-24 06:15:00.000 +00:00' LIMIT 1;
Executing (adbf3a14-8349-4567-b234-a633a4f9cfc2): COMMIT;
Executing (52315573-2c7c-4424-b0a2-95f9e057069a): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '2cbe0329-07a4-481a-bf7a-22b814a464e5' AND "UserTrainer"."name" = 'JD test - Assam' AND "UserTrainer"."issueDate" = '2023-01-24 06:15:00.000 +00:00' LIMIT 1;
Executing (95f52360-5f5d-4ca8-8f24-1d60c412be20): COMMIT;
topicName Getting Started with PDA 2020-11-25T09:35:35.000+0000
Executing (c6a2f683-32ab-47c0-9d62-2327b563f2fa): START TRANSACTION;
Executing (52315573-2c7c-4424-b0a2-95f9e057069a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d0734ed635fc4540af4a2769130807e5$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD test - Assam','2023-01-24 06:15:00.000 +00:00','2cbe0329-07a4-481a-bf7a-22b814a464e5','2024-08-31 20:47:14.192 +00:00','2024-08-31 20:47:14.192 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d0734ed635fc4540af4a2769130807e5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (307c47b2-9bab-41a0-9361-735ecfa38403): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_509a690b86c74e66a897c453e0b6e90a$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD test - Assam','2023-01-24 06:15:00.000 +00:00','452450c8-d384-4c61-83f8-4faf11a6d8ef','2024-08-31 20:47:14.192 +00:00','2024-08-31 20:47:14.192 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_509a690b86c74e66a897c453e0b6e90a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Crop Water Budgeting Overview 2020-12-16T07:19:19.000+0000
Executing (061b60af-355d-4744-a83f-3cfb71652f05): START TRANSACTION;
Processed user: Deepa
Executing (e9e8cfdd-11ac-426f-acec-1545c0a5b72c): START TRANSACTION;
Executing (c6a2f683-32ab-47c0-9d62-2327b563f2fa): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4f3f5e8e-de1b-411a-9454-9038cca34335' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-01-30 09:07:17.000 +00:00' LIMIT 1;
Executing (e9e8cfdd-11ac-426f-acec-1545c0a5b72c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '305c306d-64cc-45eb-b51c-6bcb69c00291' AND "UserTopic"."name" = 'Introduction to Visual Design LL3' AND "UserTopic"."issuedAt" = '2022-03-22 07:24:21.000 +00:00' LIMIT 1;
Executing (52315573-2c7c-4424-b0a2-95f9e057069a): COMMIT;
Executing (061b60af-355d-4744-a83f-3cfb71652f05): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'fb03a265-7824-49ee-a49d-fbe0c9e82564' AND "UserTopic"."name" = 'Crop Water Budgeting Overview' AND "UserTopic"."issuedAt" = '2020-12-16 07:20:18.000 +00:00' LIMIT 1;
Executing (e9e8cfdd-11ac-426f-acec-1545c0a5b72c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_30475b806fa04afbbb5f782f2dbaac99$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Visual Design LL3','2022-03-22 07:24:21.000 +00:00','305c306d-64cc-45eb-b51c-6bcb69c00291','2024-08-31 20:47:14.196 +00:00','2024-08-31 20:47:14.196 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_30475b806fa04afbbb5f782f2dbaac99$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname JD test - Conducting a block trainers TOT
Executing (9c7fe6cb-6c32-48ce-902d-a639c3526d30): START TRANSACTION;
Executing (307c47b2-9bab-41a0-9361-735ecfa38403): COMMIT;
Executing (c6a2f683-32ab-47c0-9d62-2327b563f2fa): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_451d8f69715b4ab095c98bf2e2ea3978$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-01-30 09:07:17.000 +00:00','4f3f5e8e-de1b-411a-9454-9038cca34335','2024-08-31 20:47:14.198 +00:00','2024-08-31 20:47:14.198 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_451d8f69715b4ab095c98bf2e2ea3978$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e9e8cfdd-11ac-426f-acec-1545c0a5b72c): COMMIT;
Executing (9c7fe6cb-6c32-48ce-902d-a639c3526d30): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6df4face-5699-4fa1-bd64-0c565ee7440d' AND "UserTopic"."name" = 'Crop Water Budgeting Overview' AND "UserTopic"."issuedAt" = '2020-12-16 07:16:03.000 +00:00' LIMIT 1;
trainertopicname JD test - Training of District Coordinators for JalDoot Program Execution
Executing (f227cf09-29ab-4db7-a77a-71a1eede5eac): START TRANSACTION;
Executing (061b60af-355d-4744-a83f-3cfb71652f05): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3344c456597e4564b819961de2e179a1$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Crop Water Budgeting Overview','2020-12-16 07:20:18.000 +00:00','fb03a265-7824-49ee-a49d-fbe0c9e82564','2024-08-31 20:47:14.200 +00:00','2024-08-31 20:47:14.200 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3344c456597e4564b819961de2e179a1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Feedback and next steps LL2 2022-03-08T07:43:48.000+0000
Executing (2ae80bf6-3e88-4b0e-be5a-2ab390fb1dea): START TRANSACTION;
Executing (9c7fe6cb-6c32-48ce-902d-a639c3526d30): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_480c24a057074dfa93c9e8351ee62590$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Crop Water Budgeting Overview','2020-12-16 07:16:03.000 +00:00','6df4face-5699-4fa1-bd64-0c565ee7440d','2024-08-31 20:47:14.202 +00:00','2024-08-31 20:47:14.202 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_480c24a057074dfa93c9e8351ee62590$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f227cf09-29ab-4db7-a77a-71a1eede5eac): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '78fb6721-9eb2-4099-98f7-75340a08c883' AND "UserTopic"."name" = 'Capacity building of Jaldoots on MGNREGA schemes provisions' AND "UserTopic"."issuedAt" = '2021-01-11 07:36:52.000 +00:00' LIMIT 1;
Executing (c6a2f683-32ab-47c0-9d62-2327b563f2fa): COMMIT;
Executing (2ae80bf6-3e88-4b0e-be5a-2ab390fb1dea): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4e526a75-c8d4-436b-8245-b7f7dd485186' AND "UserTopic"."name" = 'PDA Demo and Deployment Training | ACT' AND "UserTopic"."issuedAt" = '2020-12-11 13:54:49.000 +00:00' LIMIT 1;
Executing (061b60af-355d-4744-a83f-3cfb71652f05): COMMIT;
Executing (9c7fe6cb-6c32-48ce-902d-a639c3526d30): COMMIT;
Executing (f227cf09-29ab-4db7-a77a-71a1eede5eac): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9e94fb3f37824636b649e404c309c896$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots on MGNREGA schemes provisions','2021-01-11 07:36:52.000 +00:00','78fb6721-9eb2-4099-98f7-75340a08c883','2024-08-31 20:47:14.205 +00:00','2024-08-31 20:47:14.205 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9e94fb3f37824636b649e404c309c896$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Capacity building of Jaldoots on MGNREGA schemes provisions 2021-01-11T07:36:48.000+0000
Executing (625dae9a-cd03-4b80-b5a5-1769ce780c3d): START TRANSACTION;
Processed user: Bharat Gadhavi
Executing (c2a79df7-f963-49dc-933d-004e9793a1e9): START TRANSACTION;
Executing (2ae80bf6-3e88-4b0e-be5a-2ab390fb1dea): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_167755d0af1042a0880ae85cc8922ccc$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo and Deployment Training | ACT','2020-12-11 13:54:49.000 +00:00','4e526a75-c8d4-436b-8245-b7f7dd485186','2024-08-31 20:47:14.207 +00:00','2024-08-31 20:47:14.207 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_167755d0af1042a0880ae85cc8922ccc$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Orientation on Abhy and PGWM - II
Executing (c0354a19-868b-489c-aa53-98a72495c60d): START TRANSACTION;
Executing (c2a79df7-f963-49dc-933d-004e9793a1e9): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '7dd8cae2-8102-44ca-b042-6a1d51b97504' AND "UserTopic"."name" = 'JD - Facilitate two practical JalShalas for training of Block trainers - 1' AND "UserTopic"."issuedAt" = '2023-03-09 03:32:14.000 +00:00' LIMIT 1;
Executing (625dae9a-cd03-4b80-b5a5-1769ce780c3d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '919b177f-2a3d-4883-8060-149bf84012b4' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-04-20 12:28:09.000 +00:00' LIMIT 1;
Executing (f227cf09-29ab-4db7-a77a-71a1eede5eac): COMMIT;
Executing (c2a79df7-f963-49dc-933d-004e9793a1e9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cd1f5fb1f6754a3993e35c6ebc74947a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD - Facilitate two practical JalShalas for training of Block trainers - 1','2023-03-09 03:32:14.000 +00:00','7dd8cae2-8102-44ca-b042-6a1d51b97504','2024-08-31 20:47:14.210 +00:00','2024-08-31 20:47:14.210 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cd1f5fb1f6754a3993e35c6ebc74947a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c0354a19-868b-489c-aa53-98a72495c60d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '67f6ffd9-0d75-4c92-8909-7c0f78daf8b7' AND "UserTopic"."name" = 'PDA Updates' AND "UserTopic"."issuedAt" = '2020-10-06 06:26:36.000 +00:00' LIMIT 1;
Executing (2ae80bf6-3e88-4b0e-be5a-2ab390fb1dea): COMMIT;
Executing (625dae9a-cd03-4b80-b5a5-1769ce780c3d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d2146554b2c84d8cae5887a7d5e1b08b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-04-20 12:28:09.000 +00:00','919b177f-2a3d-4883-8060-149bf84012b4','2024-08-31 20:47:14.212 +00:00','2024-08-31 20:47:14.212 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d2146554b2c84d8cae5887a7d5e1b08b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Narendra Chavda 
Executing (2445d8b4-c0fd-441e-90b0-fff29b20dc0b): START TRANSACTION;
Executing (c0354a19-868b-489c-aa53-98a72495c60d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a32ae26bc2fd40dc8078a02e8a27fa8d$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Updates','2020-10-06 06:26:36.000 +00:00','67f6ffd9-0d75-4c92-8909-7c0f78daf8b7','2024-08-31 20:47:14.213 +00:00','2024-08-31 20:47:14.213 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a32ae26bc2fd40dc8078a02e8a27fa8d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Observations and Feedback | T1.03 | DG 2020-12-10T12:17:42.000+0000
Executing (b34cf9d7-d4f4-4824-b732-c51c0d8dd701): START TRANSACTION;
Executing (c2a79df7-f963-49dc-933d-004e9793a1e9): COMMIT;
Executing (b34cf9d7-d4f4-4824-b732-c51c0d8dd701): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f5bda8c8-9b5d-4f02-aefc-e2ecf01d710c' AND "UserTopic"."name" = 'District Workshop training for block team' AND "UserTopic"."issuedAt" = '2023-04-20 12:01:40.000 +00:00' LIMIT 1;
Executing (2445d8b4-c0fd-441e-90b0-fff29b20dc0b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b7031ba5-8d50-43d4-82db-b63e173db13c' AND "UserTopic"."name" = 'Planning the Jalshala' AND "UserTopic"."issuedAt" = '2023-04-28 05:57:55.000 +00:00' LIMIT 1;
Executing (625dae9a-cd03-4b80-b5a5-1769ce780c3d): COMMIT;
Executing (b34cf9d7-d4f4-4824-b732-c51c0d8dd701): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f7b929e695624b088a3ea74f374fff5b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'District Workshop training for block team','2023-04-20 12:01:40.000 +00:00','f5bda8c8-9b5d-4f02-aefc-e2ecf01d710c','2024-08-31 20:47:14.217 +00:00','2024-08-31 20:47:14.217 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f7b929e695624b088a3ea74f374fff5b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName JD - Making the District Plan 2023-03-09T03:06:19.000+0000
Executing (f3f08290-8215-4472-91d0-bc6b00f80cc8): START TRANSACTION;
Executing (c0354a19-868b-489c-aa53-98a72495c60d): COMMIT;
Executing (f3f08290-8215-4472-91d0-bc6b00f80cc8): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5a9679fe-6c56-4e22-aa0a-14adb9703410' AND "UserTopic"."name" = 'JD test - Completing the self assessment course ' AND "UserTopic"."issuedAt" = '2023-01-21 08:55:51.000 +00:00' LIMIT 1;
Executing (2445d8b4-c0fd-441e-90b0-fff29b20dc0b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_74116114d32c49a6b7fa02dc3e9e25c6$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Planning the Jalshala','2023-04-28 05:57:55.000 +00:00','b7031ba5-8d50-43d4-82db-b63e173db13c','2024-08-31 20:47:14.219 +00:00','2024-08-31 20:47:14.219 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_74116114d32c49a6b7fa02dc3e9e25c6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Atikur
Executing (79940206-7a1d-449f-8261-9f4dd6545b0b): START TRANSACTION;
Executing (f3f08290-8215-4472-91d0-bc6b00f80cc8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7142582db41e43b6a766ad8270b7ec8c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD test - Completing the self assessment course ','2023-01-21 08:55:51.000 +00:00','5a9679fe-6c56-4e22-aa0a-14adb9703410','2024-08-31 20:47:14.221 +00:00','2024-08-31 20:47:14.221 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7142582db41e43b6a766ad8270b7ec8c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Panchayat and Governance of Commons 2020-07-27T06:11:29.000+0000
Executing (4bfff3ee-41b2-4111-9ce0-2aaf2210b17f): START TRANSACTION;
Executing (b34cf9d7-d4f4-4824-b732-c51c0d8dd701): COMMIT;
Executing (4bfff3ee-41b2-4111-9ce0-2aaf2210b17f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '867b20fb-b6bd-418d-91c6-aa5ef686e629' AND "UserTopic"."name" = 'PDA - Participant App' AND "UserTopic"."issuedAt" = '2019-12-26 11:14:27.000 +00:00' LIMIT 1;
Executing (79940206-7a1d-449f-8261-9f4dd6545b0b): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'bf9b2448-f718-4224-96d4-06bdb59034a3' AND "UserTrainer"."name" = 'Execution of the JalShala' AND "UserTrainer"."issueDate" = '2023-07-31 17:15:00.000 +00:00' LIMIT 1;
Executing (2445d8b4-c0fd-441e-90b0-fff29b20dc0b): COMMIT;
Executing (4bfff3ee-41b2-4111-9ce0-2aaf2210b17f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a610d9ecbfde4c99a37806450914a507$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2019-12-26 11:14:27.000 +00:00','867b20fb-b6bd-418d-91c6-aa5ef686e629','2024-08-31 20:47:14.224 +00:00','2024-08-31 20:47:14.224 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a610d9ecbfde4c99a37806450914a507$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (79940206-7a1d-449f-8261-9f4dd6545b0b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_501a5cc6b69543d88fa1d12158665d24$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-07-31 17:15:00.000 +00:00','bf9b2448-f718-4224-96d4-06bdb59034a3','2024-08-31 20:47:14.225 +00:00','2024-08-31 20:47:14.225 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_501a5cc6b69543d88fa1d12158665d24$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Execution of the JalShala 2023-04-20T12:04:20.000+0000
Executing (d9f3ae88-b370-4609-9739-6a8dd0c6e2ad): START TRANSACTION;
Executing (f3f08290-8215-4472-91d0-bc6b00f80cc8): COMMIT;
Executing (4bfff3ee-41b2-4111-9ce0-2aaf2210b17f): COMMIT;
Executing (d9f3ae88-b370-4609-9739-6a8dd0c6e2ad): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c0072a31-91df-48a0-b79e-5d19c7d29d27' AND "UserTopic"."name" = 'Guided Mentoring Format' AND "UserTopic"."issuedAt" = '2020-11-04 10:39:04.000 +00:00' LIMIT 1;
topicName Execution of the JalShala 2023-05-29T11:00:31.000+0000
Executing (7b39009e-15b5-4311-9763-b0fb90e76ee0): START TRANSACTION;
topicName PDA DEMO english 2021-04-29T11:54:17.000+0000
Executing (bee8bf03-772f-491c-bead-aef0f10a0ea2): START TRANSACTION;
Executing (79940206-7a1d-449f-8261-9f4dd6545b0b): COMMIT;
topicName JD test -  Training of Block Trainers for JalDoot Program  2023-01-21T10:12:57.000+0000
Executing (287ed392-df98-4d6d-bad4-b422a576a67f): START TRANSACTION;
Executing (bee8bf03-772f-491c-bead-aef0f10a0ea2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'db52891b-977c-429d-ad2c-9258b81a7ba4' AND "UserTopic"."name" = 'Getting Started with PDA' AND "UserTopic"."issuedAt" = '2020-11-25 09:34:39.000 +00:00' LIMIT 1;
Executing (7b39009e-15b5-4311-9763-b0fb90e76ee0): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '42740f34-6ea7-41e2-be0e-7ea2a846b001' AND "UserTopic"."name" = 'Well Monitoring - Example' AND "UserTopic"."issuedAt" = '2022-06-16 09:26:46.000 +00:00' LIMIT 1;
Executing (d9f3ae88-b370-4609-9739-6a8dd0c6e2ad): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e3a1e76a0486480ba96c2ad223103970$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Guided Mentoring Format','2020-11-04 10:39:04.000 +00:00','c0072a31-91df-48a0-b79e-5d19c7d29d27','2024-08-31 20:47:14.230 +00:00','2024-08-31 20:47:14.230 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e3a1e76a0486480ba96c2ad223103970$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bee8bf03-772f-491c-bead-aef0f10a0ea2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d840cc6d18074c5bb5bd0d3666515102$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Getting Started with PDA','2020-11-25 09:34:39.000 +00:00','db52891b-977c-429d-ad2c-9258b81a7ba4','2024-08-31 20:47:14.231 +00:00','2024-08-31 20:47:14.231 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d840cc6d18074c5bb5bd0d3666515102$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7b39009e-15b5-4311-9763-b0fb90e76ee0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cf17d091c5e442e3ae7b8ee2baab5fc6$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Well Monitoring - Example','2022-06-16 09:26:46.000 +00:00','42740f34-6ea7-41e2-be0e-7ea2a846b001','2024-08-31 20:47:14.232 +00:00','2024-08-31 20:47:14.232 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cf17d091c5e442e3ae7b8ee2baab5fc6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Arnav Kr Baruah
Executing (497fc48c-d342-4e0d-bbd0-5d8c6c7d5939): START TRANSACTION;
Executing (287ed392-df98-4d6d-bad4-b422a576a67f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'eafa5769-776e-421f-bdce-03326a065f7e' AND "UserTopic"."name" = 'Observations and Feedback | T1.03 | DG' AND "UserTopic"."issuedAt" = '2020-12-10 12:18:08.000 +00:00' LIMIT 1;
Executing (bee8bf03-772f-491c-bead-aef0f10a0ea2): COMMIT;
Executing (497fc48c-d342-4e0d-bbd0-5d8c6c7d5939): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '840282c7-4246-44db-a1f6-d753c1913547' AND "UserTrainer"."name" = 'Introduction to Learning Objectives' AND "UserTrainer"."issueDate" = '2022-02-22 07:30:00.000 +00:00' LIMIT 1;
Executing (d9f3ae88-b370-4609-9739-6a8dd0c6e2ad): COMMIT;
trainertopicname Water Literacy Campaign
Executing (58bc12ab-19f3-4055-a506-a9e171ec1de1): START TRANSACTION;
Executing (7b39009e-15b5-4311-9763-b0fb90e76ee0): COMMIT;
Executing (287ed392-df98-4d6d-bad4-b422a576a67f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4abe90c64176494a8e31c0444423088b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Observations and Feedback | T1.03 | DG','2020-12-10 12:18:08.000 +00:00','eafa5769-776e-421f-bdce-03326a065f7e','2024-08-31 20:47:14.236 +00:00','2024-08-31 20:47:14.236 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4abe90c64176494a8e31c0444423088b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (58bc12ab-19f3-4055-a506-a9e171ec1de1): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '8866902d-32f0-4d36-a6d3-eeef2072405c' AND "UserTrainer"."name" = 'Post-Harvest Management and Value Addition in Spice Crops.' AND "UserTrainer"."issueDate" = '2021-02-24 10:00:00.000 +00:00' LIMIT 1;
Processed user: Neha Pawar
Executing (48b85f4f-f35a-4a9e-847d-c019665465cc): START TRANSACTION;
Executing (497fc48c-d342-4e0d-bbd0-5d8c6c7d5939): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cf0bdb1e48554838b774250f5b0defec$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Learning Objectives','2022-02-22 07:30:00.000 +00:00','840282c7-4246-44db-a1f6-d753c1913547','2024-08-31 20:47:14.238 +00:00','2024-08-31 20:47:14.238 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cf0bdb1e48554838b774250f5b0defec$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Soumya Ranjan
Executing (2ae1518f-2ea6-4a3a-af3e-0cccb4cc6c8e): START TRANSACTION;
Executing (58bc12ab-19f3-4055-a506-a9e171ec1de1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f52cce9c19cb48c5b5886ee321ea0a9e$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Post-Harvest Management and Value Addition in Spice Crops.','2021-02-24 10:00:00.000 +00:00','8866902d-32f0-4d36-a6d3-eeef2072405c','2024-08-31 20:47:14.240 +00:00','2024-08-31 20:47:14.240 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f52cce9c19cb48c5b5886ee321ea0a9e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (48b85f4f-f35a-4a9e-847d-c019665465cc): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5db4d93e-0440-4889-aede-7c3540cc5831' AND "UserTopic"."name" = 'Getting Started with PDA' AND "UserTopic"."issuedAt" = '2020-11-25 09:34:29.000 +00:00' LIMIT 1;
Executing (287ed392-df98-4d6d-bad4-b422a576a67f): COMMIT;
Executing (2ae1518f-2ea6-4a3a-af3e-0cccb4cc6c8e): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6afb2b3b-3e1c-4e13-9bd9-b1e2e77810c9' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 07:06:04.000 +00:00' LIMIT 1;
Executing (497fc48c-d342-4e0d-bbd0-5d8c6c7d5939): COMMIT;
Executing (48b85f4f-f35a-4a9e-847d-c019665465cc): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_97b865f76d0d46c9a506c4c82cae2bbf$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Getting Started with PDA','2020-11-25 09:34:29.000 +00:00','5db4d93e-0440-4889-aede-7c3540cc5831','2024-08-31 20:47:14.242 +00:00','2024-08-31 20:47:14.242 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_97b865f76d0d46c9a506c4c82cae2bbf$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (58bc12ab-19f3-4055-a506-a9e171ec1de1): COMMIT;
topicName PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra. 2020-12-23T10:05:07.000+0000
Executing (568b13f6-8e78-4f59-ab2a-81539717739b): START TRANSACTION;
Executing (2ae1518f-2ea6-4a3a-af3e-0cccb4cc6c8e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0f15065e71e147ad8cf69e7340e5947a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 07:06:04.000 +00:00','6afb2b3b-3e1c-4e13-9bd9-b1e2e77810c9','2024-08-31 20:47:14.244 +00:00','2024-08-31 20:47:14.244 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0f15065e71e147ad8cf69e7340e5947a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Image composition and layouts LL3
Executing (27fca1be-9b0c-40c5-b6b7-0f83b2e6d247): START TRANSACTION;
trainertopicname Wheat Crop Training
Executing (43951663-c4e2-4e07-8aca-f7719accb687): START TRANSACTION;
Executing (568b13f6-8e78-4f59-ab2a-81539717739b): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '88acf595-35dd-4ee8-87aa-924166be5859' AND "UserTrainer"."name" = 'Water Literacy Campaign' AND "UserTrainer"."issueDate" = '2021-01-23 05:00:00.000 +00:00' LIMIT 1;
Executing (48b85f4f-f35a-4a9e-847d-c019665465cc): COMMIT;
Executing (43951663-c4e2-4e07-8aca-f7719accb687): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6e95d2e7-e874-4076-9412-17aeeb8ea5c3' AND "UserTopic"."name" = 'PDA Rollout Demo' AND "UserTopic"."issuedAt" = '2021-05-04 05:45:54.000 +00:00' LIMIT 1;
Executing (27fca1be-9b0c-40c5-b6b7-0f83b2e6d247): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9c782be5-e423-49f9-8b28-613ccc87fc3a' AND "UserTopic"."name" = 'Introduction to Simplified Functional Grid Format' AND "UserTopic"."issuedAt" = '2022-01-11 07:32:07.000 +00:00' LIMIT 1;
Executing (2ae1518f-2ea6-4a3a-af3e-0cccb4cc6c8e): COMMIT;
Executing (43951663-c4e2-4e07-8aca-f7719accb687): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6006df9cda78486f98f0f28bf6ab2fce$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Rollout Demo','2021-05-04 05:45:54.000 +00:00','6e95d2e7-e874-4076-9412-17aeeb8ea5c3','2024-08-31 20:47:14.249 +00:00','2024-08-31 20:47:14.249 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6006df9cda78486f98f0f28bf6ab2fce$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (27fca1be-9b0c-40c5-b6b7-0f83b2e6d247): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f5cfa006205c4a4f8bf60548c2c2e8ff$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Simplified Functional Grid Format','2022-01-11 07:32:07.000 +00:00','9c782be5-e423-49f9-8b28-613ccc87fc3a','2024-08-31 20:47:14.250 +00:00','2024-08-31 20:47:14.250 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f5cfa006205c4a4f8bf60548c2c2e8ff$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (568b13f6-8e78-4f59-ab2a-81539717739b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e8ccfccdfc5f4a1d9a2f9bcc72777973$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Water Literacy Campaign','2021-01-23 05:00:00.000 +00:00','88acf595-35dd-4ee8-87aa-924166be5859','2024-08-31 20:47:14.251 +00:00','2024-08-31 20:47:14.251 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e8ccfccdfc5f4a1d9a2f9bcc72777973$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA - Hands on 2020-12-28T07:29:03.000+0000
Executing (ad57d637-f100-4811-b058-8d96e036a9c1): START TRANSACTION;
Executing (43951663-c4e2-4e07-8aca-f7719accb687): COMMIT;
topicName PDA - Hands on 2020-12-28T07:29:02.000+0000
Executing (ee184354-880e-407c-a93d-20fbb75ad74a): START TRANSACTION;
Executing (ad57d637-f100-4811-b058-8d96e036a9c1): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'b912e843-b03e-4f84-8133-82016c8dd2a8' AND "UserTrainer"."name" = 'Scripts Review | T1.02 | DG' AND "UserTrainer"."issueDate" = '2020-12-02 11:00:00.000 +00:00' LIMIT 1;
Executing (27fca1be-9b0c-40c5-b6b7-0f83b2e6d247): COMMIT;
topicName Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff 2021-05-05T06:56:53.000+0000
Executing (19c88e52-b7fd-489a-b3df-145c80d35d12): START TRANSACTION;
Executing (ee184354-880e-407c-a93d-20fbb75ad74a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2e400362-1635-47e4-99c8-72b00dd38b19' AND "UserTopic"."name" = 'PDA Updates' AND "UserTopic"."issuedAt" = '2020-10-06 06:27:14.000 +00:00' LIMIT 1;
Executing (568b13f6-8e78-4f59-ab2a-81539717739b): COMMIT;
Executing (19c88e52-b7fd-489a-b3df-145c80d35d12): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9bb07b4d-1f9a-46ff-abff-29ec483b7763' AND "UserTopic"."name" = 'Sign in through codes' AND "UserTopic"."issuedAt" = '2021-02-17 11:36:56.000 +00:00' LIMIT 1;
Executing (ad57d637-f100-4811-b058-8d96e036a9c1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e5a48b5270df41379b13a5c01633d31e$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Scripts Review | T1.02 | DG','2020-12-02 11:00:00.000 +00:00','b912e843-b03e-4f84-8133-82016c8dd2a8','2024-08-31 20:47:14.256 +00:00','2024-08-31 20:47:14.256 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e5a48b5270df41379b13a5c01633d31e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Jitendra Kumar 
Executing (9a30f17c-cccd-4b2d-9a43-c846d51c60d9): START TRANSACTION;
Executing (19c88e52-b7fd-489a-b3df-145c80d35d12): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ff7df5e408c64289b712e5de6b912e89$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Sign in through codes','2021-02-17 11:36:56.000 +00:00','9bb07b4d-1f9a-46ff-abff-29ec483b7763','2024-08-31 20:47:14.257 +00:00','2024-08-31 20:47:14.257 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ff7df5e408c64289b712e5de6b912e89$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Water Literacy Campaign
Executing (9105435d-aa6b-4c06-ad97-43d5b42bc5ad): START TRANSACTION;
Executing (ee184354-880e-407c-a93d-20fbb75ad74a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3b812be9959b43cca890b0d2494f7067$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Updates','2020-10-06 06:27:14.000 +00:00','2e400362-1635-47e4-99c8-72b00dd38b19','2024-08-31 20:47:14.259 +00:00','2024-08-31 20:47:14.259 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3b812be9959b43cca890b0d2494f7067$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (19c88e52-b7fd-489a-b3df-145c80d35d12): COMMIT;
Executing (9105435d-aa6b-4c06-ad97-43d5b42bc5ad): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '805f8115-7fc6-481c-ae59-9a635ed92038' AND "UserTopic"."name" = 'Introduction to Simplified Functional Grid Format' AND "UserTopic"."issuedAt" = '2022-01-11 07:21:03.000 +00:00' LIMIT 1;
Executing (9a30f17c-cccd-4b2d-9a43-c846d51c60d9): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2b80d0a9-7767-4f05-9037-719583d95b5c' AND "UserTopic"."name" = 'भूजलाची ओळख व भूजल व्यवस्थापनाची गरज | Introduction to groundwater -Need for GW management' AND "UserTopic"."issuedAt" = '2021-09-12 09:53:16.000 +00:00' LIMIT 1;
Executing (ad57d637-f100-4811-b058-8d96e036a9c1): COMMIT;
topicName Test for Content 2021-05-23T07:41:17.000+0000
Executing (d79c631b-4521-4d7c-947a-a01ed37e4d4c): START TRANSACTION;
Executing (9105435d-aa6b-4c06-ad97-43d5b42bc5ad): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2dfc125a17374c25ab63498706787f87$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Simplified Functional Grid Format','2022-01-11 07:21:03.000 +00:00','805f8115-7fc6-481c-ae59-9a635ed92038','2024-08-31 20:47:14.264 +00:00','2024-08-31 20:47:14.264 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2dfc125a17374c25ab63498706787f87$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ee184354-880e-407c-a93d-20fbb75ad74a): COMMIT;
Executing (d79c631b-4521-4d7c-947a-a01ed37e4d4c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b791b39b-25d7-4e24-a280-9cd6d4870c90' AND "UserTopic"."name" = 'Capacity building of Jaldoots on MGNREGA schemes provisions' AND "UserTopic"."issuedAt" = '2021-01-11 07:36:47.000 +00:00' LIMIT 1;
Executing (9a30f17c-cccd-4b2d-9a43-c846d51c60d9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c110e985818d4b748c5004ad425b3231$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'भूजलाची ओळख व भूजल व्यवस्थापनाची गरज | Introduction to groundwater -Need for GW management','2021-09-12 09:53:16.000 +00:00','2b80d0a9-7767-4f05-9037-719583d95b5c','2024-08-31 20:47:14.266 +00:00','2024-08-31 20:47:14.266 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c110e985818d4b748c5004ad425b3231$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Observations and Feedback | T1.03 | DG
Executing (492c75b5-2095-4098-9296-77f02fb89059): START TRANSACTION;
Executing (d79c631b-4521-4d7c-947a-a01ed37e4d4c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a0a6b86026294d60af19d3a931051680$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots on MGNREGA schemes provisions','2021-01-11 07:36:47.000 +00:00','b791b39b-25d7-4e24-a280-9cd6d4870c90','2024-08-31 20:47:14.268 +00:00','2024-08-31 20:47:14.268 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a0a6b86026294d60af19d3a931051680$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Getting Started with PDA 2020-11-26T06:49:51.000+0000
Executing (934dfc7d-df8f-4e0c-8b21-6af8db90e124): START TRANSACTION;
Executing (9105435d-aa6b-4c06-ad97-43d5b42bc5ad): COMMIT;
Executing (934dfc7d-df8f-4e0c-8b21-6af8db90e124): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '3a089d0b-0cea-42c8-a60a-dd9fb54e25d4' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-01-30 09:05:07.000 +00:00' LIMIT 1;
Executing (492c75b5-2095-4098-9296-77f02fb89059): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '8d96ee1c-383e-4573-84c2-5c4c5cb73b82' AND "UserTrainer"."name" = 'Virtual Interactions - Needs and Benefits' AND "UserTrainer"."issueDate" = '2020-11-19 11:30:00.000 +00:00' LIMIT 1;
Executing (9a30f17c-cccd-4b2d-9a43-c846d51c60d9): COMMIT;
Executing (934dfc7d-df8f-4e0c-8b21-6af8db90e124): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_da7ffa92fa624f0bb9ab6be131ef9fee$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-01-30 09:05:07.000 +00:00','3a089d0b-0cea-42c8-a60a-dd9fb54e25d4','2024-08-31 20:47:14.271 +00:00','2024-08-31 20:47:14.271 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_da7ffa92fa624f0bb9ab6be131ef9fee$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d79c631b-4521-4d7c-947a-a01ed37e4d4c): COMMIT;
Processed user: Shaurya Gupta
Executing (38cf9373-fd21-4df8-909a-225562e64d63): START TRANSACTION;
Executing (492c75b5-2095-4098-9296-77f02fb89059): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c18fc89612254863814b17e59d227473$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Virtual Interactions - Needs and Benefits','2020-11-19 11:30:00.000 +00:00','8d96ee1c-383e-4573-84c2-5c4c5cb73b82','2024-08-31 20:47:14.273 +00:00','2024-08-31 20:47:14.273 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c18fc89612254863814b17e59d227473$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Hemant Bothra
Executing (35cf5cf9-6402-4a56-bd1e-4cc625dccc8e): START TRANSACTION;
Processed user: Narshi Vibha koli
Executing (882a0d84-ad03-407a-b3f3-c804aa704456): START TRANSACTION;
Executing (38cf9373-fd21-4df8-909a-225562e64d63): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c5d35819-2105-4cef-8c0a-af367a875971' AND "UserTopic"."name" = 'Observations and Feedback | T1.03 | DG' AND "UserTopic"."issuedAt" = '2020-12-10 12:18:07.000 +00:00' LIMIT 1;
Executing (934dfc7d-df8f-4e0c-8b21-6af8db90e124): COMMIT;
Executing (882a0d84-ad03-407a-b3f3-c804aa704456): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '441fc2a7-b992-46e0-951f-2a58ae3bdf32' AND "UserTopic"."name" = 'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)' AND "UserTopic"."issuedAt" = '2021-01-30 09:05:18.000 +00:00' LIMIT 1;
Executing (35cf5cf9-6402-4a56-bd1e-4cc625dccc8e): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '971f2670-d929-4a00-a697-f5e19fa95fff' AND "UserTrainer"."name" = 'Orientation on Abhy and PGWM - II' AND "UserTrainer"."issueDate" = '2021-08-14 12:30:00.000 +00:00' LIMIT 1;
Executing (492c75b5-2095-4098-9296-77f02fb89059): COMMIT;
Executing (882a0d84-ad03-407a-b3f3-c804aa704456): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c3fa6b7886d2480cae77d756d0fe27ce$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','2021-01-30 09:05:18.000 +00:00','441fc2a7-b992-46e0-951f-2a58ae3bdf32','2024-08-31 20:47:14.277 +00:00','2024-08-31 20:47:14.277 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c3fa6b7886d2480cae77d756d0fe27ce$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (38cf9373-fd21-4df8-909a-225562e64d63): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_89dc8019470542e1869b26bb15e5c35b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Observations and Feedback | T1.03 | DG','2020-12-10 12:18:07.000 +00:00','c5d35819-2105-4cef-8c0a-af367a875971','2024-08-31 20:47:14.278 +00:00','2024-08-31 20:47:14.278 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_89dc8019470542e1869b26bb15e5c35b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Capacity building of Jaldoots on MGNREGA schemes provisions 2021-01-11T07:36:51.000+0000
Executing (97fdf19e-2b0a-4539-a68b-59036eea9944): START TRANSACTION;
Executing (35cf5cf9-6402-4a56-bd1e-4cc625dccc8e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fa8e15f507814689903cadd4aea83500$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM - II','2021-08-14 12:30:00.000 +00:00','971f2670-d929-4a00-a697-f5e19fa95fff','2024-08-31 20:47:14.279 +00:00','2024-08-31 20:47:14.279 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fa8e15f507814689903cadd4aea83500$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Hub Roles for Virtual Interactions
Executing (fa334d1d-96ff-4a13-a8f6-49e8869ce38b): START TRANSACTION;
Executing (97fdf19e-2b0a-4539-a68b-59036eea9944): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '623772f6-e951-4704-ad07-d8e1b852bee3' AND "UserTopic"."name" = 'Getting Started with PDA' AND "UserTopic"."issuedAt" = '2020-11-25 09:34:31.000 +00:00' LIMIT 1;
Executing (882a0d84-ad03-407a-b3f3-c804aa704456): COMMIT;
Executing (38cf9373-fd21-4df8-909a-225562e64d63): COMMIT;
Executing (97fdf19e-2b0a-4539-a68b-59036eea9944): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5c943534f5134b639eb51a7a727e1c29$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Getting Started with PDA','2020-11-25 09:34:31.000 +00:00','623772f6-e951-4704-ad07-d8e1b852bee3','2024-08-31 20:47:14.284 +00:00','2024-08-31 20:47:14.284 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5c943534f5134b639eb51a7a727e1c29$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Capacity building of Jaldoots on MGNREGA schemes provisions 2021-01-11T07:37:03.000+0000
Executing (22aa0edf-c99e-4e94-88cb-ec2ff2f7a59c): START TRANSACTION;
Executing (fa334d1d-96ff-4a13-a8f6-49e8869ce38b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '534ec60b-0deb-41a6-97f8-2b5477f9c3a3' AND "UserTopic"."name" = 'Codes instead of Scans' AND "UserTopic"."issuedAt" = '2021-02-04 06:06:42.000 +00:00' LIMIT 1;
Executing (35cf5cf9-6402-4a56-bd1e-4cc625dccc8e): COMMIT;
Executing (22aa0edf-c99e-4e94-88cb-ec2ff2f7a59c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '249f141b-3fd0-4d6b-8fdb-c68de7aca819' AND "UserTopic"."name" = 'Getting Started with PDA' AND "UserTopic"."issuedAt" = '2020-11-25 09:35:35.000 +00:00' LIMIT 1;
topicName PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra. 2020-12-23T10:04:32.000+0000
Executing (860c79a1-dd6e-4bd7-b8c9-6156dd5997e1): START TRANSACTION;
Executing (97fdf19e-2b0a-4539-a68b-59036eea9944): COMMIT;
Executing (fa334d1d-96ff-4a13-a8f6-49e8869ce38b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fefa55636f1544d0a8473a57eeae6bf2$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Codes instead of Scans','2021-02-04 06:06:42.000 +00:00','534ec60b-0deb-41a6-97f8-2b5477f9c3a3','2024-08-31 20:47:14.289 +00:00','2024-08-31 20:47:14.289 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fefa55636f1544d0a8473a57eeae6bf2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Crop Water Budgeting Overview
Executing (fded73dd-0785-411a-af51-0ab63e10e1ca): START TRANSACTION;
trainertopicname Water User Association Training
Executing (8f8fc8d1-9c24-477b-85fc-333a9f41ccea): START TRANSACTION;
Executing (860c79a1-dd6e-4bd7-b8c9-6156dd5997e1): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c55bd79b-042e-46bf-9e18-f4dd8e383e5d' AND "UserTopic"."name" = 'Crop Water Budgeting Overview' AND "UserTopic"."issuedAt" = '2020-12-16 07:19:19.000 +00:00' LIMIT 1;
Executing (22aa0edf-c99e-4e94-88cb-ec2ff2f7a59c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_257d95ab64bb4988a2b9af566b8cb16f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Getting Started with PDA','2020-11-25 09:35:35.000 +00:00','249f141b-3fd0-4d6b-8fdb-c68de7aca819','2024-08-31 20:47:14.294 +00:00','2024-08-31 20:47:14.294 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_257d95ab64bb4988a2b9af566b8cb16f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8f8fc8d1-9c24-477b-85fc-333a9f41ccea): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '452450c8-d384-4c61-83f8-4faf11a6d8ef' AND "UserTrainer"."name" = 'JD test - Training of District Coordinators for JalDoot Program Execution' AND "UserTrainer"."issueDate" = '2023-01-31 10:45:00.000 +00:00' LIMIT 1;
Executing (860c79a1-dd6e-4bd7-b8c9-6156dd5997e1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9d0fb38e5acb4adab90df798be85153f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Crop Water Budgeting Overview','2020-12-16 07:19:19.000 +00:00','c55bd79b-042e-46bf-9e18-f4dd8e383e5d','2024-08-31 20:47:14.296 +00:00','2024-08-31 20:47:14.296 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9d0fb38e5acb4adab90df798be85153f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (fded73dd-0785-411a-af51-0ab63e10e1ca): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '2cbe0329-07a4-481a-bf7a-22b814a464e5' AND "UserTrainer"."name" = 'JD test - Conducting a block trainers TOT' AND "UserTrainer"."issueDate" = '2023-01-31 11:45:00.000 +00:00' LIMIT 1;
Executing (fa334d1d-96ff-4a13-a8f6-49e8869ce38b): COMMIT;
Executing (8f8fc8d1-9c24-477b-85fc-333a9f41ccea): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7a5cdc1f725f4f4fad15d135dce22d69$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD test - Training of District Coordinators for JalDoot Program Execution','2023-01-31 10:45:00.000 +00:00','452450c8-d384-4c61-83f8-4faf11a6d8ef','2024-08-31 20:47:14.298 +00:00','2024-08-31 20:47:14.298 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7a5cdc1f725f4f4fad15d135dce22d69$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (22aa0edf-c99e-4e94-88cb-ec2ff2f7a59c): COMMIT;
Executing (fded73dd-0785-411a-af51-0ab63e10e1ca): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_529307c84a7c450aa8ce4bd656b5e711$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD test - Conducting a block trainers TOT','2023-01-31 11:45:00.000 +00:00','2cbe0329-07a4-481a-bf7a-22b814a464e5','2024-08-31 20:47:14.299 +00:00','2024-08-31 20:47:14.299 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_529307c84a7c450aa8ce4bd656b5e711$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (860c79a1-dd6e-4bd7-b8c9-6156dd5997e1): COMMIT;
topicName Introduction to Simplified Functional Grid Format 2022-01-11T07:21:43.000+0000
Executing (216fb973-2633-41c7-ae9f-27ec10d9cb0c): START TRANSACTION;
topicName PDA Refresher Training for ACT and DSC 2021-10-07T12:05:10.000+0000
Executing (bcba72c4-b3bf-423c-9b8e-dd12e71b2d65): START TRANSACTION;
Executing (8f8fc8d1-9c24-477b-85fc-333a9f41ccea): COMMIT;
Executing (bcba72c4-b3bf-423c-9b8e-dd12e71b2d65): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4f3f5e8e-de1b-411a-9454-9038cca34335' AND "UserTopic"."name" = 'Capacity building of Jaldoots on MGNREGA schemes provisions' AND "UserTopic"."issuedAt" = '2021-01-11 07:36:48.000 +00:00' LIMIT 1;
Processed user: Sarad nakar
Executing (1651444d-0dc5-46c7-8154-bddb8feb6eda): START TRANSACTION;
Executing (216fb973-2633-41c7-ae9f-27ec10d9cb0c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '305c306d-64cc-45eb-b51c-6bcb69c00291' AND "UserTopic"."name" = 'Feedback and next steps LL2' AND "UserTopic"."issuedAt" = '2022-03-08 07:43:48.000 +00:00' LIMIT 1;
Executing (bcba72c4-b3bf-423c-9b8e-dd12e71b2d65): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f649d26360ce4d9497fb7cb79c0be973$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots on MGNREGA schemes provisions','2021-01-11 07:36:48.000 +00:00','4f3f5e8e-de1b-411a-9454-9038cca34335','2024-08-31 20:47:14.304 +00:00','2024-08-31 20:47:14.304 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f649d26360ce4d9497fb7cb79c0be973$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1651444d-0dc5-46c7-8154-bddb8feb6eda): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'fb03a265-7824-49ee-a49d-fbe0c9e82564' AND "UserTrainer"."name" = 'Orientation on Abhy and PGWM - II' AND "UserTrainer"."issueDate" = '2021-08-14 12:30:00.000 +00:00' LIMIT 1;
Executing (fded73dd-0785-411a-af51-0ab63e10e1ca): COMMIT;
trainertopicname JD test - Training of Block Coordinators for JalDoot Program 
Executing (c8b8e29f-fe64-45f6-a5e1-7b5263c9edf6): START TRANSACTION;
Executing (1651444d-0dc5-46c7-8154-bddb8feb6eda): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4ff4cd6b3490456b90925c6a40277a8f$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM - II','2021-08-14 12:30:00.000 +00:00','fb03a265-7824-49ee-a49d-fbe0c9e82564','2024-08-31 20:47:14.306 +00:00','2024-08-31 20:47:14.306 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4ff4cd6b3490456b90925c6a40277a8f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (216fb973-2633-41c7-ae9f-27ec10d9cb0c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1129d0c2ee384de2a2c2ff0d3c9bde19$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Feedback and next steps LL2','2022-03-08 07:43:48.000 +00:00','305c306d-64cc-45eb-b51c-6bcb69c00291','2024-08-31 20:47:14.307 +00:00','2024-08-31 20:47:14.307 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1129d0c2ee384de2a2c2ff0d3c9bde19$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname JD test - Assist for Jal Doot Journey
Executing (e26a191e-532e-4b61-9a8c-41678a73376c): START TRANSACTION;
Executing (bcba72c4-b3bf-423c-9b8e-dd12e71b2d65): COMMIT;
Executing (c8b8e29f-fe64-45f6-a5e1-7b5263c9edf6): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4e526a75-c8d4-436b-8245-b7f7dd485186' AND "UserTopic"."name" = 'Observations and Feedback | T1.03 | DG' AND "UserTopic"."issuedAt" = '2020-12-10 12:17:42.000 +00:00' LIMIT 1;
Executing (e26a191e-532e-4b61-9a8c-41678a73376c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '7dd8cae2-8102-44ca-b042-6a1d51b97504' AND "UserTopic"."name" = 'JD - Making the District Plan' AND "UserTopic"."issuedAt" = '2023-03-09 03:06:19.000 +00:00' LIMIT 1;
Executing (1651444d-0dc5-46c7-8154-bddb8feb6eda): COMMIT;
Processed user: Bharat Dodiya
Executing (3122bfac-d68d-4306-b761-15cefaf4e7e5): START TRANSACTION;
Executing (216fb973-2633-41c7-ae9f-27ec10d9cb0c): COMMIT;
Executing (c8b8e29f-fe64-45f6-a5e1-7b5263c9edf6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_eb332b6405e44addb2360087d7f3de2a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Observations and Feedback | T1.03 | DG','2020-12-10 12:17:42.000 +00:00','4e526a75-c8d4-436b-8245-b7f7dd485186','2024-08-31 20:47:14.311 +00:00','2024-08-31 20:47:14.311 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_eb332b6405e44addb2360087d7f3de2a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3122bfac-d68d-4306-b761-15cefaf4e7e5): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '67f6ffd9-0d75-4c92-8909-7c0f78daf8b7' AND "UserTopic"."name" = 'Panchayat and Governance of Commons' AND "UserTopic"."issuedAt" = '2020-07-27 06:11:29.000 +00:00' LIMIT 1;
topicName Introduction to Simplified Functional Grid Format 2022-01-11T08:57:09.000+0000
Executing (daa47e85-0776-4930-ba1c-2cc7ffe80a5b): START TRANSACTION;
Executing (e26a191e-532e-4b61-9a8c-41678a73376c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7263e491f7a14270ab6efe915fd98e03$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD - Making the District Plan','2023-03-09 03:06:19.000 +00:00','7dd8cae2-8102-44ca-b042-6a1d51b97504','2024-08-31 20:47:14.313 +00:00','2024-08-31 20:47:14.313 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7263e491f7a14270ab6efe915fd98e03$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Orientation on Abhy and PGWM
Executing (333a33a4-7282-4439-9942-22245485d643): START TRANSACTION;
Executing (3122bfac-d68d-4306-b761-15cefaf4e7e5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b6df3613e95d43b297522454aaa41cbe$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Panchayat and Governance of Commons','2020-07-27 06:11:29.000 +00:00','67f6ffd9-0d75-4c92-8909-7c0f78daf8b7','2024-08-31 20:47:14.314 +00:00','2024-08-31 20:47:14.314 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b6df3613e95d43b297522454aaa41cbe$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (daa47e85-0776-4930-ba1c-2cc7ffe80a5b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'f5bda8c8-9b5d-4f02-aefc-e2ecf01d710c' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-04-20 12:04:20.000 +00:00' LIMIT 1;
Executing (c8b8e29f-fe64-45f6-a5e1-7b5263c9edf6): COMMIT;
Executing (333a33a4-7282-4439-9942-22245485d643): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'b7031ba5-8d50-43d4-82db-b63e173db13c' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-29 11:00:31.000 +00:00' LIMIT 1;
Executing (e26a191e-532e-4b61-9a8c-41678a73376c): COMMIT;
Executing (daa47e85-0776-4930-ba1c-2cc7ffe80a5b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ce0fd29124f14d3887806aebb216f4ea$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-04-20 12:04:20.000 +00:00','f5bda8c8-9b5d-4f02-aefc-e2ecf01d710c','2024-08-31 20:47:14.317 +00:00','2024-08-31 20:47:14.317 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ce0fd29124f14d3887806aebb216f4ea$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3122bfac-d68d-4306-b761-15cefaf4e7e5): COMMIT;
topicName PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra. 2020-12-23T10:03:24.000+0000
Executing (4d66fd84-d0c4-4233-9674-b1507eb188b0): START TRANSACTION;
Executing (333a33a4-7282-4439-9942-22245485d643): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_948c7101b76a4dec9234c443a66415a6$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-05-29 11:00:31.000 +00:00','b7031ba5-8d50-43d4-82db-b63e173db13c','2024-08-31 20:47:14.319 +00:00','2024-08-31 20:47:14.319 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_948c7101b76a4dec9234c443a66415a6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Planning the Jalshala 2023-04-28T05:57:52.000+0000
Executing (7a4d405e-31d2-425c-9193-bfbf7c2562fb): START TRANSACTION;
topicName Virtual Interactions - Best Practices - Smitha Murthy 2020-10-21T04:53:19.000+0000
Executing (44171764-935d-45a8-b401-e67eae7bd8a3): START TRANSACTION;
Executing (4d66fd84-d0c4-4233-9674-b1507eb188b0): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '867b20fb-b6bd-418d-91c6-aa5ef686e629' AND "UserTopic"."name" = 'PDA DEMO english' AND "UserTopic"."issuedAt" = '2021-04-29 11:54:17.000 +00:00' LIMIT 1;
Executing (daa47e85-0776-4930-ba1c-2cc7ffe80a5b): COMMIT;
Executing (44171764-935d-45a8-b401-e67eae7bd8a3): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'db52891b-977c-429d-ad2c-9258b81a7ba4' AND "UserTrainer"."name" = 'Water Literacy Campaign' AND "UserTrainer"."issueDate" = '2021-01-05 11:30:00.000 +00:00' LIMIT 1;
Executing (7a4d405e-31d2-425c-9193-bfbf7c2562fb): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5a9679fe-6c56-4e22-aa0a-14adb9703410' AND "UserTopic"."name" = 'JD test -  Training of Block Trainers for JalDoot Program ' AND "UserTopic"."issuedAt" = '2023-01-21 10:12:57.000 +00:00' LIMIT 1;
Executing (333a33a4-7282-4439-9942-22245485d643): COMMIT;
Executing (44171764-935d-45a8-b401-e67eae7bd8a3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f8fb350927e84edabf8957e95bb9e594$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Water Literacy Campaign','2021-01-05 11:30:00.000 +00:00','db52891b-977c-429d-ad2c-9258b81a7ba4','2024-08-31 20:47:14.323 +00:00','2024-08-31 20:47:14.323 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f8fb350927e84edabf8957e95bb9e594$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4d66fd84-d0c4-4233-9674-b1507eb188b0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_77709fc059ef46e7b4cd29414b68e2e0$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA DEMO english','2021-04-29 11:54:17.000 +00:00','867b20fb-b6bd-418d-91c6-aa5ef686e629','2024-08-31 20:47:14.323 +00:00','2024-08-31 20:47:14.323 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_77709fc059ef46e7b4cd29414b68e2e0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname JD - Making the District Plan
Executing (c4c01ef0-e00b-46bf-866e-5febb7ab548b): START TRANSACTION;
Executing (7a4d405e-31d2-425c-9193-bfbf7c2562fb): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d16bbca41a9045869fea0b3edb95f58f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD test -  Training of Block Trainers for JalDoot Program ','2023-01-21 10:12:57.000 +00:00','5a9679fe-6c56-4e22-aa0a-14adb9703410','2024-08-31 20:47:14.325 +00:00','2024-08-31 20:47:14.325 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d16bbca41a9045869fea0b3edb95f58f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Planning of the JalShala
Executing (cd4cccb8-ed3f-4d30-b16a-bc222c9adb4c): START TRANSACTION;
Executing (44171764-935d-45a8-b401-e67eae7bd8a3): COMMIT;
Executing (c4c01ef0-e00b-46bf-866e-5febb7ab548b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'eafa5769-776e-421f-bdce-03326a065f7e' AND "UserTopic"."name" = 'PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra.' AND "UserTopic"."issuedAt" = '2020-12-23 10:05:07.000 +00:00' LIMIT 1;
Executing (4d66fd84-d0c4-4233-9674-b1507eb188b0): COMMIT;
trainertopicname Water Literacy Campaign
Executing (29d301af-c44a-45f4-a26f-364133331831): START TRANSACTION;
Executing (cd4cccb8-ed3f-4d30-b16a-bc222c9adb4c): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '840282c7-4246-44db-a1f6-d753c1913547' AND "UserTrainer"."name" = 'Image composition and layouts LL3' AND "UserTrainer"."issueDate" = '2022-03-29 07:30:00.000 +00:00' LIMIT 1;
Executing (7a4d405e-31d2-425c-9193-bfbf7c2562fb): COMMIT;
Executing (29d301af-c44a-45f4-a26f-364133331831): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '8866902d-32f0-4d36-a6d3-eeef2072405c' AND "UserTrainer"."name" = 'Wheat Crop Training' AND "UserTrainer"."issueDate" = '2020-12-31 10:30:00.000 +00:00' LIMIT 1;
topicName PDA Demo Hindi 2021-04-29T11:54:42.000+0000
Executing (bbff57f2-9424-4e6a-bc80-5990a3fdd912): START TRANSACTION;
Executing (c4c01ef0-e00b-46bf-866e-5febb7ab548b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_973ad492a00741a6ba8843859d7f07c0$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra.','2020-12-23 10:05:07.000 +00:00','eafa5769-776e-421f-bdce-03326a065f7e','2024-08-31 20:47:14.330 +00:00','2024-08-31 20:47:14.330 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_973ad492a00741a6ba8843859d7f07c0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (29d301af-c44a-45f4-a26f-364133331831): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b8c5fafe3cee47b7b86cb4d3c840dba6$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Wheat Crop Training','2020-12-31 10:30:00.000 +00:00','8866902d-32f0-4d36-a6d3-eeef2072405c','2024-08-31 20:47:14.330 +00:00','2024-08-31 20:47:14.330 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b8c5fafe3cee47b7b86cb4d3c840dba6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bbff57f2-9424-4e6a-bc80-5990a3fdd912): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5db4d93e-0440-4889-aede-7c3540cc5831' AND "UserTopic"."name" = 'PDA - Hands on' AND "UserTopic"."issuedAt" = '2020-12-28 07:29:03.000 +00:00' LIMIT 1;
Executing (cd4cccb8-ed3f-4d30-b16a-bc222c9adb4c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4e5d9839d05a44b8b1814c954d99eaaa$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Image composition and layouts LL3','2022-03-29 07:30:00.000 +00:00','840282c7-4246-44db-a1f6-d753c1913547','2024-08-31 20:47:14.332 +00:00','2024-08-31 20:47:14.332 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4e5d9839d05a44b8b1814c954d99eaaa$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName JD - Making the District Plan 2023-03-09T06:08:37.000+0000
Executing (806a41f3-76e5-419a-a580-2532376293c6): START TRANSACTION;
Executing (29d301af-c44a-45f4-a26f-364133331831): COMMIT;
Executing (bbff57f2-9424-4e6a-bc80-5990a3fdd912): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_22dee3ef1ced41be9d36b00de075999a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Hands on','2020-12-28 07:29:03.000 +00:00','5db4d93e-0440-4889-aede-7c3540cc5831','2024-08-31 20:47:14.333 +00:00','2024-08-31 20:47:14.333 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_22dee3ef1ced41be9d36b00de075999a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c4c01ef0-e00b-46bf-866e-5febb7ab548b): COMMIT;
trainertopicname Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff
Executing (331479c3-579c-40c1-82b7-7de46778b9ba): START TRANSACTION;
Executing (806a41f3-76e5-419a-a580-2532376293c6): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6afb2b3b-3e1c-4e13-9bd9-b1e2e77810c9' AND "UserTopic"."name" = 'PDA - Hands on' AND "UserTopic"."issuedAt" = '2020-12-28 07:29:02.000 +00:00' LIMIT 1;
Executing (cd4cccb8-ed3f-4d30-b16a-bc222c9adb4c): COMMIT;
Executing (331479c3-579c-40c1-82b7-7de46778b9ba): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6e95d2e7-e874-4076-9412-17aeeb8ea5c3' AND "UserTopic"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTopic"."issuedAt" = '2021-05-05 06:56:53.000 +00:00' LIMIT 1;
topicName Getting Started with PDA 2020-11-25T09:34:22.000+0000
Executing (f45e7b70-2623-411d-bd8d-5a6cedb581d0): START TRANSACTION;
Executing (bbff57f2-9424-4e6a-bc80-5990a3fdd912): COMMIT;
Executing (f45e7b70-2623-411d-bd8d-5a6cedb581d0): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '88acf595-35dd-4ee8-87aa-924166be5859' AND "UserTrainer"."name" = 'Water Literacy Campaign' AND "UserTrainer"."issueDate" = '2021-01-20 06:00:00.000 +00:00' LIMIT 1;
Executing (806a41f3-76e5-419a-a580-2532376293c6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7d6a914bfbb84fe69751961d801a44f1$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Hands on','2020-12-28 07:29:02.000 +00:00','6afb2b3b-3e1c-4e13-9bd9-b1e2e77810c9','2024-08-31 20:47:14.338 +00:00','2024-08-31 20:47:14.338 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7d6a914bfbb84fe69751961d801a44f1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Introduction to Process of planning a lesson flow
Executing (34294339-e34b-49bf-bea4-4550f59f73b2): START TRANSACTION;
Executing (f45e7b70-2623-411d-bd8d-5a6cedb581d0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0af399eb3d3c4edfbf74e56de1cd302e$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Water Literacy Campaign','2021-01-20 06:00:00.000 +00:00','88acf595-35dd-4ee8-87aa-924166be5859','2024-08-31 20:47:14.339 +00:00','2024-08-31 20:47:14.339 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0af399eb3d3c4edfbf74e56de1cd302e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (331479c3-579c-40c1-82b7-7de46778b9ba): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_99c336681b7b41748fcdb3d0a1b82074$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 06:56:53.000 +00:00','6e95d2e7-e874-4076-9412-17aeeb8ea5c3','2024-08-31 20:47:14.340 +00:00','2024-08-31 20:47:14.340 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_99c336681b7b41748fcdb3d0a1b82074$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Gordhan Kantariya
Executing (e76d950d-ddb2-427c-b5d3-dc12a7f8cb5a): START TRANSACTION;
Executing (34294339-e34b-49bf-bea4-4550f59f73b2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9bb07b4d-1f9a-46ff-abff-29ec483b7763' AND "UserTopic"."name" = 'Test for Content' AND "UserTopic"."issuedAt" = '2021-05-23 07:41:17.000 +00:00' LIMIT 1;
Executing (806a41f3-76e5-419a-a580-2532376293c6): COMMIT;
Executing (e76d950d-ddb2-427c-b5d3-dc12a7f8cb5a): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'b912e843-b03e-4f84-8133-82016c8dd2a8' AND "UserTrainer"."name" = 'Observations and Feedback | T1.03 | DG' AND "UserTrainer"."issueDate" = '2020-12-10 11:30:00.000 +00:00' LIMIT 1;
Executing (f45e7b70-2623-411d-bd8d-5a6cedb581d0): COMMIT;
Executing (331479c3-579c-40c1-82b7-7de46778b9ba): COMMIT;
Executing (34294339-e34b-49bf-bea4-4550f59f73b2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_22a0ce0974d741328dafa470c85eb99d$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Test for Content','2021-05-23 07:41:17.000 +00:00','9bb07b4d-1f9a-46ff-abff-29ec483b7763','2024-08-31 20:47:14.344 +00:00','2024-08-31 20:47:14.344 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_22a0ce0974d741328dafa470c85eb99d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Refresher Training for ACT and DSC 2021-10-07T11:59:18.000+0000
Executing (6d1cd127-56f1-44e7-a33d-4e9657d0f2ed): START TRANSACTION;
topicName Introduction to Learning Experience Framework 2022-01-18T07:44:49.000+0000
Executing (7c579699-4bb0-43c5-9434-604b86e15080): START TRANSACTION;
Executing (e76d950d-ddb2-427c-b5d3-dc12a7f8cb5a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3205331bda2b4442bd57fd77a0856ad4$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Observations and Feedback | T1.03 | DG','2020-12-10 11:30:00.000 +00:00','b912e843-b03e-4f84-8133-82016c8dd2a8','2024-08-31 20:47:14.345 +00:00','2024-08-31 20:47:14.345 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3205331bda2b4442bd57fd77a0856ad4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Water Literacy Campaign
Executing (85c4ca4d-95ce-4560-9a45-238290567a22): START TRANSACTION;
Executing (7c579699-4bb0-43c5-9434-604b86e15080): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '3a089d0b-0cea-42c8-a60a-dd9fb54e25d4' AND "UserTopic"."name" = 'Capacity building of Jaldoots on MGNREGA schemes provisions' AND "UserTopic"."issuedAt" = '2021-01-11 07:36:51.000 +00:00' LIMIT 1;
Executing (6d1cd127-56f1-44e7-a33d-4e9657d0f2ed): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2e400362-1635-47e4-99c8-72b00dd38b19' AND "UserTopic"."name" = 'Getting Started with PDA' AND "UserTopic"."issuedAt" = '2020-11-26 06:49:51.000 +00:00' LIMIT 1;
Executing (34294339-e34b-49bf-bea4-4550f59f73b2): COMMIT;
Executing (7c579699-4bb0-43c5-9434-604b86e15080): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_738b66aa6d674be988e44a4684ae3634$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots on MGNREGA schemes provisions','2021-01-11 07:36:51.000 +00:00','3a089d0b-0cea-42c8-a60a-dd9fb54e25d4','2024-08-31 20:47:14.348 +00:00','2024-08-31 20:47:14.348 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_738b66aa6d674be988e44a4684ae3634$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (85c4ca4d-95ce-4560-9a45-238290567a22): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '8d96ee1c-383e-4573-84c2-5c4c5cb73b82' AND "UserTrainer"."name" = 'Hub Roles for Virtual Interactions' AND "UserTrainer"."issueDate" = '2020-12-10 06:30:00.000 +00:00' LIMIT 1;
Executing (e76d950d-ddb2-427c-b5d3-dc12a7f8cb5a): COMMIT;
Executing (6d1cd127-56f1-44e7-a33d-4e9657d0f2ed): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d0abaec78bb04022a0b5f0b77cd468d3$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Getting Started with PDA','2020-11-26 06:49:51.000 +00:00','2e400362-1635-47e4-99c8-72b00dd38b19','2024-08-31 20:47:14.350 +00:00','2024-08-31 20:47:14.350 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d0abaec78bb04022a0b5f0b77cd468d3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName How to Scan QR code test 2021-02-08T16:53:31.000+0000
Executing (433468aa-3275-4548-9dc0-913333039866): START TRANSACTION;
Processed user: Sreekanth
Executing (5cfeee2b-f55e-418b-9501-3cd8ac9d22ec): START TRANSACTION;
Executing (85c4ca4d-95ce-4560-9a45-238290567a22): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9958733cf40e43f68ef0299246c9b63d$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Hub Roles for Virtual Interactions','2020-12-10 06:30:00.000 +00:00','8d96ee1c-383e-4573-84c2-5c4c5cb73b82','2024-08-31 20:47:14.352 +00:00','2024-08-31 20:47:14.352 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9958733cf40e43f68ef0299246c9b63d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7c579699-4bb0-43c5-9434-604b86e15080): COMMIT;
Executing (5cfeee2b-f55e-418b-9501-3cd8ac9d22ec): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c5d35819-2105-4cef-8c0a-af367a875971' AND "UserTopic"."name" = 'PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra.' AND "UserTopic"."issuedAt" = '2020-12-23 10:04:32.000 +00:00' LIMIT 1;
Executing (433468aa-3275-4548-9dc0-913333039866): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '441fc2a7-b992-46e0-951f-2a58ae3bdf32' AND "UserTopic"."name" = 'Capacity building of Jaldoots on MGNREGA schemes provisions' AND "UserTopic"."issuedAt" = '2021-01-11 07:37:03.000 +00:00' LIMIT 1;
Executing (6d1cd127-56f1-44e7-a33d-4e9657d0f2ed): COMMIT;
Executing (5cfeee2b-f55e-418b-9501-3cd8ac9d22ec): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c5232f9e7d3f46dcb6c201b003f97ae2$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra.','2020-12-23 10:04:32.000 +00:00','c5d35819-2105-4cef-8c0a-af367a875971','2024-08-31 20:47:14.354 +00:00','2024-08-31 20:47:14.354 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c5232f9e7d3f46dcb6c201b003f97ae2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Dungarbhai Dodiya
Executing (134ce58d-1494-4fe8-be6d-64acd4fd9e4c): START TRANSACTION;
Executing (85c4ca4d-95ce-4560-9a45-238290567a22): COMMIT;
Executing (134ce58d-1494-4fe8-be6d-64acd4fd9e4c): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '971f2670-d929-4a00-a697-f5e19fa95fff' AND "UserTrainer"."name" = 'Crop Water Budgeting Overview' AND "UserTrainer"."issueDate" = '2020-12-16 08:00:00.000 +00:00' LIMIT 1;
Executing (433468aa-3275-4548-9dc0-913333039866): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c78b01e09570484c899c383868eb479a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots on MGNREGA schemes provisions','2021-01-11 07:37:03.000 +00:00','441fc2a7-b992-46e0-951f-2a58ae3bdf32','2024-08-31 20:47:14.357 +00:00','2024-08-31 20:47:14.357 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c78b01e09570484c899c383868eb479a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName pda trial 2020-11-23T04:31:26.000+0000
Executing (ceb27bf3-e043-4101-aa91-630581faea96): START TRANSACTION;
Executing (134ce58d-1494-4fe8-be6d-64acd4fd9e4c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_064ffc3afa8e4e08bcc8ae25733a61b5$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Crop Water Budgeting Overview','2020-12-16 08:00:00.000 +00:00','971f2670-d929-4a00-a697-f5e19fa95fff','2024-08-31 20:47:14.358 +00:00','2024-08-31 20:47:14.358 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_064ffc3afa8e4e08bcc8ae25733a61b5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Bhargav
Executing (caaa2326-5b6e-43f9-9772-d90535863dc5): START TRANSACTION;
Executing (5cfeee2b-f55e-418b-9501-3cd8ac9d22ec): COMMIT;
Executing (caaa2326-5b6e-43f9-9772-d90535863dc5): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '534ec60b-0deb-41a6-97f8-2b5477f9c3a3' AND "UserTopic"."name" = 'Introduction to Simplified Functional Grid Format' AND "UserTopic"."issuedAt" = '2022-01-11 07:21:43.000 +00:00' LIMIT 1;
Executing (ceb27bf3-e043-4101-aa91-630581faea96): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '623772f6-e951-4704-ad07-d8e1b852bee3' AND "UserTrainer"."name" = 'Water User Association Training' AND "UserTrainer"."issueDate" = '2021-04-03 06:30:00.000 +00:00' LIMIT 1;
Executing (433468aa-3275-4548-9dc0-913333039866): COMMIT;
Executing (caaa2326-5b6e-43f9-9772-d90535863dc5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_580e4a84a60b4598894ce6b3df7af45d$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Simplified Functional Grid Format','2022-01-11 07:21:43.000 +00:00','534ec60b-0deb-41a6-97f8-2b5477f9c3a3','2024-08-31 20:47:14.362 +00:00','2024-08-31 20:47:14.362 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_580e4a84a60b4598894ce6b3df7af45d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ceb27bf3-e043-4101-aa91-630581faea96): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3e2e6062b788402fbcd9af908c978400$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Water User Association Training','2021-04-03 06:30:00.000 +00:00','623772f6-e951-4704-ad07-d8e1b852bee3','2024-08-31 20:47:14.364 +00:00','2024-08-31 20:47:14.364 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3e2e6062b788402fbcd9af908c978400$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName PDA Additional features 2021-01-11T05:07:00.000+0000
Executing (b1dced01-97a0-4dbf-9cc2-f0ec9474048d): START TRANSACTION;
Executing (134ce58d-1494-4fe8-be6d-64acd4fd9e4c): COMMIT;
Executing (caaa2326-5b6e-43f9-9772-d90535863dc5): COMMIT;
Executing (ceb27bf3-e043-4101-aa91-630581faea96): COMMIT;
Executing (b1dced01-97a0-4dbf-9cc2-f0ec9474048d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '249f141b-3fd0-4d6b-8fdb-c68de7aca819' AND "UserTopic"."name" = 'PDA Refresher Training for ACT and DSC' AND "UserTopic"."issuedAt" = '2021-10-07 12:05:10.000 +00:00' LIMIT 1;
Processed user: Pawan Atkari
Executing (ca0f944d-bc5c-4be4-986f-599318e52657): START TRANSACTION;
trainertopicname PDA structure Demo
Executing (8f3f0b51-eea8-4d12-b488-a24b2dda3fd0): START TRANSACTION;
trainertopicname Site Selection of Desilting work Process of Government Approval and data Collection of its work
Executing (7f7f38e5-efe6-4719-9a68-0948d34df7b3): START TRANSACTION;
Executing (b1dced01-97a0-4dbf-9cc2-f0ec9474048d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_383ec54575e84f29914d3d2d4deebbae$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Refresher Training for ACT and DSC','2021-10-07 12:05:10.000 +00:00','249f141b-3fd0-4d6b-8fdb-c68de7aca819','2024-08-31 20:47:14.372 +00:00','2024-08-31 20:47:14.372 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_383ec54575e84f29914d3d2d4deebbae$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Yogesh Jadeja
Executing (5d29d6cd-3f5e-42a6-b646-07be11e5d4cc): START TRANSACTION;
Executing (8f3f0b51-eea8-4d12-b488-a24b2dda3fd0): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '2cbe0329-07a4-481a-bf7a-22b814a464e5' AND "UserTrainer"."name" = 'JD test - Assist for Jal Doot Journey' AND "UserTrainer"."issueDate" = '2023-01-31 12:00:00.000 +00:00' LIMIT 1;
Executing (7f7f38e5-efe6-4719-9a68-0948d34df7b3): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '305c306d-64cc-45eb-b51c-6bcb69c00291' AND "UserTopic"."name" = 'Introduction to Simplified Functional Grid Format' AND "UserTopic"."issuedAt" = '2022-01-11 08:57:09.000 +00:00' LIMIT 1;
Executing (ca0f944d-bc5c-4be4-986f-599318e52657): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '452450c8-d384-4c61-83f8-4faf11a6d8ef' AND "UserTrainer"."name" = 'JD test - Training of Block Coordinators for JalDoot Program ' AND "UserTrainer"."issueDate" = '2023-01-31 10:45:00.000 +00:00' LIMIT 1;
Executing (8f3f0b51-eea8-4d12-b488-a24b2dda3fd0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_38fa93a0d1834ade957f40b9456d42e6$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD test - Assist for Jal Doot Journey','2023-01-31 12:00:00.000 +00:00','2cbe0329-07a4-481a-bf7a-22b814a464e5','2024-08-31 20:47:14.377 +00:00','2024-08-31 20:47:14.377 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_38fa93a0d1834ade957f40b9456d42e6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7f7f38e5-efe6-4719-9a68-0948d34df7b3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b4a70271828244c3aa7dd1b8feed096f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Simplified Functional Grid Format','2022-01-11 08:57:09.000 +00:00','305c306d-64cc-45eb-b51c-6bcb69c00291','2024-08-31 20:47:14.379 +00:00','2024-08-31 20:47:14.379 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b4a70271828244c3aa7dd1b8feed096f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5d29d6cd-3f5e-42a6-b646-07be11e5d4cc): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'fb03a265-7824-49ee-a49d-fbe0c9e82564' AND "UserTrainer"."name" = 'Orientation on Abhy and PGWM' AND "UserTrainer"."issueDate" = '2021-08-14 07:30:00.000 +00:00' LIMIT 1;
Executing (b1dced01-97a0-4dbf-9cc2-f0ec9474048d): COMMIT;
Executing (8f3f0b51-eea8-4d12-b488-a24b2dda3fd0): COMMIT;
Executing (7f7f38e5-efe6-4719-9a68-0948d34df7b3): COMMIT;
Executing (5d29d6cd-3f5e-42a6-b646-07be11e5d4cc): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5002d5eeafbd41af9df649a35e621443$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM','2021-08-14 07:30:00.000 +00:00','fb03a265-7824-49ee-a49d-fbe0c9e82564','2024-08-31 20:47:14.383 +00:00','2024-08-31 20:47:14.383 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5002d5eeafbd41af9df649a35e621443$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ca0f944d-bc5c-4be4-986f-599318e52657): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6eaaf9a2c74a40709f5d9f1695c6d536$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD test - Training of Block Coordinators for JalDoot Program ','2023-01-31 10:45:00.000 +00:00','452450c8-d384-4c61-83f8-4faf11a6d8ef','2024-08-31 20:47:14.384 +00:00','2024-08-31 20:47:14.384 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6eaaf9a2c74a40709f5d9f1695c6d536$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Vahidsaiyad
Executing (c59057d9-fdf1-4ac3-b2d8-2326f4b548c2): START TRANSACTION;
topicName Introduction to Learning Experience Framework 2022-01-18T07:47:47.000+0000
Executing (adb426c4-39ea-4ccb-867d-178ae18250c8): START TRANSACTION;
topicName PDA Dashboard Demo 2021-11-26T05:28:26.000+0000
Executing (e320c3de-1377-4eec-890c-92738ccc4fb6): START TRANSACTION;
Executing (c59057d9-fdf1-4ac3-b2d8-2326f4b548c2): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4e526a75-c8d4-436b-8245-b7f7dd485186' AND "UserTopic"."name" = 'PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra.' AND "UserTopic"."issuedAt" = '2020-12-23 10:03:24.000 +00:00' LIMIT 1;
Executing (adb426c4-39ea-4ccb-867d-178ae18250c8): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '7dd8cae2-8102-44ca-b042-6a1d51b97504' AND "UserTopic"."name" = 'Planning the Jalshala' AND "UserTopic"."issuedAt" = '2023-04-28 05:57:52.000 +00:00' LIMIT 1;
Executing (5d29d6cd-3f5e-42a6-b646-07be11e5d4cc): COMMIT;
Executing (ca0f944d-bc5c-4be4-986f-599318e52657): COMMIT;
Executing (c59057d9-fdf1-4ac3-b2d8-2326f4b548c2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7dc450c68e52433a8ee332f05cae7409$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra.','2020-12-23 10:03:24.000 +00:00','4e526a75-c8d4-436b-8245-b7f7dd485186','2024-08-31 20:47:14.390 +00:00','2024-08-31 20:47:14.390 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7dc450c68e52433a8ee332f05cae7409$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (adb426c4-39ea-4ccb-867d-178ae18250c8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_864103d4a98f4f81847c1054db7616dd$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Planning the Jalshala','2023-04-28 05:57:52.000 +00:00','7dd8cae2-8102-44ca-b042-6a1d51b97504','2024-08-31 20:47:14.391 +00:00','2024-08-31 20:47:14.391 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_864103d4a98f4f81847c1054db7616dd$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e320c3de-1377-4eec-890c-92738ccc4fb6): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '67f6ffd9-0d75-4c92-8909-7c0f78daf8b7' AND "UserTopic"."name" = 'Virtual Interactions - Best Practices - Smitha Murthy' AND "UserTopic"."issuedAt" = '2020-10-21 04:53:19.000 +00:00' LIMIT 1;
trainertopicname Crop Water Budgeting Overview
Executing (3c47d8e1-aa0c-4758-abff-15ec91c0e1de): START TRANSACTION;
trainertopicname JD test - Making of a block plan
Executing (85b738e7-3085-4b69-926a-aa4e89c7e823): START TRANSACTION;
Executing (3c47d8e1-aa0c-4758-abff-15ec91c0e1de): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'f5bda8c8-9b5d-4f02-aefc-e2ecf01d710c' AND "UserTrainer"."name" = 'JD - Making the District Plan' AND "UserTrainer"."issueDate" = '2023-03-31 13:32:24.000 +00:00' LIMIT 1;
Executing (c59057d9-fdf1-4ac3-b2d8-2326f4b548c2): COMMIT;
Executing (e320c3de-1377-4eec-890c-92738ccc4fb6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6dabda29545d42f7ac00b831590c1c2b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Virtual Interactions - Best Practices - Smitha Murthy','2020-10-21 04:53:19.000 +00:00','67f6ffd9-0d75-4c92-8909-7c0f78daf8b7','2024-08-31 20:47:14.397 +00:00','2024-08-31 20:47:14.397 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6dabda29545d42f7ac00b831590c1c2b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (adb426c4-39ea-4ccb-867d-178ae18250c8): COMMIT;
Executing (3c47d8e1-aa0c-4758-abff-15ec91c0e1de): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ea9b72cb785e4d05be8412b51007f9e4$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD - Making the District Plan','2023-03-31 13:32:24.000 +00:00','f5bda8c8-9b5d-4f02-aefc-e2ecf01d710c','2024-08-31 20:47:14.398 +00:00','2024-08-31 20:47:14.398 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ea9b72cb785e4d05be8412b51007f9e4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName TOT of Bhujal Janakar 2021-02-05T07:23:42.000+0000
Executing (823e11e9-94cc-4d07-a3e3-7e91ed9f7e25): START TRANSACTION;
Executing (85b738e7-3085-4b69-926a-aa4e89c7e823): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'b7031ba5-8d50-43d4-82db-b63e173db13c' AND "UserTrainer"."name" = 'Planning of the JalShala' AND "UserTrainer"."issueDate" = '2023-07-31 16:30:00.000 +00:00' LIMIT 1;
Executing (3c47d8e1-aa0c-4758-abff-15ec91c0e1de): COMMIT;
Executing (823e11e9-94cc-4d07-a3e3-7e91ed9f7e25): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'db52891b-977c-429d-ad2c-9258b81a7ba4' AND "UserTrainer"."name" = 'Water Literacy Campaign' AND "UserTrainer"."issueDate" = '2021-01-21 06:00:00.000 +00:00' LIMIT 1;
topicName Execution of the JalShala 2023-05-26T11:31:10.000+0000
Executing (82d6e37e-5fd8-4a4d-a5a1-8d486d84873d): START TRANSACTION;
Executing (e320c3de-1377-4eec-890c-92738ccc4fb6): COMMIT;
trainertopicname JD - Facilitate two practical JalShalas for training of Block trainers - 1
Executing (2892b697-f4a5-4596-8027-a60d3ab496dd): START TRANSACTION;
Executing (823e11e9-94cc-4d07-a3e3-7e91ed9f7e25): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_aa28a59328ef4578b9b94feb21aeb353$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Water Literacy Campaign','2021-01-21 06:00:00.000 +00:00','db52891b-977c-429d-ad2c-9258b81a7ba4','2024-08-31 20:47:14.403 +00:00','2024-08-31 20:47:14.403 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_aa28a59328ef4578b9b94feb21aeb353$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (82d6e37e-5fd8-4a4d-a5a1-8d486d84873d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '867b20fb-b6bd-418d-91c6-aa5ef686e629' AND "UserTopic"."name" = 'PDA Demo Hindi' AND "UserTopic"."issuedAt" = '2021-04-29 11:54:42.000 +00:00' LIMIT 1;
Executing (85b738e7-3085-4b69-926a-aa4e89c7e823): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_acf8ce5e85f64201b78f45ef30a4da5d$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Planning of the JalShala','2023-07-31 16:30:00.000 +00:00','b7031ba5-8d50-43d4-82db-b63e173db13c','2024-08-31 20:47:14.405 +00:00','2024-08-31 20:47:14.405 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_acf8ce5e85f64201b78f45ef30a4da5d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2892b697-f4a5-4596-8027-a60d3ab496dd): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5a9679fe-6c56-4e22-aa0a-14adb9703410' AND "UserTopic"."name" = 'JD - Making the District Plan' AND "UserTopic"."issuedAt" = '2023-03-09 06:08:37.000 +00:00' LIMIT 1;
Executing (823e11e9-94cc-4d07-a3e3-7e91ed9f7e25): COMMIT;
topicName Codes instead of Scans 2021-02-04T06:06:24.000+0000
Executing (80cb1c97-ab42-427b-ab54-9ff989996084): START TRANSACTION;
Executing (2892b697-f4a5-4596-8027-a60d3ab496dd): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_198110ead3474637a809bba8aec07216$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD - Making the District Plan','2023-03-09 06:08:37.000 +00:00','5a9679fe-6c56-4e22-aa0a-14adb9703410','2024-08-31 20:47:14.407 +00:00','2024-08-31 20:47:14.407 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_198110ead3474637a809bba8aec07216$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (82d6e37e-5fd8-4a4d-a5a1-8d486d84873d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_14bc4a378e894a388554aae8d5b4358d$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo Hindi','2021-04-29 11:54:42.000 +00:00','867b20fb-b6bd-418d-91c6-aa5ef686e629','2024-08-31 20:47:14.408 +00:00','2024-08-31 20:47:14.408 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_14bc4a378e894a388554aae8d5b4358d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Water Literacy Campaign
Executing (961b2bfb-2560-4060-9f8d-1126804270cd): START TRANSACTION;
Executing (80cb1c97-ab42-427b-ab54-9ff989996084): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '8866902d-32f0-4d36-a6d3-eeef2072405c' AND "UserTrainer"."name" = 'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff' AND "UserTrainer"."issueDate" = '2021-05-05 07:00:00.000 +00:00' LIMIT 1;
Executing (85b738e7-3085-4b69-926a-aa4e89c7e823): COMMIT;
Executing (961b2bfb-2560-4060-9f8d-1126804270cd): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'eafa5769-776e-421f-bdce-03326a065f7e' AND "UserTopic"."name" = 'Getting Started with PDA' AND "UserTopic"."issuedAt" = '2020-11-25 09:34:22.000 +00:00' LIMIT 1;
Executing (2892b697-f4a5-4596-8027-a60d3ab496dd): COMMIT;
Executing (80cb1c97-ab42-427b-ab54-9ff989996084): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_86e5ae42d2094be2a950bdfcf53b9d3a$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','2021-05-05 07:00:00.000 +00:00','8866902d-32f0-4d36-a6d3-eeef2072405c','2024-08-31 20:47:14.412 +00:00','2024-08-31 20:47:14.412 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_86e5ae42d2094be2a950bdfcf53b9d3a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (82d6e37e-5fd8-4a4d-a5a1-8d486d84873d): COMMIT;
trainertopicname Execution of the JalShala
Executing (66548f97-09e9-4c57-84d6-4d3c70f55912): START TRANSACTION;
Executing (80cb1c97-ab42-427b-ab54-9ff989996084): COMMIT;
topicName PDA Dashboard english 2021-04-29T12:01:56.000+0000
Executing (ca052062-0790-4344-93a4-9e0b384cbdd3): START TRANSACTION;
Executing (961b2bfb-2560-4060-9f8d-1126804270cd): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_485389e03d0c488bb8b97e695de07b07$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Getting Started with PDA','2020-11-25 09:34:22.000 +00:00','eafa5769-776e-421f-bdce-03326a065f7e','2024-08-31 20:47:14.416 +00:00','2024-08-31 20:47:14.416 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_485389e03d0c488bb8b97e695de07b07$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName JD - Facilitate two practical JalShalas for training of Block trainers - 1 2023-03-20T09:54:33.000+0000
Executing (e1bf4043-fa2f-4547-8494-5e99a94b5f41): START TRANSACTION;
Processed user: Alpesh Patel 
Executing (0e5fc931-7348-4b8a-90e7-9ca718ec4141): START TRANSACTION;
Executing (ca052062-0790-4344-93a4-9e0b384cbdd3): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6afb2b3b-3e1c-4e13-9bd9-b1e2e77810c9' AND "UserTopic"."name" = 'PDA Refresher Training for ACT and DSC' AND "UserTopic"."issuedAt" = '2021-10-07 11:59:18.000 +00:00' LIMIT 1;
Executing (66548f97-09e9-4c57-84d6-4d3c70f55912): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '840282c7-4246-44db-a1f6-d753c1913547' AND "UserTrainer"."name" = 'Introduction to Process of planning a lesson flow' AND "UserTrainer"."issueDate" = '2022-03-02 07:30:00.000 +00:00' LIMIT 1;
Executing (0e5fc931-7348-4b8a-90e7-9ca718ec4141): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '88acf595-35dd-4ee8-87aa-924166be5859' AND "UserTrainer"."name" = 'Water Literacy Campaign' AND "UserTrainer"."issueDate" = '2021-01-22 05:00:00.000 +00:00' LIMIT 1;
Executing (ca052062-0790-4344-93a4-9e0b384cbdd3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_93d7e581caa14ae0878b123f8c15ae5c$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Refresher Training for ACT and DSC','2021-10-07 11:59:18.000 +00:00','6afb2b3b-3e1c-4e13-9bd9-b1e2e77810c9','2024-08-31 20:47:14.423 +00:00','2024-08-31 20:47:14.423 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_93d7e581caa14ae0878b123f8c15ae5c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e1bf4043-fa2f-4547-8494-5e99a94b5f41): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6e95d2e7-e874-4076-9412-17aeeb8ea5c3' AND "UserTopic"."name" = 'Introduction to Learning Experience Framework' AND "UserTopic"."issuedAt" = '2022-01-18 07:44:49.000 +00:00' LIMIT 1;
Executing (961b2bfb-2560-4060-9f8d-1126804270cd): COMMIT;
Executing (0e5fc931-7348-4b8a-90e7-9ca718ec4141): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e3d292d6e2f545ffa3c773c259e368fe$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Water Literacy Campaign','2021-01-22 05:00:00.000 +00:00','88acf595-35dd-4ee8-87aa-924166be5859','2024-08-31 20:47:14.426 +00:00','2024-08-31 20:47:14.426 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e3d292d6e2f545ffa3c773c259e368fe$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ca052062-0790-4344-93a4-9e0b384cbdd3): COMMIT;
Executing (e1bf4043-fa2f-4547-8494-5e99a94b5f41): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1ed387ef345c4ec58b02995b9e1f17b4$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Learning Experience Framework','2022-01-18 07:44:49.000 +00:00','6e95d2e7-e874-4076-9412-17aeeb8ea5c3','2024-08-31 20:47:14.427 +00:00','2024-08-31 20:47:14.427 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1ed387ef345c4ec58b02995b9e1f17b4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (66548f97-09e9-4c57-84d6-4d3c70f55912): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d3ee9d04e0cf4a34b45608f17d101c2b$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Process of planning a lesson flow','2022-03-02 07:30:00.000 +00:00','840282c7-4246-44db-a1f6-d753c1913547','2024-08-31 20:47:14.428 +00:00','2024-08-31 20:47:14.428 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d3ee9d04e0cf4a34b45608f17d101c2b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0e5fc931-7348-4b8a-90e7-9ca718ec4141): COMMIT;
Processed user: Rajendra patel 
Executing (4271abf6-de69-458f-8777-68c213372787): START TRANSACTION;
topicName Capacity building of Jaldoots on MGNREGA schemes provisions 2021-01-11T07:36:58.000+0000
Executing (dabd1a1f-a281-4e9a-aeb6-a180524fafd7): START TRANSACTION;
trainertopicname Water Literacy Campaign
Executing (4caf77f2-ea74-4da5-bbc1-6ee9a89e9f2a): START TRANSACTION;
Executing (4271abf6-de69-458f-8777-68c213372787): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9bb07b4d-1f9a-46ff-abff-29ec483b7763' AND "UserTopic"."name" = 'How to Scan QR code test' AND "UserTopic"."issuedAt" = '2021-02-08 16:53:31.000 +00:00' LIMIT 1;
Executing (e1bf4043-fa2f-4547-8494-5e99a94b5f41): COMMIT;
Executing (66548f97-09e9-4c57-84d6-4d3c70f55912): COMMIT;
Executing (4caf77f2-ea74-4da5-bbc1-6ee9a89e9f2a): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c5d35819-2105-4cef-8c0a-af367a875971' AND "UserTopic"."name" = 'PDA Additional features' AND "UserTopic"."issuedAt" = '2021-01-11 05:07:00.000 +00:00' LIMIT 1;
Executing (4271abf6-de69-458f-8777-68c213372787): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_871f015798cc4c1a87a918308d3313d2$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'How to Scan QR code test','2021-02-08 16:53:31.000 +00:00','9bb07b4d-1f9a-46ff-abff-29ec483b7763','2024-08-31 20:47:14.436 +00:00','2024-08-31 20:47:14.436 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_871f015798cc4c1a87a918308d3313d2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Feedback and next steps 2022-01-25T07:26:05.000+0000
Executing (c6f41b1f-88b3-4413-ab94-e922b2093df0): START TRANSACTION;
Executing (dabd1a1f-a281-4e9a-aeb6-a180524fafd7): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2e400362-1635-47e4-99c8-72b00dd38b19' AND "UserTopic"."name" = 'pda trial' AND "UserTopic"."issuedAt" = '2020-11-23 04:31:26.000 +00:00' LIMIT 1;
Executing (4caf77f2-ea74-4da5-bbc1-6ee9a89e9f2a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b77b4e3df6444f4f886b58647c9e374b$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Additional features','2021-01-11 05:07:00.000 +00:00','c5d35819-2105-4cef-8c0a-af367a875971','2024-08-31 20:47:14.439 +00:00','2024-08-31 20:47:14.439 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b77b4e3df6444f4f886b58647c9e374b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4271abf6-de69-458f-8777-68c213372787): COMMIT;
Executing (c6f41b1f-88b3-4413-ab94-e922b2093df0): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '534ec60b-0deb-41a6-97f8-2b5477f9c3a3' AND "UserTrainer"."name" = 'PDA structure Demo' AND "UserTrainer"."issueDate" = '2022-03-03 12:26:00.000 +00:00' LIMIT 1;
trainertopicname Introduction to Visual Design LL3
Executing (da528b9e-06a9-40d0-9b6f-e8d9fe5c07ff): START TRANSACTION;
Executing (4caf77f2-ea74-4da5-bbc1-6ee9a89e9f2a): COMMIT;
topicName Improved Hands on Test 2 2021-04-14T05:16:21.000+0000
Executing (6e15eb1c-0118-4842-ba31-0c55c0566d82): START TRANSACTION;
Executing (c6f41b1f-88b3-4413-ab94-e922b2093df0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fa2d528aebca4bdc9e76e857f04eb1c1$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA structure Demo','2022-03-03 12:26:00.000 +00:00','534ec60b-0deb-41a6-97f8-2b5477f9c3a3','2024-08-31 20:47:14.444 +00:00','2024-08-31 20:47:14.444 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fa2d528aebca4bdc9e76e857f04eb1c1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (dabd1a1f-a281-4e9a-aeb6-a180524fafd7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c5829d455fc847b3af96d9c348d9660d$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'pda trial','2020-11-23 04:31:26.000 +00:00','2e400362-1635-47e4-99c8-72b00dd38b19','2024-08-31 20:47:14.446 +00:00','2024-08-31 20:47:14.446 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c5829d455fc847b3af96d9c348d9660d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Codes instead of Scans 2021-02-04T06:06:35.000+0000
Executing (c2356762-cf48-4dad-bdf8-3983ad5446dc): START TRANSACTION;
Executing (6e15eb1c-0118-4842-ba31-0c55c0566d82): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '305c306d-64cc-45eb-b51c-6bcb69c00291' AND "UserTopic"."name" = 'Introduction to Learning Experience Framework' AND "UserTopic"."issuedAt" = '2022-01-18 07:47:47.000 +00:00' LIMIT 1;
Executing (da528b9e-06a9-40d0-9b6f-e8d9fe5c07ff): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '623772f6-e951-4704-ad07-d8e1b852bee3' AND "UserTrainer"."name" = 'Site Selection of Desilting work Process of Government Approval and data Collection of its work' AND "UserTrainer"."issueDate" = '2021-02-06 12:00:00.000 +00:00' LIMIT 1;
Executing (c2356762-cf48-4dad-bdf8-3983ad5446dc): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '249f141b-3fd0-4d6b-8fdb-c68de7aca819' AND "UserTopic"."name" = 'PDA Dashboard Demo' AND "UserTopic"."issuedAt" = '2021-11-26 05:28:26.000 +00:00' LIMIT 1;
Executing (6e15eb1c-0118-4842-ba31-0c55c0566d82): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3d41d47e13d047b5b74f746d09343d40$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Learning Experience Framework','2022-01-18 07:47:47.000 +00:00','305c306d-64cc-45eb-b51c-6bcb69c00291','2024-08-31 20:47:14.450 +00:00','2024-08-31 20:47:14.450 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3d41d47e13d047b5b74f746d09343d40$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c6f41b1f-88b3-4413-ab94-e922b2093df0): COMMIT;
Executing (dabd1a1f-a281-4e9a-aeb6-a180524fafd7): COMMIT;
Executing (c2356762-cf48-4dad-bdf8-3983ad5446dc): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c216d4dd98ca4cc2905cb0e4103bb833$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Dashboard Demo','2021-11-26 05:28:26.000 +00:00','249f141b-3fd0-4d6b-8fdb-c68de7aca819','2024-08-31 20:47:14.452 +00:00','2024-08-31 20:47:14.452 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c216d4dd98ca4cc2905cb0e4103bb833$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (da528b9e-06a9-40d0-9b6f-e8d9fe5c07ff): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0c3a124d07f746039963fe431b18fe33$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Site Selection of Desilting work Process of Government Approval and data Collection of its work','2021-02-06 12:00:00.000 +00:00','623772f6-e951-4704-ad07-d8e1b852bee3','2024-08-31 20:47:14.453 +00:00','2024-08-31 20:47:14.453 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0c3a124d07f746039963fe431b18fe33$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname CBP Orientation
Executing (58c4c61c-7e56-40c7-b66a-c7339a266be7): START TRANSACTION;
Executing (6e15eb1c-0118-4842-ba31-0c55c0566d82): COMMIT;
topicName PDA for Trainers 2020-11-23T05:57:37.000+0000
Executing (be9e2355-6aad-4d93-b0e9-901da64fee6a): START TRANSACTION;
Executing (58c4c61c-7e56-40c7-b66a-c7339a266be7): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'fb03a265-7824-49ee-a49d-fbe0c9e82564' AND "UserTrainer"."name" = 'Crop Water Budgeting Overview' AND "UserTrainer"."issueDate" = '2020-12-16 08:00:00.000 +00:00' LIMIT 1;
topicName Feedback and next steps 2022-01-25T07:28:19.000+0000
Executing (a02af84a-0c34-4190-88cb-8fa6ba4355a4): START TRANSACTION;
Executing (c2356762-cf48-4dad-bdf8-3983ad5446dc): COMMIT;
Executing (da528b9e-06a9-40d0-9b6f-e8d9fe5c07ff): COMMIT;
Executing (58c4c61c-7e56-40c7-b66a-c7339a266be7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f2e7257932f94f839f42653f2d1ede2b$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Crop Water Budgeting Overview','2020-12-16 08:00:00.000 +00:00','fb03a265-7824-49ee-a49d-fbe0c9e82564','2024-08-31 20:47:14.460 +00:00','2024-08-31 20:47:14.460 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f2e7257932f94f839f42653f2d1ede2b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a02af84a-0c34-4190-88cb-8fa6ba4355a4): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4e526a75-c8d4-436b-8245-b7f7dd485186' AND "UserTopic"."name" = 'TOT of Bhujal Janakar' AND "UserTopic"."issuedAt" = '2021-02-05 07:23:42.000 +00:00' LIMIT 1;
trainertopicname TOT of Bhujal Janakar
Executing (054dc460-18af-47e2-a0ab-54b98799ba09): START TRANSACTION;
Executing (be9e2355-6aad-4d93-b0e9-901da64fee6a): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '452450c8-d384-4c61-83f8-4faf11a6d8ef' AND "UserTrainer"."name" = 'JD test - Making of a block plan' AND "UserTrainer"."issueDate" = '2023-01-31 11:45:00.000 +00:00' LIMIT 1;
Executing (58c4c61c-7e56-40c7-b66a-c7339a266be7): COMMIT;
Executing (a02af84a-0c34-4190-88cb-8fa6ba4355a4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a3930cb5676b4a028c036c630df449e4$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'TOT of Bhujal Janakar','2021-02-05 07:23:42.000 +00:00','4e526a75-c8d4-436b-8245-b7f7dd485186','2024-08-31 20:47:14.464 +00:00','2024-08-31 20:47:14.464 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a3930cb5676b4a028c036c630df449e4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (054dc460-18af-47e2-a0ab-54b98799ba09): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '7dd8cae2-8102-44ca-b042-6a1d51b97504' AND "UserTopic"."name" = 'Execution of the JalShala' AND "UserTopic"."issuedAt" = '2023-05-26 11:31:10.000 +00:00' LIMIT 1;
trainertopicname Water Literacy Campaign
Executing (3aec830f-cdb0-47ab-b206-08536970068d): START TRANSACTION;
Processed user: Amrut garva
Executing (27cf57ec-da30-4751-82d0-279d4be4675b): START TRANSACTION;
Executing (be9e2355-6aad-4d93-b0e9-901da64fee6a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_63404781647447ecae3a37b777f02eaf$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD test - Making of a block plan','2023-01-31 11:45:00.000 +00:00','452450c8-d384-4c61-83f8-4faf11a6d8ef','2024-08-31 20:47:14.467 +00:00','2024-08-31 20:47:14.467 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_63404781647447ecae3a37b777f02eaf$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (27cf57ec-da30-4751-82d0-279d4be4675b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '67f6ffd9-0d75-4c92-8909-7c0f78daf8b7' AND "UserTopic"."name" = 'Codes instead of Scans' AND "UserTopic"."issuedAt" = '2021-02-04 06:06:24.000 +00:00' LIMIT 1;
Executing (054dc460-18af-47e2-a0ab-54b98799ba09): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bb3d52350498480e9f9626322a588b4e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-05-26 11:31:10.000 +00:00','7dd8cae2-8102-44ca-b042-6a1d51b97504','2024-08-31 20:47:14.470 +00:00','2024-08-31 20:47:14.470 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bb3d52350498480e9f9626322a588b4e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a02af84a-0c34-4190-88cb-8fa6ba4355a4): COMMIT;
Executing (3aec830f-cdb0-47ab-b206-08536970068d): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'f5bda8c8-9b5d-4f02-aefc-e2ecf01d710c' AND "UserTrainer"."name" = 'JD - Facilitate two practical JalShalas for training of Block trainers - 1' AND "UserTrainer"."issueDate" = '2023-03-31 13:45:00.000 +00:00' LIMIT 1;
Executing (27cf57ec-da30-4751-82d0-279d4be4675b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_63210804c8c842b585587c76f2d34484$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Codes instead of Scans','2021-02-04 06:06:24.000 +00:00','67f6ffd9-0d75-4c92-8909-7c0f78daf8b7','2024-08-31 20:47:14.472 +00:00','2024-08-31 20:47:14.472 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_63210804c8c842b585587c76f2d34484$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Data collection and Monitoring 2021-01-06T07:53:00.000+0000
Executing (f80afafb-5515-49c5-a777-fb5c626de053): START TRANSACTION;
Executing (be9e2355-6aad-4d93-b0e9-901da64fee6a): COMMIT;
Executing (f80afafb-5515-49c5-a777-fb5c626de053): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'db52891b-977c-429d-ad2c-9258b81a7ba4' AND "UserTrainer"."name" = 'Water Literacy Campaign' AND "UserTrainer"."issueDate" = '2021-01-13 05:30:00.000 +00:00' LIMIT 1;
Executing (054dc460-18af-47e2-a0ab-54b98799ba09): COMMIT;
Executing (3aec830f-cdb0-47ab-b206-08536970068d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8c855ede69704d4692e0e2ef50c845e1$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD - Facilitate two practical JalShalas for training of Block trainers - 1','2023-03-31 13:45:00.000 +00:00','f5bda8c8-9b5d-4f02-aefc-e2ecf01d710c','2024-08-31 20:47:14.475 +00:00','2024-08-31 20:47:14.475 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8c855ede69704d4692e0e2ef50c845e1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f80afafb-5515-49c5-a777-fb5c626de053): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4748a1b40e684ffcb4ec9d6f43fce87f$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Water Literacy Campaign','2021-01-13 05:30:00.000 +00:00','db52891b-977c-429d-ad2c-9258b81a7ba4','2024-08-31 20:47:14.476 +00:00','2024-08-31 20:47:14.476 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4748a1b40e684ffcb4ec9d6f43fce87f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname JD - Making the District Plan
Executing (2492dad0-dd5c-40ad-8bac-3cfef7887c72): START TRANSACTION;
trainertopicname JD test - Conducting a block trainers TOT
Executing (0fe57dc7-0380-4d09-a1be-15e9c8907170): START TRANSACTION;
Executing (27cf57ec-da30-4751-82d0-279d4be4675b): COMMIT;
Executing (f80afafb-5515-49c5-a777-fb5c626de053): COMMIT;
Executing (2492dad0-dd5c-40ad-8bac-3cfef7887c72): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'b7031ba5-8d50-43d4-82db-b63e173db13c' AND "UserTrainer"."name" = 'Execution of the JalShala' AND "UserTrainer"."issueDate" = '2023-07-31 17:15:00.000 +00:00' LIMIT 1;
Executing (0fe57dc7-0380-4d09-a1be-15e9c8907170): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '867b20fb-b6bd-418d-91c6-aa5ef686e629' AND "UserTopic"."name" = 'PDA Dashboard english' AND "UserTopic"."issuedAt" = '2021-04-29 12:01:56.000 +00:00' LIMIT 1;
Executing (3aec830f-cdb0-47ab-b206-08536970068d): COMMIT;
Processed user: Kishan 
Executing (4bf2eb9b-5c74-42dd-8b72-878bf4b7518c): START TRANSACTION;
Executing (2492dad0-dd5c-40ad-8bac-3cfef7887c72): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d5879e754bb444af810f4cf7a9b16cff$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-07-31 17:15:00.000 +00:00','b7031ba5-8d50-43d4-82db-b63e173db13c','2024-08-31 20:47:14.481 +00:00','2024-08-31 20:47:14.481 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d5879e754bb444af810f4cf7a9b16cff$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
topicName Test topic 2019-11-29T11:35:37+0000
Executing (04cd67ec-ab4a-47e7-b491-b4913631cd7d): START TRANSACTION;
Executing (4bf2eb9b-5c74-42dd-8b72-878bf4b7518c): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5a9679fe-6c56-4e22-aa0a-14adb9703410' AND "UserTopic"."name" = 'JD - Facilitate two practical JalShalas for training of Block trainers - 1' AND "UserTopic"."issuedAt" = '2023-03-20 09:54:33.000 +00:00' LIMIT 1;
Executing (0fe57dc7-0380-4d09-a1be-15e9c8907170): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d02ab8a20f464a1597832622afab9814$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Dashboard english','2021-04-29 12:01:56.000 +00:00','867b20fb-b6bd-418d-91c6-aa5ef686e629','2024-08-31 20:47:14.483 +00:00','2024-08-31 20:47:14.483 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d02ab8a20f464a1597832622afab9814$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname JD - Facilitate two practical JalShalas for training of Block trainers - 2 
Executing (2ada616f-0621-477d-a464-1c6cd9971355): START TRANSACTION;
Executing (4bf2eb9b-5c74-42dd-8b72-878bf4b7518c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4e60a5d175b04a27bbf6981119f8444f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD - Facilitate two practical JalShalas for training of Block trainers - 1','2023-03-20 09:54:33.000 +00:00','5a9679fe-6c56-4e22-aa0a-14adb9703410','2024-08-31 20:47:14.485 +00:00','2024-08-31 20:47:14.485 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4e60a5d175b04a27bbf6981119f8444f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (04cd67ec-ab4a-47e7-b491-b4913631cd7d): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'eafa5769-776e-421f-bdce-03326a065f7e' AND "UserTopic"."name" = 'Capacity building of Jaldoots on MGNREGA schemes provisions' AND "UserTopic"."issuedAt" = '2021-01-11 07:36:58.000 +00:00' LIMIT 1;
Executing (2492dad0-dd5c-40ad-8bac-3cfef7887c72): COMMIT;
Executing (2ada616f-0621-477d-a464-1c6cd9971355): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '88acf595-35dd-4ee8-87aa-924166be5859' AND "UserTrainer"."name" = 'Water Literacy Campaign' AND "UserTrainer"."issueDate" = '2021-01-13 05:30:00.000 +00:00' LIMIT 1;
Executing (0fe57dc7-0380-4d09-a1be-15e9c8907170): COMMIT;
Executing (2ada616f-0621-477d-a464-1c6cd9971355): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_558c39d29a7d4e46bc447cebe7823bc2$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Water Literacy Campaign','2021-01-13 05:30:00.000 +00:00','88acf595-35dd-4ee8-87aa-924166be5859','2024-08-31 20:47:14.489 +00:00','2024-08-31 20:47:14.489 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_558c39d29a7d4e46bc447cebe7823bc2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (04cd67ec-ab4a-47e7-b491-b4913631cd7d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_87f4a93dd53446f4b2fa2b3ce47ad84a$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Capacity building of Jaldoots on MGNREGA schemes provisions','2021-01-11 07:36:58.000 +00:00','eafa5769-776e-421f-bdce-03326a065f7e','2024-08-31 20:47:14.491 +00:00','2024-08-31 20:47:14.491 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_87f4a93dd53446f4b2fa2b3ce47ad84a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4bf2eb9b-5c74-42dd-8b72-878bf4b7518c): COMMIT;
Processed user: Sujata Gautam
Executing (d9b98b13-f164-4df3-9443-81fbf96b62c5): START TRANSACTION;
Executing (2ada616f-0621-477d-a464-1c6cd9971355): COMMIT;
topicName District Workshop training for block team 2023-04-20T10:15:05.000+0000
Executing (94af030c-692e-4986-96bd-6ef52a9f43aa): START TRANSACTION;
topicName PDA - Program App 2021-04-05T10:41:00.000+0000
Executing (a5f7649f-5c78-4e81-aa4f-0b1ececf4320): START TRANSACTION;
Processed user: Pritam Lonare
Executing (7ab04906-e93f-4e02-a7a0-1e82e932271f): START TRANSACTION;
Executing (94af030c-692e-4986-96bd-6ef52a9f43aa): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '840282c7-4246-44db-a1f6-d753c1913547' AND "UserTrainer"."name" = 'Introduction to Visual Design LL3' AND "UserTrainer"."issueDate" = '2022-03-22 07:30:00.000 +00:00' LIMIT 1;
Executing (04cd67ec-ab4a-47e7-b491-b4913631cd7d): COMMIT;
Executing (d9b98b13-f164-4df3-9443-81fbf96b62c5): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '6e95d2e7-e874-4076-9412-17aeeb8ea5c3' AND "UserTopic"."name" = 'Feedback and next steps' AND "UserTopic"."issuedAt" = '2022-01-25 07:26:05.000 +00:00' LIMIT 1;
Executing (7ab04906-e93f-4e02-a7a0-1e82e932271f): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = 'c5d35819-2105-4cef-8c0a-af367a875971' AND "UserTopic"."name" = 'Codes instead of Scans' AND "UserTopic"."issuedAt" = '2021-02-04 06:06:35.000 +00:00' LIMIT 1;
Executing (94af030c-692e-4986-96bd-6ef52a9f43aa): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_afecc1c753ac49b19b8d05aa74da108c$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Visual Design LL3','2022-03-22 07:30:00.000 +00:00','840282c7-4246-44db-a1f6-d753c1913547','2024-08-31 20:47:14.500 +00:00','2024-08-31 20:47:14.500 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_afecc1c753ac49b19b8d05aa74da108c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Ashish Mehta
Executing (8f4be76c-1ff8-478a-89df-ddf5029bebc1): START TRANSACTION;
Executing (a5f7649f-5c78-4e81-aa4f-0b1ececf4320): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '9bb07b4d-1f9a-46ff-abff-29ec483b7763' AND "UserTopic"."name" = 'Improved Hands on Test 2' AND "UserTopic"."issuedAt" = '2021-04-14 05:16:21.000 +00:00' LIMIT 1;
Executing (7ab04906-e93f-4e02-a7a0-1e82e932271f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_738e1d72d9d4410da210bd634933b6a7$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Codes instead of Scans','2021-02-04 06:06:35.000 +00:00','c5d35819-2105-4cef-8c0a-af367a875971','2024-08-31 20:47:14.504 +00:00','2024-08-31 20:47:14.504 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_738e1d72d9d4410da210bd634933b6a7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (94af030c-692e-4986-96bd-6ef52a9f43aa): COMMIT;
Executing (8f4be76c-1ff8-478a-89df-ddf5029bebc1): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '534ec60b-0deb-41a6-97f8-2b5477f9c3a3' AND "UserTrainer"."name" = 'CBP Orientation' AND "UserTrainer"."issueDate" = '2020-08-28 11:00:00.000 +00:00' LIMIT 1;
Executing (d9b98b13-f164-4df3-9443-81fbf96b62c5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7c414f71cedb4a3a8d57d2a017a5cb7e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Feedback and next steps','2022-01-25 07:26:05.000 +00:00','6e95d2e7-e874-4076-9412-17aeeb8ea5c3','2024-08-31 20:47:14.507 +00:00','2024-08-31 20:47:14.507 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7c414f71cedb4a3a8d57d2a017a5cb7e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7ab04906-e93f-4e02-a7a0-1e82e932271f): COMMIT;
trainertopicname Feedback and next steps LL2
Executing (90e2ef5f-3869-40d9-b4ff-8a0df39daf87): START TRANSACTION;
Executing (8f4be76c-1ff8-478a-89df-ddf5029bebc1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_045cbdcfc54b4fda9b00daed136881bd$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'CBP Orientation','2020-08-28 11:00:00.000 +00:00','534ec60b-0deb-41a6-97f8-2b5477f9c3a3','2024-08-31 20:47:14.511 +00:00','2024-08-31 20:47:14.511 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_045cbdcfc54b4fda9b00daed136881bd$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a5f7649f-5c78-4e81-aa4f-0b1ececf4320): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_63ba8fc7ab2a423b9f7d22486ccbbf24$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Improved Hands on Test 2','2021-04-14 05:16:21.000 +00:00','9bb07b4d-1f9a-46ff-abff-29ec483b7763','2024-08-31 20:47:14.512 +00:00','2024-08-31 20:47:14.512 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_63ba8fc7ab2a423b9f7d22486ccbbf24$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname PDA Demo
Executing (8059caf1-cf46-4ad1-bab3-191478eb34b6): START TRANSACTION;
Executing (90e2ef5f-3869-40d9-b4ff-8a0df39daf87): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '2e400362-1635-47e4-99c8-72b00dd38b19' AND "UserTopic"."name" = 'PDA for Trainers' AND "UserTopic"."issuedAt" = '2020-11-23 05:57:37.000 +00:00' LIMIT 1;
Executing (d9b98b13-f164-4df3-9443-81fbf96b62c5): COMMIT;
Executing (8059caf1-cf46-4ad1-bab3-191478eb34b6): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '305c306d-64cc-45eb-b51c-6bcb69c00291' AND "UserTopic"."name" = 'Feedback and next steps' AND "UserTopic"."issuedAt" = '2022-01-25 07:28:19.000 +00:00' LIMIT 1;
Executing (90e2ef5f-3869-40d9-b4ff-8a0df39daf87): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_211d2713f67d4cb49f64132e4089e8ac$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA for Trainers','2020-11-23 05:57:37.000 +00:00','2e400362-1635-47e4-99c8-72b00dd38b19','2024-08-31 20:47:14.517 +00:00','2024-08-31 20:47:14.517 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_211d2713f67d4cb49f64132e4089e8ac$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8f4be76c-1ff8-478a-89df-ddf5029bebc1): COMMIT;
Executing (a5f7649f-5c78-4e81-aa4f-0b1ececf4320): COMMIT;
Executing (8059caf1-cf46-4ad1-bab3-191478eb34b6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6c917cc348f54243adeb0c726ebdb714$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Feedback and next steps','2022-01-25 07:28:19.000 +00:00','305c306d-64cc-45eb-b51c-6bcb69c00291','2024-08-31 20:47:14.520 +00:00','2024-08-31 20:47:14.520 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6c917cc348f54243adeb0c726ebdb714$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname PDA - Participant App
Executing (0386c3dd-c1b3-44ae-8819-0cf9368da90e): START TRANSACTION;
Processed user: Anand shah
Executing (ad4ed244-060d-4073-a8ca-ac1f341aac77): START TRANSACTION;
Executing (8059caf1-cf46-4ad1-bab3-191478eb34b6): COMMIT;
Executing (0386c3dd-c1b3-44ae-8819-0cf9368da90e): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '249f141b-3fd0-4d6b-8fdb-c68de7aca819' AND "UserTrainer"."name" = 'TOT of Bhujal Janakar' AND "UserTrainer"."issueDate" = '2021-02-05 07:30:00.000 +00:00' LIMIT 1;
Executing (90e2ef5f-3869-40d9-b4ff-8a0df39daf87): COMMIT;
trainertopicname Test topic in new UI
Executing (822cc301-9189-4c83-b7e1-b56d0e6f56ec): START TRANSACTION;
Processed user: Ramachandra Bhat
Executing (e0fe8bce-3a77-4597-a12e-351f04eeffff): START TRANSACTION;
Executing (0386c3dd-c1b3-44ae-8819-0cf9368da90e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cda02152c8064131a9bff7c892ad9d74$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'TOT of Bhujal Janakar','2021-02-05 07:30:00.000 +00:00','249f141b-3fd0-4d6b-8fdb-c68de7aca819','2024-08-31 20:47:14.529 +00:00','2024-08-31 20:47:14.529 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cda02152c8064131a9bff7c892ad9d74$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname CBP Orientation
Executing (9e7af0ea-f69f-48f6-a91e-bde7a65a9392): START TRANSACTION;
Executing (822cc301-9189-4c83-b7e1-b56d0e6f56ec): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '4e526a75-c8d4-436b-8245-b7f7dd485186' AND "UserTopic"."name" = 'Data collection and Monitoring' AND "UserTopic"."issuedAt" = '2021-01-06 07:53:00.000 +00:00' LIMIT 1;
Executing (ad4ed244-060d-4073-a8ca-ac1f341aac77): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '623772f6-e951-4704-ad07-d8e1b852bee3' AND "UserTrainer"."name" = 'Water Literacy Campaign' AND "UserTrainer"."issueDate" = '2021-01-23 05:00:00.000 +00:00' LIMIT 1;
Executing (e0fe8bce-3a77-4597-a12e-351f04eeffff): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '7dd8cae2-8102-44ca-b042-6a1d51b97504' AND "UserTrainer"."name" = 'JD - Making the District Plan' AND "UserTrainer"."issueDate" = '2023-03-31 13:32:24.000 +00:00' LIMIT 1;
Executing (0386c3dd-c1b3-44ae-8819-0cf9368da90e): COMMIT;
Executing (9e7af0ea-f69f-48f6-a91e-bde7a65a9392): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '452450c8-d384-4c61-83f8-4faf11a6d8ef' AND "UserTrainer"."name" = 'JD test - Conducting a block trainers TOT' AND "UserTrainer"."issueDate" = '2023-01-31 11:45:00.000 +00:00' LIMIT 1;
Executing (822cc301-9189-4c83-b7e1-b56d0e6f56ec): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4ad43fbd6fa14ea6b0fe459dbf23fb74$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Data collection and Monitoring','2021-01-06 07:53:00.000 +00:00','4e526a75-c8d4-436b-8245-b7f7dd485186','2024-08-31 20:47:14.536 +00:00','2024-08-31 20:47:14.536 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4ad43fbd6fa14ea6b0fe459dbf23fb74$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e0fe8bce-3a77-4597-a12e-351f04eeffff): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5891e13883fa457f8b0473f6cebe7344$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD - Making the District Plan','2023-03-31 13:32:24.000 +00:00','7dd8cae2-8102-44ca-b042-6a1d51b97504','2024-08-31 20:47:14.537 +00:00','2024-08-31 20:47:14.537 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5891e13883fa457f8b0473f6cebe7344$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Crop Water Budgeting Overview
Executing (786b230e-11f5-462f-87db-62995911c054): START TRANSACTION;
Executing (9e7af0ea-f69f-48f6-a91e-bde7a65a9392): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b2b5e6d32cd34b48b5f4eb05c88d27fd$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD test - Conducting a block trainers TOT','2023-01-31 11:45:00.000 +00:00','452450c8-d384-4c61-83f8-4faf11a6d8ef','2024-08-31 20:47:14.539 +00:00','2024-08-31 20:47:14.539 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b2b5e6d32cd34b48b5f4eb05c88d27fd$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ad4ed244-060d-4073-a8ca-ac1f341aac77): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c16ee9b63e3249779f2cf5c06f6ca3c3$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Water Literacy Campaign','2021-01-23 05:00:00.000 +00:00','623772f6-e951-4704-ad07-d8e1b852bee3','2024-08-31 20:47:14.539 +00:00','2024-08-31 20:47:14.539 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c16ee9b63e3249779f2cf5c06f6ca3c3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e0fe8bce-3a77-4597-a12e-351f04eeffff): COMMIT;
Executing (786b230e-11f5-462f-87db-62995911c054): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '67f6ffd9-0d75-4c92-8909-7c0f78daf8b7' AND "UserTopic"."name" = 'Test topic' AND "UserTopic"."issuedAt" = '2019-11-29 11:35:37.000 +00:00' LIMIT 1;
Executing (822cc301-9189-4c83-b7e1-b56d0e6f56ec): COMMIT;
trainertopicname JD - Facilitate two practical JalShalas for training of Block trainers - 1
Executing (530bdf04-cd18-425e-89ad-edbbb5fc0abd): START TRANSACTION;
Executing (9e7af0ea-f69f-48f6-a91e-bde7a65a9392): COMMIT;
Executing (ad4ed244-060d-4073-a8ca-ac1f341aac77): COMMIT;
Executing (530bdf04-cd18-425e-89ad-edbbb5fc0abd): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'f5bda8c8-9b5d-4f02-aefc-e2ecf01d710c' AND "UserTrainer"."name" = 'JD - Facilitate two practical JalShalas for training of Block trainers - 2 ' AND "UserTrainer"."issueDate" = '2023-03-31 13:45:00.000 +00:00' LIMIT 1;
Executing (786b230e-11f5-462f-87db-62995911c054): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9250936987b84b2a8613edfcb4ba1f18$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'Test topic','2019-11-29 11:35:37.000 +00:00','67f6ffd9-0d75-4c92-8909-7c0f78daf8b7','2024-08-31 20:47:14.544 +00:00','2024-08-31 20:47:14.544 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9250936987b84b2a8613edfcb4ba1f18$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Orientation on Abhy and PGWM - III
Executing (66a88e93-5f6b-4919-ab64-5921ea0cf14b): START TRANSACTION;
Executing (530bdf04-cd18-425e-89ad-edbbb5fc0abd): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4bf9d1a9565641f9951194501d9f6257$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD - Facilitate two practical JalShalas for training of Block trainers - 2 ','2023-03-31 13:45:00.000 +00:00','f5bda8c8-9b5d-4f02-aefc-e2ecf01d710c','2024-08-31 20:47:14.545 +00:00','2024-08-31 20:47:14.545 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4bf9d1a9565641f9951194501d9f6257$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Sunderrajan
Executing (f44ee66c-fa93-4683-9838-5afcacfb9344): START TRANSACTION;
trainertopicname Water Literacy Campaign
Executing (4a6be12b-7f6e-4036-ae7c-c66d5efd67fc): START TRANSACTION;
Executing (f44ee66c-fa93-4683-9838-5afcacfb9344): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '867b20fb-b6bd-418d-91c6-aa5ef686e629' AND "UserTopic"."name" = 'PDA - Program App' AND "UserTopic"."issuedAt" = '2021-04-05 10:41:00.000 +00:00' LIMIT 1;
Executing (66a88e93-5f6b-4919-ab64-5921ea0cf14b): SELECT "id", "name", "issuedAt", "userId", "createdAt", "updatedAt" FROM "UserTopics" AS "UserTopic" WHERE "UserTopic"."userId" = '5a9679fe-6c56-4e22-aa0a-14adb9703410' AND "UserTopic"."name" = 'District Workshop training for block team' AND "UserTopic"."issuedAt" = '2023-04-20 10:15:05.000 +00:00' LIMIT 1;
Executing (f44ee66c-fa93-4683-9838-5afcacfb9344): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_14a50ddf6a8845c6818faf4cf1b62b9e$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Program App','2021-04-05 10:41:00.000 +00:00','867b20fb-b6bd-418d-91c6-aa5ef686e629','2024-08-31 20:47:14.548 +00:00','2024-08-31 20:47:14.548 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_14a50ddf6a8845c6818faf4cf1b62b9e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (786b230e-11f5-462f-87db-62995911c054): COMMIT;
Executing (4a6be12b-7f6e-4036-ae7c-c66d5efd67fc): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '840282c7-4246-44db-a1f6-d753c1913547' AND "UserTrainer"."name" = 'Feedback and next steps LL2' AND "UserTrainer"."issueDate" = '2022-03-08 07:30:00.000 +00:00' LIMIT 1;
Executing (530bdf04-cd18-425e-89ad-edbbb5fc0abd): COMMIT;
Executing (f44ee66c-fa93-4683-9838-5afcacfb9344): COMMIT;
trainertopicname Community Mobilization
Executing (0151681f-a16f-4b04-a052-f544905498f5): START TRANSACTION;
Executing (66a88e93-5f6b-4919-ab64-5921ea0cf14b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTopics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_02560bd2d71a400697e01a24b494a24f$ BEGIN INSERT INTO "UserTopics" ("id","name","issuedAt","userId","createdAt","updatedAt") VALUES (DEFAULT,'District Workshop training for block team','2023-04-20 10:15:05.000 +00:00','5a9679fe-6c56-4e22-aa0a-14adb9703410','2024-08-31 20:47:14.551 +00:00','2024-08-31 20:47:14.551 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_02560bd2d71a400697e01a24b494a24f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issuedAt", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname CBP Orientation
Executing (ecb63641-1ae3-4af7-8ca3-6479ea6d54ab): START TRANSACTION;
Executing (0151681f-a16f-4b04-a052-f544905498f5): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'c5d35819-2105-4cef-8c0a-af367a875971' AND "UserTrainer"."name" = 'PDA Demo' AND "UserTrainer"."issueDate" = '2021-07-13 06:00:00.000 +00:00' LIMIT 1;
Executing (4a6be12b-7f6e-4036-ae7c-c66d5efd67fc): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7d6cc9795f5c4b22b9c037b2d502bcbe$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Feedback and next steps LL2','2022-03-08 07:30:00.000 +00:00','840282c7-4246-44db-a1f6-d753c1913547','2024-08-31 20:47:14.553 +00:00','2024-08-31 20:47:14.553 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7d6cc9795f5c4b22b9c037b2d502bcbe$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Execution of the JalShala
Executing (33045f0f-4f49-4eab-b139-e60fba85df59): START TRANSACTION;
Executing (ecb63641-1ae3-4af7-8ca3-6479ea6d54ab): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '534ec60b-0deb-41a6-97f8-2b5477f9c3a3' AND "UserTrainer"."name" = 'PDA - Participant App' AND "UserTrainer"."issueDate" = '2020-01-14 10:32:00.000 +00:00' LIMIT 1;
Executing (0151681f-a16f-4b04-a052-f544905498f5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2ae4824b5872488dad82dfb63e895951$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo','2021-07-13 06:00:00.000 +00:00','c5d35819-2105-4cef-8c0a-af367a875971','2024-08-31 20:47:14.555 +00:00','2024-08-31 20:47:14.555 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2ae4824b5872488dad82dfb63e895951$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (66a88e93-5f6b-4919-ab64-5921ea0cf14b): COMMIT;
Executing (ecb63641-1ae3-4af7-8ca3-6479ea6d54ab): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e199d6d3a6894f71a16f5b8ffbe403c2$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA - Participant App','2020-01-14 10:32:00.000 +00:00','534ec60b-0deb-41a6-97f8-2b5477f9c3a3','2024-08-31 20:47:14.556 +00:00','2024-08-31 20:47:14.556 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e199d6d3a6894f71a16f5b8ffbe403c2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (33045f0f-4f49-4eab-b139-e60fba85df59): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '9bb07b4d-1f9a-46ff-abff-29ec483b7763' AND "UserTrainer"."name" = 'Test topic in new UI' AND "UserTrainer"."issueDate" = '2022-03-10 09:30:00.000 +00:00' LIMIT 1;
Executing (4a6be12b-7f6e-4036-ae7c-c66d5efd67fc): COMMIT;
trainertopicname Churu Fluorosis PDA demo
Executing (98d0b3c5-183c-4571-96fa-62fc2e31005b): START TRANSACTION;
Executing (0151681f-a16f-4b04-a052-f544905498f5): COMMIT;
Executing (98d0b3c5-183c-4571-96fa-62fc2e31005b): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '2e400362-1635-47e4-99c8-72b00dd38b19' AND "UserTrainer"."name" = 'CBP Orientation' AND "UserTrainer"."issueDate" = '2020-08-25 06:30:00.000 +00:00' LIMIT 1;
Executing (ecb63641-1ae3-4af7-8ca3-6479ea6d54ab): COMMIT;
Executing (33045f0f-4f49-4eab-b139-e60fba85df59): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7206611ef1d44d1e8ecfec0187cd7ca1$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Test topic in new UI','2022-03-10 09:30:00.000 +00:00','9bb07b4d-1f9a-46ff-abff-29ec483b7763','2024-08-31 20:47:14.559 +00:00','2024-08-31 20:47:14.559 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7206611ef1d44d1e8ecfec0187cd7ca1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Yj
Executing (cfed42f4-90b9-49b5-8cde-8a8b9d251d7c): START TRANSACTION;
Executing (98d0b3c5-183c-4571-96fa-62fc2e31005b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e4732d55d92d453ebb5948b8d80286d5$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'CBP Orientation','2020-08-25 06:30:00.000 +00:00','2e400362-1635-47e4-99c8-72b00dd38b19','2024-08-31 20:47:14.560 +00:00','2024-08-31 20:47:14.560 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e4732d55d92d453ebb5948b8d80286d5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Topic editing - Test
Executing (801f6424-235a-4dbc-bd40-990be97e087c): START TRANSACTION;
Processed user: Madhavi Purohit
Executing (61787b42-0b63-4774-a9f3-13ebd2500864): START TRANSACTION;
Executing (801f6424-235a-4dbc-bd40-990be97e087c): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '7dd8cae2-8102-44ca-b042-6a1d51b97504' AND "UserTrainer"."name" = 'JD - Facilitate two practical JalShalas for training of Block trainers - 1' AND "UserTrainer"."issueDate" = '2023-03-31 13:45:00.000 +00:00' LIMIT 1;
Executing (cfed42f4-90b9-49b5-8cde-8a8b9d251d7c): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '249f141b-3fd0-4d6b-8fdb-c68de7aca819' AND "UserTrainer"."name" = 'Crop Water Budgeting Overview' AND "UserTrainer"."issueDate" = '2020-12-16 08:00:00.000 +00:00' LIMIT 1;
Executing (33045f0f-4f49-4eab-b139-e60fba85df59): COMMIT;
Executing (801f6424-235a-4dbc-bd40-990be97e087c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_12dfa331cfef480cb2a142cd1eaa482a$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD - Facilitate two practical JalShalas for training of Block trainers - 1','2023-03-31 13:45:00.000 +00:00','7dd8cae2-8102-44ca-b042-6a1d51b97504','2024-08-31 20:47:14.564 +00:00','2024-08-31 20:47:14.564 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_12dfa331cfef480cb2a142cd1eaa482a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cfed42f4-90b9-49b5-8cde-8a8b9d251d7c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f8e5c080db084babb5b4993bd87a6915$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Crop Water Budgeting Overview','2020-12-16 08:00:00.000 +00:00','249f141b-3fd0-4d6b-8fdb-c68de7aca819','2024-08-31 20:47:14.564 +00:00','2024-08-31 20:47:14.564 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f8e5c080db084babb5b4993bd87a6915$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (61787b42-0b63-4774-a9f3-13ebd2500864): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '4e526a75-c8d4-436b-8245-b7f7dd485186' AND "UserTrainer"."name" = 'Orientation on Abhy and PGWM - III' AND "UserTrainer"."issueDate" = '2021-08-18 12:00:00.000 +00:00' LIMIT 1;
Executing (98d0b3c5-183c-4571-96fa-62fc2e31005b): COMMIT;
Executing (801f6424-235a-4dbc-bd40-990be97e087c): COMMIT;
trainertopicname Improved Hands on Test 2
Executing (4ae5fd29-595c-4998-b605-cd7dc568daf7): START TRANSACTION;
Executing (61787b42-0b63-4774-a9f3-13ebd2500864): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e10bc4f6ca0948908bb8dba01aeeba79$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM - III','2021-08-18 12:00:00.000 +00:00','4e526a75-c8d4-436b-8245-b7f7dd485186','2024-08-31 20:47:14.568 +00:00','2024-08-31 20:47:14.568 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e10bc4f6ca0948908bb8dba01aeeba79$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cfed42f4-90b9-49b5-8cde-8a8b9d251d7c): COMMIT;
trainertopicname PDA Additional features
Executing (6bbbc3ac-cc40-43ac-a5d3-6a6e2642351d): START TRANSACTION;
trainertopicname JD - Facilitate two practical JalShalas for training of Block trainers - 2 
Executing (65847108-0791-457f-b36b-7c5f7864a735): START TRANSACTION;
Executing (4ae5fd29-595c-4998-b605-cd7dc568daf7): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '623772f6-e951-4704-ad07-d8e1b852bee3' AND "UserTrainer"."name" = 'Water Literacy Campaign' AND "UserTrainer"."issueDate" = '2021-01-05 11:30:00.000 +00:00' LIMIT 1;
Executing (65847108-0791-457f-b36b-7c5f7864a735): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '867b20fb-b6bd-418d-91c6-aa5ef686e629' AND "UserTrainer"."name" = 'CBP Orientation' AND "UserTrainer"."issueDate" = '2020-08-28 11:00:00.000 +00:00' LIMIT 1;
Processed user: Sazina
Executing (0fd1c872-2a58-4e3e-95d6-15344f82f590): START TRANSACTION;
Executing (6bbbc3ac-cc40-43ac-a5d3-6a6e2642351d): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '67f6ffd9-0d75-4c92-8909-7c0f78daf8b7' AND "UserTrainer"."name" = 'Community Mobilization' AND "UserTrainer"."issueDate" = '2020-08-07 08:06:00.000 +00:00' LIMIT 1;
Executing (61787b42-0b63-4774-a9f3-13ebd2500864): COMMIT;
Executing (65847108-0791-457f-b36b-7c5f7864a735): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cbc7f44cd7324eb2a60a645ab966858d$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'CBP Orientation','2020-08-28 11:00:00.000 +00:00','867b20fb-b6bd-418d-91c6-aa5ef686e629','2024-08-31 20:47:14.572 +00:00','2024-08-31 20:47:14.572 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cbc7f44cd7324eb2a60a645ab966858d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0fd1c872-2a58-4e3e-95d6-15344f82f590): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = 'f5bda8c8-9b5d-4f02-aefc-e2ecf01d710c' AND "UserTrainer"."name" = 'Execution of the JalShala' AND "UserTrainer"."issueDate" = '2023-07-31 17:15:00.000 +00:00' LIMIT 1;
Executing (4ae5fd29-595c-4998-b605-cd7dc568daf7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_078c6fa555174ea782c5985b4b110420$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Water Literacy Campaign','2021-01-05 11:30:00.000 +00:00','623772f6-e951-4704-ad07-d8e1b852bee3','2024-08-31 20:47:14.574 +00:00','2024-08-31 20:47:14.574 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_078c6fa555174ea782c5985b4b110420$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0fd1c872-2a58-4e3e-95d6-15344f82f590): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7c3c3d0b59be45f6b2b781645b0363f0$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-07-31 17:15:00.000 +00:00','f5bda8c8-9b5d-4f02-aefc-e2ecf01d710c','2024-08-31 20:47:14.574 +00:00','2024-08-31 20:47:14.574 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7c3c3d0b59be45f6b2b781645b0363f0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6bbbc3ac-cc40-43ac-a5d3-6a6e2642351d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ea67cacdb01a413c83229d15ce2bbec7$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Community Mobilization','2020-08-07 08:06:00.000 +00:00','67f6ffd9-0d75-4c92-8909-7c0f78daf8b7','2024-08-31 20:47:14.575 +00:00','2024-08-31 20:47:14.575 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ea67cacdb01a413c83229d15ce2bbec7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Crop Water Budgeting
Executing (4b75a4e8-64d1-4637-8e87-b1302833deb8): START TRANSACTION;
Executing (0fd1c872-2a58-4e3e-95d6-15344f82f590): COMMIT;
Executing (65847108-0791-457f-b36b-7c5f7864a735): COMMIT;
Executing (4ae5fd29-595c-4998-b605-cd7dc568daf7): COMMIT;
Processed user: Sarmila Kakoti
Executing (90c504aa-1d89-4a28-b100-410ff3c1ce4c): START TRANSACTION;
trainertopicname PDA Hands-on
Executing (3f7b2e64-a2c3-47d8-a268-107fc5451b70): START TRANSACTION;
Executing (4b75a4e8-64d1-4637-8e87-b1302833deb8): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '5a9679fe-6c56-4e22-aa0a-14adb9703410' AND "UserTrainer"."name" = 'Churu Fluorosis PDA demo' AND "UserTrainer"."issueDate" = '2020-10-21 12:06:00.000 +00:00' LIMIT 1;
Executing (6bbbc3ac-cc40-43ac-a5d3-6a6e2642351d): COMMIT;
Executing (90c504aa-1d89-4a28-b100-410ff3c1ce4c): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '534ec60b-0deb-41a6-97f8-2b5477f9c3a3' AND "UserTrainer"."name" = 'Topic editing - Test' AND "UserTrainer"."issueDate" = '2020-05-29 05:43:00.000 +00:00' LIMIT 1;
Executing (3f7b2e64-a2c3-47d8-a268-107fc5451b70): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '9bb07b4d-1f9a-46ff-abff-29ec483b7763' AND "UserTrainer"."name" = 'Improved Hands on Test 2' AND "UserTrainer"."issueDate" = '2021-04-14 03:15:00.000 +00:00' LIMIT 1;
trainertopicname Water Literacy Campaign
Executing (ec74557b-410d-4679-9f33-5b26f9b1e65a): START TRANSACTION;
Executing (90c504aa-1d89-4a28-b100-410ff3c1ce4c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_249c4497a6f34d3da540737f87056db3$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Topic editing - Test','2020-05-29 05:43:00.000 +00:00','534ec60b-0deb-41a6-97f8-2b5477f9c3a3','2024-08-31 20:47:14.584 +00:00','2024-08-31 20:47:14.584 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_249c4497a6f34d3da540737f87056db3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4b75a4e8-64d1-4637-8e87-b1302833deb8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1e2affb5f3be45ea90d0f876794b7406$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Churu Fluorosis PDA demo','2020-10-21 12:06:00.000 +00:00','5a9679fe-6c56-4e22-aa0a-14adb9703410','2024-08-31 20:47:14.585 +00:00','2024-08-31 20:47:14.585 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1e2affb5f3be45ea90d0f876794b7406$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname स्वच्छ पानी को पाने की जंग
Executing (d467cb59-25f4-4a17-8a0b-e1c58497d608): START TRANSACTION;
Executing (90c504aa-1d89-4a28-b100-410ff3c1ce4c): COMMIT;
Executing (3f7b2e64-a2c3-47d8-a268-107fc5451b70): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7d6e5b70b2ff40158e015f95ebf176b9$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Improved Hands on Test 2','2021-04-14 03:15:00.000 +00:00','9bb07b4d-1f9a-46ff-abff-29ec483b7763','2024-08-31 20:47:14.589 +00:00','2024-08-31 20:47:14.589 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7d6e5b70b2ff40158e015f95ebf176b9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ec74557b-410d-4679-9f33-5b26f9b1e65a): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '2e400362-1635-47e4-99c8-72b00dd38b19' AND "UserTrainer"."name" = 'PDA Additional features' AND "UserTrainer"."issueDate" = '2021-01-19 04:00:00.000 +00:00' LIMIT 1;
trainertopicname Test run for Assisted Scanning
Executing (7a7747b6-7ee1-4839-b477-51ab1ee5c604): START TRANSACTION;
Executing (d467cb59-25f4-4a17-8a0b-e1c58497d608): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '7dd8cae2-8102-44ca-b042-6a1d51b97504' AND "UserTrainer"."name" = 'JD - Facilitate two practical JalShalas for training of Block trainers - 2 ' AND "UserTrainer"."issueDate" = '2023-03-31 13:45:00.000 +00:00' LIMIT 1;
Executing (4b75a4e8-64d1-4637-8e87-b1302833deb8): COMMIT;
Executing (7a7747b6-7ee1-4839-b477-51ab1ee5c604): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '4e526a75-c8d4-436b-8245-b7f7dd485186' AND "UserTrainer"."name" = 'Crop Water Budgeting' AND "UserTrainer"."issueDate" = '2020-12-15 10:20:00.000 +00:00' LIMIT 1;
Executing (d467cb59-25f4-4a17-8a0b-e1c58497d608): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e7245a75dc324e98a7eb111ee152a0dd$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD - Facilitate two practical JalShalas for training of Block trainers - 2 ','2023-03-31 13:45:00.000 +00:00','7dd8cae2-8102-44ca-b042-6a1d51b97504','2024-08-31 20:47:14.595 +00:00','2024-08-31 20:47:14.595 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e7245a75dc324e98a7eb111ee152a0dd$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ec74557b-410d-4679-9f33-5b26f9b1e65a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0618255527ee4961808065c979a1859b$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Additional features','2021-01-19 04:00:00.000 +00:00','2e400362-1635-47e4-99c8-72b00dd38b19','2024-08-31 20:47:14.596 +00:00','2024-08-31 20:47:14.596 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0618255527ee4961808065c979a1859b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3f7b2e64-a2c3-47d8-a268-107fc5451b70): COMMIT;
Executing (7a7747b6-7ee1-4839-b477-51ab1ee5c604): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e2a97d4f7ea1496181932ce44bbdb70a$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Crop Water Budgeting','2020-12-15 10:20:00.000 +00:00','4e526a75-c8d4-436b-8245-b7f7dd485186','2024-08-31 20:47:14.597 +00:00','2024-08-31 20:47:14.597 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e2a97d4f7ea1496181932ce44bbdb70a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d467cb59-25f4-4a17-8a0b-e1c58497d608): COMMIT;
trainertopicname PDA mock session - Churu
Executing (7207589e-87f4-47d3-9a03-718173b98499): START TRANSACTION;
trainertopicname PDA Demo
Executing (09ab4a7f-2257-4b69-983b-84eb46e85e38): START TRANSACTION;
Executing (ec74557b-410d-4679-9f33-5b26f9b1e65a): COMMIT;
Executing (7207589e-87f4-47d3-9a03-718173b98499): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '867b20fb-b6bd-418d-91c6-aa5ef686e629' AND "UserTrainer"."name" = 'PDA Hands-on' AND "UserTrainer"."issueDate" = '2021-03-16 04:45:00.000 +00:00' LIMIT 1;
trainertopicname Execution of the JalShala
Executing (0e0dc07e-07a0-4481-88a7-f015ec0de931): START TRANSACTION;
Executing (09ab4a7f-2257-4b69-983b-84eb46e85e38): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '623772f6-e951-4704-ad07-d8e1b852bee3' AND "UserTrainer"."name" = 'Water Literacy Campaign' AND "UserTrainer"."issueDate" = '2021-01-07 06:30:00.000 +00:00' LIMIT 1;
Executing (7a7747b6-7ee1-4839-b477-51ab1ee5c604): COMMIT;
trainertopicname 3 Fold Program
Executing (e44badb0-3df0-4664-a9b1-26497920b718): START TRANSACTION;
Executing (09ab4a7f-2257-4b69-983b-84eb46e85e38): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_413db9be893e43d289db4c5388919443$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Water Literacy Campaign','2021-01-07 06:30:00.000 +00:00','623772f6-e951-4704-ad07-d8e1b852bee3','2024-08-31 20:47:14.602 +00:00','2024-08-31 20:47:14.602 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_413db9be893e43d289db4c5388919443$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7207589e-87f4-47d3-9a03-718173b98499): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d05409b40bf14b759911206a82b24f5a$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Hands-on','2021-03-16 04:45:00.000 +00:00','867b20fb-b6bd-418d-91c6-aa5ef686e629','2024-08-31 20:47:14.603 +00:00','2024-08-31 20:47:14.603 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d05409b40bf14b759911206a82b24f5a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0e0dc07e-07a0-4481-88a7-f015ec0de931): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '67f6ffd9-0d75-4c92-8909-7c0f78daf8b7' AND "UserTrainer"."name" = 'स्वच्छ पानी को पाने की जंग' AND "UserTrainer"."issueDate" = '2019-12-02 11:46:00.000 +00:00' LIMIT 1;
trainertopicname TOT of Bhujal Janakar
Executing (046ab2b6-a6e1-4d48-a0c9-3760f5f2a1f1): START TRANSACTION;
Executing (e44badb0-3df0-4664-a9b1-26497920b718): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '534ec60b-0deb-41a6-97f8-2b5477f9c3a3' AND "UserTrainer"."name" = 'Test run for Assisted Scanning' AND "UserTrainer"."issueDate" = '2020-08-07 07:24:00.000 +00:00' LIMIT 1;
Executing (046ab2b6-a6e1-4d48-a0c9-3760f5f2a1f1): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '5a9679fe-6c56-4e22-aa0a-14adb9703410' AND "UserTrainer"."name" = 'PDA mock session - Churu' AND "UserTrainer"."issueDate" = '2020-12-18 15:25:00.000 +00:00' LIMIT 1;
Executing (09ab4a7f-2257-4b69-983b-84eb46e85e38): COMMIT;
Executing (0e0dc07e-07a0-4481-88a7-f015ec0de931): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_16a7eddcd99b442d88fc3780a062f7e6$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'स्वच्छ पानी को पाने की जंग','2019-12-02 11:46:00.000 +00:00','67f6ffd9-0d75-4c92-8909-7c0f78daf8b7','2024-08-31 20:47:14.607 +00:00','2024-08-31 20:47:14.607 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_16a7eddcd99b442d88fc3780a062f7e6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (046ab2b6-a6e1-4d48-a0c9-3760f5f2a1f1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_eb1ab8fa42db41068576ee961b7224dd$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA mock session - Churu','2020-12-18 15:25:00.000 +00:00','5a9679fe-6c56-4e22-aa0a-14adb9703410','2024-08-31 20:47:14.607 +00:00','2024-08-31 20:47:14.607 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_eb1ab8fa42db41068576ee961b7224dd$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Ajay Satish Mahatme 
Executing (76f75531-b7b2-4d56-af04-3c9250380209): START TRANSACTION;
Executing (7207589e-87f4-47d3-9a03-718173b98499): COMMIT;
Executing (e44badb0-3df0-4664-a9b1-26497920b718): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e714f29a318f483da34ad1d1f35f9bf9$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Test run for Assisted Scanning','2020-08-07 07:24:00.000 +00:00','534ec60b-0deb-41a6-97f8-2b5477f9c3a3','2024-08-31 20:47:14.609 +00:00','2024-08-31 20:47:14.609 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e714f29a318f483da34ad1d1f35f9bf9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (046ab2b6-a6e1-4d48-a0c9-3760f5f2a1f1): COMMIT;
Executing (76f75531-b7b2-4d56-af04-3c9250380209): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '9bb07b4d-1f9a-46ff-abff-29ec483b7763' AND "UserTrainer"."name" = 'PDA Demo' AND "UserTrainer"."issueDate" = '2021-02-16 15:15:00.000 +00:00' LIMIT 1;
trainertopicname PDA Demo
Executing (fe7f3968-dcff-42d0-9e04-9ecb1e16b6c0): START TRANSACTION;
Executing (0e0dc07e-07a0-4481-88a7-f015ec0de931): COMMIT;
trainertopicname JD test - Assam
Executing (db3f1141-97d8-4b12-a06a-1e8c8957c16e): START TRANSACTION;
Executing (76f75531-b7b2-4d56-af04-3c9250380209): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8ceaaead7217431eb4b6e710e51c084b$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo','2021-02-16 15:15:00.000 +00:00','9bb07b4d-1f9a-46ff-abff-29ec483b7763','2024-08-31 20:47:14.612 +00:00','2024-08-31 20:47:14.612 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8ceaaead7217431eb4b6e710e51c084b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (fe7f3968-dcff-42d0-9e04-9ecb1e16b6c0): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '7dd8cae2-8102-44ca-b042-6a1d51b97504' AND "UserTrainer"."name" = 'Execution of the JalShala' AND "UserTrainer"."issueDate" = '2023-04-30 11:00:00.000 +00:00' LIMIT 1;
Executing (e44badb0-3df0-4664-a9b1-26497920b718): COMMIT;
Executing (db3f1141-97d8-4b12-a06a-1e8c8957c16e): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '2e400362-1635-47e4-99c8-72b00dd38b19' AND "UserTrainer"."name" = '3 Fold Program' AND "UserTrainer"."issueDate" = '2020-10-01 02:52:00.000 +00:00' LIMIT 1;
trainertopicname Introduction to Fluorosis
Executing (c81f16fd-2a95-4aae-b838-7850ba52d31b): START TRANSACTION;
Executing (db3f1141-97d8-4b12-a06a-1e8c8957c16e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2100ae5adeb0420d888f3035dcbded56$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'3 Fold Program','2020-10-01 02:52:00.000 +00:00','2e400362-1635-47e4-99c8-72b00dd38b19','2024-08-31 20:47:14.615 +00:00','2024-08-31 20:47:14.615 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2100ae5adeb0420d888f3035dcbded56$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (fe7f3968-dcff-42d0-9e04-9ecb1e16b6c0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_26ba7331133e46f58c791ba2731db04e$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Execution of the JalShala','2023-04-30 11:00:00.000 +00:00','7dd8cae2-8102-44ca-b042-6a1d51b97504','2024-08-31 20:47:14.616 +00:00','2024-08-31 20:47:14.616 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_26ba7331133e46f58c791ba2731db04e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Manisha Shah
Executing (a3b8f3d9-ee1d-402b-ac4f-85b201d9bc8e): START TRANSACTION;
Executing (76f75531-b7b2-4d56-af04-3c9250380209): COMMIT;
Executing (db3f1141-97d8-4b12-a06a-1e8c8957c16e): COMMIT;
Executing (fe7f3968-dcff-42d0-9e04-9ecb1e16b6c0): COMMIT;
Executing (a3b8f3d9-ee1d-402b-ac4f-85b201d9bc8e): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '867b20fb-b6bd-418d-91c6-aa5ef686e629' AND "UserTrainer"."name" = 'PDA Demo' AND "UserTrainer"."issueDate" = '2021-06-15 05:15:00.000 +00:00' LIMIT 1;
Executing (c81f16fd-2a95-4aae-b838-7850ba52d31b): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '4e526a75-c8d4-436b-8245-b7f7dd485186' AND "UserTrainer"."name" = 'TOT of Bhujal Janakar' AND "UserTrainer"."issueDate" = '2021-02-05 07:30:00.000 +00:00' LIMIT 1;
trainertopicname Getting Started with PDA
Executing (bbeec6c1-2db3-4e58-a70e-1d2c31f6d618): START TRANSACTION;
trainertopicname Planning the Jalshala
Executing (b4792a2e-aed0-434f-ad3f-4c13ade29240): START TRANSACTION;
trainertopicname Test for Content
Executing (d9f98187-cd86-4b3b-bc29-53c5612ff2dc): START TRANSACTION;
Executing (bbeec6c1-2db3-4e58-a70e-1d2c31f6d618): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '5a9679fe-6c56-4e22-aa0a-14adb9703410' AND "UserTrainer"."name" = 'JD test - Assam' AND "UserTrainer"."issueDate" = '2022-12-12 18:30:00.000 +00:00' LIMIT 1;
Executing (b4792a2e-aed0-434f-ad3f-4c13ade29240): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '67f6ffd9-0d75-4c92-8909-7c0f78daf8b7' AND "UserTrainer"."name" = 'Introduction to Fluorosis' AND "UserTrainer"."issueDate" = '2020-01-07 07:43:00.000 +00:00' LIMIT 1;
Executing (a3b8f3d9-ee1d-402b-ac4f-85b201d9bc8e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3d9eae04947847f689098b74ecce561f$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo','2021-06-15 05:15:00.000 +00:00','867b20fb-b6bd-418d-91c6-aa5ef686e629','2024-08-31 20:47:14.624 +00:00','2024-08-31 20:47:14.624 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3d9eae04947847f689098b74ecce561f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c81f16fd-2a95-4aae-b838-7850ba52d31b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e23044d8fb7b4a649968536fc566b1a8$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'TOT of Bhujal Janakar','2021-02-05 07:30:00.000 +00:00','4e526a75-c8d4-436b-8245-b7f7dd485186','2024-08-31 20:47:14.625 +00:00','2024-08-31 20:47:14.625 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e23044d8fb7b4a649968536fc566b1a8$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bbeec6c1-2db3-4e58-a70e-1d2c31f6d618): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b9295e7071844549be2117f9d3e96af0$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'JD test - Assam','2022-12-12 18:30:00.000 +00:00','5a9679fe-6c56-4e22-aa0a-14adb9703410','2024-08-31 20:47:14.627 +00:00','2024-08-31 20:47:14.627 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b9295e7071844549be2117f9d3e96af0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b4792a2e-aed0-434f-ad3f-4c13ade29240): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_db5b248520e24ec6ba1c45aaba197962$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Introduction to Fluorosis','2020-01-07 07:43:00.000 +00:00','67f6ffd9-0d75-4c92-8909-7c0f78daf8b7','2024-08-31 20:47:14.628 +00:00','2024-08-31 20:47:14.628 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_db5b248520e24ec6ba1c45aaba197962$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a3b8f3d9-ee1d-402b-ac4f-85b201d9bc8e): COMMIT;
Executing (d9f98187-cd86-4b3b-bc29-53c5612ff2dc): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '2e400362-1635-47e4-99c8-72b00dd38b19' AND "UserTrainer"."name" = 'Getting Started with PDA' AND "UserTrainer"."issueDate" = '2020-11-26 06:48:00.000 +00:00' LIMIT 1;
Executing (bbeec6c1-2db3-4e58-a70e-1d2c31f6d618): COMMIT;
Executing (b4792a2e-aed0-434f-ad3f-4c13ade29240): COMMIT;
trainertopicname Testing Again
Executing (473b3d1d-9bf5-47bf-bf07-d858414becde): START TRANSACTION;
Executing (c81f16fd-2a95-4aae-b838-7850ba52d31b): COMMIT;
Processed user: Kiran Kumar Sen
Executing (cca10a14-3dd8-4f8b-b5c8-bcc8d2b503f0): START TRANSACTION;
trainertopicname Test topic
Executing (ef1415e6-e32f-4e9a-a18f-7efe2f900271): START TRANSACTION;
Executing (473b3d1d-9bf5-47bf-bf07-d858414becde): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '7dd8cae2-8102-44ca-b042-6a1d51b97504' AND "UserTrainer"."name" = 'Planning the Jalshala' AND "UserTrainer"."issueDate" = '2023-05-05 04:20:18.000 +00:00' LIMIT 1;
Executing (d9f98187-cd86-4b3b-bc29-53c5612ff2dc): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8fb79335a16242a49e2e5238d277b887$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Getting Started with PDA','2020-11-26 06:48:00.000 +00:00','2e400362-1635-47e4-99c8-72b00dd38b19','2024-08-31 20:47:14.634 +00:00','2024-08-31 20:47:14.634 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8fb79335a16242a49e2e5238d277b887$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cca10a14-3dd8-4f8b-b5c8-bcc8d2b503f0): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '9bb07b4d-1f9a-46ff-abff-29ec483b7763' AND "UserTrainer"."name" = 'Test for Content' AND "UserTrainer"."issueDate" = '2022-02-24 11:30:00.000 +00:00' LIMIT 1;
Executing (ef1415e6-e32f-4e9a-a18f-7efe2f900271): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '867b20fb-b6bd-418d-91c6-aa5ef686e629' AND "UserTrainer"."name" = 'Testing Again' AND "UserTrainer"."issueDate" = '2019-12-13 13:23:00.000 +00:00' LIMIT 1;
Executing (473b3d1d-9bf5-47bf-bf07-d858414becde): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_045fd8d38f9f45c5999941c9ef94cb6e$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Planning the Jalshala','2023-05-05 04:20:18.000 +00:00','7dd8cae2-8102-44ca-b042-6a1d51b97504','2024-08-31 20:47:14.636 +00:00','2024-08-31 20:47:14.636 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_045fd8d38f9f45c5999941c9ef94cb6e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Data collection and Analysis
Executing (7bf45727-f095-4722-ac69-c281e644aec0): START TRANSACTION;
Executing (cca10a14-3dd8-4f8b-b5c8-bcc8d2b503f0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_16c9a32b05a945eab717c32190ed4788$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Test for Content','2022-02-24 11:30:00.000 +00:00','9bb07b4d-1f9a-46ff-abff-29ec483b7763','2024-08-31 20:47:14.638 +00:00','2024-08-31 20:47:14.638 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_16c9a32b05a945eab717c32190ed4788$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ef1415e6-e32f-4e9a-a18f-7efe2f900271): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_440c32ec15674505b6c98a15e6b81a12$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Testing Again','2019-12-13 13:23:00.000 +00:00','867b20fb-b6bd-418d-91c6-aa5ef686e629','2024-08-31 20:47:14.639 +00:00','2024-08-31 20:47:14.639 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_440c32ec15674505b6c98a15e6b81a12$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d9f98187-cd86-4b3b-bc29-53c5612ff2dc): COMMIT;
Executing (7bf45727-f095-4722-ac69-c281e644aec0): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '67f6ffd9-0d75-4c92-8909-7c0f78daf8b7' AND "UserTrainer"."name" = 'Test topic' AND "UserTrainer"."issueDate" = '2019-11-30 11:27:00.000 +00:00' LIMIT 1;
Executing (473b3d1d-9bf5-47bf-bf07-d858414becde): COMMIT;
Executing (cca10a14-3dd8-4f8b-b5c8-bcc8d2b503f0): COMMIT;
trainertopicname PDA Demo
Executing (d73f276a-b035-48b7-ba58-28ae7d7ccde5): START TRANSACTION;
Executing (ef1415e6-e32f-4e9a-a18f-7efe2f900271): COMMIT;
trainertopicname test
Executing (696477a2-0090-49fb-9b16-9ec8d8c4b66b): START TRANSACTION;
Executing (d73f276a-b035-48b7-ba58-28ae7d7ccde5): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '4e526a75-c8d4-436b-8245-b7f7dd485186' AND "UserTrainer"."name" = 'Data collection and Analysis' AND "UserTrainer"."issueDate" = '2021-01-06 12:30:00.000 +00:00' LIMIT 1;
Executing (7bf45727-f095-4722-ac69-c281e644aec0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_229ea47982504f9b8a50fb22608df226$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Test topic','2019-11-30 11:27:00.000 +00:00','67f6ffd9-0d75-4c92-8909-7c0f78daf8b7','2024-08-31 20:47:14.643 +00:00','2024-08-31 20:47:14.643 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_229ea47982504f9b8a50fb22608df226$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Sumanjita Barman
Executing (9dc245f6-56df-4056-84a2-35cbb3825d7c): START TRANSACTION;
Executing (696477a2-0090-49fb-9b16-9ec8d8c4b66b): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '2e400362-1635-47e4-99c8-72b00dd38b19' AND "UserTrainer"."name" = 'PDA Demo' AND "UserTrainer"."issueDate" = '2020-11-20 05:30:00.000 +00:00' LIMIT 1;
Executing (d73f276a-b035-48b7-ba58-28ae7d7ccde5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d29cc0475acf4ae3a15f0c24414a3bd5$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Data collection and Analysis','2021-01-06 12:30:00.000 +00:00','4e526a75-c8d4-436b-8245-b7f7dd485186','2024-08-31 20:47:14.645 +00:00','2024-08-31 20:47:14.645 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d29cc0475acf4ae3a15f0c24414a3bd5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
trainertopicname Compressed Testing Again
Executing (e30ae575-2995-4e4f-88b8-cf8691b03877): START TRANSACTION;
Executing (696477a2-0090-49fb-9b16-9ec8d8c4b66b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0a969bfc8e3c474cb1fc9810dcb4f19a$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'PDA Demo','2020-11-20 05:30:00.000 +00:00','2e400362-1635-47e4-99c8-72b00dd38b19','2024-08-31 20:47:14.647 +00:00','2024-08-31 20:47:14.647 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0a969bfc8e3c474cb1fc9810dcb4f19a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9dc245f6-56df-4056-84a2-35cbb3825d7c): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '9bb07b4d-1f9a-46ff-abff-29ec483b7763' AND "UserTrainer"."name" = 'test' AND "UserTrainer"."issueDate" = '2022-02-25 04:45:00.000 +00:00' LIMIT 1;
Executing (7bf45727-f095-4722-ac69-c281e644aec0): COMMIT;
Executing (e30ae575-2995-4e4f-88b8-cf8691b03877): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '867b20fb-b6bd-418d-91c6-aa5ef686e629' AND "UserTrainer"."name" = 'Compressed Testing Again' AND "UserTrainer"."issueDate" = '2019-12-13 16:09:00.000 +00:00' LIMIT 1;
Executing (d73f276a-b035-48b7-ba58-28ae7d7ccde5): COMMIT;
Executing (e30ae575-2995-4e4f-88b8-cf8691b03877): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_53df646597a34a8aa855c1175279e234$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Compressed Testing Again','2019-12-13 16:09:00.000 +00:00','867b20fb-b6bd-418d-91c6-aa5ef686e629','2024-08-31 20:47:14.650 +00:00','2024-08-31 20:47:14.650 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_53df646597a34a8aa855c1175279e234$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9dc245f6-56df-4056-84a2-35cbb3825d7c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9394a84d36c0409a91547d84aa3a35ec$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'test','2022-02-25 04:45:00.000 +00:00','9bb07b4d-1f9a-46ff-abff-29ec483b7763','2024-08-31 20:47:14.650 +00:00','2024-08-31 20:47:14.650 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9394a84d36c0409a91547d84aa3a35ec$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (696477a2-0090-49fb-9b16-9ec8d8c4b66b): COMMIT;
trainertopicname Arghyam's Journey and the need for Re-imagining CB
Executing (041a37a6-b562-4e33-a4bd-58a4d0824de6): START TRANSACTION;
Executing (e30ae575-2995-4e4f-88b8-cf8691b03877): COMMIT;
trainertopicname Orientation on Abhy and PGWM - II
Executing (a7baa135-9fcd-4e00-94a3-6e106fcd53d2): START TRANSACTION;
Processed user: Abdul Latheef 
Executing (041a37a6-b562-4e33-a4bd-58a4d0824de6): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '67f6ffd9-0d75-4c92-8909-7c0f78daf8b7' AND "UserTrainer"."name" = 'Arghyam''s Journey and the need for Re-imagining CB' AND "UserTrainer"."issueDate" = '2020-03-02 06:30:00.000 +00:00' LIMIT 1;
Executing (9dc245f6-56df-4056-84a2-35cbb3825d7c): COMMIT;
Executing (041a37a6-b562-4e33-a4bd-58a4d0824de6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8678726338524a11877c24d5822e8010$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Arghyam''s Journey and the need for Re-imagining CB','2020-03-02 06:30:00.000 +00:00','67f6ffd9-0d75-4c92-8909-7c0f78daf8b7','2024-08-31 20:47:14.654 +00:00','2024-08-31 20:47:14.654 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8678726338524a11877c24d5822e8010$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed user: Sreechand Tavva
Executing (a7baa135-9fcd-4e00-94a3-6e106fcd53d2): SELECT "id", "name", "issueDate", "userId", "createdAt", "updatedAt" FROM "UserTrainers" AS "UserTrainer" WHERE "UserTrainer"."userId" = '4e526a75-c8d4-436b-8245-b7f7dd485186' AND "UserTrainer"."name" = 'Orientation on Abhy and PGWM - II' AND "UserTrainer"."issueDate" = '2021-08-14 12:30:00.000 +00:00' LIMIT 1;
Processed user: Sheetal Joshi
Executing (a7baa135-9fcd-4e00-94a3-6e106fcd53d2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserTrainers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_40997fa6e775409e9daef22e734bd6d4$ BEGIN INSERT INTO "UserTrainers" ("id","name","issueDate","userId","createdAt","updatedAt") VALUES (DEFAULT,'Orientation on Abhy and PGWM - II','2021-08-14 12:30:00.000 +00:00','4e526a75-c8d4-436b-8245-b7f7dd485186','2024-08-31 20:47:14.657 +00:00','2024-08-31 20:47:14.657 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_40997fa6e775409e9daef22e734bd6d4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."issueDate", (testfunc.response)."userId", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (041a37a6-b562-4e33-a4bd-58a4d0824de6): COMMIT;
Executing (a7baa135-9fcd-4e00-94a3-6e106fcd53d2): COMMIT;
Processed user: Manu
Processed user: Karathiya Girishkumar Rameshbhai
