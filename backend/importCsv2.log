Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Users'
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'UserTrainers'
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'UserTrainers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'UserTopics'
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'UserTopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Topics'
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'TopicFiles'
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'TopicFiles' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (9ee158f3-ccbb-430f-abf4-bf3487199e10): START TRANSACTION;
Executing (9ee158f3-ccbb-430f-abf4-bf3487199e10): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1778';
CSV file successfully processed
Executing (9ee158f3-ccbb-430f-abf4-bf3487199e10): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a55c25ca975c418faf11f804757ec551$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1778','Sign in through codes','This training includes a demonstration on how to record participation through 6 digit codes.','2024-08-31 20:47:50.036 +00:00','2024-08-31 20:47:50.036 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a55c25ca975c418faf11f804757ec551$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bf32c6ae-0269-4940-ad56-218e3866cdd6): START TRANSACTION;
Executing (9ee158f3-ccbb-430f-abf4-bf3487199e10): COMMIT;
Executing (bf32c6ae-0269-4940-ad56-218e3866cdd6): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '420';
Executing (e2e9de14-269a-412c-baf7-08d6c6773980): START TRANSACTION;
Executing (9578a130-857b-43d5-9a8d-26b0c8226a23): START TRANSACTION;
Executing (9bcb90a3-ee7b-4f7e-846e-dd0828914085): START TRANSACTION;
Executing (bf32c6ae-0269-4940-ad56-218e3866cdd6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_22fe543fa5364288aa81f1fa80cfb769$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('420','Panchayat and Governance of Commons','Understanding the Role of Panchayats in Natural resource management','2024-08-31 20:47:50.058 +00:00','2024-08-31 20:47:50.058 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_22fe543fa5364288aa81f1fa80cfb769$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e2e9de14-269a-412c-baf7-08d6c6773980): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '3639';
Executing (9578a130-857b-43d5-9a8d-26b0c8226a23): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2103';
Executing (1d56a032-a34c-43d5-885d-db9cf3e269fa): START TRANSACTION;
Executing (bf32c6ae-0269-4940-ad56-218e3866cdd6): COMMIT;
Executing (e2e9de14-269a-412c-baf7-08d6c6773980): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_af842aea8ddf46ef9d901c93e45bfeb5$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('3639','Introduction to Simplified Functional Grid Format','Week 1 is about identifying areas for blended learning experiences within your programs through simplified frameworks.','2024-08-31 20:47:50.074 +00:00','2024-08-31 20:47:50.074 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_af842aea8ddf46ef9d901c93e45bfeb5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9578a130-857b-43d5-9a8d-26b0c8226a23): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f2d0e34feca14efb8bbf5cd8fac931d2$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2103','Water User Association Training','Jalsamrudhhi Program','2024-08-31 20:47:50.078 +00:00','2024-08-31 20:47:50.078 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f2d0e34feca14efb8bbf5cd8fac931d2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1d56a032-a34c-43d5-885d-db9cf3e269fa): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '180';
Executing (9bcb90a3-ee7b-4f7e-846e-dd0828914085): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2282';
Executing (50dd5f93-e749-4453-9bcd-12b516b4db72): START TRANSACTION;
Executing (e2e9de14-269a-412c-baf7-08d6c6773980): COMMIT;
Executing (1d56a032-a34c-43d5-885d-db9cf3e269fa): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_21a8ef90deda4fc3ba02c5fc08385519$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('180','Fluoride in Groundwater in south India','Introduction to Fluorosis and ground water issues related to it.','2024-08-31 20:47:50.091 +00:00','2024-08-31 20:47:50.091 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_21a8ef90deda4fc3ba02c5fc08385519$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (50dd5f93-e749-4453-9bcd-12b516b4db72): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2014';
Executing (c194ff7d-fa3d-4610-ac5a-a25ac7c6d5d4): START TRANSACTION;
Executing (9578a130-857b-43d5-9a8d-26b0c8226a23): COMMIT;
Executing (9bcb90a3-ee7b-4f7e-846e-dd0828914085): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b3982d7acfb54f819978c987659e4473$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2282','PDA Rollout Demo','PDA App.Training to newly joined colleague','2024-08-31 20:47:50.101 +00:00','2024-08-31 20:47:50.101 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b3982d7acfb54f819978c987659e4473$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (50dd5f93-e749-4453-9bcd-12b516b4db72): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_439e405220fc4394afaaf5fbc615d07a$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2014','PDA Hands-on','This session includes practicing the PDA Participants app','2024-08-31 20:47:50.104 +00:00','2024-08-31 20:47:50.104 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_439e405220fc4394afaaf5fbc615d07a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c194ff7d-fa3d-4610-ac5a-a25ac7c6d5d4): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '188';
Executing (7b1cb0c5-933e-45ed-ba88-2cfe6eb53959): START TRANSACTION;
Executing (1d56a032-a34c-43d5-885d-db9cf3e269fa): COMMIT;
Executing (50dd5f93-e749-4453-9bcd-12b516b4db72): COMMIT;
Executing (c194ff7d-fa3d-4610-ac5a-a25ac7c6d5d4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_be26592851a24df2bea2b11e0cab57a4$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('188','Testing for Shill','Ong','2024-08-31 20:47:50.115 +00:00','2024-08-31 20:47:50.115 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_be26592851a24df2bea2b11e0cab57a4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7b1cb0c5-933e-45ed-ba88-2cfe6eb53959): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2311';
Executing (9bcb90a3-ee7b-4f7e-846e-dd0828914085): COMMIT;
Executing (ad352d63-fe97-4981-b496-1afa21d6788a): START TRANSACTION;
Executing (c194ff7d-fa3d-4610-ac5a-a25ac7c6d5d4): COMMIT;
Executing (7b1cb0c5-933e-45ed-ba88-2cfe6eb53959): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c73eac906b134c959acd9b9ec8e286a5$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2311','Test for file size','This topic is created to test the uploading limit on PDA','2024-08-31 20:47:50.127 +00:00','2024-08-31 20:47:50.127 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c73eac906b134c959acd9b9ec8e286a5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3c4e808f-a812-496c-a814-0f5d6a26f924): START TRANSACTION;
Executing (ad352d63-fe97-4981-b496-1afa21d6788a): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1134';
Executing (fd38b8ec-e2e9-436e-8de5-e67c88f9d91d): START TRANSACTION;
Executing (7b1cb0c5-933e-45ed-ba88-2cfe6eb53959): COMMIT;
Executing (3c4e808f-a812-496c-a814-0f5d6a26f924): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263545679';
Executing (8f3d6061-970c-41f3-a3cc-16a84a60cb52): START TRANSACTION;
Executing (ad352d63-fe97-4981-b496-1afa21d6788a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_24acbab987c04756b3424aa91bee1c91$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1134','3 Folds Concepts','3 Folds Concepts, Vritti','2024-08-31 20:47:50.141 +00:00','2024-08-31 20:47:50.141 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_24acbab987c04756b3424aa91bee1c91$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (fd38b8ec-e2e9-436e-8de5-e67c88f9d91d): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1144';
Executing (d73d13e3-6b64-4a8e-b583-fcfd746498d2): START TRANSACTION;
Executing (3c4e808f-a812-496c-a814-0f5d6a26f924): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3a337fba146d4013ad601fd0e1775812$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263545679','JD - Facilitate two practical JalShalas for training of Block trainers - 1','Find the details & resource of the topic attached. ','2024-08-31 20:47:50.146 +00:00','2024-08-31 20:47:50.146 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3a337fba146d4013ad601fd0e1775812$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8f3d6061-970c-41f3-a3cc-16a84a60cb52): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1782';
Executing (ad352d63-fe97-4981-b496-1afa21d6788a): COMMIT;
Executing (fd38b8ec-e2e9-436e-8de5-e67c88f9d91d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9caf390b7390429084b901f503ad9905$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1144','PDA Demo for  Prasari and BRLF','It contain basics of PDA and all aspects of it.','2024-08-31 20:47:50.150 +00:00','2024-08-31 20:47:50.150 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9caf390b7390429084b901f503ad9905$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d73d13e3-6b64-4a8e-b583-fcfd746498d2): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '166';
Executing (3c4e808f-a812-496c-a814-0f5d6a26f924): COMMIT;
Executing (aa354e8a-e342-4fb8-a6e4-48935b690ec4): START TRANSACTION;
Executing (fd38b8ec-e2e9-436e-8de5-e67c88f9d91d): COMMIT;
Executing (d73d13e3-6b64-4a8e-b583-fcfd746498d2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2ad26bcae2294a48861fab646d089a77$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('166','GM | PDA + iECHO Spark','Testing logistics of attesting a GM session','2024-08-31 20:47:50.158 +00:00','2024-08-31 20:47:50.158 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2ad26bcae2294a48861fab646d089a77$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8f3d6061-970c-41f3-a3cc-16a84a60cb52): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5da33d9eda5a4db2a1c93040f6257bd9$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1782','PDA Demo','Demonstration on PDA','2024-08-31 20:47:50.159 +00:00','2024-08-31 20:47:50.159 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5da33d9eda5a4db2a1c93040f6257bd9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (aa354e8a-e342-4fb8-a6e4-48935b690ec4): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '423';
Executing (91dae796-8217-4cb5-b8d9-97530fce02b6): START TRANSACTION;
Executing (0c95f5a8-1f84-4405-88d5-91bf9d6b8afa): START TRANSACTION;
Executing (aa354e8a-e342-4fb8-a6e4-48935b690ec4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_145639286e4e4aa29b5added04b137c3$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('423','Methodologies and Pedagogy in Community Mobilization, Suresh_FES','Definition, rationale, methods and steps involved in community mobilization','2024-08-31 20:47:50.167 +00:00','2024-08-31 20:47:50.167 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_145639286e4e4aa29b5added04b137c3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (91dae796-8217-4cb5-b8d9-97530fce02b6): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263545682';
Executing (0c95f5a8-1f84-4405-88d5-91bf9d6b8afa): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2274';
Executing (d73d13e3-6b64-4a8e-b583-fcfd746498d2): COMMIT;
Executing (8f3d6061-970c-41f3-a3cc-16a84a60cb52): COMMIT;
Executing (aa354e8a-e342-4fb8-a6e4-48935b690ec4): COMMIT;
Executing (91dae796-8217-4cb5-b8d9-97530fce02b6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_74f6c3941b824f8ca8b17b1b735fabbd$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263545682','JD - Making the Block Level Plan','Find the details & resource of the topic attached. ','2024-08-31 20:47:50.174 +00:00','2024-08-31 20:47:50.174 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_74f6c3941b824f8ca8b17b1b735fabbd$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0c95f5a8-1f84-4405-88d5-91bf9d6b8afa): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a6cfe7fb042342f6b6e53b9967c581d0$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2274','Data collection techniques for VCFs','The session includes techniques of data collection for VCF','2024-08-31 20:47:50.176 +00:00','2024-08-31 20:47:50.176 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a6cfe7fb042342f6b6e53b9967c581d0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed topic: GM | PDA + iECHO Spark
Executing (dac8196c-8f05-4033-abaa-860f2205ad98): START TRANSACTION;
Executing (1066105c-fa77-4abb-9c30-57951b0a00e8): START TRANSACTION;
Executing (91dae796-8217-4cb5-b8d9-97530fce02b6): COMMIT;
Executing (0c95f5a8-1f84-4405-88d5-91bf9d6b8afa): COMMIT;
Executing (dac8196c-8f05-4033-abaa-860f2205ad98): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1581';
Executing (cb3a9db4-7254-482a-9582-10d5f9946940): START TRANSACTION;
Executing (1066105c-fa77-4abb-9c30-57951b0a00e8): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2626';
Executing (c5ebe953-e5e4-4fea-b5e9-aa7399bda63e): START TRANSACTION;
Executing (982cff8f-9a52-42b7-ac8d-bdfb9379bbed): START TRANSACTION;
Executing (dac8196c-8f05-4033-abaa-860f2205ad98): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bd9b0568f6c6435bad25f790e8b76a72$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1581','Water Literacy Campaign','Training on the Importance of Water Conservation','2024-08-31 20:47:50.190 +00:00','2024-08-31 20:47:50.190 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bd9b0568f6c6435bad25f790e8b76a72$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cb3a9db4-7254-482a-9582-10d5f9946940): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1554';
Executing (1066105c-fa77-4abb-9c30-57951b0a00e8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_24a683b3aa8d4b76a28db017995c3a69$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2626','PDA Demo Test fr content','content file test','2024-08-31 20:47:50.193 +00:00','2024-08-31 20:47:50.193 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_24a683b3aa8d4b76a28db017995c3a69$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c5ebe953-e5e4-4fea-b5e9-aa7399bda63e): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '122';
Executing (982cff8f-9a52-42b7-ac8d-bdfb9379bbed): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1180';
Executing (1066105c-fa77-4abb-9c30-57951b0a00e8): COMMIT;
Executing (c5ebe953-e5e4-4fea-b5e9-aa7399bda63e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_88b76756bb764c2bb8c6e3a45b9deaf6$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('122','Test Topic','This is a test','2024-08-31 20:47:50.197 +00:00','2024-08-31 20:47:50.197 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_88b76756bb764c2bb8c6e3a45b9deaf6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cb3a9db4-7254-482a-9582-10d5f9946940): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a5e8b7f921124449a5a635d7f07dc9a0$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1554','test','test','2024-08-31 20:47:50.198 +00:00','2024-08-31 20:47:50.198 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a5e8b7f921124449a5a635d7f07dc9a0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (dac8196c-8f05-4033-abaa-860f2205ad98): COMMIT;
Executing (49d757fc-fffa-47c0-a957-0349828fcba2): START TRANSACTION;
Executing (c5ebe953-e5e4-4fea-b5e9-aa7399bda63e): COMMIT;
Executing (982cff8f-9a52-42b7-ac8d-bdfb9379bbed): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9b2aa914e2e7476fbe51bf09a023145c$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1180','Guided Mentoring Format','Deep dive into the idea of Guided Mentoring, how to design one, its benefits, must haves and some formats required.','2024-08-31 20:47:50.203 +00:00','2024-08-31 20:47:50.203 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9b2aa914e2e7476fbe51bf09a023145c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (49d757fc-fffa-47c0-a957-0349828fcba2): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1161';
Processed topic: Test Topic
Executing (bf688109-6c15-46f5-9a3c-2126678c65b1): START TRANSACTION;
Executing (cb3a9db4-7254-482a-9582-10d5f9946940): COMMIT;
Executing (6e7206e7-2a65-4a61-94d0-4300d6f3ab64): START TRANSACTION;
Executing (49d757fc-fffa-47c0-a957-0349828fcba2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_32440c16bd464d2885df86b1932a7702$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1161','PDA - Self explanatory Video','This video explains the installation, features, and uses of PDA applications','2024-08-31 20:47:50.209 +00:00','2024-08-31 20:47:50.209 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_32440c16bd464d2885df86b1932a7702$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bf688109-6c15-46f5-9a3c-2126678c65b1): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '846';
Processed topic: test
Executing (16b0d4b5-d3ba-4f28-8a92-0b1a5ae1714e): START TRANSACTION;
Executing (6e7206e7-2a65-4a61-94d0-4300d6f3ab64): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1547';
Executing (982cff8f-9a52-42b7-ac8d-bdfb9379bbed): COMMIT;
Executing (49d757fc-fffa-47c0-a957-0349828fcba2): COMMIT;
Executing (bf688109-6c15-46f5-9a3c-2126678c65b1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c7714906749b4948816c97f1ae85364e$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('846','CBP Orientation','CBP orientation & PDA demo to adopters','2024-08-31 20:47:50.216 +00:00','2024-08-31 20:47:50.216 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c7714906749b4948816c97f1ae85364e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (16b0d4b5-d3ba-4f28-8a92-0b1a5ae1714e): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2987';
Executing (6e7206e7-2a65-4a61-94d0-4300d6f3ab64): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_099724e4d48d4663a0e1d1f6cd59299d$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1547','PDA Demo','Details and on PDA apps and portal','2024-08-31 20:47:50.220 +00:00','2024-08-31 20:47:50.220 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_099724e4d48d4663a0e1d1f6cd59299d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e093a9aa-43c0-45f5-ac70-b131a703de7c): START TRANSACTION;
Executing (bf688109-6c15-46f5-9a3c-2126678c65b1): COMMIT;
Executing (16b0d4b5-d3ba-4f28-8a92-0b1a5ae1714e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_13fecb0e7d2b4505b9df4f039c4fc72e$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2987','Orientation on Abhy and PGWM - II','Village committee Training','2024-08-31 20:47:50.226 +00:00','2024-08-31 20:47:50.226 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_13fecb0e7d2b4505b9df4f039c4fc72e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6327c75f-bf32-46f7-a9c0-270ea4a14bff): START TRANSACTION;
Executing (e093a9aa-43c0-45f5-ac70-b131a703de7c): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2778';
Executing (cbcd9347-f9e0-4422-a689-4c2b443a3258): START TRANSACTION;
Executing (16b0d4b5-d3ba-4f28-8a92-0b1a5ae1714e): COMMIT;
Executing (6327c75f-bf32-46f7-a9c0-270ea4a14bff): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2072';
Executing (6e7206e7-2a65-4a61-94d0-4300d6f3ab64): COMMIT;
Executing (e093a9aa-43c0-45f5-ac70-b131a703de7c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_55cc610f63cc4ddba178cb05aa8921e6$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2778','PDA Demo','Why PDA, How to use PDA.
Delving into Dashboards, Portal and Apps','2024-08-31 20:47:50.234 +00:00','2024-08-31 20:47:50.234 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_55cc610f63cc4ddba178cb05aa8921e6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cbcd9347-f9e0-4422-a689-4c2b443a3258): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '3242';
Executing (0c2374b4-3eed-4269-b9bf-c13aa9b4dc7d): START TRANSACTION;
Executing (6327c75f-bf32-46f7-a9c0-270ea4a14bff): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d8a789be1b31458cb92e3386ba497787$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2072','speed test','test','2024-08-31 20:47:50.239 +00:00','2024-08-31 20:47:50.239 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d8a789be1b31458cb92e3386ba497787$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e093a9aa-43c0-45f5-ac70-b131a703de7c): COMMIT;
Executing (cbcd9347-f9e0-4422-a689-4c2b443a3258): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ab38197a37cd4b858942bdf45d270d39$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('3242','PDA Refresher Training for ACT and DSC','The session will include an overview of PDA, additional features, best practices to adopt for deployment.','2024-08-31 20:47:50.242 +00:00','2024-08-31 20:47:50.242 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ab38197a37cd4b858942bdf45d270d39$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0c2374b4-3eed-4269-b9bf-c13aa9b4dc7d): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1288';
Executing (979f70ae-11fb-4ed1-9d18-8c0ec89d8f33): START TRANSACTION;
Executing (5d1312bf-9792-4913-b83f-187a75f390d6): START TRANSACTION;
Executing (cbcd9347-f9e0-4422-a689-4c2b443a3258): COMMIT;
Executing (0c2374b4-3eed-4269-b9bf-c13aa9b4dc7d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a1ca59a0be614af18e0d590d1acb3768$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1288','PDA Trial','Checking to see if content can be added to a topic even after creating a session','2024-08-31 20:47:50.252 +00:00','2024-08-31 20:47:50.252 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a1ca59a0be614af18e0d590d1acb3768$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (979f70ae-11fb-4ed1-9d18-8c0ec89d8f33): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1573';
Executing (6327c75f-bf32-46f7-a9c0-270ea4a14bff): COMMIT;
Executing (5d1312bf-9792-4913-b83f-187a75f390d6): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263530192';
Executing (014dc6e2-d418-4f31-8226-b126e2028251): START TRANSACTION;
Executing (0c2374b4-3eed-4269-b9bf-c13aa9b4dc7d): COMMIT;
Executing (979f70ae-11fb-4ed1-9d18-8c0ec89d8f33): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1576c31a71c140c4a3f7305cbcf7ebd9$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1573','Water Literacy Campaign','Importance of Soil and Water Conservation Work,','2024-08-31 20:47:50.259 +00:00','2024-08-31 20:47:50.259 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1576c31a71c140c4a3f7305cbcf7ebd9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5d1312bf-9792-4913-b83f-187a75f390d6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_385207c13c2d4a3b9ac48e69ff59a1e3$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263530192','IEC ಸಾಮಗ್ರಿಗಳ ಪ್ರದರ್ಶನ_GKM _BFT / Display of IEC materials_GKM _ BFT','IEC ಸಾಮಗ್ರಿಗಳ ಪ್ರದರ್ಶನ_GKM _BFT / Display of IEC materials_GKM _ BFT','2024-08-31 20:47:50.261 +00:00','2024-08-31 20:47:50.261 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_385207c13c2d4a3b9ac48e69ff59a1e3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (014dc6e2-d418-4f31-8226-b126e2028251): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1551';
Processed topic: PDA Trial
Executing (47c5cfcb-8ddc-4b33-a1a2-23a00c2a62a3): START TRANSACTION;
Executing (21fbead8-c62a-4fda-a03e-beb043188cab): START TRANSACTION;
Executing (5d1312bf-9792-4913-b83f-187a75f390d6): COMMIT;
Executing (014dc6e2-d418-4f31-8226-b126e2028251): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c8e9b52ce82c4d0bb504d9014d412682$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1551','PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra.','The session includes explanation and demonstration of PDA','2024-08-31 20:47:50.271 +00:00','2024-08-31 20:47:50.271 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c8e9b52ce82c4d0bb504d9014d412682$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (47c5cfcb-8ddc-4b33-a1a2-23a00c2a62a3): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1561';
Executing (21fbead8-c62a-4fda-a03e-beb043188cab): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2277';
Executing (979f70ae-11fb-4ed1-9d18-8c0ec89d8f33): COMMIT;
Processed topic: IEC ಸಾಮಗ್ರಿಗಳ ಪ್ರದರ್ಶನ_GKM _BFT / Display of IEC materials_GKM _ BFT
Executing (8089fb43-7bc6-4021-8278-c7b6872f413e): START TRANSACTION;
Executing (014dc6e2-d418-4f31-8226-b126e2028251): COMMIT;
Executing (47c5cfcb-8ddc-4b33-a1a2-23a00c2a62a3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2379c4e1e72c494bad0af4d53ab7ef06$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1561','Practice Wheat Crop Training','Package of practices, practical exercise and field visit','2024-08-31 20:47:50.276 +00:00','2024-08-31 20:47:50.276 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2379c4e1e72c494bad0af4d53ab7ef06$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (21fbead8-c62a-4fda-a03e-beb043188cab): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_023d9c379b094d4282919f9ab375bdb2$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2277','Spring shed Basics','This session will explain the basics of spring shed','2024-08-31 20:47:50.278 +00:00','2024-08-31 20:47:50.278 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_023d9c379b094d4282919f9ab375bdb2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8089fb43-7bc6-4021-8278-c7b6872f413e): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '3990';
Executing (993e30ae-a3c7-44e9-b60f-d3c1512121bb): START TRANSACTION;
Executing (47c5cfcb-8ddc-4b33-a1a2-23a00c2a62a3): COMMIT;
Executing (dfe0b5ee-5fed-410b-953c-cc7e3aaa1c64): START TRANSACTION;
Executing (8089fb43-7bc6-4021-8278-c7b6872f413e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cae2f2c02efb4cb09e9ec089c433c767$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('3990','Taking good photos and making posters','Week 3 is about sharing tips on how to take good photos. We''ll also look at how to make posters on Canva and using templates to plan our content flow.','2024-08-31 20:47:50.285 +00:00','2024-08-31 20:47:50.285 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cae2f2c02efb4cb09e9ec089c433c767$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (993e30ae-a3c7-44e9-b60f-d3c1512121bb): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '132';
Executing (f82182c6-a228-4fa0-b5a2-c23efa4017ca): START TRANSACTION;
Executing (dfe0b5ee-5fed-410b-953c-cc7e3aaa1c64): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '118';
Executing (21fbead8-c62a-4fda-a03e-beb043188cab): COMMIT;
Executing (8089fb43-7bc6-4021-8278-c7b6872f413e): COMMIT;
Executing (993e30ae-a3c7-44e9-b60f-d3c1512121bb): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_85f76d49129748b78a3f65f8c7930ef2$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('132','Talaabs','Aaj bhi kharein hain talaab by Anupam Mishra','2024-08-31 20:47:50.292 +00:00','2024-08-31 20:47:50.292 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_85f76d49129748b78a3f65f8c7930ef2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f82182c6-a228-4fa0-b5a2-c23efa4017ca): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263529156';
Executing (dfe0b5ee-5fed-410b-953c-cc7e3aaa1c64): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_68630e80cd0f4f489d4cf73852b0500b$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('118','ಇದು ಒಂದು ಮಾದರಿ','ಇದು ಒಂದು ಮಾದರಿ','2024-08-31 20:47:50.295 +00:00','2024-08-31 20:47:50.295 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_68630e80cd0f4f489d4cf73852b0500b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a446d4cc-fdf2-4bcb-8c9a-1e9893793804): START TRANSACTION;
Executing (993e30ae-a3c7-44e9-b60f-d3c1512121bb): COMMIT;
Executing (f82182c6-a228-4fa0-b5a2-c23efa4017ca): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_290d1e79e0b14defa04b2c6792d7f6d1$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263529156','ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs','Understand the Jala Sanjeevini program on the planning process/ಯೋಜನೆ ಪ್ರಕ್ರಿಯೆಯಲ್ಲಿ ಜಲ ಸಂಜೀವಿನಿ ಕಾರ್ಯಕ್ರಮವನ್ನು ಅರ್ಥಮಾಡಿಕೊಳ್ಳುವುದು','2024-08-31 20:47:50.299 +00:00','2024-08-31 20:47:50.299 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_290d1e79e0b14defa04b2c6792d7f6d1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f4adf140-01a9-4c85-9afd-7ebd5415b993): START TRANSACTION;
Executing (a446d4cc-fdf2-4bcb-8c9a-1e9893793804): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '227';
Executing (a690ce34-828c-41f6-822e-a481236ff97d): START TRANSACTION;
Executing (f82182c6-a228-4fa0-b5a2-c23efa4017ca): COMMIT;
Executing (f4adf140-01a9-4c85-9afd-7ebd5415b993): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '3724';
Executing (dfe0b5ee-5fed-410b-953c-cc7e3aaa1c64): COMMIT;
Executing (a446d4cc-fdf2-4bcb-8c9a-1e9893793804): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a4a0a02d2d2a46099235e6502ad8aecc$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('227','Field demonstration - FHTC, JJM, water supply schemes, O&M | MTs','Field demonstration covers 
1. FHTC – Actual connection process
2. Water supply scheme operations – checklist (Pump, valve operations etc)
3. Various resolutions and documents related to JJM
4.  Preparation of O&M budget and tariff structuring for O&M ( case study)','2024-08-31 20:47:50.309 +00:00','2024-08-31 20:47:50.309 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a4a0a02d2d2a46099235e6502ad8aecc$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a690ce34-828c-41f6-822e-a481236ff97d): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1182';
Processed topic: ವಿವಿಧ ಗುಂಪುಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_BFTs_GKMs/ Orientation on Jala Sanjeevini for different groups_BFTs_GKMs
Executing (f67fc5c9-5af6-4f9e-ab53-4ee41fac46cc): START TRANSACTION;
Executing (f4adf140-01a9-4c85-9afd-7ebd5415b993): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f29360898c844bf8821d00926887defc$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('3724','Feedback and next steps','Week 3 is about collectively sharing and receiving feedback for the learning experience framework filled by each organization.','2024-08-31 20:47:50.314 +00:00','2024-08-31 20:47:50.314 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f29360898c844bf8821d00926887defc$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a446d4cc-fdf2-4bcb-8c9a-1e9893793804): COMMIT;
Executing (a690ce34-828c-41f6-822e-a481236ff97d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_91d75c8d44ce41d287a0c7c3dab4c4f1$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1182','Virtual Interactions - Best Practices - Smitha Murthy','Virtual Interactions - Best Practices as recommended by Smitha Murthy','2024-08-31 20:47:50.318 +00:00','2024-08-31 20:47:50.318 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_91d75c8d44ce41d287a0c7c3dab4c4f1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f67fc5c9-5af6-4f9e-ab53-4ee41fac46cc): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '107';
Executing (279665c2-8555-49ab-9942-ae0799c6aaab): START TRANSACTION;
Processed topic: Field demonstration - FHTC, JJM, water supply schemes, O&M | MTs
Executing (d87b9d22-80a8-43b6-a381-1381928c4ca7): START TRANSACTION;
Executing (a690ce34-828c-41f6-822e-a481236ff97d): COMMIT;
Executing (f67fc5c9-5af6-4f9e-ab53-4ee41fac46cc): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_019f5398adc5486780ab08139fd7ac99$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('107','Content sharing on PDA','Why is sharing content on the PDA Important?','2024-08-31 20:47:50.329 +00:00','2024-08-31 20:47:50.329 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_019f5398adc5486780ab08139fd7ac99$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (279665c2-8555-49ab-9942-ae0799c6aaab): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263530130';
Executing (f4adf140-01a9-4c85-9afd-7ebd5415b993): COMMIT;
Executing (d87b9d22-80a8-43b6-a381-1381928c4ca7): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '195';
Executing (287b578b-e4d8-4fda-8f1f-1990f069b886): START TRANSACTION;
Executing (f67fc5c9-5af6-4f9e-ab53-4ee41fac46cc): COMMIT;
Executing (279665c2-8555-49ab-9942-ae0799c6aaab): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4892dbae7ec543b39dc9a5c5de7407c4$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263530130','ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್ _GKM and BFT / Orientation on Jala Sanjeevini _ BFTs and GKMs','BFT ಮತ್ತು GKM ಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_ Orientation on Jala Sanjeevini for BFTs and GKMs','2024-08-31 20:47:50.336 +00:00','2024-08-31 20:47:50.336 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4892dbae7ec543b39dc9a5c5de7407c4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d87b9d22-80a8-43b6-a381-1381928c4ca7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4e11eada82ce46b993d0a80e4a44229d$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('195','11','121','2024-08-31 20:47:50.337 +00:00','2024-08-31 20:47:50.337 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4e11eada82ce46b993d0a80e4a44229d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (287b578b-e4d8-4fda-8f1f-1990f069b886): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263528489';
Executing (265ee23d-2c0d-4865-bdad-c9c664e46b82): START TRANSACTION;
Processed topic: Feedback and next steps
Executing (f58f6924-14b0-4f20-8206-8ccf49288747): START TRANSACTION;
Executing (d87b9d22-80a8-43b6-a381-1381928c4ca7): COMMIT;
Executing (287b578b-e4d8-4fda-8f1f-1990f069b886): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_916458726a8b4d038e529a241ec2501e$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263528489','Jala Sanjeevini - Understand how to use Task feature','This is a demo for all the participants in the program to understand how to use the Task feature on the PDA Participant to complete their Tasks','2024-08-31 20:47:50.342 +00:00','2024-08-31 20:47:50.342 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_916458726a8b4d038e529a241ec2501e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (265ee23d-2c0d-4865-bdad-c9c664e46b82): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '165';
Executing (279665c2-8555-49ab-9942-ae0799c6aaab): COMMIT;
Executing (a9aa0f17-a160-499f-bb8b-0a2ca4b74ab9): START TRANSACTION;
Executing (287b578b-e4d8-4fda-8f1f-1990f069b886): COMMIT;
Executing (265ee23d-2c0d-4865-bdad-c9c664e46b82): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4c582f3b2cf645d1968ee8333274a467$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('165','Compressed Testing Again','video testing','2024-08-31 20:47:50.347 +00:00','2024-08-31 20:47:50.347 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4c582f3b2cf645d1968ee8333274a467$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f58f6924-14b0-4f20-8206-8ccf49288747): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1747';
Executing (a9aa0f17-a160-499f-bb8b-0a2ca4b74ab9): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1527';
Processed topic: Jala Sanjeevini - Understand how to use Task feature
Executing (070132a3-ae74-4a66-a228-f4d28953eb5b): START TRANSACTION;
Processed topic: ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್ _GKM and BFT / Orientation on Jala Sanjeevini _ BFTs and GKMs
Executing (2e4a04d0-e973-4c1d-92b5-994e335afb1c): START TRANSACTION;
Executing (a9aa0f17-a160-499f-bb8b-0a2ca4b74ab9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_89c2c743217844d2851264a6a29e8b88$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1527','PDA New features','The session includes new features of PDA','2024-08-31 20:47:50.352 +00:00','2024-08-31 20:47:50.352 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_89c2c743217844d2851264a6a29e8b88$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (070132a3-ae74-4a66-a228-f4d28953eb5b): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '154';
Executing (f58f6924-14b0-4f20-8206-8ccf49288747): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4efb7cd21c354f84889aa342b36fcc3c$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1747','Water Literacy Campaign- Site Selection of Desilting Work','Yuva Mitra- Water Literacy Campaign','2024-08-31 20:47:50.354 +00:00','2024-08-31 20:47:50.354 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4efb7cd21c354f84889aa342b36fcc3c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (265ee23d-2c0d-4865-bdad-c9c664e46b82): COMMIT;
Executing (a9aa0f17-a160-499f-bb8b-0a2ca4b74ab9): COMMIT;
Executing (070132a3-ae74-4a66-a228-f4d28953eb5b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_afc5d6a132384b1382242d44b502e139$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('154','Test - 11 Dec','Test','2024-08-31 20:47:50.357 +00:00','2024-08-31 20:47:50.357 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_afc5d6a132384b1382242d44b502e139$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2e4a04d0-e973-4c1d-92b5-994e335afb1c): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1522';
Executing (c31be768-30de-46f2-a1bd-143119fd9092): START TRANSACTION;
Executing (279ba5ea-12e8-4baf-9a03-65f755e9060c): START TRANSACTION;
Executing (f58f6924-14b0-4f20-8206-8ccf49288747): COMMIT;
Executing (c31be768-30de-46f2-a1bd-143119fd9092): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2119';
Executing (279ba5ea-12e8-4baf-9a03-65f755e9060c): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1133';
Executing (070132a3-ae74-4a66-a228-f4d28953eb5b): COMMIT;
Executing (2e4a04d0-e973-4c1d-92b5-994e335afb1c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2cb2555b2a6d42369fdd08005edb94a4$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1522','Crop Water Budgeting Overview','Crop water Budgeting Process and Benefits','2024-08-31 20:47:50.366 +00:00','2024-08-31 20:47:50.366 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2cb2555b2a6d42369fdd08005edb94a4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c31be768-30de-46f2-a1bd-143119fd9092): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_612ba9e6b2e3426580044dbc9323e549$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2119','PDA Portal (Test)','The session will include demo on PDA portal','2024-08-31 20:47:50.367 +00:00','2024-08-31 20:47:50.367 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_612ba9e6b2e3426580044dbc9323e549$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (279ba5ea-12e8-4baf-9a03-65f755e9060c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cbda97c0869240cab5c5093a9ca9b794$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1133','3 Fold Program','Orientation on 3 fold program of Vritti','2024-08-31 20:47:50.369 +00:00','2024-08-31 20:47:50.369 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cbda97c0869240cab5c5093a9ca9b794$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (248161eb-38ae-456e-acc2-9fc0af0a77a3): START TRANSACTION;
Executing (9eb578c4-9bd8-4197-aa15-8487ecc745e1): START TRANSACTION;
Executing (c31be768-30de-46f2-a1bd-143119fd9092): COMMIT;
Executing (279ba5ea-12e8-4baf-9a03-65f755e9060c): COMMIT;
Executing (248161eb-38ae-456e-acc2-9fc0af0a77a3): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2262';
Executing (9eb578c4-9bd8-4197-aa15-8487ecc745e1): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1783';
Executing (2e4a04d0-e973-4c1d-92b5-994e335afb1c): COMMIT;
Executing (1d42a5f0-63f0-4213-b0da-0593cc374d1e): START TRANSACTION;
Executing (5ff40ca3-f087-42bf-9c69-f08d82ad002e): START TRANSACTION;
Executing (248161eb-38ae-456e-acc2-9fc0af0a77a3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d29777760cbb492a994cef8c61925361$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2262','PDA Demo Tamil','Includes PDA Demo in Tamil','2024-08-31 20:47:50.380 +00:00','2024-08-31 20:47:50.380 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d29777760cbb492a994cef8c61925361$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9eb578c4-9bd8-4197-aa15-8487ecc745e1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6c55b101adfc4f43b7bf383085e198f1$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1783','PDA Demo','Demo on PDA','2024-08-31 20:47:50.381 +00:00','2024-08-31 20:47:50.381 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6c55b101adfc4f43b7bf383085e198f1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1d42a5f0-63f0-4213-b0da-0593cc374d1e): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2980';
Executing (5ff40ca3-f087-42bf-9c69-f08d82ad002e): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1627';
Executing (248161eb-38ae-456e-acc2-9fc0af0a77a3): COMMIT;
Executing (1055b4b1-bec3-4ad0-9abd-14c56d7016ca): START TRANSACTION;
Executing (1d42a5f0-63f0-4213-b0da-0593cc374d1e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c40419a0a19f43a4b37d8776b6dcaa14$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2980','Orientation on Abhy and PGWM','PGWM Committee Trainng_Kutch','2024-08-31 20:47:50.386 +00:00','2024-08-31 20:47:50.386 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c40419a0a19f43a4b37d8776b6dcaa14$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5ff40ca3-f087-42bf-9c69-f08d82ad002e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b6f2eae7db5d411ca3697232fcb410ad$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1627','Weekly Virtual Sessions','An Introduction to the need for weekly Virtual Sessions','2024-08-31 20:47:50.387 +00:00','2024-08-31 20:47:50.387 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b6f2eae7db5d411ca3697232fcb410ad$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (997f9973-3930-47c7-b48e-34f0e1f32ab5): START TRANSACTION;
Executing (1055b4b1-bec3-4ad0-9abd-14c56d7016ca): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '869';
Executing (9eb578c4-9bd8-4197-aa15-8487ecc745e1): COMMIT;
Executing (1d42a5f0-63f0-4213-b0da-0593cc374d1e): COMMIT;
Executing (5ff40ca3-f087-42bf-9c69-f08d82ad002e): COMMIT;
Executing (997f9973-3930-47c7-b48e-34f0e1f32ab5): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2163';
Executing (1055b4b1-bec3-4ad0-9abd-14c56d7016ca): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bf94f2d9af9c42519df47f6166d5a21d$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('869','Jhora rejuvenation','Admip','2024-08-31 20:47:50.395 +00:00','2024-08-31 20:47:50.395 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bf94f2d9af9c42519df47f6166d5a21d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (05f81337-2b6c-4e33-9c5f-3d795bf973c2): START TRANSACTION;
Executing (640e8931-a049-4c0a-a1ad-e0a8d9fc8891): START TRANSACTION;
Executing (997f9973-3930-47c7-b48e-34f0e1f32ab5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_16969a6955d74bbc87eac5fcd2f162b2$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2163','Improved Hands on Test 2','Improved hands on','2024-08-31 20:47:50.400 +00:00','2024-08-31 20:47:50.400 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_16969a6955d74bbc87eac5fcd2f162b2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f43b9533-3f1f-4163-892e-938db9717bdb): START TRANSACTION;
Executing (05f81337-2b6c-4e33-9c5f-3d795bf973c2): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263541638';
Executing (640e8931-a049-4c0a-a1ad-e0a8d9fc8891): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263541640';
Executing (997f9973-3930-47c7-b48e-34f0e1f32ab5): COMMIT;
Executing (f43b9533-3f1f-4163-892e-938db9717bdb): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2134';
Executing (1055b4b1-bec3-4ad0-9abd-14c56d7016ca): COMMIT;
Executing (05f81337-2b6c-4e33-9c5f-3d795bf973c2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_08eb2f730e414c6dab5129878463b253$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263541638','JD test - Report on Progress post JalShala with field work Data','The topic will help participants to understand the instructions of the program','2024-08-31 20:47:50.409 +00:00','2024-08-31 20:47:50.409 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_08eb2f730e414c6dab5129878463b253$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (640e8931-a049-4c0a-a1ad-e0a8d9fc8891): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5985321eef244d6bb7660897c2dc9fd4$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263541640','JD test -  Training of Block Trainers for JalDoot Program ','The topic will help participants to understand the instructions of the program','2024-08-31 20:47:50.411 +00:00','2024-08-31 20:47:50.411 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5985321eef244d6bb7660897c2dc9fd4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (be31e0b1-f9b8-4a0b-ba28-c4ba434ba8b3): START TRANSACTION;
Executing (f43b9533-3f1f-4163-892e-938db9717bdb): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8d8698f3ae7b420f894f6a6572deb7d8$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2134','Community Participation-Why','Identification of issue, Understanding processes, making informed decisions, cooperative planning','2024-08-31 20:47:50.416 +00:00','2024-08-31 20:47:50.416 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8d8698f3ae7b420f894f6a6572deb7d8$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (05f81337-2b6c-4e33-9c5f-3d795bf973c2): COMMIT;
Executing (640e8931-a049-4c0a-a1ad-e0a8d9fc8891): COMMIT;
Executing (be31e0b1-f9b8-4a0b-ba28-c4ba434ba8b3): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2940';
Processed topic: Jhora rejuvenation
Executing (329dc57b-e332-4ebc-9b7b-9e4b35356d2c): START TRANSACTION;
Executing (c85062ee-6656-476a-9f0c-1724da6252d0): START TRANSACTION;
Executing (bb759fd7-93ad-4ebb-84f5-b168b43e6de4): START TRANSACTION;
Executing (be31e0b1-f9b8-4a0b-ba28-c4ba434ba8b3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_02869649e3b84a3b98abc3f90ef02846$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2940','test','test','2024-08-31 20:47:50.426 +00:00','2024-08-31 20:47:50.426 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_02869649e3b84a3b98abc3f90ef02846$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (329dc57b-e332-4ebc-9b7b-9e4b35356d2c): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1562';
Executing (f43b9533-3f1f-4163-892e-938db9717bdb): COMMIT;
Executing (c85062ee-6656-476a-9f0c-1724da6252d0): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '3846';
Executing (bb759fd7-93ad-4ebb-84f5-b168b43e6de4): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1461';
Executing (be31e0b1-f9b8-4a0b-ba28-c4ba434ba8b3): COMMIT;
Executing (329dc57b-e332-4ebc-9b7b-9e4b35356d2c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3ae878d377c048a99504fa6087835d28$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1562','water management','This session will include information on rain water harvesting','2024-08-31 20:47:50.432 +00:00','2024-08-31 20:47:50.432 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3ae878d377c048a99504fa6087835d28$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c85062ee-6656-476a-9f0c-1724da6252d0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e015d53dfeda49f9bd0025b3bec98c6c$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('3846','Introduction to Learning Objectives','Week 2 is about introducing participants to articulating objectives, outcomes, methodologies, and delivery mechanism per content atom.','2024-08-31 20:47:50.433 +00:00','2024-08-31 20:47:50.433 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e015d53dfeda49f9bd0025b3bec98c6c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bb759fd7-93ad-4ebb-84f5-b168b43e6de4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1ce9d7546c74429694a0dc2b2f7b9b19$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1461','Scripts Review | T1.02 | DG','Reviewing the scripts prepared by participants of last batch by DG team.','2024-08-31 20:47:50.434 +00:00','2024-08-31 20:47:50.434 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1ce9d7546c74429694a0dc2b2f7b9b19$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (132095fc-dfc0-447b-8eee-282722833c0d): START TRANSACTION;
Executing (3f10de9c-039c-4302-a4a0-9d32d8bf5cfe): START TRANSACTION;
Executing (c85062ee-6656-476a-9f0c-1724da6252d0): COMMIT;
Executing (bb759fd7-93ad-4ebb-84f5-b168b43e6de4): COMMIT;
Executing (132095fc-dfc0-447b-8eee-282722833c0d): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1498';
Executing (3f10de9c-039c-4302-a4a0-9d32d8bf5cfe): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '120';
Executing (329dc57b-e332-4ebc-9b7b-9e4b35356d2c): COMMIT;
Executing (e54e1a2d-9994-4ac3-8992-d3ab97d10066): START TRANSACTION;
Executing (65566289-5955-4746-b102-c3bb676923bf): START TRANSACTION;
Executing (132095fc-dfc0-447b-8eee-282722833c0d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4fcea8ffddf042cf8a91829a97dac944$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1498','PDA Demo and Deployment Training for Trainers | ACT','This session includes explanation and demonstration on PDA apps.','2024-08-31 20:47:50.448 +00:00','2024-08-31 20:47:50.448 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4fcea8ffddf042cf8a91829a97dac944$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3f10de9c-039c-4302-a4a0-9d32d8bf5cfe): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_80f26feae9fc4800a4818de7f26447cc$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('120','PDA - Trainer App','User guide for PDA-Trainer App','2024-08-31 20:47:50.450 +00:00','2024-08-31 20:47:50.450 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_80f26feae9fc4800a4818de7f26447cc$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e54e1a2d-9994-4ac3-8992-d3ab97d10066): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '158';
Executing (65566289-5955-4746-b102-c3bb676923bf): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1422';
Executing (132095fc-dfc0-447b-8eee-282722833c0d): COMMIT;
Executing (5701347a-13e8-4429-9e9f-f298319da071): START TRANSACTION;
Executing (e54e1a2d-9994-4ac3-8992-d3ab97d10066): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_74b5b81dc10040889787d90ce04ac47e$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('158','Social Impact','In fff','2024-08-31 20:47:50.457 +00:00','2024-08-31 20:47:50.457 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_74b5b81dc10040889787d90ce04ac47e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (65566289-5955-4746-b102-c3bb676923bf): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_58090aa643d54830a3e9e0dd493972d6$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1422','Content Development_DG','Intensive Training on Content Development by Digital Green','2024-08-31 20:47:50.458 +00:00','2024-08-31 20:47:50.458 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_58090aa643d54830a3e9e0dd493972d6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0037a369-cbe2-400d-85f7-1e3ca1e37e9d): START TRANSACTION;
Executing (5701347a-13e8-4429-9e9f-f298319da071): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2997';
Executing (3f10de9c-039c-4302-a4a0-9d32d8bf5cfe): COMMIT;
Executing (e54e1a2d-9994-4ac3-8992-d3ab97d10066): COMMIT;
Executing (65566289-5955-4746-b102-c3bb676923bf): COMMIT;
Executing (0037a369-cbe2-400d-85f7-1e3ca1e37e9d): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2099';
Executing (5701347a-13e8-4429-9e9f-f298319da071): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c044184f3fec41778d1b345f744d37c0$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2997','Orientation on Abhy and PGWM - III','Training of Atal Bhujal committee Member','2024-08-31 20:47:50.466 +00:00','2024-08-31 20:47:50.466 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c044184f3fec41778d1b345f744d37c0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e4d7dd7a-55d3-47df-ac37-8db2b6b7d911): START TRANSACTION;
Executing (bd40d8b8-07f9-47bc-bd64-1bfe31671de9): START TRANSACTION;
Executing (0037a369-cbe2-400d-85f7-1e3ca1e37e9d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6bbf603cdcba4908aa874fd854db899e$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2099','PDA Demo','The session will include demonstrations of PDA apps.','2024-08-31 20:47:50.470 +00:00','2024-08-31 20:47:50.470 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6bbf603cdcba4908aa874fd854db899e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5e2ff8e1-995d-420b-908e-d90cd4dd83c1): START TRANSACTION;
Executing (e4d7dd7a-55d3-47df-ac37-8db2b6b7d911): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1589';
Executing (bd40d8b8-07f9-47bc-bd64-1bfe31671de9): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '134';
Executing (0037a369-cbe2-400d-85f7-1e3ca1e37e9d): COMMIT;
Executing (5e2ff8e1-995d-420b-908e-d90cd4dd83c1): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1501700';
Executing (5701347a-13e8-4429-9e9f-f298319da071): COMMIT;
Executing (e4d7dd7a-55d3-47df-ac37-8db2b6b7d911): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b1411d2db5344de78ec97ff5e150a8f2$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1589','PDA Hands on','This session includes practicing the steps involved in rolling out of a program through PDA.','2024-08-31 20:47:50.478 +00:00','2024-08-31 20:47:50.478 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b1411d2db5344de78ec97ff5e150a8f2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bd40d8b8-07f9-47bc-bd64-1bfe31671de9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cc0df21d06a04ef2a381024af2a3bc4e$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('134','Priyadarshini- App Testing','PF','2024-08-31 20:47:50.480 +00:00','2024-08-31 20:47:50.480 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cc0df21d06a04ef2a381024af2a3bc4e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed topic: PDA Demo
Executing (96fc1ded-f1cf-46ca-97c2-afc5614475aa): START TRANSACTION;
Executing (5e2ff8e1-995d-420b-908e-d90cd4dd83c1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_39291d07d4ca45f5b751466537e18183$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1501700','Well Monitoring - Example','This helps CRPs monitor well data','2024-08-31 20:47:50.482 +00:00','2024-08-31 20:47:50.482 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_39291d07d4ca45f5b751466537e18183$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e4d7dd7a-55d3-47df-ac37-8db2b6b7d911): COMMIT;
Executing (bd40d8b8-07f9-47bc-bd64-1bfe31671de9): COMMIT;
Executing (96fc1ded-f1cf-46ca-97c2-afc5614475aa): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '139';
Executing (164d9796-9a36-47e0-9958-ac1d8b4c541c): START TRANSACTION;
Executing (7ebb266d-4db7-4a32-92a8-ffe4b9f9ba41): START TRANSACTION;
Executing (1872398e-060d-41c4-9f49-163b781b1249): START TRANSACTION;
Executing (96fc1ded-f1cf-46ca-97c2-afc5614475aa): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b8740b6384ec47a58f84b48a2fa1bb50$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('139','Water Quality Testing','WQ','2024-08-31 20:47:50.492 +00:00','2024-08-31 20:47:50.492 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b8740b6384ec47a58f84b48a2fa1bb50$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (164d9796-9a36-47e0-9958-ac1d8b4c541c): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '152';
Executing (5e2ff8e1-995d-420b-908e-d90cd4dd83c1): COMMIT;
Executing (7ebb266d-4db7-4a32-92a8-ffe4b9f9ba41): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1560';
Executing (1872398e-060d-41c4-9f49-163b781b1249): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1552';
Executing (96fc1ded-f1cf-46ca-97c2-afc5614475aa): COMMIT;
Executing (164d9796-9a36-47e0-9958-ac1d8b4c541c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f19c3fe62fbf415690644e5f00a1e0db$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('152','Testing new topic for a training mock run.','Meghalaya mock run','2024-08-31 20:47:50.499 +00:00','2024-08-31 20:47:50.499 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f19c3fe62fbf415690644e5f00a1e0db$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7ebb266d-4db7-4a32-92a8-ffe4b9f9ba41): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cea6df8c9e6e438091e13f555bda1ce5$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1560','Wheat Crop Training, 28 Dec, 2020','Package of practices and field visit','2024-08-31 20:47:50.500 +00:00','2024-08-31 20:47:50.500 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cea6df8c9e6e438091e13f555bda1ce5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1872398e-060d-41c4-9f49-163b781b1249): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_266788f4f4bb4c0a90d0db2414da87fd$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1552','PDA Hands on','The session includes hands on practice on PDA apps','2024-08-31 20:47:50.501 +00:00','2024-08-31 20:47:50.501 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_266788f4f4bb4c0a90d0db2414da87fd$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (94b1f33e-ac0e-4211-960b-f84fdcc83d90): START TRANSACTION;
Executing (e802909f-3540-4502-a8b3-250e26c2f851): START TRANSACTION;
Executing (7ebb266d-4db7-4a32-92a8-ffe4b9f9ba41): COMMIT;
Executing (1872398e-060d-41c4-9f49-163b781b1249): COMMIT;
Executing (94b1f33e-ac0e-4211-960b-f84fdcc83d90): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263529244';
Executing (e802909f-3540-4502-a8b3-250e26c2f851): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '130';
Executing (164d9796-9a36-47e0-9958-ac1d8b4c541c): COMMIT;
Executing (adaa1651-a5e3-415a-8982-611ff2c69f7a): START TRANSACTION;
Executing (0377b2a2-d799-4bd0-ba1b-1c7f55be1591): START TRANSACTION;
Executing (94b1f33e-ac0e-4211-960b-f84fdcc83d90): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d3169bfff80745f6b0078d53a3e85c57$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263529244','DPR ತಯಾರಿಕೆಯಲ್ಲಿ ವಿಭಿನ್ನ ವಿಷಯಾಧಾರಿತ ನಕ್ಷೆಗಳ ಬಳಕೆ_TA /Usage of different thematic maps in DPR preparation_TA','The session is to provide the TA with the knowledge of the maps. And also to share the usage and availability of these maps. /ಅಧಿವೇಶನವು TA ಗೆ ನಕ್ಷೆಗಳ ಜ್ಞಾನವನ್ನು ಒದಗಿಸುವುದು. ಮತ್ತು ಈ ನಕ್ಷೆಗಳ ಬಳಕೆ ಮತ್ತು ಲಭ್ಯತೆಯನ್ನು ಹಂಚಿಕೊಳ್ಳಲು','2024-08-31 20:47:50.512 +00:00','2024-08-31 20:47:50.512 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d3169bfff80745f6b0078d53a3e85c57$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e802909f-3540-4502-a8b3-250e26c2f851): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_38b0500c58a940bcbc4bc2ebb0a10156$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('130','Test_ Payment_Ranjith','Test','2024-08-31 20:47:50.513 +00:00','2024-08-31 20:47:50.513 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_38b0500c58a940bcbc4bc2ebb0a10156$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (adaa1651-a5e3-415a-8982-611ff2c69f7a): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263528970';
Executing (0377b2a2-d799-4bd0-ba1b-1c7f55be1591): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '261';
Executing (1b43254c-2d24-437c-8cd2-b174e07e6691): START TRANSACTION;
Executing (adaa1651-a5e3-415a-8982-611ff2c69f7a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_409d1da799bf456c8cb4145a6b4bb10c$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263528970','Orientation on Jala Sanjeevini /ಓರಿಯೆಂಟೇಷನ್ ಓನ್ ಜಲ ಸಂಜೀವಿನೀ/Elected members/ಚುನಾಯಿತ ಸದಸ್ಯರು','ಜಲ ಸಂಜೀವಿನಿ ಮತ್ತು ಅವರ ಪಾತ್ರಗಳು ಮತ್ತು ಜವಾಬ್ದಾರಿಯ ಕುರಿತು ಚುನಾಯಿತ ಸದಸ್ಯರಿಗೆ ದೃಷ್ಟಿಕೋನ','2024-08-31 20:47:50.517 +00:00','2024-08-31 20:47:50.517 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_409d1da799bf456c8cb4145a6b4bb10c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0377b2a2-d799-4bd0-ba1b-1c7f55be1591): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_386e56fbd28a4aa9b50c7e6a73a931ec$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('261','JJM orientation','Brief note on JJM and VAP','2024-08-31 20:47:50.519 +00:00','2024-08-31 20:47:50.519 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_386e56fbd28a4aa9b50c7e6a73a931ec$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1b43254c-2d24-437c-8cd2-b174e07e6691): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263530728';
Executing (94b1f33e-ac0e-4211-960b-f84fdcc83d90): COMMIT;
Executing (e802909f-3540-4502-a8b3-250e26c2f851): COMMIT;
Executing (adaa1651-a5e3-415a-8982-611ff2c69f7a): COMMIT;
Executing (0377b2a2-d799-4bd0-ba1b-1c7f55be1591): COMMIT;
Executing (1b43254c-2d24-437c-8cd2-b174e07e6691): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5798b2cc033c46288bac702806b51d8d$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263530728','ನೀರಿನ ಆಯವ್ಯಯ ತಯಾರಿಕೆ_TA/ Preparation of water budget_TA','ನೀರಿನ ಆಯವ್ಯಯ ತಯಾರಿಕೆ_TA/ Preparation of water budget_TA','2024-08-31 20:47:50.524 +00:00','2024-08-31 20:47:50.524 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5798b2cc033c46288bac702806b51d8d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed topic: DPR ತಯಾರಿಕೆಯಲ್ಲಿ ವಿಭಿನ್ನ ವಿಷಯಾಧಾರಿತ ನಕ್ಷೆಗಳ ಬಳಕೆ_TA /Usage of different thematic maps in DPR preparation_TA
Executing (2930cb69-241a-4bd5-8959-92358c743622): START TRANSACTION;
Processed topic: Orientation on Jala Sanjeevini /ಓರಿಯೆಂಟೇಷನ್ ಓನ್ ಜಲ ಸಂಜೀವಿನೀ/Elected members/ಚುನಾಯಿತ ಸದಸ್ಯರು
Executing (e05074c6-10b9-4aaf-bc03-d9067e466fe0): START TRANSACTION;
Executing (d0a7085d-7d92-470e-a0ea-9990c04d6db9): START TRANSACTION;
Executing (25a55463-9f5f-4c49-8e4f-d7ab1cd5d83e): START TRANSACTION;
Executing (e05074c6-10b9-4aaf-bc03-d9067e466fe0): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263530711';
Executing (d0a7085d-7d92-470e-a0ea-9990c04d6db9): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '3972';
Executing (25a55463-9f5f-4c49-8e4f-d7ab1cd5d83e): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263529092';
Executing (2930cb69-241a-4bd5-8959-92358c743622): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263529232';
Executing (1b43254c-2d24-437c-8cd2-b174e07e6691): COMMIT;
Executing (e05074c6-10b9-4aaf-bc03-d9067e466fe0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_38b13a74eda94c29b67a265b84294851$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263530711','ಜಲ ಸಂಜೀವಿನಿ ಕಾರ್ಯಕ್ರಮದ ಅಡಿ ಗುರುತಿಸಲಾದ ನೈಸರ್ಗಿಕ ಮತ್ತು ನೈಸರ್ಗಿಕ ವಲ್ಲದ ಕಾಮಗಾರಿಗಳು_TA/ NRM and Non-NRM works identified under Jala Sanjeevini program_TA','ಜಲ ಸಂಜೀವಿನಿ ಕಾರ್ಯಕ್ರಮದ ಅಡಿ ಗುರುತಿಸಲಾದ ನೈಸರ್ಗಿಕ ಮತ್ತು ನೈಸರ್ಗಿಕ ವಲ್ಲದ ಕಾಮಗಾರಿಗಳು_TA/ NRM and Non-NRM works identified under Jala Sanjeevini program_TA','2024-08-31 20:47:50.533 +00:00','2024-08-31 20:47:50.533 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_38b13a74eda94c29b67a265b84294851$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d0a7085d-7d92-470e-a0ea-9990c04d6db9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_03939d9ce8de47b4ae0072e7b835d8a3$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('3972','Image composition and layouts LL3','Week 2 is about sharing best practices on using images in a presentation and introduction to different tools and resources to download images, icons and illustrations.','2024-08-31 20:47:50.535 +00:00','2024-08-31 20:47:50.535 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_03939d9ce8de47b4ae0072e7b835d8a3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (25a55463-9f5f-4c49-8e4f-d7ab1cd5d83e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5beaea88881c40b9be3dd2a6ef7f2c15$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263529092','GP ಪ್ರೊಫೈಲ್ ತಯಾರಿಕೆ_TA/ Creation of GP profile_TA','Understand the importance of GP profile and the data required /GP ಪ್ರೊಫೈಲ್‌ನ ಪ್ರಾಮುಖ್ಯತೆ ಮತ್ತು ಅಗತ್ಯವಿರುವ ಡೇಟಾವನ್ನು ಅರ್ಥಮಾಡಿಕೊಳ್ಳಿ','2024-08-31 20:47:50.536 +00:00','2024-08-31 20:47:50.536 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5beaea88881c40b9be3dd2a6ef7f2c15$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2930cb69-241a-4bd5-8959-92358c743622): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b7e8fdb9342249b1b5c151cdb1a29a0d$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263529232','ಭೌಗೋಳಿಕ ಮಾಹಿತಿ ತಂತ್ರಜ್ಞಾನ ಮತ್ತು ದಿಣ್ಣೆಯಂದ ತಗ್ಗು ಪರಿಕಲ್ಪನೆ ಆಧಾರಿತ ವೈಜ್ಞಾನಿಕ ಯೋಜನೆ ತಯಾರಿಕೆ_ TA /GIS Based Scientific Planning using Ridge to Valley approach_TA','ಆಧಾರಿತ ಯೋಜನೆಯ ಪ್ರಾಮುಖ್ಯತೆ ಮತ್ತು ಪ್ರಕ್ರಿಯೆಯನ್ನು ಅರ್ಥಮಾಡಿಕೊಳ್ಳಲು /  To understand the importance and process of GIS based planning/GIS','2024-08-31 20:47:50.537 +00:00','2024-08-31 20:47:50.537 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b7e8fdb9342249b1b5c151cdb1a29a0d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e05074c6-10b9-4aaf-bc03-d9067e466fe0): COMMIT;
Executing (d0a7085d-7d92-470e-a0ea-9990c04d6db9): COMMIT;
Executing (25a55463-9f5f-4c49-8e4f-d7ab1cd5d83e): COMMIT;
Processed topic: ನೀರಿನ ಆಯವ್ಯಯ ತಯಾರಿಕೆ_TA/ Preparation of water budget_TA
Executing (0c35f62d-aa1c-4448-9cde-8cf78264defe): START TRANSACTION;
Processed topic: ಜಲ ಸಂಜೀವಿನಿ ಕಾರ್ಯಕ್ರಮದ ಅಡಿ ಗುರುತಿಸಲಾದ ನೈಸರ್ಗಿಕ ಮತ್ತು ನೈಸರ್ಗಿಕ ವಲ್ಲದ ಕಾಮಗಾರಿಗಳು_TA/ NRM and Non-NRM works identified under Jala Sanjeevini program_TA
Executing (4e28b1f1-416d-48ef-84e0-e1e6db68ec4a): START TRANSACTION;
Executing (69186be9-d8bd-4652-9d34-ea5db1a522d8): START TRANSACTION;
Processed topic: GP ಪ್ರೊಫೈಲ್ ತಯಾರಿಕೆ_TA/ Creation of GP profile_TA
Executing (8aac292c-dea8-44c7-a737-d865a887010d): START TRANSACTION;
Executing (0c35f62d-aa1c-4448-9cde-8cf78264defe): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '161';
Executing (2930cb69-241a-4bd5-8959-92358c743622): COMMIT;
Executing (4e28b1f1-416d-48ef-84e0-e1e6db68ec4a): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '163';
Executing (69186be9-d8bd-4652-9d34-ea5db1a522d8): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '224';
Executing (8aac292c-dea8-44c7-a737-d865a887010d): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1403';
Executing (0c35f62d-aa1c-4448-9cde-8cf78264defe): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7258b08ddfd54951af2a1b576d8c945a$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('161','Hydrographs | VCFs','Hands-on session on hydrograph mapping for VCFs','2024-08-31 20:47:50.548 +00:00','2024-08-31 20:47:50.548 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7258b08ddfd54951af2a1b576d8c945a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4e28b1f1-416d-48ef-84e0-e1e6db68ec4a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_de13e40aa46847c2b45500885e192e8f$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('163','Field Measurements | VCFs','Training on conducting field measurements for VCFs','2024-08-31 20:47:50.549 +00:00','2024-08-31 20:47:50.549 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_de13e40aa46847c2b45500885e192e8f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (69186be9-d8bd-4652-9d34-ea5db1a522d8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_685a152e055440ca8cd24e98c4dcaf4f$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('224','Concept of VWSS and Importance of service delivery | MTs','Session covers features, benefits and components of Sujal and Swachh Gaon / VWSS. Key actions and opportunities for Sarpanch and team to transform the village.','2024-08-31 20:47:50.550 +00:00','2024-08-31 20:47:50.550 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_685a152e055440ca8cd24e98c4dcaf4f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8aac292c-dea8-44c7-a737-d865a887010d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d59d2f382a8c42029c8a1c70633104f4$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1403','PDA for Trainers','PDA - How can a trainer benefit from using it.','2024-08-31 20:47:50.551 +00:00','2024-08-31 20:47:50.551 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d59d2f382a8c42029c8a1c70633104f4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed topic: ಭೌಗೋಳಿಕ ಮಾಹಿತಿ ತಂತ್ರಜ್ಞಾನ ಮತ್ತು ದಿಣ್ಣೆಯಂದ ತಗ್ಗು ಪರಿಕಲ್ಪನೆ ಆಧಾರಿತ ವೈಜ್ಞಾನಿಕ ಯೋಜನೆ ತಯಾರಿಕೆ_ TA /GIS Based Scientific Planning using Ridge to Valley approach_TA
Executing (88637c4f-2998-4c55-8f08-66270de79e9b): START TRANSACTION;
Executing (4e28b1f1-416d-48ef-84e0-e1e6db68ec4a): COMMIT;
Executing (69186be9-d8bd-4652-9d34-ea5db1a522d8): COMMIT;
Executing (8aac292c-dea8-44c7-a737-d865a887010d): COMMIT;
Executing (0c35f62d-aa1c-4448-9cde-8cf78264defe): COMMIT;
Processed topic: Field Measurements | VCFs
Executing (5781d670-0027-419d-8d26-9826d4dd9af7): START TRANSACTION;
Processed topic: Concept of VWSS and Importance of service delivery | MTs
Executing (4131bed4-7632-4784-b1a3-fbbc5e128695): START TRANSACTION;
Executing (3c0ab727-e45f-4033-93e1-81512e800c1e): START TRANSACTION;
Executing (88637c4f-2998-4c55-8f08-66270de79e9b): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263548820';
Executing (5781d670-0027-419d-8d26-9826d4dd9af7): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1584';
Executing (4131bed4-7632-4784-b1a3-fbbc5e128695): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263529622';
Executing (3c0ab727-e45f-4033-93e1-81512e800c1e): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2275';
Processed topic: Hydrographs | VCFs
Executing (c592448a-3e83-452d-bc66-8fdf5914dbc6): START TRANSACTION;
Executing (5781d670-0027-419d-8d26-9826d4dd9af7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8cbcc1cab5a744fbb14bd641589adc11$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1584','Data collection and Analysis','Data analysis Part 2 BJs Trainig','2024-08-31 20:47:50.562 +00:00','2024-08-31 20:47:50.562 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8cbcc1cab5a744fbb14bd641589adc11$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4131bed4-7632-4784-b1a3-fbbc5e128695): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_246732c2a4da446b994a3b3f743b4003$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263529622','JD test - Assam','This topic will introduce learners about the JD program and its materials. ','2024-08-31 20:47:50.564 +00:00','2024-08-31 20:47:50.564 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_246732c2a4da446b994a3b3f743b4003$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3c0ab727-e45f-4033-93e1-81512e800c1e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6777c38be38442b8ab3ed9e022d92a1d$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2275','MIS Generation','This session will explain how to generate MIS from field','2024-08-31 20:47:50.565 +00:00','2024-08-31 20:47:50.565 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6777c38be38442b8ab3ed9e022d92a1d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (88637c4f-2998-4c55-8f08-66270de79e9b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e1091191e5cf4022a323e2cad6774303$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263548820','Execution of the JalShala','this topic helps participants to get the details about executing Jalshalas','2024-08-31 20:47:50.566 +00:00','2024-08-31 20:47:50.566 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e1091191e5cf4022a323e2cad6774303$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5781d670-0027-419d-8d26-9826d4dd9af7): COMMIT;
Executing (4131bed4-7632-4784-b1a3-fbbc5e128695): COMMIT;
Executing (3c0ab727-e45f-4033-93e1-81512e800c1e): COMMIT;
Executing (c592448a-3e83-452d-bc66-8fdf5914dbc6): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1944';
Executing (ec272439-ea6e-4a7b-8598-a119961cc127): START TRANSACTION;
Executing (2cdeba16-4d49-4907-9de3-f9e97e55326f): START TRANSACTION;
Executing (879bb3e2-8efc-48e8-bd60-3b04ddedc667): START TRANSACTION;
Executing (88637c4f-2998-4c55-8f08-66270de79e9b): COMMIT;
Executing (ec272439-ea6e-4a7b-8598-a119961cc127): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '262';
Executing (2cdeba16-4d49-4907-9de3-f9e97e55326f): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '3040';
Executing (879bb3e2-8efc-48e8-bd60-3b04ddedc667): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '3038';
Executing (c592448a-3e83-452d-bc66-8fdf5914dbc6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b3e5bb6733b2485680a812419e57bfdd$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1944','PDA - Assisted Scan','Practicing Assisted Scanning','2024-08-31 20:47:50.578 +00:00','2024-08-31 20:47:50.578 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b3e5bb6733b2485680a812419e57bfdd$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ec272439-ea6e-4a7b-8598-a119961cc127): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_296bf66cde974c159f32049009533d54$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('262','Thermodynamic treatment of Hard Water','Methods of heat treatment to samples of hard water collected in Osmanabad','2024-08-31 20:47:50.579 +00:00','2024-08-31 20:47:50.579 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_296bf66cde974c159f32049009533d54$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2cdeba16-4d49-4907-9de3-f9e97e55326f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5b89723a240d42ef8d69eaae549fa341$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('3040','PDA Demo','The session includes a demo on PDA apps, portal, and dashboard','2024-08-31 20:47:50.581 +00:00','2024-08-31 20:47:50.581 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5b89723a240d42ef8d69eaae549fa341$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (879bb3e2-8efc-48e8-bd60-3b04ddedc667): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3a4f3032fc9347c7a0f7640a04098314$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('3038','PDA Demo | ACWADAM','The session includes an overview of PDA.','2024-08-31 20:47:50.582 +00:00','2024-08-31 20:47:50.582 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3a4f3032fc9347c7a0f7640a04098314$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (67040881-e6d8-48d5-8d32-d402e7c63b05): START TRANSACTION;
Executing (ec272439-ea6e-4a7b-8598-a119961cc127): COMMIT;
Executing (2cdeba16-4d49-4907-9de3-f9e97e55326f): COMMIT;
Executing (879bb3e2-8efc-48e8-bd60-3b04ddedc667): COMMIT;
Executing (67040881-e6d8-48d5-8d32-d402e7c63b05): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '305';
Executing (c592448a-3e83-452d-bc66-8fdf5914dbc6): COMMIT;
Executing (ac9bbcea-14a6-42ca-9221-467c37d27732): START TRANSACTION;
Executing (9bd424c3-78ce-4d77-afb8-233c42c62334): START TRANSACTION;
Executing (8f2ab853-ea2d-44c2-abb1-ebe03e6b5fb4): START TRANSACTION;
Executing (67040881-e6d8-48d5-8d32-d402e7c63b05): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f7774c74d18349bd9f29bbf85b61af1c$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('305','s','s','2024-08-31 20:47:50.593 +00:00','2024-08-31 20:47:50.593 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f7774c74d18349bd9f29bbf85b61af1c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ac9bbcea-14a6-42ca-9221-467c37d27732): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '3086';
Executing (9bd424c3-78ce-4d77-afb8-233c42c62334): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '136';
Executing (8f2ab853-ea2d-44c2-abb1-ebe03e6b5fb4): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1925';
Executing (19ee77c8-adf1-43fd-a09a-ef5abab86846): START TRANSACTION;
Executing (ac9bbcea-14a6-42ca-9221-467c37d27732): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a9f467f41eb84c88a41e1cc1fccba0d0$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('3086','ಅಂತರ್ಜಲ ಚೇತನ - ಮಾದರಿ ವಿಷಯ (Antarajala Chetana - Example Topic)','ಮಾದರಿ ವಿಷಯ','2024-08-31 20:47:50.598 +00:00','2024-08-31 20:47:50.598 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a9f467f41eb84c88a41e1cc1fccba0d0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9bd424c3-78ce-4d77-afb8-233c42c62334): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_303200ad7e0349ceab494bfd4ec1b8eb$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('136','test ekansh','haha hoho','2024-08-31 20:47:50.599 +00:00','2024-08-31 20:47:50.599 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_303200ad7e0349ceab494bfd4ec1b8eb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8f2ab853-ea2d-44c2-abb1-ebe03e6b5fb4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_64b8692fed6f4f86a9f241b3a2fc917b$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1925','PDA Demo (Test)','This includes demo on PDA','2024-08-31 20:47:50.600 +00:00','2024-08-31 20:47:50.600 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_64b8692fed6f4f86a9f241b3a2fc917b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (19ee77c8-adf1-43fd-a09a-ef5abab86846): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '822';
Executing (67040881-e6d8-48d5-8d32-d402e7c63b05): COMMIT;
Executing (ac9bbcea-14a6-42ca-9221-467c37d27732): COMMIT;
Executing (9bd424c3-78ce-4d77-afb8-233c42c62334): COMMIT;
Executing (8f2ab853-ea2d-44c2-abb1-ebe03e6b5fb4): COMMIT;
Executing (19ee77c8-adf1-43fd-a09a-ef5abab86846): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3aa6978c64cd44d89c30ac7f2f2cfcbe$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('822','Test run for Assisted Scanning','Test Run | Assisted Scanning','2024-08-31 20:47:50.605 +00:00','2024-08-31 20:47:50.605 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3aa6978c64cd44d89c30ac7f2f2cfcbe$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (03e6645a-f58e-43bb-abbb-813151d8b148): START TRANSACTION;
Executing (103452b6-d4de-4bbb-bc67-f61f0b1faf03): START TRANSACTION;
Executing (b0396ea9-8d33-4d7b-adbd-8d47aeaffe5e): START TRANSACTION;
Processed topic: s
Executing (1150ac68-0319-43c2-b163-198f05616b0f): START TRANSACTION;
Executing (03e6645a-f58e-43bb-abbb-813151d8b148): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '3003';
Executing (103452b6-d4de-4bbb-bc67-f61f0b1faf03): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '3871';
Executing (b0396ea9-8d33-4d7b-adbd-8d47aeaffe5e): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263545685';
Executing (19ee77c8-adf1-43fd-a09a-ef5abab86846): COMMIT;
Executing (03e6645a-f58e-43bb-abbb-813151d8b148): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3c4dc23bfe6b4685a11542e70ed9422e$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('3003','Open Sourcing PDA','Learn how to download code and deploy PDA','2024-08-31 20:47:50.614 +00:00','2024-08-31 20:47:50.614 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3c4dc23bfe6b4685a11542e70ed9422e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (103452b6-d4de-4bbb-bc67-f61f0b1faf03): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_566d92ba5a1641ff9857837afa465beb$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('3871','Introduction to Process of planning a lesson flow','Week 3 is about learning how to make the order of content /content breakdown for a session/lesson and deciding how to deliver the content to the learner.','2024-08-31 20:47:50.616 +00:00','2024-08-31 20:47:50.616 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_566d92ba5a1641ff9857837afa465beb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b0396ea9-8d33-4d7b-adbd-8d47aeaffe5e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_33209b1810524f88b48448000549629c$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263545685','JD - Jalshala Event Day 2 - Students with Water Supply Scheme','Find the details & resource of the topic attached. ','2024-08-31 20:47:50.617 +00:00','2024-08-31 20:47:50.617 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_33209b1810524f88b48448000549629c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1150ac68-0319-43c2-b163-198f05616b0f): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263541644';
Executing (03e6645a-f58e-43bb-abbb-813151d8b148): COMMIT;
Executing (103452b6-d4de-4bbb-bc67-f61f0b1faf03): COMMIT;
Executing (b0396ea9-8d33-4d7b-adbd-8d47aeaffe5e): COMMIT;
Executing (1d7cd559-4869-4018-bb8a-d0d5d50a83a3): START TRANSACTION;
Executing (ca66d63f-7af8-4ea0-9f50-4982a241c38c): START TRANSACTION;
Executing (bb6f7b96-e7cb-486a-a064-9851638366b5): START TRANSACTION;
Executing (89464611-39f3-480f-a976-27e80191934f): START TRANSACTION;
Executing (1d7cd559-4869-4018-bb8a-d0d5d50a83a3): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263541646';
Executing (1150ac68-0319-43c2-b163-198f05616b0f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1041c1f06ff24065b93ab2460f30f46c$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263541644','JD test - Completing the self assessment course ','The topic will help participants to understand the instructions of the program','2024-08-31 20:47:50.631 +00:00','2024-08-31 20:47:50.631 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1041c1f06ff24065b93ab2460f30f46c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ca66d63f-7af8-4ea0-9f50-4982a241c38c): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1932';
Executing (bb6f7b96-e7cb-486a-a064-9851638366b5): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '867';
Executing (89464611-39f3-480f-a976-27e80191934f): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1179';
Executing (1d7cd559-4869-4018-bb8a-d0d5d50a83a3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_aef44745bcb44fa09c461a3f7618d171$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263541646','JD test - Making a JalShala Plan','The topic will help participants to understand the instructions of the program','2024-08-31 20:47:50.635 +00:00','2024-08-31 20:47:50.635 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_aef44745bcb44fa09c461a3f7618d171$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ca66d63f-7af8-4ea0-9f50-4982a241c38c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_854df8b68009465da3110fe146986738$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1932','Concepts and development of Base map,Landuse map and Geo-morphology maps','Concepts and development of Base map,Landuse map and Geo-morphology maps','2024-08-31 20:47:50.636 +00:00','2024-08-31 20:47:50.636 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_854df8b68009465da3110fe146986738$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bb6f7b96-e7cb-486a-a064-9851638366b5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9ab1cffcb772406e9b4a5b9d3f2a9b54$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('867','Prasari - How to use Google Earth','Google Earth setup, usage and export features explained','2024-08-31 20:47:50.637 +00:00','2024-08-31 20:47:50.637 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9ab1cffcb772406e9b4a5b9d3f2a9b54$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (89464611-39f3-480f-a976-27e80191934f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_dcad6a3d77484071a2455d1db4d9efc3$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1179','Virtual Interactions - Needs and Benefits','Introduction to the idea of virtual interactions, what problems can they resolve and how to go about planning for them.','2024-08-31 20:47:50.638 +00:00','2024-08-31 20:47:50.638 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_dcad6a3d77484071a2455d1db4d9efc3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1150ac68-0319-43c2-b163-198f05616b0f): COMMIT;
Executing (ca66d63f-7af8-4ea0-9f50-4982a241c38c): COMMIT;
Executing (bb6f7b96-e7cb-486a-a064-9851638366b5): COMMIT;
Executing (89464611-39f3-480f-a976-27e80191934f): COMMIT;
Executing (1d7cd559-4869-4018-bb8a-d0d5d50a83a3): COMMIT;
Processed topic: Concepts and development of Base map,Landuse map and Geo-morphology maps
Executing (467af2f6-aeea-4d09-8e2b-66135b18f6b3): START TRANSACTION;
Processed topic: Prasari - How to use Google Earth
Executing (fea38c53-34bd-4f09-a26b-40792b11f909): START TRANSACTION;
Executing (08be790b-d499-4822-ac45-c8cc2f61c821): START TRANSACTION;
Executing (7d4e41ca-f7e4-4732-b8fc-5b052f01d72f): START TRANSACTION;
Executing (467af2f6-aeea-4d09-8e2b-66135b18f6b3): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '4068';
Executing (fea38c53-34bd-4f09-a26b-40792b11f909): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2276';
Executing (08be790b-d499-4822-ac45-c8cc2f61c821): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '237';
Executing (7d4e41ca-f7e4-4732-b8fc-5b052f01d72f): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2111';
Executing (b2538867-e17c-4098-94d3-d70ebc2e59b0): START TRANSACTION;
Executing (467af2f6-aeea-4d09-8e2b-66135b18f6b3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_401766a159c04790afd9bc9d9eabe6a4$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('4068','Introduction to mapping of content and learning needs requirements','Week 2 is about stakeholder wise mapping of content and learning needs requirements.','2024-08-31 20:47:50.652 +00:00','2024-08-31 20:47:50.652 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_401766a159c04790afd9bc9d9eabe6a4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (fea38c53-34bd-4f09-a26b-40792b11f909): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cf9106c3fefe49ee9a8434071cc6f9cf$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2276','Ground water basics','This session explains the basics of ground water','2024-08-31 20:47:50.653 +00:00','2024-08-31 20:47:50.653 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cf9106c3fefe49ee9a8434071cc6f9cf$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (08be790b-d499-4822-ac45-c8cc2f61c821): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7de5486698ed4b43bc3a6a5985baa996$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('237','नळ पाणी पुरवठा सुविधांची देखभाल आणि दुरुस्ती । प्रशिक्षक','सुविधांचे तांत्रिक , आर्थिक, संस्थात्मक व्यवस्थापन, सरपंच जलसुरक्षक आणि पाणी पुरवठा व स्वच्छता सुविधांच्या भूमिका आणि जवाबदाऱ्या','2024-08-31 20:47:50.654 +00:00','2024-08-31 20:47:50.654 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7de5486698ed4b43bc3a6a5985baa996$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7d4e41ca-f7e4-4732-b8fc-5b052f01d72f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9a80f892ef9f4cb7bcb48273148709cb$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2111','PDA Improved Hands on','In this session improved steps for Hands-on training will be tested..','2024-08-31 20:47:50.655 +00:00','2024-08-31 20:47:50.655 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9a80f892ef9f4cb7bcb48273148709cb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b2538867-e17c-4098-94d3-d70ebc2e59b0): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '159';
Executing (467af2f6-aeea-4d09-8e2b-66135b18f6b3): COMMIT;
Executing (fea38c53-34bd-4f09-a26b-40792b11f909): COMMIT;
Executing (08be790b-d499-4822-ac45-c8cc2f61c821): COMMIT;
Executing (2fae542e-9235-439b-b948-438b9f7f366d): START TRANSACTION;
Executing (29da55b4-8744-4fec-a6d1-41f8e322ab7c): START TRANSACTION;
Executing (b2538867-e17c-4098-94d3-d70ebc2e59b0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4371b29d75ca4ee9907b743c5c7ebafe$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('159','Introduction to Springs | MTs','Session on basics of springs for Master Trainers','2024-08-31 20:47:50.662 +00:00','2024-08-31 20:47:50.662 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4371b29d75ca4ee9907b743c5c7ebafe$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7d4e41ca-f7e4-4732-b8fc-5b052f01d72f): COMMIT;
Executing (2fae542e-9235-439b-b948-438b9f7f366d): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '160';
Executing (29da55b4-8744-4fec-a6d1-41f8e322ab7c): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263545676';
Executing (71ce0479-1af7-41ee-bc80-72c23b7e1b2c): START TRANSACTION;
Executing (2fae542e-9235-439b-b948-438b9f7f366d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7037f7237e0547af945190474ead7efb$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('160','Basics of Hydrogeology | MTs','Fundamentals of hydrogeology and geology','2024-08-31 20:47:50.666 +00:00','2024-08-31 20:47:50.666 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7037f7237e0547af945190474ead7efb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (29da55b4-8744-4fec-a6d1-41f8e322ab7c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5d146a1d05304619bce3bef8c6832b65$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263545676','JD - Making the District Plan','Find the details & resource of the topic attached.','2024-08-31 20:47:50.667 +00:00','2024-08-31 20:47:50.667 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5d146a1d05304619bce3bef8c6832b65$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (71ce0479-1af7-41ee-bc80-72c23b7e1b2c): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '426';
Executing (1eece262-18be-464c-8445-57f5e34cbc4f): START TRANSACTION;
Executing (b2538867-e17c-4098-94d3-d70ebc2e59b0): COMMIT;
Executing (2fae542e-9235-439b-b948-438b9f7f366d): COMMIT;
Executing (29da55b4-8744-4fec-a6d1-41f8e322ab7c): COMMIT;
Executing (71ce0479-1af7-41ee-bc80-72c23b7e1b2c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_90015ef5ddd94dbab6d3e2ebb39bdfb4$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('426','Echo','announcement','2024-08-31 20:47:50.674 +00:00','2024-08-31 20:47:50.674 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_90015ef5ddd94dbab6d3e2ebb39bdfb4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1eece262-18be-464c-8445-57f5e34cbc4f): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '153';
Executing (d2e18e79-e267-470c-973a-5559b72e4b02): START TRANSACTION;
Executing (290bb138-d707-4766-9430-6d72e9a6904f): START TRANSACTION;
Executing (71ce0479-1af7-41ee-bc80-72c23b7e1b2c): COMMIT;
Executing (60e55a8c-2d6f-4656-b3c6-39c7cda7701e): START TRANSACTION;
Executing (d2e18e79-e267-470c-973a-5559b72e4b02): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '3052';
Executing (290bb138-d707-4766-9430-6d72e9a6904f): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '295';
Executing (42f7c247-2418-4fab-91e7-1a67cf9f2558): START TRANSACTION;
Executing (60e55a8c-2d6f-4656-b3c6-39c7cda7701e): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1078';
Executing (1eece262-18be-464c-8445-57f5e34cbc4f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a181da38ea0f407e9d6bbeebd9a09ff3$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('153','Test - 11 Dec','Test','2024-08-31 20:47:50.691 +00:00','2024-08-31 20:47:50.691 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a181da38ea0f407e9d6bbeebd9a09ff3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d2e18e79-e267-470c-973a-5559b72e4b02): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b690e2d5492c4b44bf41aff9018f4fd0$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('3052','PDA Hand-on','The session includes hands-on practice on PDA apps.','2024-08-31 20:47:50.692 +00:00','2024-08-31 20:47:50.692 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b690e2d5492c4b44bf41aff9018f4fd0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (290bb138-d707-4766-9430-6d72e9a6904f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cc7579f6a1d94599adfca407dd57ecde$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('295','Testing Marathi content','Testing Pdfs with ASCII fonts and Unicode fonts
11
1. 
2.','2024-08-31 20:47:50.694 +00:00','2024-08-31 20:47:50.694 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cc7579f6a1d94599adfca407dd57ecde$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (42f7c247-2418-4fab-91e7-1a67cf9f2558): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263541630';
Executing (60e55a8c-2d6f-4656-b3c6-39c7cda7701e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a2e6832da92e48558677908ac53f86ce$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1078','Basics of PDA','How PDA Works','2024-08-31 20:47:50.696 +00:00','2024-08-31 20:47:50.696 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a2e6832da92e48558677908ac53f86ce$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d2e18e79-e267-470c-973a-5559b72e4b02): COMMIT;
Executing (290bb138-d707-4766-9430-6d72e9a6904f): COMMIT;
Executing (42f7c247-2418-4fab-91e7-1a67cf9f2558): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4c9d1395415041c08b3754deeb584285$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263541630','JD test - Training of Block Coordinators for JalDoot Program ','This provides instruction and materials to participants. ','2024-08-31 20:47:50.698 +00:00','2024-08-31 20:47:50.698 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4c9d1395415041c08b3754deeb584285$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1eece262-18be-464c-8445-57f5e34cbc4f): COMMIT;
Processed topic: PDA Hand-on
Executing (903f77c0-a4a2-4c5c-b7d8-f1f7bd2eecaa): START TRANSACTION;
Executing (21df57aa-4b42-4b13-8036-8f5bae2402aa): START TRANSACTION;
Executing (60e55a8c-2d6f-4656-b3c6-39c7cda7701e): COMMIT;
Executing (903f77c0-a4a2-4c5c-b7d8-f1f7bd2eecaa): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1548';
Executing (21df57aa-4b42-4b13-8036-8f5bae2402aa): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1689';
Processed topic: Test - 11 Dec
Executing (afa750d7-d7f5-4fa1-b3b3-9a20e856ba58): START TRANSACTION;
Executing (42f7c247-2418-4fab-91e7-1a67cf9f2558): COMMIT;
Executing (903f77c0-a4a2-4c5c-b7d8-f1f7bd2eecaa): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d0f72d46541f49f0b16971493a49cde7$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1548','PDA Demo','The session includes explanation and demonstration on PDA','2024-08-31 20:47:50.705 +00:00','2024-08-31 20:47:50.705 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d0f72d46541f49f0b16971493a49cde7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (21df57aa-4b42-4b13-8036-8f5bae2402aa): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7033dbc2814746cc85df7b478978e49c$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1689','SPMU Orientation Demo','This orientation is for SPMU of ABY States','2024-08-31 20:47:50.707 +00:00','2024-08-31 20:47:50.707 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7033dbc2814746cc85df7b478978e49c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (afa750d7-d7f5-4fa1-b3b3-9a20e856ba58): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1244';
Executing (da7d2620-a5b4-4397-8a90-a4333e299e44): START TRANSACTION;
Executing (903f77c0-a4a2-4c5c-b7d8-f1f7bd2eecaa): COMMIT;
Executing (21df57aa-4b42-4b13-8036-8f5bae2402aa): COMMIT;
Executing (afa750d7-d7f5-4fa1-b3b3-9a20e856ba58): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f7f21b50c20748b3bbf086cad38ca888$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1244','Churu Fluorosis PDA demo','This session will demonstrate the usage of PDA for training planned in Churu','2024-08-31 20:47:50.711 +00:00','2024-08-31 20:47:50.711 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f7f21b50c20748b3bbf086cad38ca888$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (da7d2620-a5b4-4397-8a90-a4333e299e44): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '228';
Executing (99f859ee-8ecb-406c-983b-e182a96bf69c): START TRANSACTION;
Executing (fa31b506-01d3-40e4-93e3-bd926e732474): START TRANSACTION;
Processed topic: SPMU Orientation Demo
Executing (cdeb5317-3834-4cd4-a34b-c6a0d733980e): START TRANSACTION;
Executing (afa750d7-d7f5-4fa1-b3b3-9a20e856ba58): COMMIT;
Executing (da7d2620-a5b4-4397-8a90-a4333e299e44): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4128e428ebcb48bf9d1f282731071efb$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('228','जल जीवन मिशन । प्रशिक्षक','ध्येय, समस्या घटक, योजनांचे प्रकार , ग्राम पंचायत निवडीचे निकष, निधीची तरतूद, ग्राम पंचायतीची भूमिका , स्रोत बळकटीकरण व सांडपाणी व्यवस्थापन, नळ जोड घेण्यासाठी लोकसहभागाची गरज व महत्व , विविध स्तरावरील संस्थात्मक रचना व भूमिका आणि जवाबदारी','2024-08-31 20:47:50.717 +00:00','2024-08-31 20:47:50.717 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4128e428ebcb48bf9d1f282731071efb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (99f859ee-8ecb-406c-983b-e182a96bf69c): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2521';
Executing (fa31b506-01d3-40e4-93e3-bd926e732474): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1861';
Executing (cdeb5317-3834-4cd4-a34b-c6a0d733980e): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '123';
Executing (362100e3-7c5b-42c1-988a-00bb77afed0c): START TRANSACTION;
Executing (fa31b506-01d3-40e4-93e3-bd926e732474): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_de20d7a7db8a44e0a7e9f8a5e640e448$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1861','Post-Harvest Management and Value Addition in Spice Crops.','Impotence of Spice Crops in gujarat
Steps to improve quality of spices crop
Spice crop Value Addition and Export 
Packaging and marketing','2024-08-31 20:47:50.722 +00:00','2024-08-31 20:47:50.722 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_de20d7a7db8a44e0a7e9f8a5e640e448$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cdeb5317-3834-4cd4-a34b-c6a0d733980e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2f36e0995fb644d48e2c5feaeefad109$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('123','Onboarding for Arghyam Team','Hands On training for PDA','2024-08-31 20:47:50.723 +00:00','2024-08-31 20:47:50.723 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2f36e0995fb644d48e2c5feaeefad109$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (362100e3-7c5b-42c1-988a-00bb77afed0c): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1489';
Executing (99f859ee-8ecb-406c-983b-e182a96bf69c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_41860a0ddccf4a7fa3153a469135053d$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2521','Demonstration of PDA - ICDS Supervisors Training','This topic deals with the explaining the use of PDA Participant application the the participants.','2024-08-31 20:47:50.725 +00:00','2024-08-31 20:47:50.725 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_41860a0ddccf4a7fa3153a469135053d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (da7d2620-a5b4-4397-8a90-a4333e299e44): COMMIT;
Executing (fa31b506-01d3-40e4-93e3-bd926e732474): COMMIT;
Executing (cdeb5317-3834-4cd4-a34b-c6a0d733980e): COMMIT;
Executing (362100e3-7c5b-42c1-988a-00bb77afed0c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6917e208fe154bdd9fc9dda5f523acf7$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1489','Observations and Feedback | T1.03 | DG','The session will include observations and feedback on the PPT to Video assignment submitted by the participants.','2024-08-31 20:47:50.728 +00:00','2024-08-31 20:47:50.728 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6917e208fe154bdd9fc9dda5f523acf7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (890aab2b-206c-4468-a8af-d89086b32d4e): START TRANSACTION;
Executing (75d6bd3a-f6a5-463b-bf13-dcb140e52823): START TRANSACTION;
Executing (99f859ee-8ecb-406c-983b-e182a96bf69c): COMMIT;
Executing (1da9f8de-7016-4d31-85fb-092c31368599): START TRANSACTION;
Executing (890aab2b-206c-4468-a8af-d89086b32d4e): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1781';
Executing (75d6bd3a-f6a5-463b-bf13-dcb140e52823): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '312';
Executing (269dbcb0-d1d2-477a-b5f8-97cb1530159a): START TRANSACTION;
Executing (1da9f8de-7016-4d31-85fb-092c31368599): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '138';
Executing (362100e3-7c5b-42c1-988a-00bb77afed0c): COMMIT;
Executing (890aab2b-206c-4468-a8af-d89086b32d4e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_faa0770d573f458495545ae400876b34$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1781','Sign in through codes','The session includes a demonstration on how to sign through 6 digit codes','2024-08-31 20:47:50.738 +00:00','2024-08-31 20:47:50.738 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_faa0770d573f458495545ae400876b34$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (75d6bd3a-f6a5-463b-bf13-dcb140e52823): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_efd44567314948d08c14178595382e50$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('312','sss','ssss','2024-08-31 20:47:50.739 +00:00','2024-08-31 20:47:50.739 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_efd44567314948d08c14178595382e50$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (269dbcb0-d1d2-477a-b5f8-97cb1530159a): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1425';
Executing (1da9f8de-7016-4d31-85fb-092c31368599): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7997cbca4b564a1f91c34433fafc5b00$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('138','Open and free','explains there is nothing like open and free','2024-08-31 20:47:50.741 +00:00','2024-08-31 20:47:50.741 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7997cbca4b564a1f91c34433fafc5b00$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (890aab2b-206c-4468-a8af-d89086b32d4e): COMMIT;
Executing (75d6bd3a-f6a5-463b-bf13-dcb140e52823): COMMIT;
Executing (269dbcb0-d1d2-477a-b5f8-97cb1530159a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_37cbd88655c14f809b387713041ea7de$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1425','Adding content before scans','Testing','2024-08-31 20:47:50.743 +00:00','2024-08-31 20:47:50.743 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_37cbd88655c14f809b387713041ea7de$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7ec9a878-dffb-4589-bed5-b3d3c2c910a0): START TRANSACTION;
Executing (be206fe0-29f9-4a01-a79b-741e8247944c): START TRANSACTION;
Processed topic: sss
Executing (5f769355-6e82-4633-924b-a74e288aa014): START TRANSACTION;
Executing (269dbcb0-d1d2-477a-b5f8-97cb1530159a): COMMIT;
Executing (7ec9a878-dffb-4589-bed5-b3d3c2c910a0): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1772';
Executing (1da9f8de-7016-4d31-85fb-092c31368599): COMMIT;
Executing (be206fe0-29f9-4a01-a79b-741e8247944c): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1572';
Executing (5f769355-6e82-4633-924b-a74e288aa014): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263532185';
Executing (74ac85aa-e972-42a1-aeec-a2ae393077cc): START TRANSACTION;
Executing (7ec9a878-dffb-4589-bed5-b3d3c2c910a0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d5ffe76dd87e431d936b2a4584491ff1$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1772','Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','Capacity building of Jaldoots on Base Map, Land use map, and Geomorphology map','2024-08-31 20:47:50.753 +00:00','2024-08-31 20:47:50.753 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d5ffe76dd87e431d936b2a4584491ff1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (be206fe0-29f9-4a01-a79b-741e8247944c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_724ec8f47b014a12a5f72dd97f909f89$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1572','PDA Hands on','This session includes practicing the steps involved in rolling out of a program through PDA.','2024-08-31 20:47:50.754 +00:00','2024-08-31 20:47:50.754 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_724ec8f47b014a12a5f72dd97f909f89$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5f769355-6e82-4633-924b-a74e288aa014): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d4717a30605e4ee18f2bed143d9e0da7$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263532185','ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್ (ಜಾಗೃತಿ ಕಾರ್ಯಕ್ರಮಗಳನ್ನು ದಾಖಲಿಸುವುದು) _ ಬಿಎಫ್ ಟಿ _ ಜಿಕೆಎಂ /  Orientation on Jala Sanjeevini (Capturing Awareness programs)_ BFTs _ GKMs','ಬಿಎಫ್ ಟಿ ಮತ್ತು ಜಿಕೆಎಂ ಗಳು ಜಲ ಸಂಜೀವಿನಿ ಕಾರ್ಯಕ್ರಮ ಕುರಿತು ಸಂಪೂರ್ಣವಾಗಿ ಅರ್ಥೈಸಿಕೊಳ್ಳಲು ಓರಿಯೆಂಟೇಶನ್ ಕಾರ್ಯಕ್ರಮದ ಮೂಲಕ ಮಾಹಿತಿ ನೀಡುವುದು','2024-08-31 20:47:50.756 +00:00','2024-08-31 20:47:50.756 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d4717a30605e4ee18f2bed143d9e0da7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (74ac85aa-e972-42a1-aeec-a2ae393077cc): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263548818';
Executing (2bd7efc0-9e73-4d29-9c1d-169fc80f2352): START TRANSACTION;
Executing (be206fe0-29f9-4a01-a79b-741e8247944c): COMMIT;
Executing (5f769355-6e82-4633-924b-a74e288aa014): COMMIT;
Executing (74ac85aa-e972-42a1-aeec-a2ae393077cc): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8e34735a767547b6b5b7d51a4818e4c9$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263548818','District Workshop training for block team','This will help participants at the block level','2024-08-31 20:47:50.761 +00:00','2024-08-31 20:47:50.761 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8e34735a767547b6b5b7d51a4818e4c9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2bd7efc0-9e73-4d29-9c1d-169fc80f2352): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1608';
Executing (7ec9a878-dffb-4589-bed5-b3d3c2c910a0): COMMIT;
Executing (e1289685-a537-4a22-94d0-d42f192deb4b): START TRANSACTION;
Executing (de9f598d-0133-4a65-aaac-9a87842482d9): START TRANSACTION;
Executing (74ac85aa-e972-42a1-aeec-a2ae393077cc): COMMIT;
Executing (2bd7efc0-9e73-4d29-9c1d-169fc80f2352): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_110c76e73cb14441824c88edaf821ca9$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1608','PDA Additional features','The session includes update on new features of PDA.','2024-08-31 20:47:50.768 +00:00','2024-08-31 20:47:50.768 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_110c76e73cb14441824c88edaf821ca9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e1289685-a537-4a22-94d0-d42f192deb4b): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263529397';
Executing (de9f598d-0133-4a65-aaac-9a87842482d9): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2493';
Executing (55bd3ad9-0d96-47ce-9f9d-e214ceba9692): START TRANSACTION;
Executing (7120fe9c-a6ee-467e-b51f-8a7249d5fb97): START TRANSACTION;
Executing (e1289685-a537-4a22-94d0-d42f192deb4b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_dfe22579ee834b1a86b3e5c570675db5$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263529397','ಜನರ ಸಹಭಾಗಿತ್ವದಲ್ಲಿ ಗ್ರಾಮೀಣ ವಿಶ್ಲೇಷಣೆಯಡಿ ಕಾಲ್ನಡಿಗೆ  ಕುರಿತು _ GKM_BFT / Transect walk_ GKM_BFT','Understand the skill required to facilitate the transect walk./.ಅಡ್ಡನೆಡೆಗೆಯನ್ನು ಸುಲಭಗೊಳಿಸಲು ಅಗತ್ಯವಿರುವ ಕೌಶಲ್ಯವನ್ನು ಅರ್ಥಮಾಡಿಕೊಳ್ಳಿ.','2024-08-31 20:47:50.774 +00:00','2024-08-31 20:47:50.774 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_dfe22579ee834b1a86b3e5c570675db5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (de9f598d-0133-4a65-aaac-9a87842482d9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f43d3ea6854d402eae10336f62f165cd$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2493','Capacity Building @ Scale - Experiences from FES in Odisha','Experiences from implementing the Karyashala program in Odisha','2024-08-31 20:47:50.775 +00:00','2024-08-31 20:47:50.775 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f43d3ea6854d402eae10336f62f165cd$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (55bd3ad9-0d96-47ce-9f9d-e214ceba9692): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '282';
Executing (7120fe9c-a6ee-467e-b51f-8a7249d5fb97): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263554836';
Executing (2bd7efc0-9e73-4d29-9c1d-169fc80f2352): COMMIT;
Executing (e1289685-a537-4a22-94d0-d42f192deb4b): COMMIT;
Executing (de9f598d-0133-4a65-aaac-9a87842482d9): COMMIT;
Executing (55bd3ad9-0d96-47ce-9f9d-e214ceba9692): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b538e114688f41eca26644d06bfe3614$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('282','BRLF Journey and engagement','BRLF Journey and engagement','2024-08-31 20:47:50.780 +00:00','2024-08-31 20:47:50.780 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b538e114688f41eca26644d06bfe3614$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7120fe9c-a6ee-467e-b51f-8a7249d5fb97): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8997f8b6858e4e5c81c5a06657d49aa5$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263554836','Planning of the JalShala','JalShala is a 2 day workshop within the JalDoot programme, an initiative by Jal Jeevan Mission, Assam. For the same, the trainers will plan and share the details for overall smooth execution of the programme.','2024-08-31 20:47:50.782 +00:00','2024-08-31 20:47:50.782 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8997f8b6858e4e5c81c5a06657d49aa5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a3db6124-315b-448d-80ac-4a3092ad07a0): START TRANSACTION;
Executing (4fcb5f95-8b0b-4040-bb77-2481d02ef4a8): START TRANSACTION;
Executing (55bd3ad9-0d96-47ce-9f9d-e214ceba9692): COMMIT;
Executing (df4c233c-6db7-462d-ab98-1bbfa65b2eba): START TRANSACTION;
Executing (a3db6124-315b-448d-80ac-4a3092ad07a0): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '870';
Executing (4fcb5f95-8b0b-4040-bb77-2481d02ef4a8): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '3949';
Executing (da85fe34-44ed-4650-88ae-167c4eb01251): START TRANSACTION;
Executing (df4c233c-6db7-462d-ab98-1bbfa65b2eba): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2263';
Executing (7120fe9c-a6ee-467e-b51f-8a7249d5fb97): COMMIT;
Executing (a3db6124-315b-448d-80ac-4a3092ad07a0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7ed6193d22894c8287a005a81d28e450$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('870','Prasari- How to use Google Earth','How to use google earth for mapping and survey','2024-08-31 20:47:50.795 +00:00','2024-08-31 20:47:50.795 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7ed6193d22894c8287a005a81d28e450$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4fcb5f95-8b0b-4040-bb77-2481d02ef4a8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b072c0b5dc4f453586fd5c623265db54$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('3949','Introduction to Visual Design LL3','Week 1 is about understanding what is visual design and its importance and learning some guidelines which can help create content which is engaging and visually pleasing.','2024-08-31 20:47:50.796 +00:00','2024-08-31 20:47:50.796 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b072c0b5dc4f453586fd5c623265db54$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (da85fe34-44ed-4650-88ae-167c4eb01251): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '317';
Executing (df4c233c-6db7-462d-ab98-1bbfa65b2eba): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e114b6c4a5c6463e9bc789462ee760de$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2263','PDA Hands on Tamil','Includes PDA Hands on in Tamil','2024-08-31 20:47:50.800 +00:00','2024-08-31 20:47:50.800 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e114b6c4a5c6463e9bc789462ee760de$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a3db6124-315b-448d-80ac-4a3092ad07a0): COMMIT;
Executing (4fcb5f95-8b0b-4040-bb77-2481d02ef4a8): COMMIT;
Executing (da85fe34-44ed-4650-88ae-167c4eb01251): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_74ee8e4ad4e843f7b1fb1466634a15a4$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('317','Testing Waters','Leveling up','2024-08-31 20:47:50.804 +00:00','2024-08-31 20:47:50.804 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_74ee8e4ad4e843f7b1fb1466634a15a4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (db5fb98e-95cc-40b8-a0a4-1d96616e3b41): START TRANSACTION;
Processed topic: Prasari- How to use Google Earth
Executing (aa06b604-8ced-4111-a9e9-8452c47e9443): START TRANSACTION;
Executing (f7cbce73-2e9f-4798-8c8e-5bb14910ce6f): START TRANSACTION;
Executing (da85fe34-44ed-4650-88ae-167c4eb01251): COMMIT;
Executing (db5fb98e-95cc-40b8-a0a4-1d96616e3b41): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263529364';
Executing (df4c233c-6db7-462d-ab98-1bbfa65b2eba): COMMIT;
Executing (aa06b604-8ced-4111-a9e9-8452c47e9443): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263541650';
Executing (f7cbce73-2e9f-4798-8c8e-5bb14910ce6f): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2258';
Processed topic: Testing Waters
Executing (296af5a8-ad01-41c2-8648-e9f8ed55f36b): START TRANSACTION;
Executing (db5fb98e-95cc-40b8-a0a4-1d96616e3b41): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6fc72be328064b46842f608f75a93502$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263529364','ಜನರ ಸಹಭಾಗಿತ್ವದಲ್ಲಿ ಗ್ರಾಮೀಣ ವಿಶ್ಲೇಷಣೆಯ ವಿಧಾನಗಳು _ GKM _ BFT/ Participatory Rural Appraisal (PRA)Tools_GKM_BFT','Understand the importance and methods of PRA / ಗ್ರಾಮೀಣ ವಿಶ್ಲೇಷಣೆ (PRA)  ಪ್ರಾಮುಖ್ಯತೆ ಮತ್ತು ವಿಧಾನಗಳನ್ನು ಅರ್ಥಮಾಡಿಕೊಳ್ಳಿ','2024-08-31 20:47:50.819 +00:00','2024-08-31 20:47:50.819 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6fc72be328064b46842f608f75a93502$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (aa06b604-8ced-4111-a9e9-8452c47e9443): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2fb879968dfe4bb490a295dea3850ccb$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263541650','JD test - Assist for Jal Doot Journey','The topic will help participants to understand the instructions of the program','2024-08-31 20:47:50.820 +00:00','2024-08-31 20:47:50.820 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2fb879968dfe4bb490a295dea3850ccb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f7cbce73-2e9f-4798-8c8e-5bb14910ce6f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7c9308ac3b60442693295b25eb8a4e51$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2258','PDA Dashboard english','This includes explanation on dashboard in English','2024-08-31 20:47:50.822 +00:00','2024-08-31 20:47:50.822 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7c9308ac3b60442693295b25eb8a4e51$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (296af5a8-ad01-41c2-8648-e9f8ed55f36b): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1050';
Executing (9019f34b-050c-47c8-a9bf-751b564405f1): START TRANSACTION;
Executing (aa06b604-8ced-4111-a9e9-8452c47e9443): COMMIT;
Executing (f7cbce73-2e9f-4798-8c8e-5bb14910ce6f): COMMIT;
Executing (296af5a8-ad01-41c2-8648-e9f8ed55f36b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b8c8e6e19aae40619055bbeab55304bb$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1050','Technology and development','How to improve technology in agriculture','2024-08-31 20:47:50.830 +00:00','2024-08-31 20:47:50.830 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b8c8e6e19aae40619055bbeab55304bb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9019f34b-050c-47c8-a9bf-751b564405f1): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1160';
Executing (db5fb98e-95cc-40b8-a0a4-1d96616e3b41): COMMIT;
Executing (b5a009a7-f686-4c12-a856-eef5e3389603): START TRANSACTION;
Executing (6aef45b2-0247-499b-af64-fd4c9d000b13): START TRANSACTION;
Executing (296af5a8-ad01-41c2-8648-e9f8ed55f36b): COMMIT;
Executing (9019f34b-050c-47c8-a9bf-751b564405f1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_dabec82d8f4845f788c9b6f0d418b16f$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1160','PDA Video Session','Participatory Digital Attestation - Self-explanatory Video','2024-08-31 20:47:50.840 +00:00','2024-08-31 20:47:50.840 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_dabec82d8f4845f788c9b6f0d418b16f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b5a009a7-f686-4c12-a856-eef5e3389603): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1496';
Executing (6aef45b2-0247-499b-af64-fd4c9d000b13): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1598';
Executing (af368d55-42fc-4f08-89ec-e5df9c3724c6): START TRANSACTION;
Processed topic: ಜನರ ಸಹಭಾಗಿತ್ವದಲ್ಲಿ ಗ್ರಾಮೀಣ ವಿಶ್ಲೇಷಣೆಯ ವಿಧಾನಗಳು _ GKM _ BFT/ Participatory Rural Appraisal (PRA)Tools_GKM_BFT
Executing (b27d980e-e44d-4f6a-9a3e-d7b204b34757): START TRANSACTION;
Executing (b5a009a7-f686-4c12-a856-eef5e3389603): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_841cd46dd5404923a362ae508a024a66$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1496','ACT | PDA Deployment','Demonstration of PDA apps and web portal','2024-08-31 20:47:50.848 +00:00','2024-08-31 20:47:50.848 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_841cd46dd5404923a362ae508a024a66$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6aef45b2-0247-499b-af64-fd4c9d000b13): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_eb8247e272a2420298394bddcee415bc$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1598','Capacity building of Jaldoots to energize MGNREGA scheme at Panchayat level','Role of Panchayat in implementing the MGNREGA scheme and inclusion of social disadvantage group in MGNREGA scheme','2024-08-31 20:47:50.850 +00:00','2024-08-31 20:47:50.850 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_eb8247e272a2420298394bddcee415bc$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (af368d55-42fc-4f08-89ec-e5df9c3724c6): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '540';
Executing (b27d980e-e44d-4f6a-9a3e-d7b204b34757): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2523';
Executing (9019f34b-050c-47c8-a9bf-751b564405f1): COMMIT;
Executing (b5a009a7-f686-4c12-a856-eef5e3389603): COMMIT;
Executing (6aef45b2-0247-499b-af64-fd4c9d000b13): COMMIT;
Executing (af368d55-42fc-4f08-89ec-e5df9c3724c6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fd99de96813544dcb983d1bf1457a058$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('540','Topic editing - Test','Testing it out','2024-08-31 20:47:50.859 +00:00','2024-08-31 20:47:50.859 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fd99de96813544dcb983d1bf1457a058$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b27d980e-e44d-4f6a-9a3e-d7b204b34757): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_08fc7b84027b4a20b78fb23982ac8c71$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2523','PDA Demo','This includes a demonstration on PDA Apps and Portal.','2024-08-31 20:47:50.860 +00:00','2024-08-31 20:47:50.860 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_08fc7b84027b4a20b78fb23982ac8c71$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed topic: ACT | PDA Deployment
Executing (af4e7457-bdc4-4565-8ad3-76c710b8c753): START TRANSACTION;
Executing (bef4f693-5bb4-46ea-ad7e-0059c019fc94): START TRANSACTION;
Executing (af368d55-42fc-4f08-89ec-e5df9c3724c6): COMMIT;
Executing (45397a52-a207-4039-a9f7-60b0f25e9d22): START TRANSACTION;
Executing (af4e7457-bdc4-4565-8ad3-76c710b8c753): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '117';
Executing (bef4f693-5bb4-46ea-ad7e-0059c019fc94): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2373';
Executing (ef9a5ae6-685f-4e0b-b4c0-ae94bd81580b): START TRANSACTION;
Executing (45397a52-a207-4039-a9f7-60b0f25e9d22): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2352';
Executing (b27d980e-e44d-4f6a-9a3e-d7b204b34757): COMMIT;
Executing (af4e7457-bdc4-4565-8ad3-76c710b8c753): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fc290ede37484573abd5848c99d1daf8$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('117','स्वच्छ पानी को पाने की जंग','स्वच्छ पानी को पाने की जंग','2024-08-31 20:47:50.873 +00:00','2024-08-31 20:47:50.873 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fc290ede37484573abd5848c99d1daf8$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bef4f693-5bb4-46ea-ad7e-0059c019fc94): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_17714f2853704b0a85d82ef66fceaa57$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2373','Test Topic AJY','Example','2024-08-31 20:47:50.875 +00:00','2024-08-31 20:47:50.875 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_17714f2853704b0a85d82ef66fceaa57$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ef9a5ae6-685f-4e0b-b4c0-ae94bd81580b): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '3828';
Executing (45397a52-a207-4039-a9f7-60b0f25e9d22): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ed6739199b934fce941c731d3e850c4a$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2352','Test for Content','Test','2024-08-31 20:47:50.877 +00:00','2024-08-31 20:47:50.877 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ed6739199b934fce941c731d3e850c4a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (af4e7457-bdc4-4565-8ad3-76c710b8c753): COMMIT;
Executing (bef4f693-5bb4-46ea-ad7e-0059c019fc94): COMMIT;
Executing (ef9a5ae6-685f-4e0b-b4c0-ae94bd81580b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4432772220b346599720551a951ab977$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('3828','PDA structure Demo','sss','2024-08-31 20:47:50.879 +00:00','2024-08-31 20:47:50.879 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4432772220b346599720551a951ab977$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a9df02f5-f8fb-4d5b-8ccc-17b7d83fa0d4): START TRANSACTION;
Executing (a3771d46-f6ce-43e2-94ee-cba0be094447): START TRANSACTION;
Executing (63330cc0-0d2d-40ac-a573-9d161a4b469b): START TRANSACTION;
Executing (ef9a5ae6-685f-4e0b-b4c0-ae94bd81580b): COMMIT;
Executing (a9df02f5-f8fb-4d5b-8ccc-17b7d83fa0d4): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1569';
Executing (45397a52-a207-4039-a9f7-60b0f25e9d22): COMMIT;
Executing (a3771d46-f6ce-43e2-94ee-cba0be094447): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1361';
Executing (63330cc0-0d2d-40ac-a573-9d161a4b469b): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '151';
Executing (001c5e2b-9088-44a0-9aaf-15e932c49cbf): START TRANSACTION;
Executing (a9df02f5-f8fb-4d5b-8ccc-17b7d83fa0d4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4d05dd55d34845d2aea70ce2d80b41aa$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1569','Wheat Crop Training','Wheat crop Package of Practices, Practical training, Demonstration field visit
Jivamrut making practical training','2024-08-31 20:47:50.893 +00:00','2024-08-31 20:47:50.893 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4d05dd55d34845d2aea70ce2d80b41aa$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a3771d46-f6ce-43e2-94ee-cba0be094447): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8a00f76bc8bd4b7f8a86a0b17930be60$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1361','pda trial2','test','2024-08-31 20:47:50.895 +00:00','2024-08-31 20:47:50.895 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8a00f76bc8bd4b7f8a86a0b17930be60$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (63330cc0-0d2d-40ac-a573-9d161a4b469b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_56d34a0bb6aa41b18b80a9829ccb81c8$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('151','Planning techniques and best practices','Project management workshop - gantt chrt, stakeholders.','2024-08-31 20:47:50.897 +00:00','2024-08-31 20:47:50.897 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_56d34a0bb6aa41b18b80a9829ccb81c8$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (001c5e2b-9088-44a0-9aaf-15e932c49cbf): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2265';
Processed topic: Test for Content
Executing (651cdfd7-367c-4c8c-a909-5dcc3e5c0848): START TRANSACTION;
Executing (a3771d46-f6ce-43e2-94ee-cba0be094447): COMMIT;
Executing (63330cc0-0d2d-40ac-a573-9d161a4b469b): COMMIT;
Executing (001c5e2b-9088-44a0-9aaf-15e932c49cbf): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3ffff84b7c854c2e91b5f5631d4715e6$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2265','PDA Additional features Tamil','includes information on additional features','2024-08-31 20:47:50.903 +00:00','2024-08-31 20:47:50.903 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3ffff84b7c854c2e91b5f5631d4715e6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (651cdfd7-367c-4c8c-a909-5dcc3e5c0848): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '115';
Executing (a9df02f5-f8fb-4d5b-8ccc-17b7d83fa0d4): COMMIT;
Executing (f705b49a-4289-489e-b9b5-42339de5c10f): START TRANSACTION;
Executing (29cbd008-1ef2-41cc-8a8e-b6913e15c3b0): START TRANSACTION;
Executing (001c5e2b-9088-44a0-9aaf-15e932c49cbf): COMMIT;
Executing (651cdfd7-367c-4c8c-a909-5dcc3e5c0848): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1600ac701ba84d24a294d210a3cf389a$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('115','Manu Test Topic','Testing','2024-08-31 20:47:50.914 +00:00','2024-08-31 20:47:50.914 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1600ac701ba84d24a294d210a3cf389a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4bbbe5d5-21e3-4217-8df7-a6c58ca72476): START TRANSACTION;
Executing (f705b49a-4289-489e-b9b5-42339de5c10f): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2212';
Executing (29cbd008-1ef2-41cc-8a8e-b6913e15c3b0): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263541636';
Executing (f4020bc9-58fe-4670-a97a-9d8ecadae8c0): START TRANSACTION;
Executing (651cdfd7-367c-4c8c-a909-5dcc3e5c0848): COMMIT;
Executing (4bbbe5d5-21e3-4217-8df7-a6c58ca72476): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1570';
Executing (f705b49a-4289-489e-b9b5-42339de5c10f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4aba3b0fefaf46ef9aea2e729643721e$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2212','ಅಂತರ್ಜಲ ಚೇತನ - ಮಾದರಿ ವಿಷಯ','ಪಿಡಿಎ ಬಳಕೆಗೆ ಇದು ಒಂದು ಉದಾಹರಣೆ','2024-08-31 20:47:50.926 +00:00','2024-08-31 20:47:50.926 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4aba3b0fefaf46ef9aea2e729643721e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (29cbd008-1ef2-41cc-8a8e-b6913e15c3b0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_71b58fe43a82471d8f2da00cb5d02feb$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263541636','JD Test - Reporting on block plan','The topic will help participants to understand the instructions of the program','2024-08-31 20:47:50.928 +00:00','2024-08-31 20:47:50.928 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_71b58fe43a82471d8f2da00cb5d02feb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f4020bc9-58fe-4670-a97a-9d8ecadae8c0): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '324';
Executing (980bdd30-4385-41ef-a1c0-9753e550dbe7): START TRANSACTION;
Executing (f705b49a-4289-489e-b9b5-42339de5c10f): COMMIT;
Executing (29cbd008-1ef2-41cc-8a8e-b6913e15c3b0): COMMIT;
Executing (f4020bc9-58fe-4670-a97a-9d8ecadae8c0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6ecc2fd67a674f0b9ea2f72c1776b5d5$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('324','Ground Water and Aquifers (Updated)','GWA','2024-08-31 20:47:50.935 +00:00','2024-08-31 20:47:50.935 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6ecc2fd67a674f0b9ea2f72c1776b5d5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (980bdd30-4385-41ef-a1c0-9753e550dbe7): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '318';
Executing (4bbbe5d5-21e3-4217-8df7-a6c58ca72476): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d70656d531a04494a8030147b55b1cb5$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1570','Wheat Crop Training','Wheat Crop Package of Practices, Practical training, Demonstration field visit
Jivamrut Making practical','2024-08-31 20:47:50.939 +00:00','2024-08-31 20:47:50.939 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d70656d531a04494a8030147b55b1cb5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (31df80cd-99d8-413f-b92d-2c2fb5df733d): START TRANSACTION;
Executing (58a45fcd-6fe7-4ad2-b3e8-76b1d2d0c75d): START TRANSACTION;
Executing (f4020bc9-58fe-4670-a97a-9d8ecadae8c0): COMMIT;
Executing (980bdd30-4385-41ef-a1c0-9753e550dbe7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_eaee1fdec5534851a3c7ad280641ac17$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('318','Water Village Budget','How to create a water budget for a village','2024-08-31 20:47:50.946 +00:00','2024-08-31 20:47:50.946 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_eaee1fdec5534851a3c7ad280641ac17$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (31df80cd-99d8-413f-b92d-2c2fb5df733d): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1027';
Executing (58a45fcd-6fe7-4ad2-b3e8-76b1d2d0c75d): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1609';
Executing (623d0a2d-3d6c-4f05-82ed-f7531215ea64): START TRANSACTION;
Executing (4bbbe5d5-21e3-4217-8df7-a6c58ca72476): COMMIT;
Executing (31df80cd-99d8-413f-b92d-2c2fb5df733d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_31dc4f80c40c4ef4ad9805edd4a5114d$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1027','Test 1','testing and trial','2024-08-31 20:47:50.954 +00:00','2024-08-31 20:47:50.954 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_31dc4f80c40c4ef4ad9805edd4a5114d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (58a45fcd-6fe7-4ad2-b3e8-76b1d2d0c75d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_288a771e68e14d9194053096d8123d65$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1609','Capacity building of Jaldoots on MGNREGA schemes provisions','Introduction of MGNREGA schemes, Role of Panchayats in implementing the MGNREGA scheme, Participatory MGNREGA planning, Success stories of MGNREGA','2024-08-31 20:47:50.956 +00:00','2024-08-31 20:47:50.956 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_288a771e68e14d9194053096d8123d65$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (623d0a2d-3d6c-4f05-82ed-f7531215ea64): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2279';
Executing (980bdd30-4385-41ef-a1c0-9753e550dbe7): COMMIT;
Executing (31df80cd-99d8-413f-b92d-2c2fb5df733d): COMMIT;
Executing (58a45fcd-6fe7-4ad2-b3e8-76b1d2d0c75d): COMMIT;
Executing (623d0a2d-3d6c-4f05-82ed-f7531215ea64): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cc19b5477e33468a9f36ca6bc01e8529$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2279','Techniques of Irrigation','This session will explain different techniques of Irrigation','2024-08-31 20:47:50.962 +00:00','2024-08-31 20:47:50.962 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cc19b5477e33468a9f36ca6bc01e8529$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (70028fa6-f542-4f69-b066-16c5036f5305): START TRANSACTION;
Executing (31d71da3-74e6-4095-90e9-e27f1104962c): START TRANSACTION;
Executing (567919ad-cd51-48a2-984c-d45b241c788d): START TRANSACTION;
Executing (623d0a2d-3d6c-4f05-82ed-f7531215ea64): COMMIT;
Executing (70028fa6-f542-4f69-b066-16c5036f5305): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1428';
Processed topic: Water Village Budget
Executing (be7fb975-03c2-4440-825f-984313686b41): START TRANSACTION;
Executing (31d71da3-74e6-4095-90e9-e27f1104962c): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '843';
Executing (567919ad-cd51-48a2-984c-d45b241c788d): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1568';
Executing (b82adc41-7588-4658-8f92-b0405e384484): START TRANSACTION;
Executing (70028fa6-f542-4f69-b066-16c5036f5305): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6d68f9eb61bf4ed69f41ec655b898889$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1428','Content Development | T1.01 | DG','Intensive Training on Content','2024-08-31 20:47:50.977 +00:00','2024-08-31 20:47:50.977 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6d68f9eb61bf4ed69f41ec655b898889$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (be7fb975-03c2-4440-825f-984313686b41): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263541628';
Executing (31d71da3-74e6-4095-90e9-e27f1104962c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_adae516e21ac471b910f2f0d98270232$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('843','Water Village Budget','budget allocation','2024-08-31 20:47:50.980 +00:00','2024-08-31 20:47:50.980 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_adae516e21ac471b910f2f0d98270232$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (567919ad-cd51-48a2-984c-d45b241c788d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f893f6bc78524312ab49381f5bc29275$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1568','Wheat Crop Training','Wheat Crop Package of Practices, Practical Training, Demonstration Field Visit
Jivamrut Making Practical','2024-08-31 20:47:50.982 +00:00','2024-08-31 20:47:50.982 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f893f6bc78524312ab49381f5bc29275$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b82adc41-7588-4658-8f92-b0405e384484): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1724';
Executing (70028fa6-f542-4f69-b066-16c5036f5305): COMMIT;
Executing (31d71da3-74e6-4095-90e9-e27f1104962c): COMMIT;
Executing (567919ad-cd51-48a2-984c-d45b241c788d): COMMIT;
Executing (b82adc41-7588-4658-8f92-b0405e384484): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f70bb9ac3dec4fc69ce1e74406a9e43c$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1724','TOT of Bhujal Janakar','TOT on Defunct well Recharge Intervention','2024-08-31 20:47:50.987 +00:00','2024-08-31 20:47:50.987 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f70bb9ac3dec4fc69ce1e74406a9e43c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (be7fb975-03c2-4440-825f-984313686b41): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0acf9893918b4659857cedfdb0526d7f$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263541628','JD test - Monitoring of the Block Plan','The topic will give instructions for monitoring of block plan. ','2024-08-31 20:47:50.989 +00:00','2024-08-31 20:47:50.989 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0acf9893918b4659857cedfdb0526d7f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed topic: Water Village Budget
Executing (38004796-7843-44d5-a07d-e0941002ec89): START TRANSACTION;
Processed topic: Wheat Crop Training
Executing (b2f3e872-b39c-426b-840f-7d1ce493ca6b): START TRANSACTION;
Executing (b82adc41-7588-4658-8f92-b0405e384484): COMMIT;
Executing (1e7ec3e0-1642-4ea3-bb09-da2b64b18bba): START TRANSACTION;
Executing (38004796-7843-44d5-a07d-e0941002ec89): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2243';
Executing (b2f3e872-b39c-426b-840f-7d1ce493ca6b): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '3896';
Executing (d0c307f3-fb55-41ee-a316-99f4976f9d42): START TRANSACTION;
Executing (1e7ec3e0-1642-4ea3-bb09-da2b64b18bba): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '281';
Executing (be7fb975-03c2-4440-825f-984313686b41): COMMIT;
Executing (38004796-7843-44d5-a07d-e0941002ec89): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1f2ebbaad5ee4c068271a4a9a2577780$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2243','PDA Demo','PDA Demo test','2024-08-31 20:47:51.002 +00:00','2024-08-31 20:47:51.002 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1f2ebbaad5ee4c068271a4a9a2577780$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b2f3e872-b39c-426b-840f-7d1ce493ca6b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c44f9cafd15649af896316f7bb170618$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('3896','Feedback and next steps LL2','Week 4 is about collectively sharing and receiving feedback for the content breakdown framework filled by each organisation. We''ll also go over some criteria for selection of mode of training/capacity building.','2024-08-31 20:47:51.003 +00:00','2024-08-31 20:47:51.003 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c44f9cafd15649af896316f7bb170618$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d0c307f3-fb55-41ee-a316-99f4976f9d42): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '3803';
Executing (1e7ec3e0-1642-4ea3-bb09-da2b64b18bba): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_58788943c2294e2faffb9d82e62bc005$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('281','Experience of deploying CB solutions in Meghalaya','Experience sharing','2024-08-31 20:47:51.005 +00:00','2024-08-31 20:47:51.005 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_58788943c2294e2faffb9d82e62bc005$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (38004796-7843-44d5-a07d-e0941002ec89): COMMIT;
Executing (b2f3e872-b39c-426b-840f-7d1ce493ca6b): COMMIT;
Executing (d0c307f3-fb55-41ee-a316-99f4976f9d42): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e77a8bdf8a2a4bcb992dd2ccfbf9b66e$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('3803','Introduction to atomised content','Week 1 is about defining the syllabus and breaking the larger content down into content atoms.','2024-08-31 20:47:51.008 +00:00','2024-08-31 20:47:51.008 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e77a8bdf8a2a4bcb992dd2ccfbf9b66e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ba4ebbcf-e2ce-4dbe-b301-27eafb484cb4): START TRANSACTION;
Executing (e7cb10ec-ae5d-45f0-9487-1b5219d379ac): START TRANSACTION;
Executing (db399973-08cc-4008-ae7f-fe24262baf67): START TRANSACTION;
Executing (ba4ebbcf-e2ce-4dbe-b301-27eafb484cb4): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '164';
Executing (1e7ec3e0-1642-4ea3-bb09-da2b64b18bba): COMMIT;
Executing (e7cb10ec-ae5d-45f0-9487-1b5219d379ac): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '135';
Executing (db399973-08cc-4008-ae7f-fe24262baf67): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1831';
Executing (ba4ebbcf-e2ce-4dbe-b301-27eafb484cb4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1c0f7e8e45f3406d9f221305a7344d63$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('164','Testing Again','testing for video','2024-08-31 20:47:51.016 +00:00','2024-08-31 20:47:51.016 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1c0f7e8e45f3406d9f221305a7344d63$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d0c307f3-fb55-41ee-a316-99f4976f9d42): COMMIT;
Executing (e7cb10ec-ae5d-45f0-9487-1b5219d379ac): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c7e4ce71f7b04f24baff3ad107fe125d$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('135','PDA session: Training, Capacity Building and Hands on','Participatory Digital Attestation: Training, Capacity Building and Hands on.
The session is meant for orienting on PDA, App download, training on program webpage, capacity building on adding program admin/content admin/trainers. In addition, hands on session to familiarize with all aspects of PDA and trouble shoot any issues.','2024-08-31 20:47:51.018 +00:00','2024-08-31 20:47:51.018 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c7e4ce71f7b04f24baff3ad107fe125d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (db399973-08cc-4008-ae7f-fe24262baf67): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_63ca398351c0406abf12ff842434921d$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1831','Midterm Measurement of Desilting(Jalsamruddhi)','Jalsamruddhi','2024-08-31 20:47:51.019 +00:00','2024-08-31 20:47:51.019 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_63ca398351c0406abf12ff842434921d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed topic: Experience of deploying CB solutions in Meghalaya
Executing (5c0b0d2f-d2cd-4585-a8ea-0df5a888e9de): START TRANSACTION;
Executing (e7cb10ec-ae5d-45f0-9487-1b5219d379ac): COMMIT;
Executing (a810222c-3ab3-469f-ab48-8da397a216ef): START TRANSACTION;
Executing (ba4ebbcf-e2ce-4dbe-b301-27eafb484cb4): COMMIT;
Executing (36136b2f-6458-4634-a5f1-fa4af0f79906): START TRANSACTION;
Executing (a810222c-3ab3-469f-ab48-8da397a216ef): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2185';
Executing (5c0b0d2f-d2cd-4585-a8ea-0df5a888e9de): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '259';
Executing (db399973-08cc-4008-ae7f-fe24262baf67): COMMIT;
Executing (36136b2f-6458-4634-a5f1-fa4af0f79906): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '162';
Executing (a810222c-3ab3-469f-ab48-8da397a216ef): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9758e556fc914aa892c2ebf6790603ce$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2185','Testing Topic lock in time','Test topic creation','2024-08-31 20:47:51.027 +00:00','2024-08-31 20:47:51.027 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9758e556fc914aa892c2ebf6790603ce$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5c0b0d2f-d2cd-4585-a8ea-0df5a888e9de): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3d6ec06c9d894c429c3bd54fcb1454b3$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('259','Arsenic Testing in Ground Water','Field Testing for Arsenic','2024-08-31 20:47:51.028 +00:00','2024-08-31 20:47:51.028 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3d6ec06c9d894c429c3bd54fcb1454b3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (624d55c3-cd60-4bc2-b1d6-ae418c7b5560): START TRANSACTION;
Executing (36136b2f-6458-4634-a5f1-fa4af0f79906): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_475209b5ddb84678a1314ba5e385b186$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('162','GM | Field Measurements | VCFs','Guided Mentoring session on mitigating challenges for field measurements.','2024-08-31 20:47:51.031 +00:00','2024-08-31 20:47:51.031 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_475209b5ddb84678a1314ba5e385b186$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a810222c-3ab3-469f-ab48-8da397a216ef): COMMIT;
Executing (5c0b0d2f-d2cd-4585-a8ea-0df5a888e9de): COMMIT;
Executing (624d55c3-cd60-4bc2-b1d6-ae418c7b5560): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1698';
Executing (aa56c019-0cf2-4638-9c54-73190db10902): START TRANSACTION;
Executing (36136b2f-6458-4634-a5f1-fa4af0f79906): COMMIT;
Executing (449bfce7-10c6-4974-be3b-d3aecd6095b6): START TRANSACTION;
Executing (cd5d0713-504a-492c-a56e-ffe3a9582a82): START TRANSACTION;
Executing (624d55c3-cd60-4bc2-b1d6-ae418c7b5560): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_94d0bb2d0d184fdf8caf695c9418d547$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1698','Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)','Understanding and capacity building of Community and Jaldoots on the Participatory groundwater management, aquifer mapping, crop water budgeting, and development of watershed maps','2024-08-31 20:47:51.040 +00:00','2024-08-31 20:47:51.040 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_94d0bb2d0d184fdf8caf695c9418d547$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (aa56c019-0cf2-4638-9c54-73190db10902): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1501055';
Processed topic: GM | Field Measurements | VCFs
Executing (493faa71-2b63-49af-8355-3fc3caca0f3f): START TRANSACTION;
Executing (449bfce7-10c6-4974-be3b-d3aecd6095b6): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1743';
Executing (cd5d0713-504a-492c-a56e-ffe3a9582a82): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '106';
Executing (493faa71-2b63-49af-8355-3fc3caca0f3f): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '280';
Executing (449bfce7-10c6-4974-be3b-d3aecd6095b6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ac1bd8b427c741bfae11ccb4d3ceffab$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1743','How to Scan QR code test','How to scan QR code','2024-08-31 20:47:51.048 +00:00','2024-08-31 20:47:51.048 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ac1bd8b427c741bfae11ccb4d3ceffab$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cd5d0713-504a-492c-a56e-ffe3a9582a82): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_510d7935b6f4415f932b77bf92d76e3f$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('106','Attestation Sharing','Details of sharing attestations','2024-08-31 20:47:51.050 +00:00','2024-08-31 20:47:51.050 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_510d7935b6f4415f932b77bf92d76e3f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (624d55c3-cd60-4bc2-b1d6-ae418c7b5560): COMMIT;
Executing (aa56c019-0cf2-4638-9c54-73190db10902): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3a63162e6625448ab1f720aa382ed554$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1501055','Test topic in new UI','Test topic','2024-08-31 20:47:51.052 +00:00','2024-08-31 20:47:51.052 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3a63162e6625448ab1f720aa382ed554$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (493faa71-2b63-49af-8355-3fc3caca0f3f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_02cb2c69877b4d0796a6c99dfecb0fdb$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('280','Capacity Building Solutions','An overview of the CB solutions','2024-08-31 20:47:51.053 +00:00','2024-08-31 20:47:51.053 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_02cb2c69877b4d0796a6c99dfecb0fdb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (449bfce7-10c6-4974-be3b-d3aecd6095b6): COMMIT;
Executing (cd5d0713-504a-492c-a56e-ffe3a9582a82): COMMIT;
Executing (4e7782ff-26f4-4af9-b49b-49639dacdb89): START TRANSACTION;
Executing (493faa71-2b63-49af-8355-3fc3caca0f3f): COMMIT;
Executing (50b67c88-1c18-45f7-b899-d43684808c0a): START TRANSACTION;
Executing (f227b287-8fe1-485c-bece-65258200db32): START TRANSACTION;
Executing (4e7782ff-26f4-4af9-b49b-49639dacdb89): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1390';
Executing (aa56c019-0cf2-4638-9c54-73190db10902): COMMIT;
Executing (43931807-28d0-44a1-81e2-e8e40c6125f5): START TRANSACTION;
Executing (50b67c88-1c18-45f7-b899-d43684808c0a): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1040';
Executing (f227b287-8fe1-485c-bece-65258200db32): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2152';
Executing (4e7782ff-26f4-4af9-b49b-49639dacdb89): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_39c52af076204dc2bfc45cf186e534d5$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1390','PDA Demo','Demonstration of PDA features','2024-08-31 20:47:51.067 +00:00','2024-08-31 20:47:51.067 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_39c52af076204dc2bfc45cf186e534d5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (43931807-28d0-44a1-81e2-e8e40c6125f5): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1289';
Executing (50b67c88-1c18-45f7-b899-d43684808c0a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ed4a24b678bd46e09306468e96202173$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1040','Water management','Basics o water management','2024-08-31 20:47:51.069 +00:00','2024-08-31 20:47:51.069 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ed4a24b678bd46e09306468e96202173$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f227b287-8fe1-485c-bece-65258200db32): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5ef97f42e78b48c196266581296316ba$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2152','How People learn about Water','How can people learn about water, what to teach, where to learn','2024-08-31 20:47:51.070 +00:00','2024-08-31 20:47:51.070 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5ef97f42e78b48c196266581296316ba$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d9d686e1-d42b-4b07-bdfb-aa0147e2db6f): START TRANSACTION;
Executing (43931807-28d0-44a1-81e2-e8e40c6125f5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8db232ab6a3749d9926abb911eb73c5c$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1289','PDA Trial','Checking to see if content can be added to a topic even after creating a session','2024-08-31 20:47:51.073 +00:00','2024-08-31 20:47:51.073 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8db232ab6a3749d9926abb911eb73c5c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (50b67c88-1c18-45f7-b899-d43684808c0a): COMMIT;
Executing (f227b287-8fe1-485c-bece-65258200db32): COMMIT;
Executing (d9d686e1-d42b-4b07-bdfb-aa0147e2db6f): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263541648';
Executing (4e7782ff-26f4-4af9-b49b-49639dacdb89): COMMIT;
Executing (43931807-28d0-44a1-81e2-e8e40c6125f5): COMMIT;
Executing (c025bcaf-8cab-4f20-b601-45c01ca94a69): START TRANSACTION;
Executing (27335eda-e286-43a0-8749-e3baea2fc127): START TRANSACTION;
Executing (d9d686e1-d42b-4b07-bdfb-aa0147e2db6f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a666be9f9f9142a5a4045deceb663087$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263541648','JD test - Executing the JalShala ','The topic will help participants to understand the instructions of the program','2024-08-31 20:47:51.082 +00:00','2024-08-31 20:47:51.082 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a666be9f9f9142a5a4045deceb663087$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e3451f7f-6b6f-482d-9c91-e4ab12d3e2c8): START TRANSACTION;
Executing (c025bcaf-8cab-4f20-b601-45c01ca94a69): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '3677';
Executing (27335eda-e286-43a0-8749-e3baea2fc127): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2254';
Executing (06b7beda-c365-452a-a33b-dbb32ed6f186): START TRANSACTION;
Executing (e3451f7f-6b6f-482d-9c91-e4ab12d3e2c8): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1520';
Executing (c025bcaf-8cab-4f20-b601-45c01ca94a69): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_28ad6d69c5b14291a474892ce48b3543$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('3677','Introduction to Learning Experience Framework','Week 2 is about using certain criteria to prioritize 1-2 learning points for virtual training within your programs and detailing one of those points through a simplified framework.','2024-08-31 20:47:51.088 +00:00','2024-08-31 20:47:51.088 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_28ad6d69c5b14291a474892ce48b3543$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (27335eda-e286-43a0-8749-e3baea2fc127): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_935471d35a9d4f5abdc7a3d8c02a9bff$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2254','PDA DEMO english','Demonstration in english','2024-08-31 20:47:51.089 +00:00','2024-08-31 20:47:51.089 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_935471d35a9d4f5abdc7a3d8c02a9bff$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (06b7beda-c365-452a-a33b-dbb32ed6f186): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2112';
Executing (d9d686e1-d42b-4b07-bdfb-aa0147e2db6f): COMMIT;
Executing (e3451f7f-6b6f-482d-9c91-e4ab12d3e2c8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_676e9488555348cb8fd3f13f22ea041e$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1520','PDA mock session - Churu','This session is a mock planned in one block of Churu to understand the process for actual deployment later.','2024-08-31 20:47:51.092 +00:00','2024-08-31 20:47:51.092 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_676e9488555348cb8fd3f13f22ea041e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c025bcaf-8cab-4f20-b601-45c01ca94a69): COMMIT;
Executing (27335eda-e286-43a0-8749-e3baea2fc127): COMMIT;
Executing (06b7beda-c365-452a-a33b-dbb32ed6f186): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f4a7a085cba64074b8338baa9b8abad6$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2112','Test 1','test','2024-08-31 20:47:51.094 +00:00','2024-08-31 20:47:51.094 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f4a7a085cba64074b8338baa9b8abad6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e3451f7f-6b6f-482d-9c91-e4ab12d3e2c8): COMMIT;
Executing (3eec4de2-9a35-4f8f-8d25-6cf27b3bcbb5): START TRANSACTION;
Executing (af018dc7-ff5e-43d0-a312-094de8b776d5): START TRANSACTION;
Executing (b5c8cab4-ac6d-4a1b-97c8-e086f3f7516f): START TRANSACTION;
Executing (82a3adaa-3172-4115-8a8f-e34acd4924c0): START TRANSACTION;
Executing (3eec4de2-9a35-4f8f-8d25-6cf27b3bcbb5): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2371';
Executing (af018dc7-ff5e-43d0-a312-094de8b776d5): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2260';
Executing (b5c8cab4-ac6d-4a1b-97c8-e086f3f7516f): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1360';
Executing (06b7beda-c365-452a-a33b-dbb32ed6f186): COMMIT;
Executing (82a3adaa-3172-4115-8a8f-e34acd4924c0): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '3256';
Executing (3eec4de2-9a35-4f8f-8d25-6cf27b3bcbb5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fb2831d59c344bfe809d4869f5732a94$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2371','ಅಟಲ್ ಭೂಜಲ್ ಯೋಜನೆಯ ಅವಲೋಕನ','ಅಟಲ್ ಭೂಜಲ್ ಯೋಜನೆಯ ಸಂಕ್ಷಿಪ್ತ ಅವಲೋಕನ ಹಾಗು ಈ ಯೋಜನೆಯಡಿ ಪಾತ್ರವಿರುವ ಎಲ್ಲಾ ಪಾಲುದಾರರ ಜವಾಬ್ದಾರಿಗಳ ಬಗ್ಗೆ ಮಾಹಿತಿ.','2024-08-31 20:47:51.104 +00:00','2024-08-31 20:47:51.104 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fb2831d59c344bfe809d4869f5732a94$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (af018dc7-ff5e-43d0-a312-094de8b776d5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a04b805bc8224f5eb5afc2debdd514b4$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2260','PDA  Hands on Hindi','Includes Hand on in Hindi','2024-08-31 20:47:51.105 +00:00','2024-08-31 20:47:51.105 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a04b805bc8224f5eb5afc2debdd514b4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b5c8cab4-ac6d-4a1b-97c8-e086f3f7516f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f00b88db1c39429dabedf764f51b12ee$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1360','pda trial','testing','2024-08-31 20:47:51.107 +00:00','2024-08-31 20:47:51.107 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f00b88db1c39429dabedf764f51b12ee$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (82a3adaa-3172-4115-8a8f-e34acd4924c0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ab1b635950da49e8a7f0b62cdf3eb666$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('3256','Ensuring Community Participation','dsafdsa','2024-08-31 20:47:51.108 +00:00','2024-08-31 20:47:51.108 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ab1b635950da49e8a7f0b62cdf3eb666$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3eec4de2-9a35-4f8f-8d25-6cf27b3bcbb5): COMMIT;
Executing (af018dc7-ff5e-43d0-a312-094de8b776d5): COMMIT;
Executing (2c81320b-e141-451a-b3ca-c0a331209534): START TRANSACTION;
Executing (82a3adaa-3172-4115-8a8f-e34acd4924c0): COMMIT;
Executing (6587bba9-2f3f-4214-b86a-4150ae8afd40): START TRANSACTION;
Executing (68e562dc-4e1f-44a2-a8d6-ce59328783ea): START TRANSACTION;
Executing (2c81320b-e141-451a-b3ca-c0a331209534): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1585';
Executing (b5c8cab4-ac6d-4a1b-97c8-e086f3f7516f): COMMIT;
Processed topic: Ensuring Community Participation
Executing (e8b68935-3c8b-4aba-bc89-ee32a6efb2ae): START TRANSACTION;
Executing (6587bba9-2f3f-4214-b86a-4150ae8afd40): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '422';
Executing (68e562dc-4e1f-44a2-a8d6-ce59328783ea): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1519';
Executing (2c81320b-e141-451a-b3ca-c0a331209534): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bd9b929b17e84af884b2d079d53e2f9c$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1585','Water Literacy Campaign','Water Literacy Campaign','2024-08-31 20:47:51.120 +00:00','2024-08-31 20:47:51.120 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bd9b929b17e84af884b2d079d53e2f9c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e8b68935-3c8b-4aba-bc89-ee32a6efb2ae): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1557';
Executing (6587bba9-2f3f-4214-b86a-4150ae8afd40): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e43028dee29d46b1a25c262d5e9e8c45$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('422','Training-PDA-FES','Hands on','2024-08-31 20:47:51.122 +00:00','2024-08-31 20:47:51.122 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e43028dee29d46b1a25c262d5e9e8c45$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (68e562dc-4e1f-44a2-a8d6-ce59328783ea): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2ebd6891470e421db806f0ba153d47c4$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1519','Crop Water Budgeting','Farmer will be trained on crop water budgeting - need process and benefits','2024-08-31 20:47:51.123 +00:00','2024-08-31 20:47:51.123 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2ebd6891470e421db806f0ba153d47c4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a8dc2aad-e976-4f17-89a6-efbb664a1343): START TRANSACTION;
Executing (e8b68935-3c8b-4aba-bc89-ee32a6efb2ae): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_dc929aeebb03459dac380cbacdfbd7ec$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1557','TOT on Crop Water Budgeting','Crop water Budgeting Overview Training with ACT team Khambhaliya','2024-08-31 20:47:51.125 +00:00','2024-08-31 20:47:51.125 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_dc929aeebb03459dac380cbacdfbd7ec$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6587bba9-2f3f-4214-b86a-4150ae8afd40): COMMIT;
Executing (68e562dc-4e1f-44a2-a8d6-ce59328783ea): COMMIT;
Executing (a8dc2aad-e976-4f17-89a6-efbb664a1343): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1533';
Executing (2c81320b-e141-451a-b3ca-c0a331209534): COMMIT;
Executing (e8b68935-3c8b-4aba-bc89-ee32a6efb2ae): COMMIT;
Executing (46852384-c1d4-4ce6-8eb9-b9dd8bb80020): START TRANSACTION;
Executing (41ccc954-4b7d-4982-9a01-9c8dba16e98b): START TRANSACTION;
Executing (a8dc2aad-e976-4f17-89a6-efbb664a1343): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_70f8172ff43d4e7f802ec4b5053b440f$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1533','test','test for time load','2024-08-31 20:47:51.131 +00:00','2024-08-31 20:47:51.131 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_70f8172ff43d4e7f802ec4b5053b440f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4cd1028f-de08-401f-93b6-a6e0e0e39c11): START TRANSACTION;
Executing (46852384-c1d4-4ce6-8eb9-b9dd8bb80020): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '236';
Executing (41ccc954-4b7d-4982-9a01-9c8dba16e98b): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263545684';
Executing (7d267384-e00d-4339-b63f-a31d55cf1f19): START TRANSACTION;
Executing (4cd1028f-de08-401f-93b6-a6e0e0e39c11): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2273';
Executing (46852384-c1d4-4ce6-8eb9-b9dd8bb80020): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_42d5eb6c2fdf48098cdfaa25e64e41ad$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('236','पाण्याची सुरक्षितता आणि शाश्वतता संकल्पना व पाण्याच्या शाश्वत सेवा पुरवठ्याचे महत्व । प्रशिक्षक','पाण्याची सुरक्षितता आणि शाश्वतता संकल्पना, महत्वाचे घटक, अपेक्षित उपक्रम, सरपंच व गावातील भागधारकांसाठी उपलब्ध जाहलेल्या संधी','2024-08-31 20:47:51.136 +00:00','2024-08-31 20:47:51.136 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_42d5eb6c2fdf48098cdfaa25e64e41ad$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (41ccc954-4b7d-4982-9a01-9c8dba16e98b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_aed67109f7c647ba932964a9139bac08$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263545684','JD - Jalshala Event Day 1 - During JalKhel Cards','Find the details & resource of the topic attached. ','2024-08-31 20:47:51.137 +00:00','2024-08-31 20:47:51.137 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_aed67109f7c647ba932964a9139bac08$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7d267384-e00d-4339-b63f-a31d55cf1f19): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '215656840';
Executing (a8dc2aad-e976-4f17-89a6-efbb664a1343): COMMIT;
Executing (4cd1028f-de08-401f-93b6-a6e0e0e39c11): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4fc47bbaf8fd4b579d10ff91a7ede952$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2273','Data analysis techniques for VCF','This session includes technique for data analysis for VCF','2024-08-31 20:47:51.139 +00:00','2024-08-31 20:47:51.139 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4fc47bbaf8fd4b579d10ff91a7ede952$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (46852384-c1d4-4ce6-8eb9-b9dd8bb80020): COMMIT;
Executing (41ccc954-4b7d-4982-9a01-9c8dba16e98b): COMMIT;
Executing (7d267384-e00d-4339-b63f-a31d55cf1f19): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9a6597cc4c3a442d94e4151161cbd2cb$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('215656840','Introduction to Engagement and Check for Understanding','Week 1 is about understanding what we mean by engagement in a virtual training session and looking at some engagement strategies to use in our sessions.','2024-08-31 20:47:51.141 +00:00','2024-08-31 20:47:51.141 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9a6597cc4c3a442d94e4151161cbd2cb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4cd1028f-de08-401f-93b6-a6e0e0e39c11): COMMIT;
Processed topic: पाण्याची सुरक्षितता आणि शाश्वतता संकल्पना व पाण्याच्या शाश्वत सेवा पुरवठ्याचे महत्व । प्रशिक्षक
Executing (47d3943a-43be-49fa-b2b9-e2233fc079f3): START TRANSACTION;
Executing (7f8437e1-1284-4f0d-ab32-9d66f9f6599c): START TRANSACTION;
Executing (a3d7471e-365b-4204-bc02-aeed249cd2f4): START TRANSACTION;
Executing (bcef85e9-8307-4796-aa8e-d503d98ca9a9): START TRANSACTION;
Executing (47d3943a-43be-49fa-b2b9-e2233fc079f3): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '129';
Executing (7f8437e1-1284-4f0d-ab32-9d66f9f6599c): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263530707';
Executing (a3d7471e-365b-4204-bc02-aeed249cd2f4): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '125';
Executing (7d267384-e00d-4339-b63f-a31d55cf1f19): COMMIT;
Executing (bcef85e9-8307-4796-aa8e-d503d98ca9a9): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '137';
Executing (47d3943a-43be-49fa-b2b9-e2233fc079f3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e432c1e0ff6d49c19ca3a12acbce6cea$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('129','Test + rakhi','Test','2024-08-31 20:47:51.151 +00:00','2024-08-31 20:47:51.151 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e432c1e0ff6d49c19ca3a12acbce6cea$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7f8437e1-1284-4f0d-ab32-9d66f9f6599c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f9570cda763d44e1ac99355791e8b5f4$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263530707','ವಾರ್ಡ್ ಸಭೆಯನ್ನು ದಾಖಲಿಸುವುದು _GKM_BFT/ Capturing Ward Sabha GKM_BFT','ವಾರ್ಡ್ ಸಭೆಯನ್ನು ದಾಖಲಿಸುವುದು _GKM_BFT/ Capturing Ward Sabha GKM_BFT','2024-08-31 20:47:51.152 +00:00','2024-08-31 20:47:51.152 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f9570cda763d44e1ac99355791e8b5f4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a3d7471e-365b-4204-bc02-aeed249cd2f4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_721448addb5244d09c447ac34cccb69f$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('125','Test content AKR','Content will be tested','2024-08-31 20:47:51.153 +00:00','2024-08-31 20:47:51.153 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_721448addb5244d09c447ac34cccb69f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bcef85e9-8307-4796-aa8e-d503d98ca9a9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c11c0c1d7c8a491690fe0256dacc9f77$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('137','water Cycle','Water cycle','2024-08-31 20:47:51.154 +00:00','2024-08-31 20:47:51.154 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c11c0c1d7c8a491690fe0256dacc9f77$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (47d3943a-43be-49fa-b2b9-e2233fc079f3): COMMIT;
Executing (b2fb69c4-19f8-41fb-b045-3ce1fe546429): START TRANSACTION;
Executing (bcef85e9-8307-4796-aa8e-d503d98ca9a9): COMMIT;
Processed topic: Test + rakhi
Executing (30b88074-5bc1-4278-8801-239d7d9e2aa9): START TRANSACTION;
Executing (b2fb69c4-19f8-41fb-b045-3ce1fe546429): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '4082';
Executing (7f8437e1-1284-4f0d-ab32-9d66f9f6599c): COMMIT;
Executing (a3d7471e-365b-4204-bc02-aeed249cd2f4): COMMIT;
Processed topic: water Cycle
Executing (e2032cb6-51f2-4af9-893a-a0ded088ab26): START TRANSACTION;
Executing (30b88074-5bc1-4278-8801-239d7d9e2aa9): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1109';
Executing (b2fb69c4-19f8-41fb-b045-3ce1fe546429): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5e919846d9644095b6be503f177004c1$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('4082','Introduction to prioritization and planning for content creation','Week 3 is about learning to prioritize what to work on when taking the functional grid into operations.','2024-08-31 20:47:51.164 +00:00','2024-08-31 20:47:51.164 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5e919846d9644095b6be503f177004c1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed topic: ವಾರ್ಡ್ ಸಭೆಯನ್ನು ದಾಖಲಿಸುವುದು _GKM_BFT/ Capturing Ward Sabha GKM_BFT
Executing (79cf50cf-f167-4d23-9818-ffbf4fc8f8d8): START TRANSACTION;
Executing (e2032cb6-51f2-4af9-893a-a0ded088ab26): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1582';
Executing (30b88074-5bc1-4278-8801-239d7d9e2aa9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8b9f44c6aab844aba58b33c00acc2bfe$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1109','PDA Pilot Demo for Vritti Team','PDA demo','2024-08-31 20:47:51.168 +00:00','2024-08-31 20:47:51.168 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8b9f44c6aab844aba58b33c00acc2bfe$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (79cf50cf-f167-4d23-9818-ffbf4fc8f8d8): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '238';
Executing (fbd7660e-da5a-4d9e-8957-f0d14a17f7cd): START TRANSACTION;
Executing (e2032cb6-51f2-4af9-893a-a0ded088ab26): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_76db365e1a8742fe9bb9722798add461$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1582','Data collection and Monitoring','Data collection and Monitoring Training Part 1 BJs','2024-08-31 20:47:51.173 +00:00','2024-08-31 20:47:51.173 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_76db365e1a8742fe9bb9722798add461$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (30b88074-5bc1-4278-8801-239d7d9e2aa9): COMMIT;
Executing (79cf50cf-f167-4d23-9818-ffbf4fc8f8d8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3328316c08fc4eac87a76feb8dd5fd33$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('238','प्रात्यक्षिक - वयक्तिक नळ जोड देण्याची कार्यपद्धत, पाणी पुरवठा योजनेचे संचालन, जल जीवन मिशन अंतर्गत घ्यावयाचे ग्रामसभेचे ठराव व अदयावत ठेवावयाचे दस्तावेज पाणी पुरवठा योजनेच्या देखभाल व दुरुस्तीचे अंदाजपत्रक तयार करणे व पाणीपट्टी आकारणीची  कार्यपद्धत  । प्','प्रत्यक्ष नळ जोडणी कार्यपद्धत, वितरण व्यवस्था, समारूपाने पाणी पुरवठा, पाण्याचा योग्य वापर 
पाणी पुरवठा योजनेच्या संचलनासाठी तपासणी सूची, ज्या वाड्यावस्त्यांवरील कुटुंबांना नळ जोडणी देता येऊ शकणार अशा वाड्यावस्त्यांसह 
जल जीवन मिशनसाठी आवश्यक ठरावांची मंजुरी आणि अदयावत ठेवावयाच्या दस्तऐवजांचा तपशील - गाव कृती आराखडा, खाजगी नळ जोडणी 
पाणी पुरवठा योजनेचे आर्थिक अंदाजपत्रक तयार करणे व पाणीपट्टी वसुलीसाठी व्यवस्थानची निर्मिती करणे','2024-08-31 20:47:51.175 +00:00','2024-08-31 20:47:51.175 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3328316c08fc4eac87a76feb8dd5fd33$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (fbd7660e-da5a-4d9e-8957-f0d14a17f7cd): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '247703422';
Executing (b2fb69c4-19f8-41fb-b045-3ce1fe546429): COMMIT;
Executing (e2032cb6-51f2-4af9-893a-a0ded088ab26): COMMIT;
Executing (7cbcff30-d586-490e-830b-289271082fe2): START TRANSACTION;
Executing (fbd7660e-da5a-4d9e-8957-f0d14a17f7cd): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_09271bce76ab476b9bb29ba1a7feb7a7$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('247703422','Check for Understanding','Week 2 is about deep diving into strategies for Check for Understanding and practicing how to use the engagement strategies we''ve learnt so far using actual content.','2024-08-31 20:47:51.180 +00:00','2024-08-31 20:47:51.180 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_09271bce76ab476b9bb29ba1a7feb7a7$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (a0660897-7a67-4f25-9603-f4b4230b177a): START TRANSACTION;
Executing (7cbcff30-d586-490e-830b-289271082fe2): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263541634';
Processed topic: Introduction to prioritization and planning for content creation
Executing (48550042-0c77-4e74-a1d0-fffe4027aa08): START TRANSACTION;
Executing (79cf50cf-f167-4d23-9818-ffbf4fc8f8d8): COMMIT;
Executing (a0660897-7a67-4f25-9603-f4b4230b177a): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263528473';
Executing (7cbcff30-d586-490e-830b-289271082fe2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_500d6f46a8e246eb8ff010c1dc759940$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263541634','JD test - Conducting a block trainers TOT','The topic will help participants to understand the instructions of the program','2024-08-31 20:47:51.185 +00:00','2024-08-31 20:47:51.185 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_500d6f46a8e246eb8ff010c1dc759940$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (48550042-0c77-4e74-a1d0-fffe4027aa08): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1181';
Executing (fbd7660e-da5a-4d9e-8957-f0d14a17f7cd): COMMIT;
Executing (a0660897-7a67-4f25-9603-f4b4230b177a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_13780019c9ec4ca0a51e223988ca7212$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263528473','Test_JS_ Orientation on Jala Sanjeevini_GKM/PDO','Example of how to create tasks','2024-08-31 20:47:51.187 +00:00','2024-08-31 20:47:51.187 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_13780019c9ec4ca0a51e223988ca7212$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7cbcff30-d586-490e-830b-289271082fe2): COMMIT;
Executing (48550042-0c77-4e74-a1d0-fffe4027aa08): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b2a95f98dda4414e97cd551b4360027c$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1181','Virtual Training Format','Basics of Virtual Training Format and some must-haves','2024-08-31 20:47:51.189 +00:00','2024-08-31 20:47:51.189 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b2a95f98dda4414e97cd551b4360027c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed topic: प्रात्यक्षिक - वयक्तिक नळ जोड देण्याची कार्यपद्धत, पाणी पुरवठा योजनेचे संचालन, जल जीवन मिशन अंतर्गत घ्यावयाचे ग्रामसभेचे ठराव व अदयावत ठेवावयाचे दस्तावेज पाणी पुरवठा योजनेच्या देखभाल व दुरुस्तीचे अंदाजपत्रक तयार करणे व पाणीपट्टी आकारणीची  कार्यपद्धत  । प्
Executing (cb915d84-c804-4358-890b-2cd3b6c4c22a): START TRANSACTION;
Executing (a0660897-7a67-4f25-9603-f4b4230b177a): COMMIT;
Executing (bd71110b-93cb-4bac-be9f-95e2a18f3103): START TRANSACTION;
Executing (91ccca3f-3da7-4743-a8f4-991450eb278f): START TRANSACTION;
Processed topic: Test_JS_ Orientation on Jala Sanjeevini_GKM/PDO
Executing (577f05d4-e3d9-466f-b7d4-5d7b2f8b6eb2): START TRANSACTION;
Executing (bd71110b-93cb-4bac-be9f-95e2a18f3103): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '176';
Executing (91ccca3f-3da7-4743-a8f4-991450eb278f): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263545683';
Executing (cb915d84-c804-4358-890b-2cd3b6c4c22a): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1542';
Executing (48550042-0c77-4e74-a1d0-fffe4027aa08): COMMIT;
Executing (577f05d4-e3d9-466f-b7d4-5d7b2f8b6eb2): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '283';
Executing (bd71110b-93cb-4bac-be9f-95e2a18f3103): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c956ccb1babb4f2ab75f0726d2d7f549$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('176','Arsenic','Water','2024-08-31 20:47:51.198 +00:00','2024-08-31 20:47:51.198 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c956ccb1babb4f2ab75f0726d2d7f549$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (91ccca3f-3da7-4743-a8f4-991450eb278f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_db0884f8ee6f4764af3ec74b9f79791a$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263545683','JD - Identification of JalDoots from the respective Water Supply Scheme as per guidelines','Find the details & resource of the topic attached. ','2024-08-31 20:47:51.199 +00:00','2024-08-31 20:47:51.199 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_db0884f8ee6f4764af3ec74b9f79791a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cb915d84-c804-4358-890b-2cd3b6c4c22a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_306f888c7b9d4d34afb7003120c2f727$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1542','Content and PDA - Capacity Building Package','A Guide on Content, A primer on PDA and links to Functional Grid','2024-08-31 20:47:51.201 +00:00','2024-08-31 20:47:51.201 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_306f888c7b9d4d34afb7003120c2f727$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (577f05d4-e3d9-466f-b7d4-5d7b2f8b6eb2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_46ea0477200a464aa750f45ccc463cd0$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('283','BRLF Role in State Engagements (WB, CG, JH)','Brief on Saturation in JH and engagement in WB','2024-08-31 20:47:51.202 +00:00','2024-08-31 20:47:51.202 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_46ea0477200a464aa750f45ccc463cd0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bd71110b-93cb-4bac-be9f-95e2a18f3103): COMMIT;
Executing (d2e3d490-b0f6-44a7-80df-a3a6be39935d): START TRANSACTION;
Executing (577f05d4-e3d9-466f-b7d4-5d7b2f8b6eb2): COMMIT;
Executing (c160567e-0f99-4626-a8ff-af6f9253d7b3): START TRANSACTION;
Executing (d2e3d490-b0f6-44a7-80df-a3a6be39935d): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '133';
Executing (91ccca3f-3da7-4743-a8f4-991450eb278f): COMMIT;
Executing (cb915d84-c804-4358-890b-2cd3b6c4c22a): COMMIT;
Executing (f4ac61da-4239-461b-8fb8-f98b08c1dd78): START TRANSACTION;
Executing (c160567e-0f99-4626-a8ff-af6f9253d7b3): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2261';
Executing (d2e3d490-b0f6-44a7-80df-a3a6be39935d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_125b0db911bc4f6ebb5d66e559c84e77$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('133','Designing @ scale vs scaling what works','Understand the design princples for both approaches','2024-08-31 20:47:51.213 +00:00','2024-08-31 20:47:51.213 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_125b0db911bc4f6ebb5d66e559c84e77$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (95e4c88f-be41-4f0d-880a-bf42481db770): START TRANSACTION;
Executing (f4ac61da-4239-461b-8fb8-f98b08c1dd78): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2259';
Executing (c160567e-0f99-4626-a8ff-af6f9253d7b3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_aed6c3785f6341ee87a08c7badb1f2e5$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2261','PDA  Dashboard Hindi','Includes PDA Dashboard in Hindi','2024-08-31 20:47:51.218 +00:00','2024-08-31 20:47:51.218 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_aed6c3785f6341ee87a08c7badb1f2e5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d2e3d490-b0f6-44a7-80df-a3a6be39935d): COMMIT;
Executing (95e4c88f-be41-4f0d-880a-bf42481db770): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263549878';
Executing (b1c71ad5-2193-4f72-a123-316774472bde): START TRANSACTION;
Executing (f4ac61da-4239-461b-8fb8-f98b08c1dd78): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2be4ae7a0f804db4bc492e9c40c0fa11$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2259','PDA Demo Hindi','Includes PDA Demo in Hindi','2024-08-31 20:47:51.224 +00:00','2024-08-31 20:47:51.224 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2be4ae7a0f804db4bc492e9c40c0fa11$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c160567e-0f99-4626-a8ff-af6f9253d7b3): COMMIT;
Executing (28bc915b-aad0-444e-9d2c-0b60f7098013): START TRANSACTION;
Executing (95e4c88f-be41-4f0d-880a-bf42481db770): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_57ccbfabb29e48a6ac8bba8fe7c8fd2b$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263549878','Planning the Jalshala','The participants need to submit their JalShala Plan','2024-08-31 20:47:51.228 +00:00','2024-08-31 20:47:51.228 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_57ccbfabb29e48a6ac8bba8fe7c8fd2b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b1c71ad5-2193-4f72-a123-316774472bde): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1559';
Executing (f4ac61da-4239-461b-8fb8-f98b08c1dd78): COMMIT;
Executing (494e8286-cfc5-4d90-b3f2-73718f4e84d1): START TRANSACTION;
Executing (28bc915b-aad0-444e-9d2c-0b60f7098013): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1427';
Executing (1b1629c1-71a7-477f-a863-fb950179040b): START TRANSACTION;
Executing (494e8286-cfc5-4d90-b3f2-73718f4e84d1): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263541626';
Executing (95e4c88f-be41-4f0d-880a-bf42481db770): COMMIT;
Executing (b1c71ad5-2193-4f72-a123-316774472bde): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9a9347864831456e93b34dba9bcec0fc$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1559','Water Saving Practices','We will be learning about the Best practices on water Saving in current scenario','2024-08-31 20:47:51.239 +00:00','2024-08-31 20:47:51.239 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9a9347864831456e93b34dba9bcec0fc$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1b1629c1-71a7-477f-a863-fb950179040b): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263554837';
Executing (494e8286-cfc5-4d90-b3f2-73718f4e84d1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_90654f3c127e4a89a8f302b3c4f123c1$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263541626','JD test - Train the Block coordinators','The following document will help give instruction. ','2024-08-31 20:47:51.242 +00:00','2024-08-31 20:47:51.242 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_90654f3c127e4a89a8f302b3c4f123c1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (dd54ea12-acc8-4cc9-9c57-345d82237622): START TRANSACTION;
Executing (28bc915b-aad0-444e-9d2c-0b60f7098013): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_02bb126cd04440799c980200eba5798b$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1427','Adding content before scans','Test','2024-08-31 20:47:51.245 +00:00','2024-08-31 20:47:51.245 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_02bb126cd04440799c980200eba5798b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1b1629c1-71a7-477f-a863-fb950179040b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_50ddc33c319149cf99e2fc2f10a1d970$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263554837','Execution of the JalShala','JalShala is a 2 day workshop within the JalDoot programme, an initiative by JJM, Assam. This part will capture the different dynamics of the execution of the JalShala','2024-08-31 20:47:51.246 +00:00','2024-08-31 20:47:51.246 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_50ddc33c319149cf99e2fc2f10a1d970$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (494e8286-cfc5-4d90-b3f2-73718f4e84d1): COMMIT;
Executing (dd54ea12-acc8-4cc9-9c57-345d82237622): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '3057';
Executing (b1c71ad5-2193-4f72-a123-316774472bde): COMMIT;
Executing (1b1629c1-71a7-477f-a863-fb950179040b): COMMIT;
Executing (64e7db9c-0cb4-429c-878d-54e626d96ecf): START TRANSACTION;
Executing (dd54ea12-acc8-4cc9-9c57-345d82237622): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_87daad3e8b00448b88e47042bf05d022$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('3057','भूजलाची ओळख व भूजल व्यवस्थापनाची गरज | Introduction to groundwater -Need for GW management','What is GW and how we understand it.','2024-08-31 20:47:51.254 +00:00','2024-08-31 20:47:51.254 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_87daad3e8b00448b88e47042bf05d022$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (28bc915b-aad0-444e-9d2c-0b60f7098013): COMMIT;
Executing (7b2c6ca2-4421-422b-b787-f8b68f1b7d5c): START TRANSACTION;
Executing (64e7db9c-0cb4-429c-878d-54e626d96ecf): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '441';
Executing (bf09eee3-0b42-4b0e-af79-4b1a8cdb517c): START TRANSACTION;
Executing (7b2c6ca2-4421-422b-b787-f8b68f1b7d5c): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '119';
Executing (64e7db9c-0cb4-429c-878d-54e626d96ecf): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9a211796a4234816b9743348cb5e261e$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('441','Community Mobilization','Definition, process, steps involved','2024-08-31 20:47:51.262 +00:00','2024-08-31 20:47:51.262 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9a211796a4234816b9743348cb5e261e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bf09eee3-0b42-4b0e-af79-4b1a8cdb517c): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1734';
Processed topic: Adding content before scans
Executing (3c6fe98e-7a02-4212-a080-fae1a0d72877): START TRANSACTION;
Executing (dd54ea12-acc8-4cc9-9c57-345d82237622): COMMIT;
Executing (7b2c6ca2-4421-422b-b787-f8b68f1b7d5c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fb40c3ea33ed4bbab74249151f404a8e$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('119','PDA - Participant App','User guide on using PDA - Participant app','2024-08-31 20:47:51.266 +00:00','2024-08-31 20:47:51.266 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fb40c3ea33ed4bbab74249151f404a8e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (64e7db9c-0cb4-429c-878d-54e626d96ecf): COMMIT;
Executing (bf09eee3-0b42-4b0e-af79-4b1a8cdb517c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c0067735dbd041518cb0267e6dc35f74$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1734','Site Selection of Desilting work Process of Government Approval and data Collection of its work','Jalsamrudhhi','2024-08-31 20:47:51.269 +00:00','2024-08-31 20:47:51.269 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c0067735dbd041518cb0267e6dc35f74$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3c6fe98e-7a02-4212-a080-fae1a0d72877): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1499';
Executing (7b2c6ca2-4421-422b-b787-f8b68f1b7d5c): COMMIT;
Executing (4a869861-1fbd-4a5c-ac5d-9ae6669d62cd): START TRANSACTION;
Executing (bf09eee3-0b42-4b0e-af79-4b1a8cdb517c): COMMIT;
Executing (90c174db-b056-4ee4-9858-7136f82b11d0): START TRANSACTION;
Executing (af533400-df6f-4259-b884-2667c7ee5c46): START TRANSACTION;
Executing (4a869861-1fbd-4a5c-ac5d-9ae6669d62cd): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1460';
Executing (af8fa53a-ac9f-4108-88bb-ea77fc9d610a): START TRANSACTION;
Executing (90c174db-b056-4ee4-9858-7136f82b11d0): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1556';
Executing (3c6fe98e-7a02-4212-a080-fae1a0d72877): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_505ae5c2e80c4e84903b2204dae22c4b$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1499','PDA Demo and Deployment Training | ACT','The session includes demonstration of PDA apps and Program portal.','2024-08-31 20:47:51.281 +00:00','2024-08-31 20:47:51.281 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_505ae5c2e80c4e84903b2204dae22c4b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (af533400-df6f-4259-b884-2667c7ee5c46): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263530709';
Executing (4a869861-1fbd-4a5c-ac5d-9ae6669d62cd): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_571ab836aaca447cb8a7ebc4d4882ad6$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1460','PDA Dash Board checks','Checking if Geographical locations are tapped while scanning in and out being offline','2024-08-31 20:47:51.284 +00:00','2024-08-31 20:47:51.284 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_571ab836aaca447cb8a7ebc4d4882ad6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (af8fa53a-ac9f-4108-88bb-ea77fc9d610a): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '442';
Executing (90c174db-b056-4ee4-9858-7136f82b11d0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fdd2cfcdbe194b2aab3542e1550ca74d$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1556','PDA Demo','The session will include explanation and demonstration on PDA','2024-08-31 20:47:51.287 +00:00','2024-08-31 20:47:51.287 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fdd2cfcdbe194b2aab3542e1550ca74d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (af533400-df6f-4259-b884-2667c7ee5c46): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f02428e6bff34874a04fb2dae36e03e9$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263530709','ಗ್ರಾಮ ಸಭೆಯನ್ನು ದಾಖಲಿಸುವುದು _DEO /  Capturing Gram Sabha _ DEO','ಗ್ರಾಮ ಸಭೆಯನ್ನು ದಾಖಲಿಸುವುದು _DEO /  Capturing Gram Sabha _ DEO','2024-08-31 20:47:51.289 +00:00','2024-08-31 20:47:51.289 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f02428e6bff34874a04fb2dae36e03e9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4a869861-1fbd-4a5c-ac5d-9ae6669d62cd): COMMIT;
Executing (af8fa53a-ac9f-4108-88bb-ea77fc9d610a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8e16aa0269f14e4eb1d3649a43e8738d$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('442','SAP','organic farming','2024-08-31 20:47:51.292 +00:00','2024-08-31 20:47:51.292 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8e16aa0269f14e4eb1d3649a43e8738d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3c6fe98e-7a02-4212-a080-fae1a0d72877): COMMIT;
Executing (af533400-df6f-4259-b884-2667c7ee5c46): COMMIT;
Executing (77efd568-f587-4ba2-a056-121e92fef89a): START TRANSACTION;
Executing (af8fa53a-ac9f-4108-88bb-ea77fc9d610a): COMMIT;
Executing (90c174db-b056-4ee4-9858-7136f82b11d0): COMMIT;
Processed topic: ಗ್ರಾಮ ಸಭೆಯನ್ನು ದಾಖಲಿಸುವುದು _DEO /  Capturing Gram Sabha _ DEO
Executing (24a43901-ecbc-4c36-b06d-d1a264ed75f8): START TRANSACTION;
Executing (77efd568-f587-4ba2-a056-121e92fef89a): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263541620';
Executing (df37af37-90f0-4b82-be76-2bada29a947b): START TRANSACTION;
Executing (e8605817-0897-4a9a-8bcf-8bf83e290222): START TRANSACTION;
Executing (24a43901-ecbc-4c36-b06d-d1a264ed75f8): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263544008';
Executing (77efd568-f587-4ba2-a056-121e92fef89a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d95f74fb63f44003afc53a4ea2ab682e$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263541620','JD test - Training of District Coordinators for JalDoot Program Execution','The topic will help participants about role of District Coordinators. ','2024-08-31 20:47:51.304 +00:00','2024-08-31 20:47:51.304 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d95f74fb63f44003afc53a4ea2ab682e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (df37af37-90f0-4b82-be76-2bada29a947b): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '121';
Executing (e8605817-0897-4a9a-8bcf-8bf83e290222): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1558';
Executing (33c7b66f-0889-47be-89e2-0c79cb4fa20a): START TRANSACTION;
Executing (24a43901-ecbc-4c36-b06d-d1a264ed75f8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b5f8f071c2bf435daf797721f669804b$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263544008','AJD-Test','just test purpose','2024-08-31 20:47:51.310 +00:00','2024-08-31 20:47:51.310 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b5f8f071c2bf435daf797721f669804b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (77efd568-f587-4ba2-a056-121e92fef89a): COMMIT;
Executing (df37af37-90f0-4b82-be76-2bada29a947b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_545a05f2cb934a7a8729a27330257a91$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('121','PDA - Program App','User guide for PDA - Program App','2024-08-31 20:47:51.311 +00:00','2024-08-31 20:47:51.311 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_545a05f2cb934a7a8729a27330257a91$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e8605817-0897-4a9a-8bcf-8bf83e290222): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2c1eff1f398c4b3cbf14aa799d09a903$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1558','PDA - Hands on','The session includes practicing the steps involved in rolling out of a program through PDA.','2024-08-31 20:47:51.312 +00:00','2024-08-31 20:47:51.312 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2c1eff1f398c4b3cbf14aa799d09a903$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (33c7b66f-0889-47be-89e2-0c79cb4fa20a): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '226';
Executing (24a43901-ecbc-4c36-b06d-d1a264ed75f8): COMMIT;
Executing (1c577bb0-b090-4bdd-a5bf-042bb07aa13c): START TRANSACTION;
Executing (df37af37-90f0-4b82-be76-2bada29a947b): COMMIT;
Processed topic: AJD-Test
Executing (7ad63080-8819-4ff1-a252-0f7c95894033): START TRANSACTION;
Executing (1c577bb0-b090-4bdd-a5bf-042bb07aa13c): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '124';
Executing (ec82c48e-9d5f-497c-ae7a-0dd3fff43c99): START TRANSACTION;
Executing (33c7b66f-0889-47be-89e2-0c79cb4fa20a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bb2251c5890b4a188ba0ce0fcf4ab625$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('226','Operation and  maintenance of Water Supply scheme | MTs','Session covers technical, financial and institutional management of schemes, responsibilities of Sarpanch, Jalsurakshak, VWSC members and Gramsevaks  in O&M','2024-08-31 20:47:51.325 +00:00','2024-08-31 20:47:51.325 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bb2251c5890b4a188ba0ce0fcf4ab625$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e8605817-0897-4a9a-8bcf-8bf83e290222): COMMIT;
Executing (7ad63080-8819-4ff1-a252-0f7c95894033): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1502';
Executing (1c577bb0-b090-4bdd-a5bf-042bb07aa13c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_52c8f8fa563f4496a840c9076ee6f423$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('124','Test - Guru','Testdsdsd','2024-08-31 20:47:51.328 +00:00','2024-08-31 20:47:51.328 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_52c8f8fa563f4496a840c9076ee6f423$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ec82c48e-9d5f-497c-ae7a-0dd3fff43c99): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1420';
Executing (7ad63080-8819-4ff1-a252-0f7c95894033): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_385cc930a62f489f848bcfc57ec58039$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1502','PDA  demonstration','Demo on PDA apps','2024-08-31 20:47:51.330 +00:00','2024-08-31 20:47:51.330 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_385cc930a62f489f848bcfc57ec58039$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (219b7aa3-edbb-433a-9de5-4821635a30cd): START TRANSACTION;
Executing (33c7b66f-0889-47be-89e2-0c79cb4fa20a): COMMIT;
Executing (7ad63080-8819-4ff1-a252-0f7c95894033): COMMIT;
Executing (219b7aa3-edbb-433a-9de5-4821635a30cd): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '3448';
Executing (ec82c48e-9d5f-497c-ae7a-0dd3fff43c99): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bb3ece58b3da42558ca5331429b9d1cf$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1420','Getting Started with PDA','PDA - for Participants','2024-08-31 20:47:51.335 +00:00','2024-08-31 20:47:51.335 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bb3ece58b3da42558ca5331429b9d1cf$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1c577bb0-b090-4bdd-a5bf-042bb07aa13c): COMMIT;
Executing (91da866c-aeb8-499e-8c8c-42e10a7d209c): START TRANSACTION;
Executing (219b7aa3-edbb-433a-9de5-4821635a30cd): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_faf0bfab0fe1408b8c119000e6523bca$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('3448','PDA Dashboard Demo','The session will include a demo of how to access the data from the dashboard.','2024-08-31 20:47:51.338 +00:00','2024-08-31 20:47:51.338 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_faf0bfab0fe1408b8c119000e6523bca$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed topic: Operation and  maintenance of Water Supply scheme | MTs
Executing (afccbccb-8a1f-4557-ab6e-a9072e19d8ce): START TRANSACTION;
Executing (91da866c-aeb8-499e-8c8c-42e10a7d209c): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2168';
Executing (6940bb0d-43a5-4ba6-95b2-9cf979cd787b): START TRANSACTION;
Executing (ec82c48e-9d5f-497c-ae7a-0dd3fff43c99): COMMIT;
Executing (91da866c-aeb8-499e-8c8c-42e10a7d209c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f811a0a07b4443368064856fc2c21a76$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2168','Topic Lock-in time testing','Topic Lock-in time testing','2024-08-31 20:47:51.344 +00:00','2024-08-31 20:47:51.344 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f811a0a07b4443368064856fc2c21a76$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6940bb0d-43a5-4ba6-95b2-9cf979cd787b): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '131';
Executing (afccbccb-8a1f-4557-ab6e-a9072e19d8ce): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '3753';
Executing (219b7aa3-edbb-433a-9de5-4821635a30cd): COMMIT;
Executing (91da866c-aeb8-499e-8c8c-42e10a7d209c): COMMIT;
Executing (6940bb0d-43a5-4ba6-95b2-9cf979cd787b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_db918d3c5f1c43e3a9523e25355679c8$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('131','Uzra Creating Topic - Test','Testing the method of creating a new topic through Program App.','2024-08-31 20:47:51.350 +00:00','2024-08-31 20:47:51.350 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_db918d3c5f1c43e3a9523e25355679c8$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (afccbccb-8a1f-4557-ab6e-a9072e19d8ce): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1c3f0632cfe94ba9b6d3c9e13e2d221d$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('3753','Recap and potential next steps with the learning experience','Week 4 is about presenting the work done by the partners during the learning loop and discussing the potential next steps with the learning experience','2024-08-31 20:47:51.352 +00:00','2024-08-31 20:47:51.352 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1c3f0632cfe94ba9b6d3c9e13e2d221d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (20c49614-a46b-4e8e-8619-a86e92f22a84): START TRANSACTION;
Executing (2b68ad23-33ab-41d9-9532-02328075d04c): START TRANSACTION;
Executing (6940bb0d-43a5-4ba6-95b2-9cf979cd787b): COMMIT;
Executing (afccbccb-8a1f-4557-ab6e-a9072e19d8ce): COMMIT;
Executing (20c49614-a46b-4e8e-8619-a86e92f22a84): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '416';
Executing (7376157e-d3a6-4c2a-9a7d-6e87fc56c034): START TRANSACTION;
Executing (2b68ad23-33ab-41d9-9532-02328075d04c): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '126';
Executing (1042eb3b-1cfc-449d-a708-f44e4b0271fb): START TRANSACTION;
Executing (99980bf0-2ebc-4fdd-9063-600d1c6613d4): START TRANSACTION;
Executing (20c49614-a46b-4e8e-8619-a86e92f22a84): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_28fb27a20d184d6ca0686d5d6fa0720f$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('416','Ground Water and Aquifers (v3)','Ground water introduction and Aquifers | MTs','2024-08-31 20:47:51.366 +00:00','2024-08-31 20:47:51.366 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_28fb27a20d184d6ca0686d5d6fa0720f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7376157e-d3a6-4c2a-9a7d-6e87fc56c034): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1183';
Executing (2b68ad23-33ab-41d9-9532-02328075d04c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7c7fde1163c74938a5eb137f93f59cae$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('126','Testing','Test content','2024-08-31 20:47:51.368 +00:00','2024-08-31 20:47:51.368 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7c7fde1163c74938a5eb137f93f59cae$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1042eb3b-1cfc-449d-a708-f44e4b0271fb): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '128';
Executing (99980bf0-2ebc-4fdd-9063-600d1c6613d4): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1927';
Executing (2b68ad23-33ab-41d9-9532-02328075d04c): COMMIT;
Executing (1042eb3b-1cfc-449d-a708-f44e4b0271fb): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c8cabfdc00a24ad38c8e36280d05180f$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('128','Test-understand PDA','How to why to when to','2024-08-31 20:47:51.371 +00:00','2024-08-31 20:47:51.371 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c8cabfdc00a24ad38c8e36280d05180f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7376157e-d3a6-4c2a-9a7d-6e87fc56c034): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5c909bd6301146a0a77ec385f0b5581c$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1183','Hub Roles for Virtual Interactions','Basics of the Coordinator, Facilitator and IT Support functions to be performed by the hub','2024-08-31 20:47:51.372 +00:00','2024-08-31 20:47:51.372 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5c909bd6301146a0a77ec385f0b5581c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (20c49614-a46b-4e8e-8619-a86e92f22a84): COMMIT;
Processed topic: Testing
Executing (dda42afe-17cd-4fdf-9de7-2321a59f412c): START TRANSACTION;
Executing (1042eb3b-1cfc-449d-a708-f44e4b0271fb): COMMIT;
Executing (99980bf0-2ebc-4fdd-9063-600d1c6613d4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_12d2f7081be540c7bd7aec82ba21ac41$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1927','Test session for WASSAN','For practice','2024-08-31 20:47:51.376 +00:00','2024-08-31 20:47:51.376 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_12d2f7081be540c7bd7aec82ba21ac41$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (dda42afe-17cd-4fdf-9de7-2321a59f412c): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '127';
Executing (e50b8eb1-af25-499a-a023-e878800481cf): START TRANSACTION;
Executing (7b164f7c-e1b4-45a3-8db0-7b66c4fb9f7a): START TRANSACTION;
Executing (7376157e-d3a6-4c2a-9a7d-6e87fc56c034): COMMIT;
Executing (dda42afe-17cd-4fdf-9de7-2321a59f412c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_973f00ae8d3d4c8290e286150b4e3b64$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('127','Sp_Trial_RWH','Rain Water Harvesting','2024-08-31 20:47:51.381 +00:00','2024-08-31 20:47:51.381 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_973f00ae8d3d4c8290e286150b4e3b64$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e50b8eb1-af25-499a-a023-e878800481cf): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '279';
Executing (7b164f7c-e1b4-45a3-8db0-7b66c4fb9f7a): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1149';
Executing (99980bf0-2ebc-4fdd-9063-600d1c6613d4): COMMIT;
Executing (dda42afe-17cd-4fdf-9de7-2321a59f412c): COMMIT;
Executing (e50b8eb1-af25-499a-a023-e878800481cf): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8363f34ef5ed4fedba2448b4a75d1b03$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('279','Arghyam''s Journey and the need for Re-imagining CB','Arghyam''s background and lessons on building sustainable solutions for water security.','2024-08-31 20:47:51.385 +00:00','2024-08-31 20:47:51.385 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8363f34ef5ed4fedba2448b4a75d1b03$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7b164f7c-e1b4-45a3-8db0-7b66c4fb9f7a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_60a30032f1fd4f8497072a75a644fc04$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1149','PDA Updates','This session includes the briefing on updates on PDA Apps and program portal by Socion.','2024-08-31 20:47:51.386 +00:00','2024-08-31 20:47:51.386 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_60a30032f1fd4f8497072a75a644fc04$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (52c81e76-6f74-48de-8c2e-bc82b123480f): START TRANSACTION;
Executing (d945292d-b6ef-4bf4-8cab-801e6cb6bb21): START TRANSACTION;
Executing (e50b8eb1-af25-499a-a023-e878800481cf): COMMIT;
Executing (7b164f7c-e1b4-45a3-8db0-7b66c4fb9f7a): COMMIT;
Executing (52c81e76-6f74-48de-8c2e-bc82b123480f): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263545681';
Executing (5040e263-fb9d-46ae-b1ea-6efa99b60e90): START TRANSACTION;
Executing (d945292d-b6ef-4bf4-8cab-801e6cb6bb21): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2287';
Executing (d1a42672-30af-4175-babf-8a08f95be35d): START TRANSACTION;
Executing (25db4fd6-e1b7-4d0d-a574-b57bf8fcc057): START TRANSACTION;
Executing (52c81e76-6f74-48de-8c2e-bc82b123480f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_442171a3a05e4d25a900fe2a2a9ff708$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263545681','JD - Facilitate two practical JalShalas for training of Block trainers - 2 ','Find the details & resource of the topic attached. ','2024-08-31 20:47:51.399 +00:00','2024-08-31 20:47:51.399 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_442171a3a05e4d25a900fe2a2a9ff708$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5040e263-fb9d-46ae-b1ea-6efa99b60e90): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '311';
Executing (d945292d-b6ef-4bf4-8cab-801e6cb6bb21): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4658dda24261484bae4ad79b91edc949$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2287','Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff','Cotton Pre Sowing , Soil testing, Irrigation Method,Cotton Sowing Techanology Machine','2024-08-31 20:47:51.401 +00:00','2024-08-31 20:47:51.401 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4658dda24261484bae4ad79b91edc949$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d1a42672-30af-4175-babf-8a08f95be35d): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1603';
Executing (25db4fd6-e1b7-4d0d-a574-b57bf8fcc057): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '4035';
Executing (d945292d-b6ef-4bf4-8cab-801e6cb6bb21): COMMIT;
Executing (d1a42672-30af-4175-babf-8a08f95be35d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1d0019364942486f8bb9bd1571699f0c$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1603','Jaldoots capacity building on Geo-hydrology','types to the soil, type of geo-hydrological maps','2024-08-31 20:47:51.405 +00:00','2024-08-31 20:47:51.405 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1d0019364942486f8bb9bd1571699f0c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5040e263-fb9d-46ae-b1ea-6efa99b60e90): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e37dd153a91e435e812b7a6defae115e$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('311','ss','sss','2024-08-31 20:47:51.406 +00:00','2024-08-31 20:47:51.406 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e37dd153a91e435e812b7a6defae115e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (52c81e76-6f74-48de-8c2e-bc82b123480f): COMMIT;
Executing (c954ae84-e5d1-4ebd-8598-87f8acdb4197): START TRANSACTION;
Executing (d1a42672-30af-4175-babf-8a08f95be35d): COMMIT;
Executing (25db4fd6-e1b7-4d0d-a574-b57bf8fcc057): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_127fe4e6deb148f7af638de16d189762$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('4035','Understanding the Functional Grid','The Learning Objective for this Loop, will be to help participants understand how to build a detailed Functional Grid to enable them to both get the big picture of the needs around learning material in their program, and also be able to plan specifics to prioritise the creation or curation of these.','2024-08-31 20:47:51.411 +00:00','2024-08-31 20:47:51.411 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_127fe4e6deb148f7af638de16d189762$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c954ae84-e5d1-4ebd-8598-87f8acdb4197): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2264';
Executing (3c1745e8-3614-416d-8d26-4a3b3b376c51): START TRANSACTION;
Executing (213e1be9-b494-4021-a246-fe9d7c8944f8): START TRANSACTION;
Executing (5040e263-fb9d-46ae-b1ea-6efa99b60e90): COMMIT;
Executing (c954ae84-e5d1-4ebd-8598-87f8acdb4197): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_73f66d9f38db43e6ab3c8766f15dbe9f$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2264','PDA Dash Board Tamil','Includes explanation on PDA Dashboard in Tamil','2024-08-31 20:47:51.416 +00:00','2024-08-31 20:47:51.416 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_73f66d9f38db43e6ab3c8766f15dbe9f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3c1745e8-3614-416d-8d26-4a3b3b376c51): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '167';
Executing (213e1be9-b494-4021-a246-fe9d7c8944f8): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1417';
Executing (25db4fd6-e1b7-4d0d-a574-b57bf8fcc057): COMMIT;
Executing (c954ae84-e5d1-4ebd-8598-87f8acdb4197): COMMIT;
Executing (3c1745e8-3614-416d-8d26-4a3b3b376c51): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3cd4b86f7c7143cc843d947fdba067af$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('167','Introduction to Fluorosis','Basics','2024-08-31 20:47:51.421 +00:00','2024-08-31 20:47:51.421 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3cd4b86f7c7143cc843d947fdba067af$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (213e1be9-b494-4021-a246-fe9d7c8944f8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_117c1f3cda42419cb53212587a26ad6b$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1417','Getting Started with PDA','PDA - How participants can use it and get benefited from it.','2024-08-31 20:47:51.422 +00:00','2024-08-31 20:47:51.422 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_117c1f3cda42419cb53212587a26ad6b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed topic: ss
Executing (52c1d613-4cd6-4b88-93da-bd991cf09511): START TRANSACTION;
Executing (6bd8a526-d30e-40f6-b3d0-3e5cbb2f4e1f): START TRANSACTION;
Executing (3c1745e8-3614-416d-8d26-4a3b3b376c51): COMMIT;
Executing (52c1d613-4cd6-4b88-93da-bd991cf09511): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '225';
Executing (dff99b80-16ec-4f44-989c-1862055cc7cf): START TRANSACTION;
Executing (6bd8a526-d30e-40f6-b3d0-3e5cbb2f4e1f): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263529080';
Executing (256051f6-0abc-49b8-902b-04dd4a84daa1): START TRANSACTION;
Executing (52c1d613-4cd6-4b88-93da-bd991cf09511): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_75b2295a087c4b07bbf75ffe15f314e5$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('225','Overview of Jal Jeevan Mission | MTs','Session covers aims, challenges, components, types of schemes, eligibility criteria for GP, funding pattern,  role of Gram Panchayats in implementing Mandatory Source Sustainability and Grey Water Management, need for community participation – Focus on FHTC and their role, Institutional arrangements and role of institutions','2024-08-31 20:47:51.435 +00:00','2024-08-31 20:47:51.435 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_75b2295a087c4b07bbf75ffe15f314e5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (dff99b80-16ec-4f44-989c-1862055cc7cf): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263541631';
Executing (213e1be9-b494-4021-a246-fe9d7c8944f8): COMMIT;
Executing (6bd8a526-d30e-40f6-b3d0-3e5cbb2f4e1f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_384410fa7c6642acb1d46ec7564cb801$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263529080','Awareness on Planning Process / ಯೋಜನಾ ಪ್ರಕ್ರಿಯೆಯಲ್ಲಿ ಅರಿವು / GKM BFT','GKM and BFT to understand the Jala Sanjeevini program and the different methods create awareness among different groups of people GKM ಮತ್ತು BFT ಜಲ ಸಂಜೀವಿನಿ ಕಾರ್ಯಕ್ರಮವನ್ನು ಅರ್ಥಮಾಡಿಕೊಳ್ಳಲು ಮತ್ತು ವಿವಿಧ ಗುಂಪುಗಳ ಜನರಲ್ಲಿ ಜಾಗೃತಿ ಮೂಡಿಸಲು ವಿಭಿನ್ನ ವಿಧಾನಗಳು','2024-08-31 20:47:51.439 +00:00','2024-08-31 20:47:51.439 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_384410fa7c6642acb1d46ec7564cb801$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (256051f6-0abc-49b8-902b-04dd4a84daa1): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1712';
Executing (52c1d613-4cd6-4b88-93da-bd991cf09511): COMMIT;
Executing (dff99b80-16ec-4f44-989c-1862055cc7cf): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6dfc2afbc66a4a16b598e45d04593592$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263541631','JD test - Making of a block plan','The topic gives instruction to participants to make block plan','2024-08-31 20:47:51.443 +00:00','2024-08-31 20:47:51.443 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6dfc2afbc66a4a16b598e45d04593592$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6bd8a526-d30e-40f6-b3d0-3e5cbb2f4e1f): COMMIT;
Executing (256051f6-0abc-49b8-902b-04dd4a84daa1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_651d6eee0d88478ca6ef49e9a294e798$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1712','Codes instead of Scans','You can enter a 6 digit code instead of QR codes while recording participation for sessions','2024-08-31 20:47:51.446 +00:00','2024-08-31 20:47:51.446 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_651d6eee0d88478ca6ef49e9a294e798$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed topic: Overview of Jal Jeevan Mission | MTs
Executing (a42064ac-58f9-4c9f-9a03-dc95abbccf40): START TRANSACTION;
Processed topic: Getting Started with PDA
Executing (5c8cd261-a4c5-47c9-ab8f-0489a1d5402e): START TRANSACTION;
Processed topic: Awareness on Planning Process / ಯೋಜನಾ ಪ್ರಕ್ರಿಯೆಯಲ್ಲಿ ಅರಿವು / GKM BFT
Executing (bfd79f43-e8f2-4208-aed7-e3a469a90b18): START TRANSACTION;
Executing (256051f6-0abc-49b8-902b-04dd4a84daa1): COMMIT;
Executing (a42064ac-58f9-4c9f-9a03-dc95abbccf40): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263541824';
Executing (dff99b80-16ec-4f44-989c-1862055cc7cf): COMMIT;
Executing (bfd79f43-e8f2-4208-aed7-e3a469a90b18): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '217';
Executing (7ace0da6-8e6a-479b-aced-14a2d30c1cbf): START TRANSACTION;
Executing (a42064ac-58f9-4c9f-9a03-dc95abbccf40): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9afd3b99fa0f47ed9a1fd3b8e6dc3c2d$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263541824','Training - Springshed Treatment Measures','This topic is created for training on session creation for the Jala Sanjeevini PDA Training.','2024-08-31 20:47:51.457 +00:00','2024-08-31 20:47:51.457 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9afd3b99fa0f47ed9a1fd3b8e6dc3c2d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5c8cd261-a4c5-47c9-ab8f-0489a1d5402e): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263544564';
Executing (bfd79f43-e8f2-4208-aed7-e3a469a90b18): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b36f2e02e48a41c39d2090da622145ef$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('217','Something went wrong','a','2024-08-31 20:47:51.459 +00:00','2024-08-31 20:47:51.459 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b36f2e02e48a41c39d2090da622145ef$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7ace0da6-8e6a-479b-aced-14a2d30c1cbf): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '101';
Executing (22fdbefb-4cb2-4683-9d7d-6c30fe062dc5): START TRANSACTION;
Executing (bfd79f43-e8f2-4208-aed7-e3a469a90b18): COMMIT;
Executing (7ace0da6-8e6a-479b-aced-14a2d30c1cbf): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d8f2d789bce3476bad9e6e249d7a1d6c$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('101','Test topic','Test session creation using program admin access','2024-08-31 20:47:51.463 +00:00','2024-08-31 20:47:51.463 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d8f2d789bce3476bad9e6e249d7a1d6c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (22fdbefb-4cb2-4683-9d7d-6c30fe062dc5): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '2256';
Executing (a42064ac-58f9-4c9f-9a03-dc95abbccf40): COMMIT;
Executing (5c8cd261-a4c5-47c9-ab8f-0489a1d5402e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_037f13eaf0274dfd9f6ba60e6f91d6ae$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263544564',' સલામત પાણી શિક્ષણ કાર્ડ','safe water learning  cards','2024-08-31 20:47:51.466 +00:00','2024-08-31 20:47:51.466 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_037f13eaf0274dfd9f6ba60e6f91d6ae$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed topic: Something went wrong
Executing (a3655f37-3c94-4580-beed-c793216c37fc): START TRANSACTION;
Executing (7ace0da6-8e6a-479b-aced-14a2d30c1cbf): COMMIT;
Executing (22fdbefb-4cb2-4683-9d7d-6c30fe062dc5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_54b372da5c9c496c8a116d3413bc6ef8$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('2256','PDA Hands on English','This includes Hand on session on PDA','2024-08-31 20:47:51.468 +00:00','2024-08-31 20:47:51.468 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_54b372da5c9c496c8a116d3413bc6ef8$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (edf6a251-d2e8-48c8-a728-ab9adaf62ce8): START TRANSACTION;
Executing (a3655f37-3c94-4580-beed-c793216c37fc): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1175';
Executing (906b612e-d4c0-4e60-bb1b-386c032b198e): START TRANSACTION;
Executing (edf6a251-d2e8-48c8-a728-ab9adaf62ce8): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '263530140';
Executing (5c8cd261-a4c5-47c9-ab8f-0489a1d5402e): COMMIT;
Executing (a3655f37-3c94-4580-beed-c793216c37fc): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0d1c101ce3de42b7b36fea5a01045b3b$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1175','PMT Functions & CBP Training Calendar','The topic includes a note on Project Management Functions that need to be performed in any program trying to adopt the Capacity Building Solutions and reimagine Capacity Building process of their program. This topic also includes a list of training topics that the adopting partner needs to go through to kickstart the re-imagination.','2024-08-31 20:47:51.474 +00:00','2024-08-31 20:47:51.474 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0d1c101ce3de42b7b36fea5a01045b3b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (906b612e-d4c0-4e60-bb1b-386c032b198e): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1184';
Executing (edf6a251-d2e8-48c8-a728-ab9adaf62ce8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d2c3f7fcb24c48f7af447d453aa89bf5$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('263530140','ಚುನಾಯಿತ ಪ್ರತಿನಿಧಿಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_PDO/ Orientation on Jala Sanjeevini for Elected Representatives_PDO','ಚುನಾಯಿತ ಪ್ರತಿನಿಧಿಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_PDO/ Orientation on Jala Sanjeevini for Elected Representatives_PDO','2024-08-31 20:47:51.475 +00:00','2024-08-31 20:47:51.475 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d2c3f7fcb24c48f7af447d453aa89bf5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (22fdbefb-4cb2-4683-9d7d-6c30fe062dc5): COMMIT;
Executing (a3655f37-3c94-4580-beed-c793216c37fc): COMMIT;
Executing (906b612e-d4c0-4e60-bb1b-386c032b198e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_82c918052bce43b8bbd1c0208fd7edaf$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1184','Zoom for Hubs & Spokes','1) Zoom features useful for the trainee spokes of a session 
2) Zoom features useful for the trainer hubs','2024-08-31 20:47:51.478 +00:00','2024-08-31 20:47:51.478 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_82c918052bce43b8bbd1c0208fd7edaf$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3777ede4-6afb-4d25-a0e0-11284ad4146e): START TRANSACTION;
Executing (28758db6-a8ec-41ac-901b-259b07902124): START TRANSACTION;
Executing (3777ede4-6afb-4d25-a0e0-11284ad4146e): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1930';
Executing (7340d98b-1e5e-4560-a19b-e764cc096d12): START TRANSACTION;
Executing (edf6a251-d2e8-48c8-a728-ab9adaf62ce8): COMMIT;
Executing (28758db6-a8ec-41ac-901b-259b07902124): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '189';
Executing (3777ede4-6afb-4d25-a0e0-11284ad4146e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_97e3ab411f534ef5be020bcb8fb8b0b8$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1930','Concepts and development of Base map,Landuse map and Geo-morphology maps','Concepts and development of Base map,Landuse map and Geo-morphology maps','2024-08-31 20:47:51.484 +00:00','2024-08-31 20:47:51.484 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_97e3ab411f534ef5be020bcb8fb8b0b8$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7340d98b-1e5e-4560-a19b-e764cc096d12): SELECT "id", "name", "description", "createdAt", "updatedAt" FROM "Topics" AS "Topic" WHERE "Topic"."id" = '1039';
Executing (906b612e-d4c0-4e60-bb1b-386c032b198e): COMMIT;
Executing (28758db6-a8ec-41ac-901b-259b07902124): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0b56ba18bdfe4cf2b04a2cdd55ab2b46$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('189','Project Tracking Tool CLLMPq','Training and tools on CLLMP','2024-08-31 20:47:51.486 +00:00','2024-08-31 20:47:51.486 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0b56ba18bdfe4cf2b04a2cdd55ab2b46$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7340d98b-1e5e-4560-a19b-e764cc096d12): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "Topics", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f5bc3748f80a41808dd0bd0ecca8df1f$ BEGIN INSERT INTO "Topics" ("id","name","description","createdAt","updatedAt") VALUES ('1039','fgdg','fdfd','2024-08-31 20:47:51.487 +00:00','2024-08-31 20:47:51.487 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f5bc3748f80a41808dd0bd0ecca8df1f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."name", (testfunc.response)."description", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Processed topic: ಚುನಾಯಿತ ಪ್ರತಿನಿಧಿಗಳಿಗೆ ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್_PDO/ Orientation on Jala Sanjeevini for Elected Representatives_PDO
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (28758db6-a8ec-41ac-901b-259b07902124): COMMIT;
Executing (7340d98b-1e5e-4560-a19b-e764cc096d12): COMMIT;
Executing (3777ede4-6afb-4d25-a0e0-11284ad4146e): COMMIT;
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: fgdg
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Sign in through codes
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Hands-on
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Test for file size
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: 3 Folds Concepts
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Fluoride in Groundwater in south India
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Demo for  Prasari and BRLF
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Methodologies and Pedagogy in Community Mobilization, Suresh_FES
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Demo
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Data collection techniques for VCFs
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: JD - Making the Block Level Plan
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA - Self explanatory Video
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Demo
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Refresher Training for ACT and DSC
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: speed test
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Demo
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Water Literacy Campaign
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Practice Wheat Crop Training
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Taking good photos and making posters
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Demo and Deployment Training | DSC, Samerth, Yuva Mitra.
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Talaabs
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: ಇದು ಒಂದು ಮಾದರಿ
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Virtual Interactions - Best Practices - Smitha Murthy
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Spring shed Basics
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: 11
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA New features
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Compressed Testing Again
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Content sharing on PDA
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Portal (Test)
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: 3 Fold Program
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Test - 11 Dec
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Demo Tamil
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: JD test - Report on Progress post JalShala with field work Data
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: test
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Demo
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Introduction to Learning Objectives
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Scripts Review | T1.02 | DG
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: water management
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Social Impact
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Demo and Deployment Training for Trainers | ACT
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Hands on
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Priyadarshini- App Testing
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Water Quality Testing
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Wheat Crop Training, 28 Dec, 2020
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Hands on
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: JJM orientation
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Test_ Payment_Ranjith
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Image composition and layouts LL3
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA for Trainers
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Data collection and Analysis
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: MIS Generation
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Thermodynamic treatment of Hard Water
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Demo
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Demo | ACWADAM
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA - Assisted Scan
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Demo (Test)
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Open Sourcing PDA
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Introduction to Process of planning a lesson flow
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Test run for Assisted Scanning
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: JD test - Completing the self assessment course 
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: JD test - Making a JalShala Plan
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Virtual Interactions - Needs and Benefits
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Improved Hands on
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Basics of Hydrogeology | MTs
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Ground water basics
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Echo
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Testing Marathi content
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Demo
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Basics of PDA
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Onboarding for Arghyam Team
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: जल जीवन मिशन । प्रशिक्षक
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Demonstration of PDA - ICDS Supervisors Training
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Post-Harvest Management and Value Addition in Spice Crops.
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Sign in through codes
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Adding content before scans
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Open and free
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Observations and Feedback | T1.03 | DG
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: ಜಲ ಸಂಜೀವಿನಿ ಕುರಿತು ಒರಿಯೆಂಟೇಶನ್ (ಜಾಗೃತಿ ಕಾರ್ಯಕ್ರಮಗಳನ್ನು ದಾಖಲಿಸುವುದು) _ ಬಿಎಫ್ ಟಿ _ ಜಿಕೆಎಂ /  Orientation on Jala Sanjeevini (Capturing Awareness programs)_ BFTs _ GKMs
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Capacity Building @ Scale - Experiences from FES in Odisha
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Additional features
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Introduction to Visual Design LL3
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Hands on Tamil
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: JD test - Assist for Jal Doot Journey
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Dashboard english
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Capacity building of Jaldoots to energize MGNREGA scheme at Panchayat level
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Video Session
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Topic editing - Test
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Demo
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Test Topic AJY
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA structure Demo
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: pda trial2
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: स्वच्छ पानी को पाने की जंग
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Additional features Tamil
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Manu Test Topic
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: JD Test - Reporting on block plan
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Ground Water and Aquifers (Updated)
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Test 1
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: ಅಂತರ್ಜಲ ಚೇತನ - ಮಾದರಿ ವಿಷಯ
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Capacity building of Jaldoots on MGNREGA schemes provisions
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Techniques of Irrigation
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: TOT of Bhujal Janakar
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Demo
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Feedback and next steps LL2
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: JD test - Monitoring of the Block Plan
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Testing Again
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Midterm Measurement of Desilting(Jalsamruddhi)
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Testing Topic lock in time
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA session: Training, Capacity Building and Hands on
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: How to Scan QR code test
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Attestation Sharing
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Arsenic Testing in Ground Water
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Test topic in new UI
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Water management
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Demo
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA DEMO english
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Trial
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: JD test - Executing the JalShala 
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: pda trial
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Crop Water Budgeting
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA  Hands on Hindi
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: JD - Jalshala Event Day 1 - During JalKhel Cards
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: test
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Pilot Demo for Vritti Team
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Data analysis techniques for VCF
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: JD test - Conducting a block trainers TOT
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Check for Understanding
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Virtual Training Format
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Arsenic
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: JD - Identification of JalDoots from the respective Water Supply Scheme as per guidelines
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Designing @ scale vs scaling what works
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Demo Hindi
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Planning the Jalshala
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: JD test - Train the Block coordinators
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA  Dashboard Hindi
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Water Saving Practices
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Community Mobilization
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: भूजलाची ओळख व भूजल व्यवस्थापनाची गरज | Introduction to groundwater -Need for GW management
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Dash Board checks
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: SAP
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Demo and Deployment Training | ACT
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Demo
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Site Selection of Desilting work Process of Government Approval and data Collection of its work
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA - Hands on
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA  demonstration
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Getting Started with PDA
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Dashboard Demo
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Test - Guru
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Recap and potential next steps with the learning experience
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Test-understand PDA
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Ground Water and Aquifers (v3)
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Uzra Creating Topic - Test
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Sp_Trial_RWH
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Test session for WASSAN
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Jaldoots capacity building on Geo-hydrology
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: JD - Facilitate two practical JalShalas for training of Block trainers - 2 
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Dash Board Tamil
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Understanding the Functional Grid
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Introduction to Fluorosis
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Codes instead of Scans
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: JD test - Making of a block plan
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Training - Springshed Treatment Measures
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic:  સલામત પાણી શિક્ષણ કાર્ડ
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Hands on English
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Project Tracking Tool CLLMPq
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Introduction to Simplified Functional Grid Format
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Panchayat and Governance of Commons
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Testing for Shill
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: JD - Facilitate two practical JalShalas for training of Block trainers - 1
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Water User Association Training
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: CBP Orientation
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Orientation on Abhy and PGWM
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Weekly Virtual Sessions
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Orientation on Abhy and PGWM - II
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Improved Hands on Test 2
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Community Participation-Why
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Crop Water Budgeting Overview
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Orientation on Abhy and PGWM - III
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Testing new topic for a training mock run.
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Content Development_DG
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: JD test - Assam
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Execution of the JalShala
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: ಅಂತರ್ಜಲ ಚೇತನ - ಮಾದರಿ ವಿಷಯ (Antarajala Chetana - Example Topic)
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Well Monitoring - Example
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: JD - Jalshala Event Day 2 - Students with Water Supply Scheme
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Introduction to mapping of content and learning needs requirements
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: test ekansh
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: JD - Making the District Plan
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Hands on
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: BRLF Journey and engagement
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: District Workshop training for block team
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: ಜನರ ಸಹಭಾಗಿತ್ವದಲ್ಲಿ ಗ್ರಾಮೀಣ ವಿಶ್ಲೇಷಣೆಯಡಿ ಕಾಲ್ನಡಿಗೆ  ಕುರಿತು _ GKM_BFT / Transect walk_ GKM_BFT
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Planning techniques and best practices
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Content Development | T1.01 | DG
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Introduction to atomised content
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Capacity building of Jaldoots and community on Geo-hydrology, PGWM (Participatory ground water management)
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Wheat Crop Training
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Capacity Building Solutions
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Introduction to Learning Experience Framework
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Training-PDA-FES
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Introduction to Engagement and Check for Understanding
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Test content AKR
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: TOT on Crop Water Budgeting
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: BRLF Role in State Engagements (WB, CG, JH)
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Content and PDA - Capacity Building Package
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Arghyam's Journey and the need for Re-imagining CB
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Updates
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Concepts and development of Base map,Landuse map and Geo-morphology maps
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Zoom for Hubs & Spokes
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PMT Functions & CBP Training Calendar
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Water Literacy Campaign
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Demo Test fr content
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: JD test - Training of Block Coordinators for JalDoot Program 
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: JD test -  Training of Block Trainers for JalDoot Program 
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Introduction to Springs | MTs
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Technology and development
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA mock session - Churu
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: How People learn about Water
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Wheat Crop Training
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Test 1
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Data collection and Monitoring
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Topic Lock-in time testing
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: JD test - Training of District Coordinators for JalDoot Program Execution
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Guided Mentoring Format
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Test topic
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Planning of the JalShala
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Water Literacy Campaign- Site Selection of Desilting Work
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: ಅಟಲ್ ಭೂಜಲ್ ಯೋಜನೆಯ ಅವಲೋಕನ
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Churu Fluorosis PDA demo
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: नळ पाणी पुरवठा सुविधांची देखभाल आणि दुरुस्ती । प्रशिक्षक
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Hub Roles for Virtual Interactions
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Execution of the JalShala
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA - Participant App
Processed topic: PDA - Trainer App
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: Water Literacy Campaign
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA Rollout Demo
Processed topic: Cotton Pre Sowing Training By KVK Kherava - DSC-BCI  PUs Staff
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Executing (default): INSERT INTO "TopicFiles" ("id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","fileName","contentUrl","createdAt","size","topicId","type","contentId","langCode","updatedAt";
Processed topic: PDA - Program App
