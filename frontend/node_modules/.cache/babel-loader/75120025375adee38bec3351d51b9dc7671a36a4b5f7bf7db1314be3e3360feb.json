{"ast":null,"code":"var _jsxFileName = \"/home/lucky/unbundlingwater/frontend/src/MapView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Custom icon for state markers with participant count\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst createStateIcon = (color, count) => {\n  const baseSize = 32;\n  const size = baseSize + Math.min(count * 0.5, 24); // Dynamic size based on count, with a reasonable max\n  const fontSize = 14; // Fixed font size for consistency\n  return new L.Icon({\n    iconUrl: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(`\n        <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n          <circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"${color}\" />\n          <text x=\"12\" y=\"16\" font-size=\"${fontSize}\" fill=\"white\" text-anchor=\"middle\" font-family=\"Arial\" font-weight=\"bold\">${count}</text>\n        </svg>\n      `),\n    iconSize: [size, size],\n    iconAnchor: [size / 2, size],\n    // Anchor in the center bottom\n    popupAnchor: [0, -size] // Position popup above the icon\n  });\n};\n\n// Custom icon for user markers\nconst createUserIcon = color => {\n  return new L.Icon({\n    iconUrl: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(`\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n          <circle cx=\"12\" cy=\"12\" r=\"10\" fill=\"${color}\" />\n          <circle cx=\"12\" cy=\"12\" r=\"6\" fill=\"white\" />\n        </svg>\n      `),\n    iconSize: [32, 32],\n    // Adjust the size as needed\n    iconAnchor: [16, 32],\n    // Anchors the icon to the correct position\n    popupAnchor: [0, -32],\n    // Positions the popup relative to the icon\n    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n    shadowSize: [41, 41]\n  });\n};\nconst stateColors = {\n  'Karnataka': '#f44336',\n  'Maharashtra': '#00FF00',\n  'Tamil Nadu': '#0000FF',\n  'Uttar Pradesh': '#FFFF00',\n  'Gujarat': '#FF69B4',\n  'Rajasthan': '#FF8C00',\n  'West Bengal': '#1E90FF',\n  'Kerala': '#32CD32',\n  'Odisha': '#FF4500',\n  'Telangana': '#8A2BE2',\n  'Punjab': '#FFD700',\n  'Haryana': '#20B2AA',\n  'Assam': '#00CED1',\n  'Madhya Pradesh': '#DC143C',\n  'Bihar': '#FF6347',\n  'Chhattisgarh': '#4682B4',\n  'Jharkhand': '#DA70D6',\n  'Himachal Pradesh': '#7FFF00',\n  'Uttarakhand': '#7B68EE',\n  'Goa': '#D2691E',\n  'Arunachal Pradesh': '#A52A2A',\n  'Nagaland': '#800080',\n  'Manipur': '#00FF7F',\n  'Tripura': '#FF1493',\n  'Meghalaya': '#4B0082',\n  'Sikkim': '#F5FFFA',\n  'Andaman and Nicobar Islands': '#E0FFFF',\n  'Chandigarh': '#C71585',\n  'Dadra and Nagar Haveli and Daman and Diu': '#FFB6C1',\n  'Lakshadweep': '#E6E6FA',\n  'Delhi': '#FFE4E1',\n  'Puducherry': '#F0E68C',\n  'Jammu and Kashmir': '#D8BFD8',\n  'Ladakh': '#F4A460',\n  'Sikkim': '#D3D3D3',\n  'Nagaland': '#F0F8FF'\n};\nconst MapView = ({\n  userData\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const [stateCounts, setStateCounts] = useState({});\n  const markersRef = useRef([]);\n  useEffect(() => {\n    if (!mapRef.current) {\n      // Initialize the map and set view to the center of India\n      mapRef.current = L.map('map', {\n        center: [20.5937, 78.9629],\n        zoom: 5,\n        minZoom: 4,\n        maxBounds: L.latLngBounds(L.latLng(6.74678, 68.162385), L.latLng(37.0841, 97.395561)),\n        maxBoundsViscosity: 1.0\n      });\n\n      // OpenStreetMap tile layer\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(mapRef.current);\n\n      // Initializing state counts\n      const counts = {};\n\n      // Add markers for each user\n      userData.forEach((user, index) => {\n        var _user$data;\n        const userDetailData = (_user$data = user.data) === null || _user$data === void 0 ? void 0 : _user$data.userDetailData;\n        if (!userDetailData) {\n          console.error(`Missing userDetailData for user at index ${index}`, user);\n          return;\n        }\n        const {\n          latitude,\n          longitude,\n          state\n        } = userDetailData;\n        if (latitude && longitude) {\n          // Increment state count\n          if (state) {\n            counts[state] = counts[state] || {\n              count: 0,\n              users: [],\n              coordinates: [latitude, longitude]\n            };\n            counts[state].count += 1;\n            counts[state].users.push(userDetailData);\n          }\n        }\n      });\n\n      // Set state counts\n      setStateCounts(counts);\n\n      // Add a marker for each state with user count\n      Object.entries(counts).forEach(([state, data]) => {\n        const markerColor = stateColors[state] || '#000000'; // Default color if state is not defined\n        const customIcon = createStateIcon(markerColor, data.count);\n        const marker = L.marker(data.coordinates, {\n          icon: customIcon\n        }).addTo(mapRef.current);\n        marker.on('click', () => {\n          mapRef.current.setView(data.coordinates, 10); // Zoom in on state click\n        });\n      });\n\n      // Add user markers on zoom\n      mapRef.current.on('zoomend', () => {\n        const zoomLevel = mapRef.current.getZoom();\n        if (zoomLevel <= 7) {\n          markersRef.current.forEach(marker => marker.remove()); // Remove user markers if zoom level is low\n          markersRef.current = [];\n        } else {\n          // Add user markers if zoom level is high\n          if (markersRef.current.length === 0) {\n            Object.entries(counts).forEach(([state, data]) => {\n              const markerColor = stateColors[state] || '#000000'; // Default color if state is not defined\n              data.users.forEach(userDetailData => {\n                const {\n                  latitude,\n                  longitude,\n                  name,\n                  emailId,\n                  country,\n                  state,\n                  city,\n                  phoneNumber,\n                  district,\n                  traineeData,\n                  trainerData\n                } = userDetailData;\n                if (latitude && longitude) {\n                  const customIcon = createUserIcon(markerColor);\n                  const userMarker = L.marker([latitude, longitude], {\n                    icon: customIcon\n                  }).addTo(mapRef.current);\n                  userMarker.bindPopup(`\n                    <div style=\"max-width: 300px; max-height: 200px; overflow: auto;\">\n                      <strong>Name:</strong> ${name}<br>\n                      <strong>Email ID:</strong> ${emailId}<br>\n                      <strong>Country:</strong> ${country}<br>\n                      <strong>State:</strong> ${state}<br>\n                      <strong>City:</strong> ${city}<br>\n                      <strong>Phone Number:</strong> ${phoneNumber}<br>\n                      <strong>District:</strong> ${district}<br>\n                      ${traineeData.length > 0 ? `<h4>Trainee Data:</h4><ul>${traineeData.map(trainee => `<li>${trainee.topicName} (${new Date(trainee.issuedDate).toLocaleDateString()})</li>`).join('')}</ul>` : ''}\n                      ${trainerData.length > 0 ? `<h4>Trainer Data:</h4><ul>${trainerData.map(trainer => `<li>${trainer.topicName} (${new Date(trainer.issuedDate).toLocaleDateString()})</li>`).join('')}</ul>` : ''}\n                    </div>\n                  `, {\n                    direction: 'top',\n                    offset: [0, -32]\n                  });\n                  markersRef.current.push(userMarker);\n                }\n              });\n            });\n          }\n        }\n      });\n    }\n\n    // Cleanup the map on component unmount\n    return () => {\n      if (mapRef.current) {\n        mapRef.current.remove();\n        mapRef.current = null;\n      }\n    };\n  }, [userData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      height: '100vh',\n      width: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n};\n_s(MapView, \"HQRYXtwOjfFXo9u0AIWKFvHnF0o=\");\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useEffect","useRef","useState","L","jsxDEV","_jsxDEV","createStateIcon","color","count","baseSize","size","Math","min","fontSize","Icon","iconUrl","encodeURIComponent","iconSize","iconAnchor","popupAnchor","createUserIcon","shadowUrl","shadowSize","stateColors","MapView","userData","_s","mapRef","stateCounts","setStateCounts","markersRef","current","map","center","zoom","minZoom","maxBounds","latLngBounds","latLng","maxBoundsViscosity","tileLayer","attribution","addTo","counts","forEach","user","index","_user$data","userDetailData","data","console","error","latitude","longitude","state","users","coordinates","push","Object","entries","markerColor","customIcon","marker","icon","on","setView","zoomLevel","getZoom","remove","length","name","emailId","country","city","phoneNumber","district","traineeData","trainerData","userMarker","bindPopup","trainee","topicName","Date","issuedDate","toLocaleDateString","join","trainer","direction","offset","id","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/lucky/unbundlingwater/frontend/src/MapView.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Custom icon for state markers with participant count\nconst createStateIcon = (color, count) => {\n  const baseSize = 32;\n  const size = baseSize + Math.min(count * 0.5, 24); // Dynamic size based on count, with a reasonable max\n  const fontSize = 14; // Fixed font size for consistency\n  return new L.Icon({\n    iconUrl: 'data:image/svg+xml;charset=UTF-8,' +\n      encodeURIComponent(`\n        <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n          <circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"${color}\" />\n          <text x=\"12\" y=\"16\" font-size=\"${fontSize}\" fill=\"white\" text-anchor=\"middle\" font-family=\"Arial\" font-weight=\"bold\">${count}</text>\n        </svg>\n      `),\n    iconSize: [size, size],\n    iconAnchor: [size / 2, size], // Anchor in the center bottom\n    popupAnchor: [0, -size] // Position popup above the icon\n  });\n};\n\n// Custom icon for user markers\nconst createUserIcon = (color) => {\n  return new L.Icon({\n    iconUrl: 'data:image/svg+xml;charset=UTF-8,' +\n      encodeURIComponent(`\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n          <circle cx=\"12\" cy=\"12\" r=\"10\" fill=\"${color}\" />\n          <circle cx=\"12\" cy=\"12\" r=\"6\" fill=\"white\" />\n        </svg>\n      `),\n    iconSize: [32, 32],  // Adjust the size as needed\n    iconAnchor: [16, 32],  // Anchors the icon to the correct position\n    popupAnchor: [0, -32],  // Positions the popup relative to the icon\n    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n    shadowSize: [41, 41]\n  });\n};\n\nconst stateColors = {\n  'Karnataka': '#f44336',\n  'Maharashtra': '#00FF00',\n  'Tamil Nadu': '#0000FF',\n  'Uttar Pradesh': '#FFFF00',\n  'Gujarat': '#FF69B4',\n  'Rajasthan': '#FF8C00',\n  'West Bengal': '#1E90FF',\n  'Kerala': '#32CD32',\n  'Odisha': '#FF4500',\n  'Telangana': '#8A2BE2',\n  'Punjab': '#FFD700',\n  'Haryana': '#20B2AA',\n  'Assam': '#00CED1',\n  'Madhya Pradesh': '#DC143C',\n  'Bihar': '#FF6347',\n  'Chhattisgarh': '#4682B4',\n  'Jharkhand': '#DA70D6',\n  'Himachal Pradesh': '#7FFF00',\n  'Uttarakhand': '#7B68EE',\n  'Goa': '#D2691E',\n  'Arunachal Pradesh': '#A52A2A',\n  'Nagaland': '#800080',\n  'Manipur': '#00FF7F',\n  'Tripura': '#FF1493',\n  'Meghalaya': '#4B0082',\n  'Sikkim': '#F5FFFA',\n  'Andaman and Nicobar Islands': '#E0FFFF',\n  'Chandigarh': '#C71585',\n  'Dadra and Nagar Haveli and Daman and Diu': '#FFB6C1',\n  'Lakshadweep': '#E6E6FA',\n  'Delhi': '#FFE4E1',\n  'Puducherry': '#F0E68C',\n  'Jammu and Kashmir': '#D8BFD8',\n  'Ladakh': '#F4A460',\n  'Sikkim': '#D3D3D3',\n  'Nagaland': '#F0F8FF',\n};\n\nconst MapView = ({ userData }) => {\n  const mapRef = useRef(null);\n  const [stateCounts, setStateCounts] = useState({});\n  const markersRef = useRef([]);\n\n  useEffect(() => {\n    if (!mapRef.current) {\n      // Initialize the map and set view to the center of India\n      mapRef.current = L.map('map', {\n        center: [20.5937, 78.9629],\n        zoom: 5,\n        minZoom: 4,\n        maxBounds: L.latLngBounds(\n          L.latLng(6.74678, 68.162385),\n          L.latLng(37.0841, 97.395561)\n        ),\n        maxBoundsViscosity: 1.0\n      });\n\n      // OpenStreetMap tile layer\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n      }).addTo(mapRef.current);\n\n      // Initializing state counts\n      const counts = {};\n\n      // Add markers for each user\n      userData.forEach((user, index) => {\n        const userDetailData = user.data?.userDetailData;\n\n        if (!userDetailData) {\n          console.error(`Missing userDetailData for user at index ${index}`, user);\n          return;\n        }\n\n        const { latitude, longitude, state } = userDetailData;\n\n        if (latitude && longitude) {\n          // Increment state count\n          if (state) {\n            counts[state] = counts[state] || { count: 0, users: [], coordinates: [latitude, longitude] };\n            counts[state].count += 1;\n            counts[state].users.push(userDetailData);\n          }\n        }\n      });\n\n      // Set state counts\n      setStateCounts(counts);\n\n      // Add a marker for each state with user count\n      Object.entries(counts).forEach(([state, data]) => {\n        const markerColor = stateColors[state] || '#000000'; // Default color if state is not defined\n        const customIcon = createStateIcon(markerColor, data.count);\n        const marker = L.marker(data.coordinates, { icon: customIcon }).addTo(mapRef.current);\n        marker.on('click', () => {\n          mapRef.current.setView(data.coordinates, 10); // Zoom in on state click\n        });\n      });\n\n      // Add user markers on zoom\n      mapRef.current.on('zoomend', () => {\n        const zoomLevel = mapRef.current.getZoom();\n        if (zoomLevel <= 7) {\n          markersRef.current.forEach(marker => marker.remove()); // Remove user markers if zoom level is low\n          markersRef.current = [];\n        } else {\n          // Add user markers if zoom level is high\n          if (markersRef.current.length === 0) {\n            Object.entries(counts).forEach(([state, data]) => {\n              const markerColor = stateColors[state] || '#000000'; // Default color if state is not defined\n              data.users.forEach((userDetailData) => {\n                const { latitude, longitude, name, emailId, country, state, city, phoneNumber, district, traineeData, trainerData } = userDetailData;\n                if (latitude && longitude) {\n                  const customIcon = createUserIcon(markerColor);\n                  const userMarker = L.marker([latitude, longitude], { icon: customIcon }).addTo(mapRef.current);\n                  userMarker.bindPopup(`\n                    <div style=\"max-width: 300px; max-height: 200px; overflow: auto;\">\n                      <strong>Name:</strong> ${name}<br>\n                      <strong>Email ID:</strong> ${emailId}<br>\n                      <strong>Country:</strong> ${country}<br>\n                      <strong>State:</strong> ${state}<br>\n                      <strong>City:</strong> ${city}<br>\n                      <strong>Phone Number:</strong> ${phoneNumber}<br>\n                      <strong>District:</strong> ${district}<br>\n                      ${traineeData.length > 0 ? `<h4>Trainee Data:</h4><ul>${traineeData.map(trainee => `<li>${trainee.topicName} (${new Date(trainee.issuedDate).toLocaleDateString()})</li>`).join('')}</ul>` : ''}\n                      ${trainerData.length > 0 ? `<h4>Trainer Data:</h4><ul>${trainerData.map(trainer => `<li>${trainer.topicName} (${new Date(trainer.issuedDate).toLocaleDateString()})</li>`).join('')}</ul>` : ''}\n                    </div>\n                  `, { direction: 'top', offset: [0, -32] });\n                  markersRef.current.push(userMarker);\n                }\n              });\n            });\n          }\n        }\n      });\n    }\n\n    // Cleanup the map on component unmount\n    return () => {\n      if (mapRef.current) {\n        mapRef.current.remove();\n        mapRef.current = null;\n      }\n    };\n  }, [userData]);\n\n  return (\n    <div id=\"map\" style={{ height: '100vh', width: '100%' }}></div>\n  );\n};\n\nexport default MapView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}